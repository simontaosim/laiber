/*!
 * jQuery JavaScript Library v1.11.2
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-12-17T15:27Z
 */


(function( global, factory ) {

	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper window is present,
		// execute the factory and get jQuery
		// For environments that do not inherently posses a window with a document
		// (such as Node.js), expose a jQuery-making factory as module.exports
		// This accentuates the need for the creation of a real window
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Can't do this because several apps including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
// Support: Firefox 18+
//

var deletedIds = [];

var slice = deletedIds.slice;

var concat = deletedIds.concat;

var push = deletedIds.push;

var indexOf = deletedIds.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var support = {};



var
	version = "1.11.2",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android<4.1, IE<9
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {
	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: deletedIds.sort,
	splice: deletedIds.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var src, copyIsArray, copy, name, options, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type(obj) === "array";
	},

	isWindow: function( obj ) {
		/* jshint eqeqeq: false */
		return obj != null && obj == obj.window;
	},

	isNumeric: function( obj ) {
		// parseFloat NaNs numeric-cast false positives (null|true|false|"")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		// adding 1 corrects loss of precision from parseFloat (#15100)
		return !jQuery.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	isPlainObject: function( obj ) {
		var key;

		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {
			// Not own constructor property must be Object
			if ( obj.constructor &&
				!hasOwn.call(obj, "constructor") &&
				!hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
				return false;
			}
		} catch ( e ) {
			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Support: IE<9
		// Handle iteration over inherited properties before own properties.
		if ( support.ownLast ) {
			for ( key in obj ) {
				return hasOwn.call( obj, key );
			}
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		for ( key in obj ) {}

		return key === undefined || hasOwn.call( obj, key );
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call(obj) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && jQuery.trim( data ) ) {
			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data );
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	// args is for internal usage only
	each: function( obj, callback, args ) {
		var value,
			i = 0,
			length = obj.length,
			isArray = isArraylike( obj );

		if ( args ) {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			}
		}

		return obj;
	},

	// Support: Android<4.1, IE<9
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArraylike( Object(arr) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		var len;

		if ( arr ) {
			if ( indexOf ) {
				return indexOf.call( arr, elem, i );
			}

			len = arr.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {
				// Skip accessing in sparse arrays
				if ( i in arr && arr[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		while ( j < len ) {
			first[ i++ ] = second[ j++ ];
		}

		// Support: IE<9
		// Workaround casting of .length to NaN on otherwise arraylike objects (e.g., NodeLists)
		if ( len !== len ) {
			while ( second[j] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value,
			i = 0,
			length = elems.length,
			isArray = isArraylike( elems ),
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var args, proxy, tmp;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: function() {
		return +( new Date() );
	},

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
});

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

function isArraylike( obj ) {
	var length = obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	if ( obj.nodeType === 1 && length ) {
		return true;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.2.0-pre
 * http://sizzlejs.com/
 *
 * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-12-16
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// General-purpose constants
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// http://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/css3-syntax/#characters
	characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Loosely modeled on CSS identifier characters
	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = characterEncoding.replace( "w", "w#" ),

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + characterEncoding + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,
	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var match, elem, m, nodeType,
		// QSA vars
		i, groups, old, nid, newContext, newSelector;

	if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
		setDocument( context );
	}

	context = context || document;
	results = results || [];
	nodeType = context.nodeType;

	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	if ( !seed && documentIsHTML ) {

		// Try to shortcut find operations when possible (e.g., not under DocumentFragment)
		if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {
			// Speed-up: Sizzle("#ID")
			if ( (m = match[1]) ) {
				if ( nodeType === 9 ) {
					elem = context.getElementById( m );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document (jQuery #6963)
					if ( elem && elem.parentNode ) {
						// Handle the case where IE, Opera, and Webkit return items
						// by name instead of ID
						if ( elem.id === m ) {
							results.push( elem );
							return results;
						}
					} else {
						return results;
					}
				} else {
					// Context is not a document
					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
						contains( context, elem ) && elem.id === m ) {
						results.push( elem );
						return results;
					}
				}

			// Speed-up: Sizzle("TAG")
			} else if ( match[2] ) {
				push.apply( results, context.getElementsByTagName( selector ) );
				return results;

			// Speed-up: Sizzle(".CLASS")
			} else if ( (m = match[3]) && support.getElementsByClassName ) {
				push.apply( results, context.getElementsByClassName( m ) );
				return results;
			}
		}

		// QSA path
		if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
			nid = old = expando;
			newContext = context;
			newSelector = nodeType !== 1 && selector;

			// qSA works strangely on Element-rooted queries
			// We can work around this by specifying an extra ID on the root
			// and working up from there (Thanks to Andrew Dupont for the technique)
			// IE 8 doesn't work on object elements
			if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
				groups = tokenize( selector );

				if ( (old = context.getAttribute("id")) ) {
					nid = old.replace( rescape, "\\$&" );
				} else {
					context.setAttribute( "id", nid );
				}
				nid = "[id='" + nid + "'] ";

				i = groups.length;
				while ( i-- ) {
					groups[i] = nid + toSelector( groups[i] );
				}
				newContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;
				newSelector = groups.join(",");
			}

			if ( newSelector ) {
				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch(qsaError) {
				} finally {
					if ( !old ) {
						context.removeAttribute("id");
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = attrs.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, parent,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// If no document and documentElement is available, return
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Set our document
	document = doc;
	docElem = doc.documentElement;
	parent = doc.defaultView;

	// Support: IE>8
	// If iframe document is assigned to "document" variable and if iframe has been reloaded,
	// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
	// IE6-8 do not support the defaultView property so parent will be undefined
	if ( parent && parent !== parent.top ) {
		// IE11 does not have attachEvent, so all must suffer
		if ( parent.addEventListener ) {
			parent.addEventListener( "unload", unloadHandler, false );
		} else if ( parent.attachEvent ) {
			parent.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Support tests
	---------------------------------------------------------------------- */
	documentIsHTML = !isXML( doc );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( doc.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( doc.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var m = context.getElementById( id );
				// Check parentNode to catch when Blackberry 4.6 returns
				// nodes that are no longer in the document #6963
				return m && m.parentNode ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\f]' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( div.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+
			if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibing-combinator selector` fails
			if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( div ) {
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = doc.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( div.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully does not implement inclusive descendent
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === doc ? -1 :
				b === doc ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return doc;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, outerCache, node, diff, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {
							// Seek `elem` from a previously-cached index
							outerCache = parent[ expando ] || (parent[ expando ] = {});
							cache = outerCache[ type ] || [];
							nodeIndex = cache[0] === dirruns && cache[1];
							diff = cache[0] === dirruns && cache[2];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									outerCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						// Use previously-cached element index if available
						} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
							diff = cache[1];

						// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
						} else {
							// Use the same loop as above to seek `elem` from the start
							while ( (node = ++nodeIndex && node && node[ dir ] ||
								(diff = nodeIndex = 0) || start.pop()) ) {

								if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
									// Cache the index of each encountered element
									if ( useCache ) {
										(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
									}

									if ( node === elem ) {
										break;
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});
						if ( (oldCache = outerCache[ dir ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							outerCache[ dir ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context !== document && context;
			}

			// Add elements passing elementMatchers directly to results
			// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// Apply set filters to unmatched elements
			matchedCount += i;
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is no seed and only one group
	if ( match.length === 1 ) {

		// Take a shortcut and set the context if the root selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;



var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = (/^<(\w+)\s*\/?>(?:<\/\1>|)$/);



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		});

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		});

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( jQuery.inArray( elem, qualifier ) >= 0 ) !== not;
	});
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		}));
};

jQuery.fn.extend({
	find: function( selector ) {
		var i,
			ret = [],
			self = this,
			len = self.length;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter(function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			}) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow(this, selector || [], false) );
	},
	not: function( selector ) {
		return this.pushStack( winnow(this, selector || [], true) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
});


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// Use the correct document accordingly with window argument (sandbox)
	document = window.document,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	init = jQuery.fn.init = function( selector, context ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;

					// scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[1],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {
							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return typeof rootjQuery.ready !== "undefined" ?
				rootjQuery.ready( selector ) :
				// Execute immediately if ready is not present
				selector( jQuery );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.extend({
	dir: function( elem, dir, until ) {
		var matched = [],
			cur = elem[ dir ];

		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType === 1 ) {
				matched.push( cur );
			}
			cur = cur[dir];
		}
		return matched;
	},

	sibling: function( n, elem ) {
		var r = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				r.push( n );
			}
		}

		return r;
	}
});

jQuery.fn.extend({
	has: function( target ) {
		var i,
			targets = jQuery( target, this ),
			len = targets.length;

		return this.filter(function() {
			for ( i = 0; i < len; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
				// Always skip document fragments
				if ( cur.nodeType < 11 && (pos ?
					pos.index(cur) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector(cur, selectors)) ) {

					matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[0] && this[0].parentNode ) ? this.first().prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[0], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.unique(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter(selector)
		);
	}
});

function sibling( cur, dir ) {
	do {
		cur = cur[ dir ];
	} while ( cur && cur.nodeType !== 1 );

	return cur;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		if ( this.length > 1 ) {
			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				ret = jQuery.unique( ret );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				ret = ret.reverse();
			}
		}

		return this.pushStack( ret );
	};
});
var rnotwhite = (/\S+/g);



// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,
		// Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				firingLength = 0;
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( list && ( !fired || stack ) ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ](function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.done( newDefer.resolve )
										.fail( newDefer.reject )
										.progress( newDefer.notify );
								} else {
									newDefer[ tuple[ 0 ] + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
								}
							});
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[0] ] = function() {
				deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );

					} else if ( !(--remaining) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});


// The deferred used on DOM ready
var readyList;

jQuery.fn.ready = function( fn ) {
	// Add the callback
	jQuery.ready.promise().done( fn );

	return this;
};

jQuery.extend({
	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
		if ( !document.body ) {
			return setTimeout( jQuery.ready );
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.triggerHandler ) {
			jQuery( document ).triggerHandler( "ready" );
			jQuery( document ).off( "ready" );
		}
	}
});

/**
 * Clean-up method for dom ready events
 */
function detach() {
	if ( document.addEventListener ) {
		document.removeEventListener( "DOMContentLoaded", completed, false );
		window.removeEventListener( "load", completed, false );

	} else {
		document.detachEvent( "onreadystatechange", completed );
		window.detachEvent( "onload", completed );
	}
}

/**
 * The ready event handler and self cleanup method
 */
function completed() {
	// readyState === "complete" is good enough for us to call the dom ready in oldIE
	if ( document.addEventListener || event.type === "load" || document.readyState === "complete" ) {
		detach();
		jQuery.ready();
	}
}

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called after the browser event has already occurred.
		// we once tried to use readyState "interactive" here, but it caused issues like the one
		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			setTimeout( jQuery.ready );

		// Standards-based browsers support DOMContentLoaded
		} else if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed, false );

		// If IE event model is used
		} else {
			// Ensure firing before onload, maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", completed );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", completed );

			// If IE and not a frame
			// continually check to see if the document is ready
			var top = false;

			try {
				top = window.frameElement == null && document.documentElement;
			} catch(e) {}

			if ( top && top.doScroll ) {
				(function doScrollCheck() {
					if ( !jQuery.isReady ) {

						try {
							// Use the trick by Diego Perini
							// http://javascript.nwbox.com/IEContentLoaded/
							top.doScroll("left");
						} catch(e) {
							return setTimeout( doScrollCheck, 50 );
						}

						// detach all dom ready events
						detach();

						// and execute any waiting functions
						jQuery.ready();
					}
				})();
			}
		}
	}
	return readyList.promise( obj );
};


var strundefined = typeof undefined;



// Support: IE<9
// Iteration over object's inherited properties before its own
var i;
for ( i in jQuery( support ) ) {
	break;
}
support.ownLast = i !== "0";

// Note: most support tests are defined in their respective modules.
// false until the test is run
support.inlineBlockNeedsLayout = false;

// Execute ASAP in case we need to set body.style.zoom
jQuery(function() {
	// Minified: var a,b,c,d
	var val, div, body, container;

	body = document.getElementsByTagName( "body" )[ 0 ];
	if ( !body || !body.style ) {
		// Return for frameset docs that don't have a body
		return;
	}

	// Setup
	div = document.createElement( "div" );
	container = document.createElement( "div" );
	container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
	body.appendChild( container ).appendChild( div );

	if ( typeof div.style.zoom !== strundefined ) {
		// Support: IE<8
		// Check if natively block-level elements act like inline-block
		// elements when setting their display to 'inline' and giving
		// them layout
		div.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1";

		support.inlineBlockNeedsLayout = val = div.offsetWidth === 3;
		if ( val ) {
			// Prevent IE 6 from affecting layout for positioned elements #11048
			// Prevent IE from shrinking the body in IE 7 mode #12869
			// Support: IE<8
			body.style.zoom = 1;
		}
	}

	body.removeChild( container );
});




(function() {
	var div = document.createElement( "div" );

	// Execute the test only if not already executed in another module.
	if (support.deleteExpando == null) {
		// Support: IE<9
		support.deleteExpando = true;
		try {
			delete div.test;
		} catch( e ) {
			support.deleteExpando = false;
		}
	}

	// Null elements to avoid leaks in IE.
	div = null;
})();


/**
 * Determines whether an object can have data
 */
jQuery.acceptData = function( elem ) {
	var noData = jQuery.noData[ (elem.nodeName + " ").toLowerCase() ],
		nodeType = +elem.nodeType || 1;

	// Do not set data on non-element DOM nodes because it will not be cleared (#8335).
	return nodeType !== 1 && nodeType !== 9 ?
		false :

		// Nodes accept data unless otherwise specified; rejection can be conditional
		!noData || noData !== true && elem.getAttribute("classid") === noData;
};


var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /([A-Z])/g;

function dataAttr( elem, key, data ) {
	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :
					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	var name;
	for ( name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}

function internalData( elem, name, data, pvt /* Internal Use Only */ ) {
	if ( !jQuery.acceptData( elem ) ) {
		return;
	}

	var ret, thisCache,
		internalKey = jQuery.expando,

		// We have to handle DOM nodes and JS objects differently because IE6-7
		// can't GC object references properly across the DOM-JS boundary
		isNode = elem.nodeType,

		// Only DOM nodes need the global jQuery cache; JS object data is
		// attached directly to the object so GC can occur automatically
		cache = isNode ? jQuery.cache : elem,

		// Only defining an ID for JS objects if its cache already exists allows
		// the code to shortcut on the same path as a DOM node with no cache
		id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

	// Avoid doing any more work than we need to when trying to get data on an
	// object that has no data at all
	if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && data === undefined && typeof name === "string" ) {
		return;
	}

	if ( !id ) {
		// Only DOM nodes need a new unique ID for each element since their data
		// ends up in the global cache
		if ( isNode ) {
			id = elem[ internalKey ] = deletedIds.pop() || jQuery.guid++;
		} else {
			id = internalKey;
		}
	}

	if ( !cache[ id ] ) {
		// Avoid exposing jQuery metadata on plain JS objects when the object
		// is serialized using JSON.stringify
		cache[ id ] = isNode ? {} : { toJSON: jQuery.noop };
	}

	// An object can be passed to jQuery.data instead of a key/value pair; this gets
	// shallow copied over onto the existing cache
	if ( typeof name === "object" || typeof name === "function" ) {
		if ( pvt ) {
			cache[ id ] = jQuery.extend( cache[ id ], name );
		} else {
			cache[ id ].data = jQuery.extend( cache[ id ].data, name );
		}
	}

	thisCache = cache[ id ];

	// jQuery data() is stored in a separate object inside the object's internal data
	// cache in order to avoid key collisions between internal data and user-defined
	// data.
	if ( !pvt ) {
		if ( !thisCache.data ) {
			thisCache.data = {};
		}

		thisCache = thisCache.data;
	}

	if ( data !== undefined ) {
		thisCache[ jQuery.camelCase( name ) ] = data;
	}

	// Check for both converted-to-camel and non-converted data property names
	// If a data property was specified
	if ( typeof name === "string" ) {

		// First Try to find as-is property data
		ret = thisCache[ name ];

		// Test for null|undefined property data
		if ( ret == null ) {

			// Try to find the camelCased property
			ret = thisCache[ jQuery.camelCase( name ) ];
		}
	} else {
		ret = thisCache;
	}

	return ret;
}

function internalRemoveData( elem, name, pvt ) {
	if ( !jQuery.acceptData( elem ) ) {
		return;
	}

	var thisCache, i,
		isNode = elem.nodeType,

		// See jQuery.data for more information
		cache = isNode ? jQuery.cache : elem,
		id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

	// If there is already no cache entry for this object, there is no
	// purpose in continuing
	if ( !cache[ id ] ) {
		return;
	}

	if ( name ) {

		thisCache = pvt ? cache[ id ] : cache[ id ].data;

		if ( thisCache ) {

			// Support array or space separated string names for data keys
			if ( !jQuery.isArray( name ) ) {

				// try the string as a key before any manipulation
				if ( name in thisCache ) {
					name = [ name ];
				} else {

					// split the camel cased version by spaces unless a key with the spaces exists
					name = jQuery.camelCase( name );
					if ( name in thisCache ) {
						name = [ name ];
					} else {
						name = name.split(" ");
					}
				}
			} else {
				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = name.concat( jQuery.map( name, jQuery.camelCase ) );
			}

			i = name.length;
			while ( i-- ) {
				delete thisCache[ name[i] ];
			}

			// If there is no data left in the cache, we want to continue
			// and let the cache object itself get destroyed
			if ( pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache) ) {
				return;
			}
		}
	}

	// See jQuery.data for more information
	if ( !pvt ) {
		delete cache[ id ].data;

		// Don't destroy the parent cache unless the internal data object
		// had been the only thing left in it
		if ( !isEmptyDataObject( cache[ id ] ) ) {
			return;
		}
	}

	// Destroy the cache
	if ( isNode ) {
		jQuery.cleanData( [ elem ], true );

	// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
	/* jshint eqeqeq: false */
	} else if ( support.deleteExpando || cache != cache.window ) {
		/* jshint eqeqeq: true */
		delete cache[ id ];

	// When all else fails, null
	} else {
		cache[ id ] = null;
	}
}

jQuery.extend({
	cache: {},

	// The following elements (space-suffixed to avoid Object.prototype collisions)
	// throw uncatchable exceptions if you attempt to set expando properties
	noData: {
		"applet ": true,
		"embed ": true,
		// ...but Flash objects (which have this classid) *can* handle expandos
		"object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data ) {
		return internalData( elem, name, data );
	},

	removeData: function( elem, name ) {
		return internalRemoveData( elem, name );
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return internalData( elem, name, data, true );
	},

	_removeData: function( elem, name ) {
		return internalRemoveData( elem, name, true );
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var i, name, data,
			elem = this[0],
			attrs = elem && elem.attributes;

		// Special expections of .data basically thwart jQuery.access,
		// so implement the relevant behavior ourselves

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = jQuery.data( elem );

				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE11+
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice(5) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					jQuery._data( elem, "parsedAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		return arguments.length > 1 ?

			// Sets one value
			this.each(function() {
				jQuery.data( this, key, value );
			}) :

			// Gets one value
			// Try to fetch any internally stored data first
			elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : undefined;
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});


jQuery.extend({
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray(data) ) {
					queue = jQuery._data( elem, type, jQuery.makeArray(data) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object, or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return jQuery._data( elem, key ) || jQuery._data( elem, key, {
			empty: jQuery.Callbacks("once memory").add(function() {
				jQuery._removeData( elem, type + "queue" );
				jQuery._removeData( elem, key );
			})
		});
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = jQuery._data( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
});
var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;

var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHidden = function( elem, el ) {
		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
	};



// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		length = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {
			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < length; i++ ) {
				fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			length ? fn( elems[0], key ) : emptyGet;
};
var rcheckableType = (/^(?:checkbox|radio)$/i);



(function() {
	// Minified: var a,b,c
	var input = document.createElement( "input" ),
		div = document.createElement( "div" ),
		fragment = document.createDocumentFragment();

	// Setup
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

	// IE strips leading whitespace when .innerHTML is used
	support.leadingWhitespace = div.firstChild.nodeType === 3;

	// Make sure that tbody elements aren't automatically inserted
	// IE will insert them into empty tables
	support.tbody = !div.getElementsByTagName( "tbody" ).length;

	// Make sure that link elements get serialized correctly by innerHTML
	// This requires a wrapper element in IE
	support.htmlSerialize = !!div.getElementsByTagName( "link" ).length;

	// Makes sure cloning an html5 element does not cause problems
	// Where outerHTML is undefined, this still works
	support.html5Clone =
		document.createElement( "nav" ).cloneNode( true ).outerHTML !== "<:nav></:nav>";

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	input.type = "checkbox";
	input.checked = true;
	fragment.appendChild( input );
	support.appendChecked = input.checked;

	// Make sure textarea (and checkbox) defaultValue is properly cloned
	// Support: IE6-IE11+
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// #11217 - WebKit loses check when the name is after the checked attribute
	fragment.appendChild( div );
	div.innerHTML = "<input type='radio' checked='checked' name='t'/>";

	// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3
	// old WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE<9
	// Opera does not clone events (and typeof div.attachEvent === undefined).
	// IE9-10 clones events bound via attachEvent, but they don't trigger with .click()
	support.noCloneEvent = true;
	if ( div.attachEvent ) {
		div.attachEvent( "onclick", function() {
			support.noCloneEvent = false;
		});

		div.cloneNode( true ).click();
	}

	// Execute the test only if not already executed in another module.
	if (support.deleteExpando == null) {
		// Support: IE<9
		support.deleteExpando = true;
		try {
			delete div.test;
		} catch( e ) {
			support.deleteExpando = false;
		}
	}
})();


(function() {
	var i, eventName,
		div = document.createElement( "div" );

	// Support: IE<9 (lack submit/change bubble), Firefox 23+ (lack focusin event)
	for ( i in { submit: true, change: true, focusin: true }) {
		eventName = "on" + i;

		if ( !(support[ i + "Bubbles" ] = eventName in window) ) {
			// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
			div.setAttribute( eventName, "t" );
			support[ i + "Bubbles" ] = div.attributes[ eventName ].expando === false;
		}
	}

	// Null elements to avoid leaks in IE.
	div = null;
})();


var rformElems = /^(?:input|select|textarea)$/i,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {
		var tmp, events, t, handleObjIn,
			special, eventHandle, handleObj,
			handlers, type, namespaces, origType,
			elemData = jQuery._data( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !(events = elemData.events) ) {
			events = elemData.events = {};
		}
		if ( !(eventHandle = elemData.handle) ) {
			eventHandle = elemData.handle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== strundefined && (!e || jQuery.event.triggered !== e.type) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};
			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !(handlers = events[ type ]) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {
		var j, handleObj, tmp,
			origCount, t, events,
			special, handlers, type,
			namespaces, origType,
			elemData = jQuery.hasData( elem ) && jQuery._data( elem );

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery._removeData( elem, "events" );
		}
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		var handle, ontype, cur,
			bubbleType, special, tmp, i,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf(".") >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf(":") < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join(".");
		event.namespace_re = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === (elem.ownerDocument || document) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && jQuery.acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
				jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					try {
						elem[ type ]();
					} catch ( e ) {
						// IE<9 dies on focus/blur to hidden element (#1486,#12518)
						// only reproducible on winXP IE8 native, not IE9 in IE8 mode
					}
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, ret, handleObj, matched, j,
			handlerQueue = [],
			args = slice.call( arguments ),
			handlers = ( jQuery._data( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or
				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( (event.result = ret) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var sel, handleObj, matches, i,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {

			/* jshint eqeqeq: false */
			for ( ; cur != this; cur = cur.parentNode || this ) {
				/* jshint eqeqeq: true */

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && (cur.disabled !== true || event.type !== "click") ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) >= 0 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, handlers: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
		}

		return handlerQueue;
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: IE<9
		// Fix target property (#1925)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Support: Chrome 23+, Safari?
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// Support: IE<9
		// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)
		event.metaKey = !!event.metaKey;

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var body, eventDoc, doc,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {
			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					try {
						this.focus();
						return false;
					} catch ( e ) {
						// Support: IE<9
						// If we error on focus to hidden element (#1486, #12518),
						// let .trigger() run the handlers
					}
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {
			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( jQuery.nodeName( this, "input" ) && this.type === "checkbox" && this.click ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	} :
	function( elem, type, handle ) {
		var name = "on" + type;

		if ( elem.detachEvent ) {

			// #8545, #7054, preventing memory leaks for custom events in IE6-8
			// detachEvent needed property on element, by name of that event, to properly expose it to GC
			if ( typeof elem[ name ] === strundefined ) {
				elem[ name ] = null;
			}

			elem.detachEvent( name, handle );
		}
	};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&
				// Support: IE < 9, Android < 4.0
				src.returnValue === false ?
			returnTrue :
			returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;
		if ( !e ) {
			return;
		}

		// If preventDefault exists, run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// Support: IE
		// Otherwise set the returnValue property of the original event to false
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;
		if ( !e ) {
			return;
		}
		// If stopPropagation exists, run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}

		// Support: IE
		// Set the cancelBubble property of the original event to true
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && e.stopImmediatePropagation ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// IE submit delegation
if ( !support.submitBubbles ) {

	jQuery.event.special.submit = {
		setup: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
				if ( form && !jQuery._data( form, "submitBubbles" ) ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						event._submit_bubble = true;
					});
					jQuery._data( form, "submitBubbles", true );
				}
			});
			// return undefined since we don't need an event listener
		},

		postDispatch: function( event ) {
			// If form was submitted by the user, bubble the event up the tree
			if ( event._submit_bubble ) {
				delete event._submit_bubble;
				if ( this.parentNode && !event.isTrigger ) {
					jQuery.event.simulate( "submit", this.parentNode, event, true );
				}
			}
		},

		teardown: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !support.changeBubbles ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {
				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._just_changed = true;
						}
					});
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._just_changed && !event.isTrigger ) {
							this._just_changed = false;
						}
						// Allow triggered, simulated change events (#11500)
						jQuery.event.simulate( "change", this, event, true );
					});
				}
				return false;
			}
			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "changeBubbles" ) ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event, true );
						}
					});
					jQuery._data( elem, "changeBubbles", true );
				}
			});
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return !rformElems.test( this.nodeName );
		}
	};
}

// Create "bubbling" focus and blur events
if ( !support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				jQuery._data( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					jQuery._removeData( doc, fix );
				} else {
					jQuery._data( doc, fix, attaches );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var type, origFn;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		var elem = this[0];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
});


function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
		safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" +
		"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
	rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
	rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
	rleadingWhitespace = /^\s+/,
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
	rtagName = /<([\w:]+)/,
	rtbody = /<tbody/i,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style|link)/i,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /^$|\/(?:java|ecma)script/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,

	// We have to close these tags to support XHTML (#13200)
	wrapMap = {
		option: [ 1, "<select multiple='multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		area: [ 1, "<map>", "</map>" ],
		param: [ 1, "<object>", "</object>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

		// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
		// unless wrapped in a div with non-breaking characters in front of it.
		_default: support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>"  ]
	},
	safeFragment = createSafeFragment( document ),
	fragmentDiv = safeFragment.appendChild( document.createElement("div") );

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

function getAll( context, tag ) {
	var elems, elem,
		i = 0,
		found = typeof context.getElementsByTagName !== strundefined ? context.getElementsByTagName( tag || "*" ) :
			typeof context.querySelectorAll !== strundefined ? context.querySelectorAll( tag || "*" ) :
			undefined;

	if ( !found ) {
		for ( found = [], elems = context.childNodes || context; (elem = elems[i]) != null; i++ ) {
			if ( !tag || jQuery.nodeName( elem, tag ) ) {
				found.push( elem );
			} else {
				jQuery.merge( found, getAll( elem, tag ) );
			}
		}
	}

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], found ) :
		found;
}

// Used in buildFragment, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
	if ( rcheckableType.test( elem.type ) ) {
		elem.defaultChecked = elem.checked;
	}
}

// Support: IE<8
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName("tbody")[0] ||
			elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = (jQuery.find.attr( elem, "type" ) !== null) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );
	if ( match ) {
		elem.type = match[1];
	} else {
		elem.removeAttribute("type");
	}
	return elem;
}

// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var elem,
		i = 0;
	for ( ; (elem = elems[i]) != null; i++ ) {
		jQuery._data( elem, "globalEval", !refElements || jQuery._data( refElements[i], "globalEval" ) );
	}
}

function cloneCopyEvent( src, dest ) {

	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type, events[ type ][ i ] );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function fixCloneNodeIssues( src, dest ) {
	var nodeName, e, data;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	nodeName = dest.nodeName.toLowerCase();

	// IE6-8 copies events bound via attachEvent when using cloneNode.
	if ( !support.noCloneEvent && dest[ jQuery.expando ] ) {
		data = jQuery._data( dest );

		for ( e in data.events ) {
			jQuery.removeEvent( dest, e, data.handle );
		}

		// Event data gets referenced instead of copied if the expando gets copied too
		dest.removeAttribute( jQuery.expando );
	}

	// IE blanks contents when cloning scripts, and tries to evaluate newly-set text
	if ( nodeName === "script" && dest.text !== src.text ) {
		disableScript( dest ).text = src.text;
		restoreScript( dest );

	// IE6-10 improperly clones children of object elements using classid.
	// IE10 throws NoModificationAllowedError if parent is null, #12132.
	} else if ( nodeName === "object" ) {
		if ( dest.parentNode ) {
			dest.outerHTML = src.outerHTML;
		}

		// This path appears unavoidable for IE9. When cloning an object
		// element in IE9, the outerHTML strategy above is not sufficient.
		// If the src has innerHTML and the destination does not,
		// copy the src.innerHTML into the dest.innerHTML. #10324
		if ( support.html5Clone && ( src.innerHTML && !jQuery.trim(dest.innerHTML) ) ) {
			dest.innerHTML = src.innerHTML;
		}

	} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set

		dest.defaultChecked = dest.checked = src.checked;

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.defaultSelected = dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var destElements, node, clone, i, srcElements,
			inPage = jQuery.contains( elem.ownerDocument, elem );

		if ( support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {
			clone = elem.cloneNode( true );

		// IE<=8 does not properly clone detached, unknown element nodes
		} else {
			fragmentDiv.innerHTML = elem.outerHTML;
			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
		}

		if ( (!support.noCloneEvent || !support.noCloneChecked) &&
				(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			// Fix all IE cloning issues
			for ( i = 0; (node = srcElements[i]) != null; ++i ) {
				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[i] ) {
					fixCloneNodeIssues( node, destElements[i] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0; (node = srcElements[i]) != null; i++ ) {
					cloneCopyEvent( node, destElements[i] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		destElements = srcElements = node = null;

		// Return the cloned set
		return clone;
	},

	buildFragment: function( elems, context, scripts, selection ) {
		var j, elem, contains,
			tmp, tag, tbody, wrap,
			l = elems.length,

			// Ensure a safe fragment
			safe = createSafeFragment( context ),

			nodes = [],
			i = 0;

		for ( ; i < l; i++ ) {
			elem = elems[ i ];

			if ( elem || elem === 0 ) {

				// Add nodes directly
				if ( jQuery.type( elem ) === "object" ) {
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

				// Convert non-html into a text node
				} else if ( !rhtml.test( elem ) ) {
					nodes.push( context.createTextNode( elem ) );

				// Convert html into DOM nodes
				} else {
					tmp = tmp || safe.appendChild( context.createElement("div") );

					// Deserialize a standard representation
					tag = (rtagName.exec( elem ) || [ "", "" ])[ 1 ].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;

					tmp.innerHTML = wrap[1] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[2];

					// Descend through wrappers to the right content
					j = wrap[0];
					while ( j-- ) {
						tmp = tmp.lastChild;
					}

					// Manually add leading whitespace removed by IE
					if ( !support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
						nodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[0] ) );
					}

					// Remove IE's autoinserted <tbody> from table fragments
					if ( !support.tbody ) {

						// String was a <table>, *may* have spurious <tbody>
						elem = tag === "table" && !rtbody.test( elem ) ?
							tmp.firstChild :

							// String was a bare <thead> or <tfoot>
							wrap[1] === "<table>" && !rtbody.test( elem ) ?
								tmp :
								0;

						j = elem && elem.childNodes.length;
						while ( j-- ) {
							if ( jQuery.nodeName( (tbody = elem.childNodes[j]), "tbody" ) && !tbody.childNodes.length ) {
								elem.removeChild( tbody );
							}
						}
					}

					jQuery.merge( nodes, tmp.childNodes );

					// Fix #12392 for WebKit and IE > 9
					tmp.textContent = "";

					// Fix #12392 for oldIE
					while ( tmp.firstChild ) {
						tmp.removeChild( tmp.firstChild );
					}

					// Remember the top-level container for proper cleanup
					tmp = safe.lastChild;
				}
			}
		}

		// Fix #11356: Clear elements from fragment
		if ( tmp ) {
			safe.removeChild( tmp );
		}

		// Reset defaultChecked for any radios and checkboxes
		// about to be appended to the DOM in IE 6/7 (#8060)
		if ( !support.appendChecked ) {
			jQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );
		}

		i = 0;
		while ( (elem = nodes[ i++ ]) ) {

			// #4087 - If origin and destination elements are the same, and this is
			// that element, do not do anything
			if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
				continue;
			}

			contains = jQuery.contains( elem.ownerDocument, elem );

			// Append to fragment
			tmp = getAll( safe.appendChild( elem ), "script" );

			// Preserve script evaluation history
			if ( contains ) {
				setGlobalEval( tmp );
			}

			// Capture executables
			if ( scripts ) {
				j = 0;
				while ( (elem = tmp[ j++ ]) ) {
					if ( rscriptType.test( elem.type || "" ) ) {
						scripts.push( elem );
					}
				}
			}
		}

		tmp = null;

		return safe;
	},

	cleanData: function( elems, /* internal */ acceptData ) {
		var elem, type, id, data,
			i = 0,
			internalKey = jQuery.expando,
			cache = jQuery.cache,
			deleteExpando = support.deleteExpando,
			special = jQuery.event.special;

		for ( ; (elem = elems[i]) != null; i++ ) {
			if ( acceptData || jQuery.acceptData( elem ) ) {

				id = elem[ internalKey ];
				data = id && cache[ id ];

				if ( data ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Remove cache only if it was not already removed by jQuery.event.remove
					if ( cache[ id ] ) {

						delete cache[ id ];

						// IE does not allow us to delete expando properties from nodes,
						// nor does it have a removeAttribute function on Document nodes;
						// we must handle all of these cases
						if ( deleteExpando ) {
							delete elem[ internalKey ];

						} else if ( typeof elem.removeAttribute !== strundefined ) {
							elem.removeAttribute( internalKey );

						} else {
							elem[ internalKey ] = null;
						}

						deletedIds.push( id );
					}
				}
			}
		}
	}
});

jQuery.fn.extend({
	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
		}, null, value, arguments.length );
	},

	append: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		});
	},

	before: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		});
	},

	after: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		});
	},

	remove: function( selector, keepData /* Internal Use Only */ ) {
		var elem,
			elems = selector ? jQuery.filter( selector, this ) : this,
			i = 0;

		for ( ; (elem = elems[i]) != null; i++ ) {

			if ( !keepData && elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem ) );
			}

			if ( elem.parentNode ) {
				if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
					setGlobalEval( getAll( elem, "script" ) );
				}
				elem.parentNode.removeChild( elem );
			}
		}

		return this;
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem, false ) );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}

			// If this is a select, ensure that it displays empty (#12336)
			// Support: IE<9
			if ( elem.options && jQuery.nodeName( elem, "select" ) ) {
				elem.options.length = 0;
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map(function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined ) {
				return elem.nodeType === 1 ?
					elem.innerHTML.replace( rinlinejQuery, "" ) :
					undefined;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				( support.htmlSerialize || !rnoshimcache.test( value )  ) &&
				( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
				!wrapMap[ (rtagName.exec( value ) || [ "", "" ])[ 1 ].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for (; i < l; i++ ) {
						// Remove element nodes and prevent memory leaks
						elem = this[i] || {};
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch(e) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var arg = arguments[ 0 ];

		// Make the changes, replacing each context element with the new content
		this.domManip( arguments, function( elem ) {
			arg = this.parentNode;

			jQuery.cleanData( getAll( this ) );

			if ( arg ) {
				arg.replaceChild( elem, this );
			}
		});

		// Force removal if there was no new content (e.g., from empty arguments)
		return arg && (arg.length || arg.nodeType) ? this : this.remove();
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, callback ) {

		// Flatten any nested arrays
		args = concat.apply( [], args );

		var first, node, hasScripts,
			scripts, doc, fragment,
			i = 0,
			l = this.length,
			set = this,
			iNoClone = l - 1,
			value = args[0],
			isFunction = jQuery.isFunction( value );

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( isFunction ||
				( l > 1 && typeof value === "string" &&
					!support.checkClone && rchecked.test( value ) ) ) {
			return this.each(function( index ) {
				var self = set.eq( index );
				if ( isFunction ) {
					args[0] = value.call( this, index, self.html() );
				}
				self.domManip( args, callback );
			});
		}

		if ( l ) {
			fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			if ( first ) {
				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
				hasScripts = scripts.length;

				// Use the original fragment for the last item instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				for ( ; i < l; i++ ) {
					node = fragment;

					if ( i !== iNoClone ) {
						node = jQuery.clone( node, true, true );

						// Keep references to cloned scripts for later restoration
						if ( hasScripts ) {
							jQuery.merge( scripts, getAll( node, "script" ) );
						}
					}

					callback.call( this[i], node, i );
				}

				if ( hasScripts ) {
					doc = scripts[ scripts.length - 1 ].ownerDocument;

					// Reenable scripts
					jQuery.map( scripts, restoreScript );

					// Evaluate executable scripts on first document insertion
					for ( i = 0; i < hasScripts; i++ ) {
						node = scripts[ i ];
						if ( rscriptType.test( node.type || "" ) &&
							!jQuery._data( node, "globalEval" ) && jQuery.contains( doc, node ) ) {

							if ( node.src ) {
								// Optional AJAX dependency, but won't run scripts if not present
								if ( jQuery._evalUrl ) {
									jQuery._evalUrl( node.src );
								}
							} else {
								jQuery.globalEval( ( node.text || node.textContent || node.innerHTML || "" ).replace( rcleanScript, "" ) );
							}
						}
					}
				}

				// Fix #11809: Avoid leaking memory
				fragment = first = null;
			}
		}

		return this;
	}
});

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			i = 0,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone(true);
			jQuery( insert[i] )[ original ]( elems );

			// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
});


var iframe,
	elemdisplay = {};

/**
 * Retrieve the actual display of a element
 * @param {String} name nodeName of the element
 * @param {Object} doc Document object
 */
// Called only from within defaultDisplay
function actualDisplay( name, doc ) {
	var style,
		elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

		// getDefaultComputedStyle might be reliably used only on attached element
		display = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?

			// Use of this method is a temporary fix (more like optmization) until something better comes along,
			// since it was removed from specification and supported only in FF
			style.display : jQuery.css( elem[ 0 ], "display" );

	// We don't have any data stored on the element,
	// so use "detach" method as fast way to get rid of the element
	elem.detach();

	return display;
}

/**
 * Try to determine the default display value of an element
 * @param {String} nodeName
 */
function defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {

			// Use the already-created iframe if possible
			iframe = (iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" )).appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = ( iframe[ 0 ].contentWindow || iframe[ 0 ].contentDocument ).document;

			// Support: IE
			doc.write();
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}


(function() {
	var shrinkWrapBlocksVal;

	support.shrinkWrapBlocks = function() {
		if ( shrinkWrapBlocksVal != null ) {
			return shrinkWrapBlocksVal;
		}

		// Will be changed later if needed.
		shrinkWrapBlocksVal = false;

		// Minified: var b,c,d
		var div, body, container;

		body = document.getElementsByTagName( "body" )[ 0 ];
		if ( !body || !body.style ) {
			// Test fired too early or in an unsupported environment, exit.
			return;
		}

		// Setup
		div = document.createElement( "div" );
		container = document.createElement( "div" );
		container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
		body.appendChild( container ).appendChild( div );

		// Support: IE6
		// Check if elements with layout shrink-wrap their children
		if ( typeof div.style.zoom !== strundefined ) {
			// Reset CSS: box-sizing; display; margin; border
			div.style.cssText =
				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;" +
				"padding:1px;width:1px;zoom:1";
			div.appendChild( document.createElement( "div" ) ).style.width = "5px";
			shrinkWrapBlocksVal = div.offsetWidth !== 3;
		}

		body.removeChild( container );

		return shrinkWrapBlocksVal;
	};

})();
var rmargin = (/^margin/);

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );



var getStyles, curCSS,
	rposition = /^(top|right|bottom|left)$/;

if ( window.getComputedStyle ) {
	getStyles = function( elem ) {
		// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		if ( elem.ownerDocument.defaultView.opener ) {
			return elem.ownerDocument.defaultView.getComputedStyle( elem, null );
		}

		return window.getComputedStyle( elem, null );
	};

	curCSS = function( elem, name, computed ) {
		var width, minWidth, maxWidth, ret,
			style = elem.style;

		computed = computed || getStyles( elem );

		// getPropertyValue is only needed for .css('filter') in IE9, see #12537
		ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;

		if ( computed ) {

			if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
				ret = jQuery.style( elem, name );
			}

			// A tribute to the "awesome hack by Dean Edwards"
			// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right
			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {

				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "";
	};
} else if ( document.documentElement.currentStyle ) {
	getStyles = function( elem ) {
		return elem.currentStyle;
	};

	curCSS = function( elem, name, computed ) {
		var left, rs, rsLeft, ret,
			style = elem.style;

		computed = computed || getStyles( elem );
		ret = computed ? computed[ name ] : undefined;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret == null && style && style[ name ] ) {
			ret = style[ name ];
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		// but not position css attributes, as those are proportional to the parent element instead
		// and we can't measure the parent instead because it might trigger a "stacking dolls" problem
		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

			// Remember the original values
			left = style.left;
			rs = elem.runtimeStyle;
			rsLeft = rs && rs.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				rs.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ret;
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				rs.left = rsLeft;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "" || "auto";
	};
}




function addGetHookIf( conditionFn, hookFn ) {
	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			var condition = conditionFn();

			if ( condition == null ) {
				// The test was not ready at this point; screw the hook this time
				// but check again when needed next time.
				return;
			}

			if ( condition ) {
				// Hook not needed (or it's not possible to use it due to missing dependency),
				// remove it.
				// Since there are no other hooks for marginRight, remove the whole object.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.

			return (this.get = hookFn).apply( this, arguments );
		}
	};
}


(function() {
	// Minified: var b,c,d,e,f,g, h,i
	var div, style, a, pixelPositionVal, boxSizingReliableVal,
		reliableHiddenOffsetsVal, reliableMarginRightVal;

	// Setup
	div = document.createElement( "div" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
	a = div.getElementsByTagName( "a" )[ 0 ];
	style = a && a.style;

	// Finish early in limited (non-browser) environments
	if ( !style ) {
		return;
	}

	style.cssText = "float:left;opacity:.5";

	// Support: IE<9
	// Make sure that element opacity exists (as opposed to filter)
	support.opacity = style.opacity === "0.5";

	// Verify style float existence
	// (IE uses styleFloat instead of cssFloat)
	support.cssFloat = !!style.cssFloat;

	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	// Support: Firefox<29, Android 2.3
	// Vendor-prefix box-sizing
	support.boxSizing = style.boxSizing === "" || style.MozBoxSizing === "" ||
		style.WebkitBoxSizing === "";

	jQuery.extend(support, {
		reliableHiddenOffsets: function() {
			if ( reliableHiddenOffsetsVal == null ) {
				computeStyleTests();
			}
			return reliableHiddenOffsetsVal;
		},

		boxSizingReliable: function() {
			if ( boxSizingReliableVal == null ) {
				computeStyleTests();
			}
			return boxSizingReliableVal;
		},

		pixelPosition: function() {
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return pixelPositionVal;
		},

		// Support: Android 2.3
		reliableMarginRight: function() {
			if ( reliableMarginRightVal == null ) {
				computeStyleTests();
			}
			return reliableMarginRightVal;
		}
	});

	function computeStyleTests() {
		// Minified: var b,c,d,j
		var div, body, container, contents;

		body = document.getElementsByTagName( "body" )[ 0 ];
		if ( !body || !body.style ) {
			// Test fired too early or in an unsupported environment, exit.
			return;
		}

		// Setup
		div = document.createElement( "div" );
		container = document.createElement( "div" );
		container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
		body.appendChild( container ).appendChild( div );

		div.style.cssText =
			// Support: Firefox<29, Android 2.3
			// Vendor-prefix box-sizing
			"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" +
			"box-sizing:border-box;display:block;margin-top:1%;top:1%;" +
			"border:1px;padding:1px;width:4px;position:absolute";

		// Support: IE<9
		// Assume reasonable values in the absence of getComputedStyle
		pixelPositionVal = boxSizingReliableVal = false;
		reliableMarginRightVal = true;

		// Check for getComputedStyle so that this code is not run in IE<9.
		if ( window.getComputedStyle ) {
			pixelPositionVal = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
			boxSizingReliableVal =
				( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";

			// Support: Android 2.3
			// Div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container (#3333)
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			contents = div.appendChild( document.createElement( "div" ) );

			// Reset CSS: box-sizing; display; margin; border; padding
			contents.style.cssText = div.style.cssText =
				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
			contents.style.marginRight = contents.style.width = "0";
			div.style.width = "1px";

			reliableMarginRightVal =
				!parseFloat( ( window.getComputedStyle( contents, null ) || {} ).marginRight );

			div.removeChild( contents );
		}

		// Support: IE8
		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
		contents = div.getElementsByTagName( "td" );
		contents[ 0 ].style.cssText = "margin:0;border:0;padding:0;display:none";
		reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
		if ( reliableHiddenOffsetsVal ) {
			contents[ 0 ].style.display = "";
			contents[ 1 ].style.display = "none";
			reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
		}

		body.removeChild( container );
	}

})();


// A method for quickly swapping in/out CSS properties to get correct calculations.
jQuery.swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var
		ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity\s*=\s*([^)]*)/,

	// swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),
	rrelNum = new RegExp( "^([+-])=(" + pnum + ")", "i" ),

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];


// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in style ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name.charAt(0).toUpperCase() + name.slice(1),
		origName = name,
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in style ) {
			return name;
		}
	}

	return origName;
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = jQuery._data( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {
			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = jQuery._data( elem, "olddisplay", defaultDisplay(elem.nodeName) );
			}
		} else {
			hidden = isHidden( elem );

			if ( display && display !== "none" || !hidden ) {
				jQuery._data( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?
		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?
		// If we already have the right measurement, avoid augmentation
		4 :
		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {
		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {
			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {
			// at this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {
		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test(val) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox && ( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set. See: #7116
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,
			// but it would mean to define eight (for every problematic property) identical functions
			if ( !support.clearCloneStyle && value === "" && name.indexOf("background") === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {

				// Support: IE
				// Swallow errors from 'invalid' CSS values (#5509)
				try {
					style[ name ] = value;
				} catch(e) {}
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var num, val, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
		}
		return val;
	}
});

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {
				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) && elem.offsetWidth === 0 ?
					jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					}) :
					getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var styles = extra && getStyles( elem );
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				) : 0
			);
		}
	};
});

if ( !support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {
			// IE uses filters for opacity
			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
				( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
				computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
			// if value === "", then remove inline opacity #12685
			if ( ( value >= 1 || value === "" ) &&
					jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
					style.removeAttribute ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there is no filter style applied in a css rule or unset inline opacity, we are done
				if ( value === "" || currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
	function( elem, computed ) {
		if ( computed ) {
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			// Work around by temporarily setting element display to inline-block
			return jQuery.swap( elem, { "display": "inline-block" },
				curCSS, [ elem, "marginRight" ] );
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
});

jQuery.fn.extend({
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each(function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		});
	}
});


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || "swing";
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			if ( tween.elem[ tween.prop ] != null &&
				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
				return tween.elem[ tween.prop ];
			}

			// passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9
// Panic based approach to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	}
};

jQuery.fx = Tween.prototype.init;

// Back Compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" ),
	rrun = /queueHooks$/,
	animationPrefilters = [ defaultPrefilter ],
	tweeners = {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value ),
				target = tween.cur(),
				parts = rfxnum.exec( value ),
				unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

				// Starting value computation is required for potential unit mismatches
				start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
					rfxnum.exec( jQuery.css( tween.elem, prop ) ),
				scale = 1,
				maxIterations = 20;

			if ( start && start[ 3 ] !== unit ) {
				// Trust units reported by jQuery.css
				unit = unit || start[ 3 ];

				// Make sure we update the tween properties later on
				parts = parts || [];

				// Iteratively approximate from a nonzero starting point
				start = +target || 1;

				do {
					// If previous iteration zeroed out, double until we get *something*
					// Use a string for doubling factor so we don't accidentally see scale as unchanged below
					scale = scale || ".5";

					// Adjust and apply
					start = start / scale;
					jQuery.style( tween.elem, prop, start + unit );

				// Update scale, tolerating zero or NaN from tween.cur()
				// And breaking the loop if scale is unchanged or perfect, or if we've just had enough
				} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
			}

			// Update tween properties
			if ( parts ) {
				start = tween.start = +start || +target || 0;
				tween.unit = unit;
				// If a +=/-= token was provided, we're doing a relative animation
				tween.end = parts[ 1 ] ?
					start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
					+parts[ 2 ];
			}

			return tween;
		} ]
	};

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout(function() {
		fxNow = undefined;
	});
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		attrs = { height: type },
		i = 0;

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( (tween = collection[ index ].call( animation, prop, value )) ) {

			// we're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = jQuery._data( elem, "fxshow" );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always(function() {
			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always(function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			});
		});
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE does not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		display = jQuery.css( elem, "display" );

		// Test default display if display is currently "none"
		checkDisplay = display === "none" ?
			jQuery._data( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

		if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {

			// inline-level elements accept inline-block;
			// block-level elements need to be inline with layout
			if ( !support.inlineBlockNeedsLayout || defaultDisplay( elem.nodeName ) === "inline" ) {
				style.display = "inline-block";
			} else {
				style.zoom = 1;
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		if ( !support.shrinkWrapBlocks() ) {
			anim.always(function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			});
		}
	}

	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

		// Any non-fx value stops us from restoring the original display value
		} else {
			display = undefined;
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = jQuery._data( elem, "fxshow", {} );
		}

		// store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done(function() {
				jQuery( elem ).hide();
			});
		}
		anim.done(function() {
			var prop;
			jQuery._removeData( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		});
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}

	// If this is a noop like .hide().hide(), restore an overwritten display value
	} else if ( (display === "none" ? defaultDisplay( elem.nodeName ) : display) === "inline" ) {
		style.display = display;
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = animationPrefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// don't match elem in the :animated selector
			delete tick.elem;
		}),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ]);

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise({
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, { specialEasing: {} }, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		}),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		})
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {
	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.split(" ");
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			tweeners[ prop ] = tweeners[ prop ] || [];
			tweeners[ prop ].unshift( callback );
		}
	},

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			animationPrefilters.unshift( callback );
		} else {
			animationPrefilters.push( callback );
		}
	}
});

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend({
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate({ opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || jQuery._data( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = jQuery._data( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each(function() {
			var index,
				data = jQuery._data( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// enable finishing flag on private data
			data.finish = true;

			// empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// turn off finishing flag
			delete data.finish;
		});
	}
});

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
});

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show"),
	slideUp: genFx("hide"),
	slideToggle: genFx("toggle"),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		timers = jQuery.timers,
		i = 0;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = setTimeout( next, time );
		hooks.stop = function() {
			clearTimeout( timeout );
		};
	});
};


(function() {
	// Minified: var a,b,c,d,e
	var input, div, select, a, opt;

	// Setup
	div = document.createElement( "div" );
	div.setAttribute( "className", "t" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
	a = div.getElementsByTagName("a")[ 0 ];

	// First batch of tests.
	select = document.createElement("select");
	opt = select.appendChild( document.createElement("option") );
	input = div.getElementsByTagName("input")[ 0 ];

	a.style.cssText = "top:1px";

	// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
	support.getSetAttribute = div.className !== "t";

	// Get the style information from getAttribute
	// (IE uses .cssText instead)
	support.style = /top/.test( a.getAttribute("style") );

	// Make sure that URLs aren't manipulated
	// (IE normalizes it by default)
	support.hrefNormalized = a.getAttribute("href") === "/a";

	// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
	support.checkOn = !!input.value;

	// Make sure that a selected-by-default option has a working selected property.
	// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
	support.optSelected = opt.selected;

	// Tests for enctype support on a form (#6743)
	support.enctype = !!document.createElement("form").enctype;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Support: IE8 only
	// Check if we can trust getAttribute("value")
	input = document.createElement( "input" );
	input.setAttribute( "value", "" );
	support.input = input.getAttribute( "value" ) === "";

	// Check if an input maintains its value after becoming a radio
	input.value = "t";
	input.setAttribute( "type", "radio" );
	support.radioValue = input.value === "t";
})();


var rreturn = /\r/g;

jQuery.fn.extend({
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// handle most common string cases
					ret.replace(rreturn, "") :
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :
					// Support: IE10-11+
					// option.text throws exceptions (#14686, #14858)
					jQuery.trim( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// oldIE doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&
							// Don't return options that are disabled or in a disabled optgroup
							( support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null ) &&
							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					if ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) >= 0 ) {

						// Support: IE6
						// When new option element is added to select box we need to
						// force reflow of newly added node in order to workaround delay
						// of initialization properties
						try {
							option.selected = optionSet = true;

						} catch ( _ ) {

							// Will be executed only in IE6
							option.scrollHeight;
						}

					} else {
						option.selected = false;
					}
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}

				return options;
			}
		}
	}
});

// Radios and checkboxes getter/setter
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			// Support: Webkit
			// "" is returned instead of "on" if a value isn't specified
			return elem.getAttribute("value") === null ? "on" : elem.value;
		};
	}
});




var nodeHook, boolHook,
	attrHandle = jQuery.expr.attrHandle,
	ruseDefault = /^(?:checked|selected)$/i,
	getSetAttribute = support.getSetAttribute,
	getSetInput = support.input;

jQuery.fn.extend({
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	}
});

jQuery.extend({
	attr: function( elem, name, value ) {
		var hooks, ret,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === strundefined ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );

			} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, value + "" );
				return value;
			}

		} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {
			ret = jQuery.find.attr( elem, name );

			// Non-existent attributes return null, we normalize to undefined
			return ret == null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( (name = attrNames[i++]) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {
					// Set corresponding property to false
					if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
						elem[ propName ] = false;
					// Support: IE<9
					// Also clear defaultChecked/defaultSelected (if appropriate)
					} else {
						elem[ jQuery.camelCase( "default-" + name ) ] =
							elem[ propName ] = false;
					}

				// See #9699 for explanation of this approach (setting first, then removal)
				} else {
					jQuery.attr( elem, name, "" );
				}

				elem.removeAttribute( getSetAttribute ? name : propName );
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to default in case type is set after value during creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	}
});

// Hook for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
			// IE<8 needs the *property* name
			elem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );

		// Use defaultChecked and defaultSelected for oldIE
		} else {
			elem[ jQuery.camelCase( "default-" + name ) ] = elem[ name ] = true;
		}

		return name;
	}
};

// Retrieve booleans specially
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {

	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = getSetInput && getSetAttribute || !ruseDefault.test( name ) ?
		function( elem, name, isXML ) {
			var ret, handle;
			if ( !isXML ) {
				// Avoid an infinite loop by temporarily removing this function from the getter
				handle = attrHandle[ name ];
				attrHandle[ name ] = ret;
				ret = getter( elem, name, isXML ) != null ?
					name.toLowerCase() :
					null;
				attrHandle[ name ] = handle;
			}
			return ret;
		} :
		function( elem, name, isXML ) {
			if ( !isXML ) {
				return elem[ jQuery.camelCase( "default-" + name ) ] ?
					name.toLowerCase() :
					null;
			}
		};
});

// fix oldIE attroperties
if ( !getSetInput || !getSetAttribute ) {
	jQuery.attrHooks.value = {
		set: function( elem, value, name ) {
			if ( jQuery.nodeName( elem, "input" ) ) {
				// Does not return so that setAttribute is also used
				elem.defaultValue = value;
			} else {
				// Use nodeHook if defined (#1954); otherwise setAttribute is fine
				return nodeHook && nodeHook.set( elem, value, name );
			}
		}
	};
}

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = {
		set: function( elem, value, name ) {
			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				elem.setAttributeNode(
					(ret = elem.ownerDocument.createAttribute( name ))
				);
			}

			ret.value = value += "";

			// Break association with cloned elements by also using setAttribute (#9646)
			if ( name === "value" || value === elem.getAttribute( name ) ) {
				return value;
			}
		}
	};

	// Some attributes are constructed with empty-string values when not defined
	attrHandle.id = attrHandle.name = attrHandle.coords =
		function( elem, name, isXML ) {
			var ret;
			if ( !isXML ) {
				return (ret = elem.getAttributeNode( name )) && ret.value !== "" ?
					ret.value :
					null;
			}
		};

	// Fixing value retrieval on a button requires this module
	jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret = elem.getAttributeNode( name );
			if ( ret && ret.specified ) {
				return ret.value;
			}
		},
		set: nodeHook.set
	};

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		set: function( elem, value, name ) {
			nodeHook.set( elem, value === "" ? false : value, name );
		}
	};

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each([ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		};
	});
}

if ( !support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {
			// Return undefined in the case of empty string
			// Note: IE uppercases css property names, but if we were to .toLowerCase()
			// .cssText, that would destroy case senstitivity in URL's, like in "background"
			return elem.style.cssText || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = value + "" );
		}
	};
}




var rfocusable = /^(?:input|select|textarea|button|object)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend({
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each(function() {
			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch( e ) {}
		});
	}
});

jQuery.extend({
	propFix: {
		"for": "htmlFor",
		"class": "className"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
				ret :
				( elem[ name ] = value );

		} else {
			return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
				ret :
				elem[ name ];
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				return tabindex ?
					parseInt( tabindex, 10 ) :
					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
						0 :
						-1;
			}
		}
	}
});

// Some attributes require a special call on IE
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !support.hrefNormalized ) {
	// href/src property should get the full normalized URL (#10299/#12915)
	jQuery.each([ "href", "src" ], function( i, name ) {
		jQuery.propHooks[ name ] = {
			get: function( elem ) {
				return elem.getAttribute( name, 4 );
			}
		};
	});
}

// Support: Safari, IE9+
// mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		}
	};
}

jQuery.each([
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
});

// IE6/7 call enctype encoding
if ( !support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}




var rclass = /[\t\r\n\f]/g;

jQuery.fn.extend({
	addClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			i = 0,
			len = this.length,
			proceed = typeof value === "string" && value;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call( this, j, this.className ) );
			});
		}

		if ( proceed ) {
			// The disjunction here is for better compressibility (see removeClass)
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					" "
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			i = 0,
			len = this.length,
			proceed = arguments.length === 0 || typeof value === "string" && value;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call( this, j, this.className ) );
			});
		}
		if ( proceed ) {
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					""
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = value ? jQuery.trim( cur ) : "";
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					classNames = value.match( rnotwhite ) || [];

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( type === strundefined || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					jQuery._data( this, "__className__", this.className );
				}

				// If the element has a class name or if we're passed "false",
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
				return true;
			}
		}

		return false;
	}
});




// Return jQuery for attributes-only inclusion


jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
});

jQuery.fn.extend({
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
	}
});


var nonce = jQuery.now();

var rquery = (/\?/);



var rvalidtokens = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;

jQuery.parseJSON = function( data ) {
	// Attempt to parse using the native JSON parser first
	if ( window.JSON && window.JSON.parse ) {
		// Support: Android 2.3
		// Workaround failure to string-cast null input
		return window.JSON.parse( data + "" );
	}

	var requireNonComma,
		depth = null,
		str = jQuery.trim( data + "" );

	// Guard against invalid (and possibly dangerous) input by ensuring that nothing remains
	// after removing valid tokens
	return str && !jQuery.trim( str.replace( rvalidtokens, function( token, comma, open, close ) {

		// Force termination if we see a misplaced comma
		if ( requireNonComma && comma ) {
			depth = 0;
		}

		// Perform no more replacements after returning to outermost depth
		if ( depth === 0 ) {
			return token;
		}

		// Commas must not follow "[", "{", or ","
		requireNonComma = open || comma;

		// Determine new depth
		// array/object open ("[" or "{"): depth += true - false (increment)
		// array/object close ("]" or "}"): depth += false - true (decrement)
		// other cases ("," or primitive): depth += true - true (numeric cast)
		depth += !close - !open;

		// Remove this token
		return "";
	}) ) ?
		( Function( "return " + str ) )() :
		jQuery.error( "Invalid JSON: " + data );
};


// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, tmp;
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	try {
		if ( window.DOMParser ) { // Standard
			tmp = new DOMParser();
			xml = tmp.parseFromString( data, "text/xml" );
		} else { // IE
			xml = new ActiveXObject( "Microsoft.XMLDOM" );
			xml.async = "false";
			xml.loadXML( data );
		}
	} catch( e ) {
		xml = undefined;
	}
	if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	// Document location
	ajaxLocParts,
	ajaxLocation,

	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat("*");

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			while ( (dataType = dataTypes[i++]) ) {
				// Prepend if requested
				if ( dataType.charAt( 0 ) === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					(structure[ dataType ] = structure[ dataType ] || []).unshift( func );

				// Otherwise append
				} else {
					(structure[ dataType ] = structure[ dataType ] || []).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		});
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var deep, key,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {
	var firstDataType, ct, finalDataType, type,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s[ "throws" ] ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend({

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: ajaxLocation,
		type: "GET",
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var // Cross-domain detection vars
			parts,
			// Loop variable
			i,
			// URL without anti-cache param
			cacheURL,
			// Response headers as string
			responseHeadersString,
			// timeout handle
			timeoutTimer,

			// To know if global events are to be dispatched
			fireGlobals,

			transport,
			// Response headers
			responseHeaders,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks("once memory"),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// The jqXHR state
			state = 0,
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( (match = rheaders.exec( responseHeadersString )) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {
								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {
							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger("ajaxStart");
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
			// Abort if not done already and return
			return jqXHR.abort();
		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout(function() {
					jqXHR.abort("timeout");
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader("Last-Modified");
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader("etag");
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger("ajaxStop");
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		});
	};
});


jQuery._evalUrl = function( url ) {
	return jQuery.ajax({
		url: url,
		type: "GET",
		dataType: "script",
		async: false,
		global: false,
		"throws": true
	});
};


jQuery.fn.extend({
	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function(i) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	}
});


jQuery.expr.filters.hidden = function( elem ) {
	// Support: Opera <= 12.12
	// Opera reports offsetWidths and offsetHeights less than zero on some elements
	return elem.offsetWidth <= 0 && elem.offsetHeight <= 0 ||
		(!support.reliableHiddenOffsets() &&
			((elem.style && elem.style.display) || jQuery.css( elem, "display" )) === "none");
};

jQuery.expr.filters.visible = function( elem ) {
	return !jQuery.expr.filters.hidden( elem );
};




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// Item is non-scalar (array or object), encode its numeric index.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {
			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		});

	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

jQuery.fn.extend({
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map(function() {
			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		})
		.filter(function() {
			var type = this.type;
			// Use .is(":disabled") so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		})
		.map(function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});


// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ?
	// Support: IE6+
	function() {

		// XHR cannot access local files, always use ActiveX for that case
		return !this.isLocal &&

			// Support: IE7-8
			// oldIE XHR does not support non-RFC2616 methods (#13240)
			// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx
			// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9
			// Although this check for six methods instead of eight
			// since IE also does not support "trace" and "connect"
			/^(get|post|head|put|delete|options)$/i.test( this.type ) &&

			createStandardXHR() || createActiveXHR();
	} :
	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

var xhrId = 0,
	xhrCallbacks = {},
	xhrSupported = jQuery.ajaxSettings.xhr();

// Support: IE<10
// Open requests must be manually aborted on unload (#5280)
// See https://support.microsoft.com/kb/2856746 for more info
if ( window.attachEvent ) {
	window.attachEvent( "onunload", function() {
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( undefined, true );
		}
	});
}

// Determine support properties
support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
xhrSupported = support.ajax = !!xhrSupported;

// Create transport if the browser can provide an xhr
if ( xhrSupported ) {

	jQuery.ajaxTransport(function( options ) {
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !options.crossDomain || support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {
					var i,
						xhr = options.xhr(),
						id = ++xhrId;

					// Open the socket
					xhr.open( options.type, options.url, options.async, options.username, options.password );

					// Apply custom fields if provided
					if ( options.xhrFields ) {
						for ( i in options.xhrFields ) {
							xhr[ i ] = options.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( options.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( options.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !options.crossDomain && !headers["X-Requested-With"] ) {
						headers["X-Requested-With"] = "XMLHttpRequest";
					}

					// Set headers
					for ( i in headers ) {
						// Support: IE<9
						// IE's ActiveXObject throws a 'Type Mismatch' exception when setting
						// request header to a null-value.
						//
						// To keep consistent with other XHR implementations, cast the value
						// to string and ignore `undefined`.
						if ( headers[ i ] !== undefined ) {
							xhr.setRequestHeader( i, headers[ i ] + "" );
						}
					}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( options.hasContent && options.data ) || null );

					// Listener
					callback = function( _, isAbort ) {
						var status, statusText, responses;

						// Was never called and is aborted or complete
						if ( callback && ( isAbort || xhr.readyState === 4 ) ) {
							// Clean up
							delete xhrCallbacks[ id ];
							callback = undefined;
							xhr.onreadystatechange = jQuery.noop;

							// Abort manually if needed
							if ( isAbort ) {
								if ( xhr.readyState !== 4 ) {
									xhr.abort();
								}
							} else {
								responses = {};
								status = xhr.status;

								// Support: IE<10
								// Accessing binary-data responseText throws an exception
								// (#11426)
								if ( typeof xhr.responseText === "string" ) {
									responses.text = xhr.responseText;
								}

								// Firefox throws an exception when accessing
								// statusText for faulty cross-domain requests
								try {
									statusText = xhr.statusText;
								} catch( e ) {
									// We normalize with Webkit giving an empty statusText
									statusText = "";
								}

								// Filter status for non standard behaviors

								// If the request is local and we have data: assume a success
								// (success with no data won't get notified, that's the best we
								// can do given current implementations)
								if ( !status && options.isLocal && !options.crossDomain ) {
									status = responses.text ? 200 : 404;
								// IE - #1450: sometimes returns 1223 when it should be 204
								} else if ( status === 1223 ) {
									status = 204;
								}
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, xhr.getAllResponseHeaders() );
						}
					};

					if ( !options.async ) {
						// if we're in sync mode we fire the callback
						callback();
					} else if ( xhr.readyState === 4 ) {
						// (IE6 & IE7) if it's in cache and has been
						// retrieved directly we need to fire the callback
						setTimeout( callback );
					} else {
						// Add to the list of active xhr callbacks
						xhr.onreadystatechange = xhrCallbacks[ id ] = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback( undefined, true );
					}
				}
			};
		}
	});
}

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch( e ) {}
}




// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /(?:java|ecma)script/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || jQuery("head")[0] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement("script");

				script.async = true;

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( script.parentNode ) {
							script.parentNode.removeChild( script );
						}

						// Dereference the script
						script = null;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};

				// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending
				// Use native DOM manipulation to avoid our domManip AJAX trickery
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( undefined, true );
				}
			}
		};
	}
});




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always(function() {
			// Restore preexisting value
			window[ callbackName ] = overwritten;

			// Save back as free
			if ( s[ callbackName ] ) {
				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		});

		// Delegate to script
		return "script";
	}
});




// data: string of html
// context (optional): If specified, the fragment will be created in this context, defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	context = context || document;

	var parsed = rsingleTag.exec( data ),
		scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[1] ) ];
	}

	parsed = jQuery.buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


// Keep a copy of the old load method
var _load = jQuery.fn.load;

/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, response, type,
		self = this,
		off = url.indexOf(" ");

	if ( off >= 0 ) {
		selector = jQuery.trim( url.slice( off, url.length ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax({
			url: url,

			// if "type" variable is undefined, then "GET" method will be used
			type: type,
			dataType: "html",
			data: params
		}).done(function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		}).complete( callback && function( jqXHR, status ) {
			self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
		});
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
});




jQuery.expr.filters.animated = function( elem ) {
	return jQuery.grep(jQuery.timers, function( fn ) {
		return elem === fn.elem;
	}).length;
};





var docElem = window.document.documentElement;

/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			jQuery.inArray("auto", [ curCSSTop, curCSSLeft ] ) > -1;

		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend({
	offset: function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each(function( i ) {
					jQuery.offset.setOffset( this, options, i );
				});
		}

		var docElem, win,
			box = { top: 0, left: 0 },
			elem = this[ 0 ],
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		// If we don't have gBCR, just use 0,0 rather than error
		// BlackBerry 5, iOS 3 (original iPhone)
		if ( typeof elem.getBoundingClientRect !== strundefined ) {
			box = elem.getBoundingClientRect();
		}
		win = getWindow( doc );
		return {
			top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),
			left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			parentOffset = { top: 0, left: 0 },
			elem = this[ 0 ];

		// fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {
			// we assume that getBoundingClientRect is available when computed position is fixed
			offset = elem.getBoundingClientRect();
		} else {
			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top  += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		return {
			top:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true)
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || docElem;

			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position" ) === "static" ) ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent || docElem;
		});
	}
});

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = /Y/.test( prop );

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? (prop in win) ? win[ prop ] :
					win.document.documentElement[ method ] :
					elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : jQuery( win ).scrollLeft(),
					top ? val : jQuery( win ).scrollTop()
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// getComputedStyle returns percent when specified for top/left/bottom/right
// rather than make the css module depend on the offset module, we just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );
				// if curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
});


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {
					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest
					// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	});
});


// The number of elements contained in the matched element set
jQuery.fn.size = function() {
	return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	});
}




var
	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in
// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === strundefined ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;

}));
(function($, undefined) {

/**
 * Unobtrusive scripting adapter for jQuery
 * https://github.com/rails/jquery-ujs
 *
 * Requires jQuery 1.8.0 or later.
 *
 * Released under the MIT license
 *
 */

  // Cut down on the number of issues from people inadvertently including jquery_ujs twice
  // by detecting and raising an error when it happens.
  if ( $.rails !== undefined ) {
    $.error('jquery-ujs has already been loaded!');
  }

  // Shorthand to make it a little easier to call public rails functions from within rails.js
  var rails;
  var $document = $(document);

  $.rails = rails = {
    // Link elements bound by jquery-ujs
    linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote], a[data-disable-with], a[data-disable]',

    // Button elements bound by jquery-ujs
    buttonClickSelector: 'button[data-remote]:not(form button), button[data-confirm]:not(form button)',

    // Select elements bound by jquery-ujs
    inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',

    // Form elements bound by jquery-ujs
    formSubmitSelector: 'form',

    // Form input elements bound by jquery-ujs
    formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',

    // Form input elements disabled during form submission
    disableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',

    // Form input elements re-enabled after form submission
    enableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',

    // Form required input elements
    requiredInputSelector: 'input[name][required]:not([disabled]),textarea[name][required]:not([disabled])',

    // Form file input elements
    fileInputSelector: 'input[type=file]',

    // Link onClick disable selector with possible reenable after remote submission
    linkDisableSelector: 'a[data-disable-with], a[data-disable]',

    // Button onClick disable selector with possible reenable after remote submission
    buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]',

    // Make sure that every Ajax request sends the CSRF token
    CSRFProtection: function(xhr) {
      var token = $('meta[name="csrf-token"]').attr('content');
      if (token) xhr.setRequestHeader('X-CSRF-Token', token);
    },

    // making sure that all forms have actual up-to-date token(cached forms contain old one)
    refreshCSRFTokens: function(){
      var csrfToken = $('meta[name=csrf-token]').attr('content');
      var csrfParam = $('meta[name=csrf-param]').attr('content');
      $('form input[name="' + csrfParam + '"]').val(csrfToken);
    },

    // Triggers an event on an element and returns false if the event result is false
    fire: function(obj, name, data) {
      var event = $.Event(name);
      obj.trigger(event, data);
      return event.result !== false;
    },

    // Default confirm dialog, may be overridden with custom confirm dialog in $.rails.confirm
    confirm: function(message) {
      return confirm(message);
    },

    // Default ajax function, may be overridden with custom function in $.rails.ajax
    ajax: function(options) {
      return $.ajax(options);
    },

    // Default way to get an element's href. May be overridden at $.rails.href.
    href: function(element) {
      return element.attr('href');
    },

    // Submits "remote" forms and links with ajax
    handleRemote: function(element) {
      var method, url, data, elCrossDomain, crossDomain, withCredentials, dataType, options;

      if (rails.fire(element, 'ajax:before')) {
        elCrossDomain = element.data('cross-domain');
        crossDomain = elCrossDomain === undefined ? null : elCrossDomain;
        withCredentials = element.data('with-credentials') || null;
        dataType = element.data('type') || ($.ajaxSettings && $.ajaxSettings.dataType);

        if (element.is('form')) {
          method = element.attr('method');
          url = element.attr('action');
          data = element.serializeArray();
          // memoized value from clicked submit button
          var button = element.data('ujs:submit-button');
          if (button) {
            data.push(button);
            element.data('ujs:submit-button', null);
          }
        } else if (element.is(rails.inputChangeSelector)) {
          method = element.data('method');
          url = element.data('url');
          data = element.serialize();
          if (element.data('params')) data = data + "&" + element.data('params');
        } else if (element.is(rails.buttonClickSelector)) {
          method = element.data('method') || 'get';
          url = element.data('url');
          data = element.serialize();
          if (element.data('params')) data = data + "&" + element.data('params');
        } else {
          method = element.data('method');
          url = rails.href(element);
          data = element.data('params') || null;
        }

        options = {
          type: method || 'GET', data: data, dataType: dataType,
          // stopping the "ajax:beforeSend" event will cancel the ajax request
          beforeSend: function(xhr, settings) {
            if (settings.dataType === undefined) {
              xhr.setRequestHeader('accept', '*/*;q=0.5, ' + settings.accepts.script);
            }
            if (rails.fire(element, 'ajax:beforeSend', [xhr, settings])) {
              element.trigger('ajax:send', xhr);
            } else {
              return false;
            }
          },
          success: function(data, status, xhr) {
            element.trigger('ajax:success', [data, status, xhr]);
          },
          complete: function(xhr, status) {
            element.trigger('ajax:complete', [xhr, status]);
          },
          error: function(xhr, status, error) {
            element.trigger('ajax:error', [xhr, status, error]);
          },
          crossDomain: crossDomain
        };

        // There is no withCredentials for IE6-8 when
        // "Enable native XMLHTTP support" is disabled
        if (withCredentials) {
          options.xhrFields = {
            withCredentials: withCredentials
          };
        }

        // Only pass url to `ajax` options if not blank
        if (url) { options.url = url; }

        return rails.ajax(options);
      } else {
        return false;
      }
    },

    // Handles "data-method" on links such as:
    // <a href="/users/5" data-method="delete" rel="nofollow" data-confirm="Are you sure?">Delete</a>
    handleMethod: function(link) {
      var href = rails.href(link),
        method = link.data('method'),
        target = link.attr('target'),
        csrfToken = $('meta[name=csrf-token]').attr('content'),
        csrfParam = $('meta[name=csrf-param]').attr('content'),
        form = $('<form method="post" action="' + href + '"></form>'),
        metadataInput = '<input name="_method" value="' + method + '" type="hidden" />';

      if (csrfParam !== undefined && csrfToken !== undefined) {
        metadataInput += '<input name="' + csrfParam + '" value="' + csrfToken + '" type="hidden" />';
      }

      if (target) { form.attr('target', target); }

      form.hide().append(metadataInput).appendTo('body');
      form.submit();
    },

    // Helper function that returns form elements that match the specified CSS selector
    // If form is actually a "form" element this will return associated elements outside the from that have
    // the html form attribute set
    formElements: function(form, selector) {
      return form.is('form') ? $(form[0].elements).filter(selector) : form.find(selector);
    },

    /* Disables form elements:
      - Caches element value in 'ujs:enable-with' data store
      - Replaces element text with value of 'data-disable-with' attribute
      - Sets disabled property to true
    */
    disableFormElements: function(form) {
      rails.formElements(form, rails.disableSelector).each(function() {
        rails.disableFormElement($(this));
      });
    },

    disableFormElement: function(element) {
      var method, replacement;

      method = element.is('button') ? 'html' : 'val';
      replacement = element.data('disable-with');

      element.data('ujs:enable-with', element[method]());
      if (replacement !== undefined) {
        element[method](replacement);
      }

      element.prop('disabled', true);
    },

    /* Re-enables disabled form elements:
      - Replaces element text with cached value from 'ujs:enable-with' data store (created in `disableFormElements`)
      - Sets disabled property to false
    */
    enableFormElements: function(form) {
      rails.formElements(form, rails.enableSelector).each(function() {
        rails.enableFormElement($(this));
      });
    },

    enableFormElement: function(element) {
      var method = element.is('button') ? 'html' : 'val';
      if (element.data('ujs:enable-with')) element[method](element.data('ujs:enable-with'));
      element.prop('disabled', false);
    },

   /* For 'data-confirm' attribute:
      - Fires `confirm` event
      - Shows the confirmation dialog
      - Fires the `confirm:complete` event

      Returns `true` if no function stops the chain and user chose yes; `false` otherwise.
      Attaching a handler to the element's `confirm` event that returns a `falsy` value cancels the confirmation dialog.
      Attaching a handler to the element's `confirm:complete` event that returns a `falsy` value makes this function
      return false. The `confirm:complete` event is fired whether or not the user answered true or false to the dialog.
   */
    allowAction: function(element) {
      var message = element.data('confirm'),
          answer = false, callback;
      if (!message) { return true; }

      if (rails.fire(element, 'confirm')) {
        answer = rails.confirm(message);
        callback = rails.fire(element, 'confirm:complete', [answer]);
      }
      return answer && callback;
    },

    // Helper function which checks for blank inputs in a form that match the specified CSS selector
    blankInputs: function(form, specifiedSelector, nonBlank) {
      var inputs = $(), input, valueToCheck,
          selector = specifiedSelector || 'input,textarea',
          allInputs = form.find(selector);

      allInputs.each(function() {
        input = $(this);
        valueToCheck = input.is('input[type=checkbox],input[type=radio]') ? input.is(':checked') : input.val();
        // If nonBlank and valueToCheck are both truthy, or nonBlank and valueToCheck are both falsey
        if (!valueToCheck === !nonBlank) {

          // Don't count unchecked required radio if other radio with same name is checked
          if (input.is('input[type=radio]') && allInputs.filter('input[type=radio]:checked[name="' + input.attr('name') + '"]').length) {
            return true; // Skip to next input
          }

          inputs = inputs.add(input);
        }
      });
      return inputs.length ? inputs : false;
    },

    // Helper function which checks for non-blank inputs in a form that match the specified CSS selector
    nonBlankInputs: function(form, specifiedSelector) {
      return rails.blankInputs(form, specifiedSelector, true); // true specifies nonBlank
    },

    // Helper function, needed to provide consistent behavior in IE
    stopEverything: function(e) {
      $(e.target).trigger('ujs:everythingStopped');
      e.stopImmediatePropagation();
      return false;
    },

    //  replace element's html with the 'data-disable-with' after storing original html
    //  and prevent clicking on it
    disableElement: function(element) {
      var replacement = element.data('disable-with');

      element.data('ujs:enable-with', element.html()); // store enabled state
      if (replacement !== undefined) {
        element.html(replacement);
      }

      element.bind('click.railsDisable', function(e) { // prevent further clicking
        return rails.stopEverything(e);
      });
    },

    // restore element to its original state which was disabled by 'disableElement' above
    enableElement: function(element) {
      if (element.data('ujs:enable-with') !== undefined) {
        element.html(element.data('ujs:enable-with')); // set to old enabled state
        element.removeData('ujs:enable-with'); // clean up cache
      }
      element.unbind('click.railsDisable'); // enable element
    }
  };

  if (rails.fire($document, 'rails:attachBindings')) {

    $.ajaxPrefilter(function(options, originalOptions, xhr){ if ( !options.crossDomain ) { rails.CSRFProtection(xhr); }});

    // This event works the same as the load event, except that it fires every
    // time the page is loaded.
    //
    // See https://github.com/rails/jquery-ujs/issues/357
    // See https://developer.mozilla.org/en-US/docs/Using_Firefox_1.5_caching
    $(window).on("pageshow.rails", function () {
      $($.rails.enableSelector).each(function () {
        var element = $(this);

        if (element.data("ujs:enable-with")) {
          $.rails.enableFormElement(element);
        }
      });

      $($.rails.linkDisableSelector).each(function () {
        var element = $(this);

        if (element.data("ujs:enable-with")) {
          $.rails.enableElement(element);
        }
      });
    });

    $document.delegate(rails.linkDisableSelector, 'ajax:complete', function() {
        rails.enableElement($(this));
    });

    $document.delegate(rails.buttonDisableSelector, 'ajax:complete', function() {
        rails.enableFormElement($(this));
    });

    $document.delegate(rails.linkClickSelector, 'click.rails', function(e) {
      var link = $(this), method = link.data('method'), data = link.data('params'), metaClick = e.metaKey || e.ctrlKey;
      if (!rails.allowAction(link)) return rails.stopEverything(e);

      if (!metaClick && link.is(rails.linkDisableSelector)) rails.disableElement(link);

      if (link.data('remote') !== undefined) {
        if (metaClick && (!method || method === 'GET') && !data) { return true; }

        var handleRemote = rails.handleRemote(link);
        // response from rails.handleRemote() will either be false or a deferred object promise.
        if (handleRemote === false) {
          rails.enableElement(link);
        } else {
          handleRemote.fail( function() { rails.enableElement(link); } );
        }
        return false;

      } else if (method) {
        rails.handleMethod(link);
        return false;
      }
    });

    $document.delegate(rails.buttonClickSelector, 'click.rails', function(e) {
      var button = $(this);

      if (!rails.allowAction(button)) return rails.stopEverything(e);

      if (button.is(rails.buttonDisableSelector)) rails.disableFormElement(button);

      var handleRemote = rails.handleRemote(button);
      // response from rails.handleRemote() will either be false or a deferred object promise.
      if (handleRemote === false) {
        rails.enableFormElement(button);
      } else {
        handleRemote.fail( function() { rails.enableFormElement(button); } );
      }
      return false;
    });

    $document.delegate(rails.inputChangeSelector, 'change.rails', function(e) {
      var link = $(this);
      if (!rails.allowAction(link)) return rails.stopEverything(e);

      rails.handleRemote(link);
      return false;
    });

    $document.delegate(rails.formSubmitSelector, 'submit.rails', function(e) {
      var form = $(this),
        remote = form.data('remote') !== undefined,
        blankRequiredInputs,
        nonBlankFileInputs;

      if (!rails.allowAction(form)) return rails.stopEverything(e);

      // skip other logic when required values are missing or file upload is present
      if (form.attr('novalidate') == undefined) {
        blankRequiredInputs = rails.blankInputs(form, rails.requiredInputSelector);
        if (blankRequiredInputs && rails.fire(form, 'ajax:aborted:required', [blankRequiredInputs])) {
          return rails.stopEverything(e);
        }
      }

      if (remote) {
        nonBlankFileInputs = rails.nonBlankInputs(form, rails.fileInputSelector);
        if (nonBlankFileInputs) {
          // slight timeout so that the submit button gets properly serialized
          // (make it easy for event handler to serialize form without disabled values)
          setTimeout(function(){ rails.disableFormElements(form); }, 13);
          var aborted = rails.fire(form, 'ajax:aborted:file', [nonBlankFileInputs]);

          // re-enable form elements if event bindings return false (canceling normal form submission)
          if (!aborted) { setTimeout(function(){ rails.enableFormElements(form); }, 13); }

          return aborted;
        }

        rails.handleRemote(form);
        return false;

      } else {
        // slight timeout so that the submit button gets properly serialized
        setTimeout(function(){ rails.disableFormElements(form); }, 13);
      }
    });

    $document.delegate(rails.formInputClickSelector, 'click.rails', function(event) {
      var button = $(this);

      if (!rails.allowAction(button)) return rails.stopEverything(event);

      // register the pressed submit button
      var name = button.attr('name'),
        data = name ? {name:name, value:button.val()} : null;

      button.closest('form').data('ujs:submit-button', data);
    });

    $document.delegate(rails.formSubmitSelector, 'ajax:send.rails', function(event) {
      if (this == event.target) rails.disableFormElements($(this));
    });

    $document.delegate(rails.formSubmitSelector, 'ajax:complete.rails', function(event) {
      if (this == event.target) rails.enableFormElements($(this));
    });

    $(function(){
      rails.refreshCSRFTokens();
    });
  }

})( jQuery );
(function() {
  var CSRFToken, Click, ComponentUrl, EVENTS, Link, ProgressBar, browserIsntBuggy, browserSupportsCustomEvents, browserSupportsPushState, browserSupportsTurbolinks, bypassOnLoadPopstate, cacheCurrentPage, cacheSize, changePage, clone, constrainPageCacheTo, createDocument, crossOriginRedirect, currentState, enableProgressBar, enableTransitionCache, executeScriptTags, extractTitleAndBody, fetch, fetchHistory, fetchReplacement, historyStateIsDefined, initializeTurbolinks, installDocumentReadyPageEventTriggers, installHistoryChangeHandler, installJqueryAjaxSuccessPageUpdateTrigger, loadedAssets, manuallyTriggerHashChangeForFirefox, pageCache, pageChangePrevented, pagesCached, popCookie, processResponse, progressBar, recallScrollPosition, ref, referer, reflectNewUrl, reflectRedirectedUrl, rememberCurrentState, rememberCurrentUrl, rememberReferer, removeNoscriptTags, requestMethodIsSafe, resetScrollPosition, setAutofocusElement, transitionCacheEnabled, transitionCacheFor, triggerEvent, visit, xhr,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  pageCache = {};

  cacheSize = 10;

  transitionCacheEnabled = false;

  progressBar = null;

  currentState = null;

  loadedAssets = null;

  referer = null;

  xhr = null;

  EVENTS = {
    BEFORE_CHANGE: 'page:before-change',
    FETCH: 'page:fetch',
    RECEIVE: 'page:receive',
    CHANGE: 'page:change',
    UPDATE: 'page:update',
    LOAD: 'page:load',
    RESTORE: 'page:restore',
    BEFORE_UNLOAD: 'page:before-unload',
    EXPIRE: 'page:expire'
  };

  fetch = function(url) {
    var cachedPage;
    url = new ComponentUrl(url);
    rememberReferer();
    cacheCurrentPage();
    if (progressBar != null) {
      progressBar.start();
    }
    if (transitionCacheEnabled && (cachedPage = transitionCacheFor(url.absolute))) {
      fetchHistory(cachedPage);
      return fetchReplacement(url, null, false);
    } else {
      return fetchReplacement(url, resetScrollPosition);
    }
  };

  transitionCacheFor = function(url) {
    var cachedPage;
    cachedPage = pageCache[url];
    if (cachedPage && !cachedPage.transitionCacheDisabled) {
      return cachedPage;
    }
  };

  enableTransitionCache = function(enable) {
    if (enable == null) {
      enable = true;
    }
    return transitionCacheEnabled = enable;
  };

  enableProgressBar = function(enable) {
    if (enable == null) {
      enable = true;
    }
    if (!browserSupportsTurbolinks) {
      return;
    }
    if (enable) {
      return progressBar != null ? progressBar : progressBar = new ProgressBar('html');
    } else {
      if (progressBar != null) {
        progressBar.uninstall();
      }
      return progressBar = null;
    }
  };

  fetchReplacement = function(url, onLoadFunction, showProgressBar) {
    if (showProgressBar == null) {
      showProgressBar = true;
    }
    triggerEvent(EVENTS.FETCH, {
      url: url.absolute
    });
    if (xhr != null) {
      xhr.abort();
    }
    xhr = new XMLHttpRequest;
    xhr.open('GET', url.withoutHashForIE10compatibility(), true);
    xhr.setRequestHeader('Accept', 'text/html, application/xhtml+xml, application/xml');
    xhr.setRequestHeader('X-XHR-Referer', referer);
    xhr.onload = function() {
      var doc;
      triggerEvent(EVENTS.RECEIVE, {
        url: url.absolute
      });
      if (doc = processResponse()) {
        reflectNewUrl(url);
        reflectRedirectedUrl();
        changePage.apply(null, extractTitleAndBody(doc));
        manuallyTriggerHashChangeForFirefox();
        if (typeof onLoadFunction === "function") {
          onLoadFunction();
        }
        return triggerEvent(EVENTS.LOAD);
      } else {
        return document.location.href = crossOriginRedirect() || url.absolute;
      }
    };
    if (progressBar && showProgressBar) {
      xhr.onprogress = (function(_this) {
        return function(event) {
          var percent;
          percent = event.lengthComputable ? event.loaded / event.total * 100 : progressBar.value + (100 - progressBar.value) / 10;
          return progressBar.advanceTo(percent);
        };
      })(this);
    }
    xhr.onloadend = function() {
      return xhr = null;
    };
    xhr.onerror = function() {
      return document.location.href = url.absolute;
    };
    return xhr.send();
  };

  fetchHistory = function(cachedPage) {
    if (xhr != null) {
      xhr.abort();
    }
    changePage(cachedPage.title, cachedPage.body);
    recallScrollPosition(cachedPage);
    return triggerEvent(EVENTS.RESTORE);
  };

  cacheCurrentPage = function() {
    var currentStateUrl;
    currentStateUrl = new ComponentUrl(currentState.url);
    pageCache[currentStateUrl.absolute] = {
      url: currentStateUrl.relative,
      body: document.body,
      title: document.title,
      positionY: window.pageYOffset,
      positionX: window.pageXOffset,
      cachedAt: new Date().getTime(),
      transitionCacheDisabled: document.querySelector('[data-no-transition-cache]') != null
    };
    return constrainPageCacheTo(cacheSize);
  };

  pagesCached = function(size) {
    if (size == null) {
      size = cacheSize;
    }
    if (/^[\d]+$/.test(size)) {
      return cacheSize = parseInt(size);
    }
  };

  constrainPageCacheTo = function(limit) {
    var cacheTimesRecentFirst, i, key, len, pageCacheKeys, results;
    pageCacheKeys = Object.keys(pageCache);
    cacheTimesRecentFirst = pageCacheKeys.map(function(url) {
      return pageCache[url].cachedAt;
    }).sort(function(a, b) {
      return b - a;
    });
    results = [];
    for (i = 0, len = pageCacheKeys.length; i < len; i++) {
      key = pageCacheKeys[i];
      if (!(pageCache[key].cachedAt <= cacheTimesRecentFirst[limit])) {
        continue;
      }
      triggerEvent(EVENTS.EXPIRE, pageCache[key]);
      results.push(delete pageCache[key]);
    }
    return results;
  };

  changePage = function(title, body, csrfToken, runScripts) {
    triggerEvent(EVENTS.BEFORE_UNLOAD);
    document.title = title;
    document.documentElement.replaceChild(body, document.body);
    if (csrfToken != null) {
      CSRFToken.update(csrfToken);
    }
    setAutofocusElement();
    if (runScripts) {
      executeScriptTags();
    }
    currentState = window.history.state;
    if (progressBar != null) {
      progressBar.done();
    }
    triggerEvent(EVENTS.CHANGE);
    return triggerEvent(EVENTS.UPDATE);
  };

  executeScriptTags = function() {
    var attr, copy, i, j, len, len1, nextSibling, parentNode, ref, ref1, script, scripts;
    scripts = Array.prototype.slice.call(document.body.querySelectorAll('script:not([data-turbolinks-eval="false"])'));
    for (i = 0, len = scripts.length; i < len; i++) {
      script = scripts[i];
      if (!((ref = script.type) === '' || ref === 'text/javascript')) {
        continue;
      }
      copy = document.createElement('script');
      ref1 = script.attributes;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        attr = ref1[j];
        copy.setAttribute(attr.name, attr.value);
      }
      if (!script.hasAttribute('async')) {
        copy.async = false;
      }
      copy.appendChild(document.createTextNode(script.innerHTML));
      parentNode = script.parentNode, nextSibling = script.nextSibling;
      parentNode.removeChild(script);
      parentNode.insertBefore(copy, nextSibling);
    }
  };

  removeNoscriptTags = function(node) {
    node.innerHTML = node.innerHTML.replace(/<noscript[\S\s]*?<\/noscript>/ig, '');
    return node;
  };

  setAutofocusElement = function() {
    var autofocusElement, list;
    autofocusElement = (list = document.querySelectorAll('input[autofocus], textarea[autofocus]'))[list.length - 1];
    if (autofocusElement && document.activeElement !== autofocusElement) {
      return autofocusElement.focus();
    }
  };

  reflectNewUrl = function(url) {
    if ((url = new ComponentUrl(url)).absolute !== referer) {
      return window.history.pushState({
        turbolinks: true,
        url: url.absolute
      }, '', url.absolute);
    }
  };

  reflectRedirectedUrl = function() {
    var location, preservedHash;
    if (location = xhr.getResponseHeader('X-XHR-Redirected-To')) {
      location = new ComponentUrl(location);
      preservedHash = location.hasNoHash() ? document.location.hash : '';
      return window.history.replaceState(window.history.state, '', location.href + preservedHash);
    }
  };

  crossOriginRedirect = function() {
    var redirect;
    if (((redirect = xhr.getResponseHeader('Location')) != null) && (new ComponentUrl(redirect)).crossOrigin()) {
      return redirect;
    }
  };

  rememberReferer = function() {
    return referer = document.location.href;
  };

  rememberCurrentUrl = function() {
    return window.history.replaceState({
      turbolinks: true,
      url: document.location.href
    }, '', document.location.href);
  };

  rememberCurrentState = function() {
    return currentState = window.history.state;
  };

  manuallyTriggerHashChangeForFirefox = function() {
    var url;
    if (navigator.userAgent.match(/Firefox/) && !(url = new ComponentUrl).hasNoHash()) {
      window.history.replaceState(currentState, '', url.withoutHash());
      return document.location.hash = url.hash;
    }
  };

  recallScrollPosition = function(page) {
    return window.scrollTo(page.positionX, page.positionY);
  };

  resetScrollPosition = function() {
    if (document.location.hash) {
      return document.location.href = document.location.href;
    } else {
      return window.scrollTo(0, 0);
    }
  };

  clone = function(original) {
    var copy, key, value;
    if ((original == null) || typeof original !== 'object') {
      return original;
    }
    copy = new original.constructor();
    for (key in original) {
      value = original[key];
      copy[key] = clone(value);
    }
    return copy;
  };

  popCookie = function(name) {
    var ref, value;
    value = ((ref = document.cookie.match(new RegExp(name + "=(\\w+)"))) != null ? ref[1].toUpperCase() : void 0) || '';
    document.cookie = name + '=; expires=Thu, 01-Jan-70 00:00:01 GMT; path=/';
    return value;
  };

  triggerEvent = function(name, data) {
    var event;
    if (typeof Prototype !== 'undefined') {
      Event.fire(document, name, data, true);
    }
    event = document.createEvent('Events');
    if (data) {
      event.data = data;
    }
    event.initEvent(name, true, true);
    return document.dispatchEvent(event);
  };

  pageChangePrevented = function(url) {
    return !triggerEvent(EVENTS.BEFORE_CHANGE, {
      url: url
    });
  };

  processResponse = function() {
    var assetsChanged, clientOrServerError, doc, extractTrackAssets, intersection, validContent;
    clientOrServerError = function() {
      var ref;
      return (400 <= (ref = xhr.status) && ref < 600);
    };
    validContent = function() {
      var contentType;
      return ((contentType = xhr.getResponseHeader('Content-Type')) != null) && contentType.match(/^(?:text\/html|application\/xhtml\+xml|application\/xml)(?:;|$)/);
    };
    extractTrackAssets = function(doc) {
      var i, len, node, ref, results;
      ref = doc.querySelector('head').childNodes;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        node = ref[i];
        if ((typeof node.getAttribute === "function" ? node.getAttribute('data-turbolinks-track') : void 0) != null) {
          results.push(node.getAttribute('src') || node.getAttribute('href'));
        }
      }
      return results;
    };
    assetsChanged = function(doc) {
      var fetchedAssets;
      loadedAssets || (loadedAssets = extractTrackAssets(document));
      fetchedAssets = extractTrackAssets(doc);
      return fetchedAssets.length !== loadedAssets.length || intersection(fetchedAssets, loadedAssets).length !== loadedAssets.length;
    };
    intersection = function(a, b) {
      var i, len, ref, results, value;
      if (a.length > b.length) {
        ref = [b, a], a = ref[0], b = ref[1];
      }
      results = [];
      for (i = 0, len = a.length; i < len; i++) {
        value = a[i];
        if (indexOf.call(b, value) >= 0) {
          results.push(value);
        }
      }
      return results;
    };
    if (!clientOrServerError() && validContent()) {
      doc = createDocument(xhr.responseText);
      if (doc && !assetsChanged(doc)) {
        return doc;
      }
    }
  };

  extractTitleAndBody = function(doc) {
    var title;
    title = doc.querySelector('title');
    return [title != null ? title.textContent : void 0, removeNoscriptTags(doc.querySelector('body')), CSRFToken.get(doc).token, 'runScripts'];
  };

  CSRFToken = {
    get: function(doc) {
      var tag;
      if (doc == null) {
        doc = document;
      }
      return {
        node: tag = doc.querySelector('meta[name="csrf-token"]'),
        token: tag != null ? typeof tag.getAttribute === "function" ? tag.getAttribute('content') : void 0 : void 0
      };
    },
    update: function(latest) {
      var current;
      current = this.get();
      if ((current.token != null) && (latest != null) && current.token !== latest) {
        return current.node.setAttribute('content', latest);
      }
    }
  };

  createDocument = function(html) {
    var doc;
    doc = document.documentElement.cloneNode();
    doc.innerHTML = html;
    doc.head = doc.querySelector('head');
    doc.body = doc.querySelector('body');
    return doc;
  };

  ComponentUrl = (function() {
    function ComponentUrl(original1) {
      this.original = original1 != null ? original1 : document.location.href;
      if (this.original.constructor === ComponentUrl) {
        return this.original;
      }
      this._parse();
    }

    ComponentUrl.prototype.withoutHash = function() {
      return this.href.replace(this.hash, '').replace('#', '');
    };

    ComponentUrl.prototype.withoutHashForIE10compatibility = function() {
      return this.withoutHash();
    };

    ComponentUrl.prototype.hasNoHash = function() {
      return this.hash.length === 0;
    };

    ComponentUrl.prototype.crossOrigin = function() {
      return this.origin !== (new ComponentUrl).origin;
    };

    ComponentUrl.prototype._parse = function() {
      var ref;
      (this.link != null ? this.link : this.link = document.createElement('a')).href = this.original;
      ref = this.link, this.href = ref.href, this.protocol = ref.protocol, this.host = ref.host, this.hostname = ref.hostname, this.port = ref.port, this.pathname = ref.pathname, this.search = ref.search, this.hash = ref.hash;
      this.origin = [this.protocol, '//', this.hostname].join('');
      if (this.port.length !== 0) {
        this.origin += ":" + this.port;
      }
      this.relative = [this.pathname, this.search, this.hash].join('');
      return this.absolute = this.href;
    };

    return ComponentUrl;

  })();

  Link = (function(superClass) {
    extend(Link, superClass);

    Link.HTML_EXTENSIONS = ['html'];

    Link.allowExtensions = function() {
      var extension, extensions, i, len;
      extensions = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      for (i = 0, len = extensions.length; i < len; i++) {
        extension = extensions[i];
        Link.HTML_EXTENSIONS.push(extension);
      }
      return Link.HTML_EXTENSIONS;
    };

    function Link(link1) {
      this.link = link1;
      if (this.link.constructor === Link) {
        return this.link;
      }
      this.original = this.link.href;
      this.originalElement = this.link;
      this.link = this.link.cloneNode(false);
      Link.__super__.constructor.apply(this, arguments);
    }

    Link.prototype.shouldIgnore = function() {
      return this.crossOrigin() || this._anchored() || this._nonHtml() || this._optOut() || this._target();
    };

    Link.prototype._anchored = function() {
      return (this.hash.length > 0 || this.href.charAt(this.href.length - 1) === '#') && (this.withoutHash() === (new ComponentUrl).withoutHash());
    };

    Link.prototype._nonHtml = function() {
      return this.pathname.match(/\.[a-z]+$/g) && !this.pathname.match(new RegExp("\\.(?:" + (Link.HTML_EXTENSIONS.join('|')) + ")?$", 'g'));
    };

    Link.prototype._optOut = function() {
      var ignore, link;
      link = this.originalElement;
      while (!(ignore || link === document)) {
        ignore = link.getAttribute('data-no-turbolink') != null;
        link = link.parentNode;
      }
      return ignore;
    };

    Link.prototype._target = function() {
      return this.link.target.length !== 0;
    };

    return Link;

  })(ComponentUrl);

  Click = (function() {
    Click.installHandlerLast = function(event) {
      if (!event.defaultPrevented) {
        document.removeEventListener('click', Click.handle, false);
        return document.addEventListener('click', Click.handle, false);
      }
    };

    Click.handle = function(event) {
      return new Click(event);
    };

    function Click(event1) {
      this.event = event1;
      if (this.event.defaultPrevented) {
        return;
      }
      this._extractLink();
      if (this._validForTurbolinks()) {
        if (!pageChangePrevented(this.link.absolute)) {
          visit(this.link.href);
        }
        this.event.preventDefault();
      }
    }

    Click.prototype._extractLink = function() {
      var link;
      link = this.event.target;
      while (!(!link.parentNode || link.nodeName === 'A')) {
        link = link.parentNode;
      }
      if (link.nodeName === 'A' && link.href.length !== 0) {
        return this.link = new Link(link);
      }
    };

    Click.prototype._validForTurbolinks = function() {
      return (this.link != null) && !(this.link.shouldIgnore() || this._nonStandardClick());
    };

    Click.prototype._nonStandardClick = function() {
      return this.event.which > 1 || this.event.metaKey || this.event.ctrlKey || this.event.shiftKey || this.event.altKey;
    };

    return Click;

  })();

  ProgressBar = (function() {
    var className;

    className = 'turbolinks-progress-bar';

    function ProgressBar(elementSelector) {
      this.elementSelector = elementSelector;
      this._trickle = bind(this._trickle, this);
      this.value = 0;
      this.content = '';
      this.speed = 300;
      this.opacity = 0.99;
      this.install();
    }

    ProgressBar.prototype.install = function() {
      this.element = document.querySelector(this.elementSelector);
      this.element.classList.add(className);
      this.styleElement = document.createElement('style');
      document.head.appendChild(this.styleElement);
      return this._updateStyle();
    };

    ProgressBar.prototype.uninstall = function() {
      this.element.classList.remove(className);
      return document.head.removeChild(this.styleElement);
    };

    ProgressBar.prototype.start = function() {
      return this.advanceTo(5);
    };

    ProgressBar.prototype.advanceTo = function(value) {
      var ref;
      if ((value > (ref = this.value) && ref <= 100)) {
        this.value = value;
        this._updateStyle();
        if (this.value === 100) {
          return this._stopTrickle();
        } else if (this.value > 0) {
          return this._startTrickle();
        }
      }
    };

    ProgressBar.prototype.done = function() {
      if (this.value > 0) {
        this.advanceTo(100);
        return this._reset();
      }
    };

    ProgressBar.prototype._reset = function() {
      var originalOpacity;
      originalOpacity = this.opacity;
      setTimeout((function(_this) {
        return function() {
          _this.opacity = 0;
          return _this._updateStyle();
        };
      })(this), this.speed / 2);
      return setTimeout((function(_this) {
        return function() {
          _this.value = 0;
          _this.opacity = originalOpacity;
          return _this._withSpeed(0, function() {
            return _this._updateStyle(true);
          });
        };
      })(this), this.speed);
    };

    ProgressBar.prototype._startTrickle = function() {
      if (this.trickling) {
        return;
      }
      this.trickling = true;
      return setTimeout(this._trickle, this.speed);
    };

    ProgressBar.prototype._stopTrickle = function() {
      return delete this.trickling;
    };

    ProgressBar.prototype._trickle = function() {
      if (!this.trickling) {
        return;
      }
      this.advanceTo(this.value + Math.random() / 2);
      return setTimeout(this._trickle, this.speed);
    };

    ProgressBar.prototype._withSpeed = function(speed, fn) {
      var originalSpeed, result;
      originalSpeed = this.speed;
      this.speed = speed;
      result = fn();
      this.speed = originalSpeed;
      return result;
    };

    ProgressBar.prototype._updateStyle = function(forceRepaint) {
      if (forceRepaint == null) {
        forceRepaint = false;
      }
      if (forceRepaint) {
        this._changeContentToForceRepaint();
      }
      return this.styleElement.textContent = this._createCSSRule();
    };

    ProgressBar.prototype._changeContentToForceRepaint = function() {
      return this.content = this.content === '' ? ' ' : '';
    };

    ProgressBar.prototype._createCSSRule = function() {
      return this.elementSelector + "." + className + "::before {\n  content: '" + this.content + "';\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 2000;\n  background-color: #0076ff;\n  height: 3px;\n  opacity: " + this.opacity + ";\n  width: " + this.value + "%;\n  transition: width " + this.speed + "ms ease-out, opacity " + (this.speed / 2) + "ms ease-in;\n  transform: translate3d(0,0,0);\n}";
    };

    return ProgressBar;

  })();

  bypassOnLoadPopstate = function(fn) {
    return setTimeout(fn, 500);
  };

  installDocumentReadyPageEventTriggers = function() {
    return document.addEventListener('DOMContentLoaded', (function() {
      triggerEvent(EVENTS.CHANGE);
      return triggerEvent(EVENTS.UPDATE);
    }), true);
  };

  installJqueryAjaxSuccessPageUpdateTrigger = function() {
    if (typeof jQuery !== 'undefined') {
      return jQuery(document).on('ajaxSuccess', function(event, xhr, settings) {
        if (!jQuery.trim(xhr.responseText)) {
          return;
        }
        return triggerEvent(EVENTS.UPDATE);
      });
    }
  };

  installHistoryChangeHandler = function(event) {
    var cachedPage, ref;
    if ((ref = event.state) != null ? ref.turbolinks : void 0) {
      if (cachedPage = pageCache[(new ComponentUrl(event.state.url)).absolute]) {
        cacheCurrentPage();
        return fetchHistory(cachedPage);
      } else {
        return visit(event.target.location.href);
      }
    }
  };

  initializeTurbolinks = function() {
    rememberCurrentUrl();
    rememberCurrentState();
    document.addEventListener('click', Click.installHandlerLast, true);
    window.addEventListener('hashchange', function(event) {
      rememberCurrentUrl();
      return rememberCurrentState();
    }, false);
    return bypassOnLoadPopstate(function() {
      return window.addEventListener('popstate', installHistoryChangeHandler, false);
    });
  };

  historyStateIsDefined = window.history.state !== void 0 || navigator.userAgent.match(/Firefox\/2[6|7]/);

  browserSupportsPushState = window.history && window.history.pushState && window.history.replaceState && historyStateIsDefined;

  browserIsntBuggy = !navigator.userAgent.match(/CriOS\//);

  requestMethodIsSafe = (ref = popCookie('request_method')) === 'GET' || ref === '';

  browserSupportsTurbolinks = browserSupportsPushState && browserIsntBuggy && requestMethodIsSafe;

  browserSupportsCustomEvents = document.addEventListener && document.createEvent;

  if (browserSupportsCustomEvents) {
    installDocumentReadyPageEventTriggers();
    installJqueryAjaxSuccessPageUpdateTrigger();
  }

  if (browserSupportsTurbolinks) {
    visit = fetch;
    initializeTurbolinks();
  } else {
    visit = function(url) {
      return document.location.href = url;
    };
  }

  this.Turbolinks = {
    visit: visit,
    pagesCached: pagesCached,
    enableTransitionCache: enableTransitionCache,
    enableProgressBar: enableProgressBar,
    allowLinkExtensions: Link.allowExtensions,
    supported: browserSupportsTurbolinks,
    EVENTS: clone(EVENTS)
  };

}).call(this);
/*! Amaze UI v2.3.0 | by Amaze UI Team | (c) 2015 AllMobilize, Inc. | Licensed under MIT | 2015-04-08T06:04:29 UTC */

(function e(t, n, r) {
  function s(o, u) {
    if (!n[o]) {
      if (!t[o]) {
        var a = typeof require == "function" && require;
        if (!u && a) return a(o, !0);
        if (i) return i(o, !0);
        var f = new Error("Cannot find module '" + o + "'");
        throw f.code = "MODULE_NOT_FOUND", f
      }
      var l = n[o] = {
        exports: {}
      };
      t[o][0].call(l.exports, function(e) {
        var n = t[o][1][e];
        return s(n ? n : e)
      }, l, l.exports, e, t, n, r)
    }
    return n[o].exports
  }
  var i = typeof require == "function" && require;
  for (var o = 0; o < r.length; o++) s(r[o]);
  return s
})({
  1: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        require('./core');
        require('./ui.collapse');
        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = $.AMUI;

        function accordionInit() {
          var $accordion = $('[data-am-widget="accordion"]');
          var selector = {
            item: '.am-accordion-item',
            title: '.am-accordion-title',
            body: '.am-accordion-bd',
            disabled: '.am-disabled'
          };

          $accordion.each(function(i, item) {
            var options = UI.utils.parseOptions($(item).attr(
              'data-am-accordion'));
            var $title = $(item).find(selector.title);

            $title.on('click.accordion.amui', function() {
              var $collapse = $(this).next(selector.body);
              var $parent = $(this).parent(selector.item);
              var data = $collapse.data('amui.collapse');

              if ($parent.is(selector.disabled)) {
                return;
              }

              $parent.toggleClass('am-active');

              if (!data) {
                $collapse.collapse();
              } else {
                $collapse.collapse('toggle');
              }

              !options.multiple &&
                $(item).children('.am-active').
              not($parent).not(selector.disabled).removeClass(
                'am-active').
              find(selector.body + '.am-in').collapse('close');
            });
          });
        }

        // Init on DOM ready
        $(function() {
          accordionInit();
        });

        module.exports = $.AMUI.accordion = {
          VERSION: '2.1.0',
          init: accordionInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.collapse": 26
    }
  ],
  2: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);

        require('./core');
        require('./util.fastclick');
        require('./util.hammer');
        require('./amazeui');
        require('./amazeui.legacy');
        require('./ui.add2home');
        require('./ui.alert');
        require('./ui.button');
        require('./ui.collapse');
        require('./ui.datepicker');
        require('./ui.dimmer');
        require('./ui.dropdown');
        require('./ui.flexslider');
        require('./ui.iscroll-lite');
        require('./ui.modal');
        require('./ui.offcanvas');
        require('./ui.pinchzoom');
        require('./ui.popover');
        require('./ui.progress');
        require('./ui.pureview');
        require('./ui.scrollspy');
        require('./ui.scrollspynav');
        require('./ui.selected');
        require('./ui.share');
        require('./ui.smooth-scroll');
        require('./ui.sticky');
        require('./ui.tabs');
        require('./ui.ucheck');
        require('./ui.validator');
        require('./util.cookie');
        require('./util.fullscreen');
        require('./util.geolocation');
        require('./util.qrcode');
        require('./util.store');
        require('./accordion');
        require('./divider');
        require('./duoshuo');
        require('./figure');
        require('./footer');
        require('./gallery');
        require('./gotop');
        require('./header');
        require('./intro');
        require('./list_news');
        require('./map');
        require('./mechat');
        require('./menu');
        require('./navbar');
        require('./pagination');
        require('./paragraph');
        require('./slider');
        require('./tabs');
        require('./titlebar');
        require('./wechatpay');

        module.exports = $.AMUI;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./accordion": 1,
      "./amazeui": 2,
      "./amazeui.legacy": 3,
      "./core": 4,
      "./divider": 5,
      "./duoshuo": 6,
      "./figure": 7,
      "./footer": 8,
      "./gallery": 9,
      "./gotop": 10,
      "./header": 11,
      "./intro": 12,
      "./list_news": 13,
      "./map": 14,
      "./mechat": 15,
      "./menu": 16,
      "./navbar": 17,
      "./pagination": 18,
      "./paragraph": 19,
      "./slider": 20,
      "./tabs": 21,
      "./titlebar": 22,
      "./ui.add2home": 23,
      "./ui.alert": 24,
      "./ui.button": 25,
      "./ui.collapse": 26,
      "./ui.datepicker": 27,
      "./ui.dimmer": 28,
      "./ui.dropdown": 29,
      "./ui.flexslider": 30,
      "./ui.iscroll-lite": 31,
      "./ui.modal": 32,
      "./ui.offcanvas": 33,
      "./ui.pinchzoom": 34,
      "./ui.popover": 35,
      "./ui.progress": 36,
      "./ui.pureview": 37,
      "./ui.scrollspy": 38,
      "./ui.scrollspynav": 39,
      "./ui.selected": 40,
      "./ui.share": 41,
      "./ui.smooth-scroll": 42,
      "./ui.sticky": 43,
      "./ui.tabs": 44,
      "./ui.ucheck": 45,
      "./ui.validator": 46,
      "./util.cookie": 47,
      "./util.fastclick": 48,
      "./util.fullscreen": 49,
      "./util.geolocation": 50,
      "./util.hammer": 51,
      "./util.qrcode": 52,
      "./util.store": 53,
      "./wechatpay": 54
    }
  ],
  3: [
    function(require, module, exports) {
      (function(global) {
        // Amaze UI JavaScript for IE8

        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);

        require('./core');
        require('./ui.alert');
        require('./ui.button');
        require('./ui.collapse');
        require('./ui.dimmer');
        require('./ui.dropdown');
        require('./ui.flexslider');
        require('./ui.modal');
        require('./ui.offcanvas');
        require('./ui.popover');
        require('./ui.progress');
        require('./ui.scrollspynav');
        require('./ui.sticky');
        require('./util.cookie');

        module.exports = $.AMUI;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.alert": 24,
      "./ui.button": 25,
      "./ui.collapse": 26,
      "./ui.dimmer": 28,
      "./ui.dropdown": 29,
      "./ui.flexslider": 30,
      "./ui.modal": 32,
      "./ui.offcanvas": 33,
      "./ui.popover": 35,
      "./ui.progress": 36,
      "./ui.scrollspynav": 39,
      "./ui.sticky": 43,
      "./util.cookie": 47
    }
  ],
  4: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        /* jshint -W040 */

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);

        if (typeof $ === 'undefined') {
          throw new Error('Amaze UI 2.x requires jQuery :-(\n' +
            '\u7231\u4e0a\u4e00\u5339\u91ce\u9a6c\uff0c\u53ef\u4f60' +
            '\u7684\u5bb6\u91cc\u6ca1\u6709\u8349\u539f\u2026');
        }

        var UI = $.AMUI || {};
        var $win = $(window);
        var doc = window.document;
        var $html = $('html');

        UI.VERSION = '2.3.0';

        UI.support = {};

        UI.support.transition = (function() {
          var transitionEnd = (function() {
            // https://developer.mozilla.org/en-US/docs/Web/Events/transitionend#Browser_compatibility
            var element = doc.body || doc.documentElement;
            var transEndEventNames = {
              WebkitTransition: 'webkitTransitionEnd',
              MozTransition: 'transitionend',
              OTransition: 'oTransitionEnd otransitionend',
              transition: 'transitionend'
            };

            for (var name in transEndEventNames) {
              if (element.style[name] !== undefined) {
                return transEndEventNames[name];
              }
            }
          })();

          return transitionEnd && {
            end: transitionEnd
          };
        })();

        UI.support.animation = (function() {
          var animationEnd = (function() {
            var element = doc.body || doc.documentElement;
            var animEndEventNames = {
              WebkitAnimation: 'webkitAnimationEnd',
              MozAnimation: 'animationend',
              OAnimation: 'oAnimationEnd oanimationend',
              animation: 'animationend'
            };

            for (var name in animEndEventNames) {
              if (element.style[name] !== undefined) {
                return animEndEventNames[name];
              }
            }
          })();

          return animationEnd && {
            end: animationEnd
          };
        })();

        /* jshint -W069 */
        UI.support.touch = (
          ('ontouchstart' in window &&
            navigator.userAgent.toLowerCase().match(/mobile|tablet/)) ||
          (window.DocumentTouch && document instanceof window.DocumentTouch) ||
          (window.navigator['msPointerEnabled'] &&
            window.navigator['msMaxTouchPoints'] > 0) || //IE 10
          (window.navigator['pointerEnabled'] &&
            window.navigator['maxTouchPoints'] > 0) || //IE >=11
          false);

        // https://developer.mozilla.org/zh-CN/docs/DOM/MutationObserver
        UI.support.mutationobserver = (window.MutationObserver ||
          window.WebKitMutationObserver || null);

        // https://github.com/Modernizr/Modernizr/blob/924c7611c170ef2dc502582e5079507aff61e388/feature-detects/forms/validation.js#L20
        UI.support.formValidation = (typeof document.createElement('form').checkValidity ===
          'function');

        UI.utils = {};

        /**
         * Debounce function
         * @param {function} func  Function to be debounced
         * @param {number} wait Function execution threshold in milliseconds
         * @param {bool} immediate  Whether the function should be called at
         *                          the beginning of the delay instead of the
         *                          end. Default is false.
         * @desc Executes a function when it stops being invoked for n seconds
         * @via  _.debounce() http://underscorejs.org
         */
        UI.utils.debounce = function(func, wait, immediate) {
          var timeout;
          return function() {
            var context = this;
            var args = arguments;
            var later = function() {
              timeout = null;
              if (!immediate) {
                func.apply(context, args);
              }
            };
            var callNow = immediate && !timeout;

            clearTimeout(timeout);
            timeout = setTimeout(later, wait);

            if (callNow) {
              func.apply(context, args);
            }
          };
        };

        UI.utils.isInView = function(element, options) {
          var $element = $(element);
          var visible = !!($element.width() || $element.height()) &&
            $element.css('display') !== 'none';

          if (!visible) {
            return false;
          }

          var windowLeft = $win.scrollLeft();
          var windowTop = $win.scrollTop();
          var offset = $element.offset();
          var left = offset.left;
          var top = offset.top;

          options = $.extend({
            topOffset: 0,
            leftOffset: 0
          }, options);

          return (top + $element.height() >= windowTop &&
            top - options.topOffset <= windowTop + $win.height() &&
            left + $element.width() >= windowLeft &&
            left - options.leftOffset <= windowLeft + $win.width());
        };

        /* jshint -W054 */
        UI.utils.parseOptions = UI.utils.options = function(string) {
          if ($.isPlainObject(string)) {
            return string;
          }

          var start = (string ? string.indexOf('{') : -1);
          var options = {};

          if (start != -1) {
            try {
              options = (new Function('',
                'var json = ' + string.substr(start) +
                '; return JSON.parse(JSON.stringify(json));'))();
            } catch (e) {}
          }

          return options;
        };

        /* jshint +W054 */

        UI.utils.generateGUID = function(namespace) {
          var uid = namespace + '-' || 'am-';

          do {
            uid += Math.random().toString(36).substring(2, 7);
          } while (document.getElementById(uid));

          return uid;
        };

        // http://blog.alexmaccaw.com/css-transitions
        $.fn.emulateTransitionEnd = function(duration) {
          var called = false;
          var $el = this;

          $(this).one(UI.support.transition.end, function() {
            called = true;
          });

          var callback = function() {
            if (!called) {
              $($el).trigger(UI.support.transition.end);
            }
            $el.transitionEndTimmer = undefined;
          };
          this.transitionEndTimmer = setTimeout(callback, duration);
          return this;
        };

        $.fn.redraw = function() {
          $(this).each(function() {
            /* jshint unused:false */
            var redraw = this.offsetHeight;
          });
          return this;
        };

        /* jshint unused:true */

        $.fn.transitionEnd = function(callback) {
          var endEvent = UI.support.transition.end;
          var dom = this;

          function fireCallBack(e) {
            callback.call(this, e);
            endEvent && dom.off(endEvent, fireCallBack);
          }

          if (callback && endEvent) {
            dom.on(endEvent, fireCallBack);
          }

          return this;
        };

        $.fn.removeClassRegEx = function() {
          return this.each(function(regex) {
            var classes = $(this).attr('class');

            if (!classes || !regex) {
              return false;
            }

            var classArray = [];
            classes = classes.split(' ');

            for (var i = 0, len = classes.length; i < len; i++) {
              if (!classes[i].match(regex)) {
                classArray.push(classes[i]);
              }
            }

            $(this).attr('class', classArray.join(' '));
          });
        };

        //
        $.fn.alterClass = function(removals, additions) {
          var self = this;

          if (removals.indexOf('*') === -1) {
            // Use native jQuery methods if there is no wildcard matching
            self.removeClass(removals);
            return !additions ? self : self.addClass(additions);
          }

          var classPattern = new RegExp('\\s' +
            removals.replace(/\*/g, '[A-Za-z0-9-_]+').split(' ').join(
              '\\s|\\s') +
            '\\s', 'g');

          self.each(function(i, it) {
            var cn = ' ' + it.className + ' ';
            while (classPattern.test(cn)) {
              cn = cn.replace(classPattern, ' ');
            }
            it.className = $.trim(cn);
          });

          return !additions ? self : self.addClass(additions);
        };

        // handle multiple browsers for requestAnimationFrame()
        // http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
        // https://github.com/gnarf/jquery-requestAnimationFrame
        UI.utils.rAF = (function() {
          return window.requestAnimationFrame ||
            window.webkitRequestAnimationFrame ||
            window.mozRequestAnimationFrame ||
            window.oRequestAnimationFrame ||
            // if all else fails, use setTimeout
            function(callback) {
              return window.setTimeout(callback, 1000 / 60); // shoot for 60 fps
            };
        })();

        // handle multiple browsers for cancelAnimationFrame()
        UI.utils.cancelAF = (function() {
          return window.cancelAnimationFrame ||
            window.webkitCancelAnimationFrame ||
            window.mozCancelAnimationFrame ||
            window.oCancelAnimationFrame ||
            function(id) {
              window.clearTimeout(id);
            };
        })();

        // via http://davidwalsh.name/detect-scrollbar-width
        UI.utils.measureScrollbar = function() {
          if (document.body.clientWidth >= window.innerWidth) {
            return 0;
          }

          // if ($html.width() >= window.innerWidth) return;
          // var scrollbarWidth = window.innerWidth - $html.width();
          var $measure = $('<div ' +
            'style="width: 100px;height: 100px;overflow: scroll;' +
            'position: absolute;top: -9999px;"></div>');

          $(document.body).append($measure);

          var scrollbarWidth = $measure[0].offsetWidth - $measure[0].clientWidth;

          $measure.remove();

          return scrollbarWidth;
        };

        UI.utils.imageLoader = function($image, callback) {
          function loaded() {
            callback($image[0]);
          }

          function bindLoad() {
            this.one('load', loaded);
            if (/MSIE (\d+\.\d+);/.test(navigator.userAgent)) {
              var src = this.attr('src');
              var param = src.match(/\?/) ? '&' : '?';

              param += 'random=' + (new Date()).getTime();
              this.attr('src', src + param);
            }
          }

          if (!$image.attr('src')) {
            loaded();
            return;
          }

          if ($image[0].complete || $image[0].readyState === 4) {
            loaded();
          } else {
            bindLoad.call($image);
          }
        };

        /**
         * https://github.com/cho45/micro-template.js
         * (c) cho45 http://cho45.github.com/mit-license
         */
        /* jshint -W109 */
        UI.template = function(id, data) {
          var me = UI.template;

          if (!me.cache[id]) {
            me.cache[id] = (function() {
              var name = id;
              var string = /^[\w\-]+$/.test(id) ?
                me.get(id) : (name = 'template(string)', id); // no warnings

              var line = 1;
              var body = ('try { ' + (me.variable ?
                  'var ' + me.variable + ' = this.stash;' :
                  'with (this.stash) { ') +
                "this.ret += '" +
                string.replace(/<%/g, '\x11').replace(/%>/g, '\x13'). // if you want other tag, just edit this line
                replace(/'(?![^\x11\x13]+?\x13)/g, '\\x27').replace(
                  /^\s*|\s*$/g, '').replace(/\n/g, function() {
                  return "';\nthis.line = " + (++line) +
                    "; this.ret += '\\n";
                }).replace(/\x11-(.+?)\x13/g, "' + ($1) + '").replace(
                  /\x11=(.+?)\x13/g, "' + this.escapeHTML($1) + '").replace(
                  /\x11(.+?)\x13/g, "'; $1; this.ret += '") +
                "'; " + (me.variable ? "" : "}") + "return this.ret;" +
                "} catch (e) { throw 'TemplateError: ' + e + ' (on " +
                name +
                "' + ' line ' + this.line + ')'; } " +
                "//@ sourceURL=" + name + "\n" // source map
              ).replace(/this\.ret \+= '';/g, '');
              /* jshint -W054 */
              var func = new Function(body);
              var map = {
                '&': '&amp;',
                '<': '&lt;',
                '>': '&gt;',
                '\x22': '&#x22;',
                '\x27': '&#x27;'
              };
              var escapeHTML = function(string) {
                return ('' + string).replace(/[&<>\'\"]/g, function(_) {
                  return map[_];
                });
              };

              return function(stash) {
                return func.call(me.context = {
                  escapeHTML: escapeHTML,
                  line: 1,
                  ret: '',
                  stash: stash
                });
              };
            })();
          }

          return data ? me.cache[id](data) : me.cache[id];
        };
        /* jshint +W109 */
        /* jshint +W054 */

        UI.template.cache = {};

        UI.template.get = function(id) {
          if (id) {
            var element = document.getElementById(id);
            return element && element.innerHTML || '';
          }
        };

        // Dom mutation watchers
        UI.DOMWatchers = [];
        UI.DOMReady = false;
        UI.ready = function(callback) {
          UI.DOMWatchers.push(callback);
          if (UI.DOMReady) {
            // console.log('Ready call');
            callback(document);
          }
        };

        UI.DOMObserve = function(elements, options, callback) {
          var Observer = UI.support.mutationobserver;
          if (!Observer) {
            return;
          }

          options = $.isPlainObject(options) ?
            options : {
              childList: true,
              subtree: true
          };

          callback = typeof callback === 'function' && callback || function() {};

          $(elements).each(function() {
            var element = this;
            var $element = $(element);

            if ($element.data('am.observer')) {
              return;
            }

            try {
              var observer = new Observer(UI.utils.debounce(
                function(mutations, instance) {
                  callback.call(element, mutations, instance);
                  // trigger this event manually if MutationObserver not supported
                  $element.trigger('changed.dom.amui');
                }, 50));

              observer.observe(element, options);

              $element.data('am.observer', observer);
            } catch (e) {}
          });
        };

        $.fn.DOMObserve = function(options, callback) {
          return this.each(function() {
            UI.DOMObserve(this, options, callback);
          });
        };

        // Attach FastClick on touch devices
        if (UI.support.touch) {
          $html.addClass('am-touch');

          $(function() {
            var FastClick = UI.FastClick;
            if (FastClick) {
              // Fixes contenteditable elements don't editable on touch devices
              $('[contenteditable]').addClass('needsclick');

              FastClick.attach(document.body);
            }
          });
        }

        $(document).on('changed.dom.amui', function(e) {
          var element = e.target;

          // TODO: just call changed element's watcher
          //       every watcher callback should have a key
          //       use like this: <div data-am-observe='key1, key2'>
          //       get keys via $(element).data('amObserve')
          //       call functions store with these keys
          $.each(UI.DOMWatchers, function(i, watcher) {
            watcher(element);
          });
        });

        $(function() {
          var $body = $('body');

          UI.DOMReady = true;

          // Run default init
          $.each(UI.DOMWatchers, function(i, watcher) {
            watcher(document);
          });

          // watches DOM
          UI.DOMObserve('[data-am-observe]');

          $html.removeClass('no-js').addClass('js');

          UI.support.animation && $html.addClass('cssanimations');

          // iOS standalone mode
          if (window.navigator.standalone) {
            $html.addClass('am-standalone');
          }

          $('.am-topbar-fixed-top').length &&
            $body.addClass('am-with-topbar-fixed-top');

          $('.am-topbar-fixed-bottom').length &&
            $body.addClass('am-with-topbar-fixed-bottom');

          // Remove responsive classes in .am-layout
          var $layout = $('.am-layout');
          $layout.find('[class*="md-block-grid"]').alterClass(
            'md-block-grid-*');
          $layout.find('[class*="lg-block-grid"]').alterClass(
            'lg-block-grid');

          // widgets not in .am-layout
          $('[data-am-widget]').each(function() {
            var $widget = $(this);
            // console.log($widget.parents('.am-layout').length)
            if ($widget.parents('.am-layout').length === 0) {
              $widget.addClass('am-no-layout');
            }
          });
        });

        $.AMUI = UI;

        module.exports = UI;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {}
  ],
  5: [
    function(require, module, exports) {
      'use strict';

      module.exports = {
        VERSION: '2.0.1'
      };

    }, {}
  ],
  6: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');

        function duoshuoInit() {
          var $dsThread = $('.ds-thread');
          var dsShortName = $dsThread.parent('[data-am-widget="duoshuo"]').
          attr('data-ds-short-name');
          var dsSrc = (document.location.protocol == 'https:' ? 'https:' :
              'http:') +
            '//static.duoshuo.com/embed.js';

          if (!$dsThread.length || !dsShortName) {
            return;
          }

          window.duoshuoQuery = {
            short_name: dsShortName
          };

          // 已经有多说脚本
          if ($('script[src="' + dsSrc + '"]').length) {
            return;
          }

          var $dsJS = $('<script>', {
            async: true,
            type: 'text/javascript',
            src: dsSrc,
            charset: 'utf-8'
          });

          $('body').append($dsJS);
        }

        $(window).on('load', duoshuoInit);

        module.exports = $.AMUI.duoshuo = {
          VERSION: '2.0.1',
          init: duoshuoInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  7: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        require('./core');
        require('./ui.pureview');
        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = $.AMUI;

        /**
         * Is Images zoomable
         * @return {Boolean}
         */
        $.isImgZoomAble = function(element) {
          var t = new Image();
          t.src = element.src;

          var zoomAble = ($(element).width() < t.width);

          if (zoomAble) {
            $(element).closest('.am-figure').addClass('am-figure-zoomable');
          }

          return zoomAble;
        };

        function figureInit() {
          $('.am-figure').each(function(i, item) {
            var options = UI.utils.parseOptions($(item).attr(
              'data-am-figure'));
            var $item = $(item);
            var data;

            if (options.pureview) {
              if (options.pureview === 'auto') {
                var zoomAble = $.isImgZoomAble($item.find('img')[0]);
                zoomAble && $item.pureview();
              } else {
                $item.addClass('am-figure-zoomable').pureview();
              }
            }

            data = $item.data('amui.pureview');

            if (data) {
              $item.on('click', ':not(img)', function() {
                data.open(0);
              });
            }
          });
        }

        $(window).on('load', function() {
          figureInit();
        });

        module.exports = $.AMUI.figure = {
          VERSION: '2.0.3',
          init: figureInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.pureview": 37
    }
  ],
  8: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        require('./ui.modal');
        var addToHS = require('./ui.add2home');
        var cookie = require('./util.cookie');

        function footerInit() {
          // modal mode
          $('.am-footer-ysp').on('click', function() {
            $('#am-footer-modal').modal();
          });

          var options = UI.utils.parseOptions($('.am-footer').data(
            'amFooter'));
          options.addToHS && addToHS();

          // switch mode
          // switch to desktop
          $('[data-rel="desktop"]').on('click', function(e) {
            e.preventDefault();
            if (window.AMPlatform) { // front end
              window.AMPlatform.util.goDesktop();
            } else { // back end
              cookie.set('allmobilize', 'desktop', '', '/');
              window.location = window.location;
            }
          });
        }

        $(function() {
          footerInit();
        });

        module.exports = $.AMUI.footer = {
          VERSION: '3.1.2',
          init: footerInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.add2home": 23,
      "./ui.modal": 32,
      "./util.cookie": 47
    }
  ],
  9: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');
        require('./ui.pureview');
        var UI = $.AMUI;

        function galleryInit() {
          var $gallery = $('[data-am-widget="gallery"]');

          $gallery.each(function() {
            var options = UI.utils.parseOptions($(this).attr(
              'data-am-gallery'));

            if (options.pureview) {
              (typeof options.pureview === 'object') ?
                $(this).pureview(options.pureview) : $(this).pureview();
            }
          });
        }

        $(function() {
          galleryInit();
        });

        module.exports = $.AMUI.gallery = {
          VERSION: '3.0.0',
          init: galleryInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.pureview": 37
    }
  ],
  10: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');
        require('./ui.smooth-scroll');

        function goTopInit() {
          var $goTop = $('[data-am-widget="gotop"]');
          var $fixed = $goTop.filter('.am-gotop-fixed');
          var $win = $(window);

          $goTop.find('a').on('click', function(e) {
            e.preventDefault();
            $win.smoothScroll();
          });

          function checkPosition() {
            $fixed[($win.scrollTop() > 50 ? 'add' : 'remove') + 'Class'](
              'am-active');
          }

          checkPosition();

          $win.on('scroll.gotop.amui', $.AMUI.utils.debounce(checkPosition,
            100));
        }

        $(function() {
          goTopInit();
        });

        module.exports = $.AMUI.gotop = {
          VERSION: '4.0.2',
          init: goTopInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.smooth-scroll": 42
    }
  ],
  11: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');

        function headerInit() {
          $('[data-am-widget="header"]').each(function() {
            if ($(this).hasClass('am-header-fixed')) {
              $('body').addClass('am-with-fixed-header');
              return false;
            }
          });
        }

        $(function() {
          headerInit();
        });

        module.exports = $.AMUI.header = {
          VERSION: '2.0.0',
          init: headerInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  12: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');

        module.exports = $.AMUI.intro = {
          VERSION: '4.0.2'
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  13: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');

        module.exports = $.AMUI.listNews = {
          VERSION: '4.0.0',
          init: function() {}
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  14: [
    function(require, module, exports) {
      (function(global) {
        /* jshint strict: false, maxlen: 200 */
        /* global BMap */

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');

        function addMapApi(callback) {
          var $mapApi0 = $('<script />', {
            id: 'am-map-api-0'
          });

          $('body').append($mapApi0);

          $mapApi0.on('load', function() {
            console.log('load');
            var $mapApi1 = $('<script/>', {
              id: 'am-map-api-1'
            });

            $('body').append($mapApi1);

            $mapApi1.on('load', function() {
              var script = document.createElement('script');
              script.textContent = '(' + callback.toString() + ')();';
              $('body')[0].appendChild(script);
            }).attr('src', 'http://api.map.baidu.com/getscript' +
              '?type=quick&file=feature' +
              '&ak=WVAXZ05oyNRXS5egLImmentg&t=20140109092002');
          }).attr('src', 'http://api.map.baidu.com/getscript' +
            '?type=quick&file=api&ak=WVAXZ05oyNRXS5egLImmentg&t=20140109092002'
          );

          // jQuery 中 `load` 事件触发有问题，动态设置 src 属性才会触发 `load` 事件
          // $mapApi0 = $('<script />', {src: 'xxx'}); 这样的写法在 Zepto.js 中则没有问题
        }

        function addBdMap() {
          // 如果使用 $ 选择符，minify 以后会报错: $ is undefined
          // 即使传入 $ 也无效，改为使用原生方法
          // 这个函数作为 callback 会插入到 body 以后才执行，应该是 $ 引用错误导致
          var content = document.querySelector('.am-map');
          var defaultLng = 116.331398; // 经度默认值
          var defaultLat = 39.897445; // 纬度默认值
          var name = content.getAttribute('data-name');
          var address = content.getAttribute('data-address');
          var lng = content.getAttribute('data-longitude') || defaultLng;
          var lat = content.getAttribute('data-latitude') || defaultLat;
          var setZoom = content.getAttribute('data-setZoom') || 17;
          var icon = content.getAttribute('data-icon');

          var map = new BMap.Map('bd-map');

          // 实例化一个地理坐标点
          var point = new BMap.Point(lng, lat);

          // 设初始化地图, options: 3-18
          map.centerAndZoom(point, setZoom);

          // 添加地图缩放控件
          if (content.getAttribute('data-zoomControl')) {
            map.addControl(new BMap.ZoomControl());
          }

          // 添加比例尺控件
          if (content.getAttribute('data-scaleControl')) {
            map.addControl(new BMap.ScaleControl());
          }

          // 创建标准与自定义 icon
          var marker = new BMap.Marker(point);
          if (icon) {
            marker.setIcon(new BMap.Icon(icon, new BMap.Size(40, 40)));
          }

          var opts = {
            width: 200, // 信息窗口宽度
            // height: 'auto',     // 信息窗口高度
            title: name // 信息窗口标题
          };

          // 创建信息窗口对象
          var infoWindow = new BMap.InfoWindow('地址：' + address, opts);

          // 创建地址解析器实例
          var myGeo = new BMap.Geocoder();

          // 判断有没有使用经纬度
          if (lng == defaultLng && lat == defaultLat) {
            // 使用地址反解析来设置地图
            // 将地址解析结果显示在地图上,并调整地图视野
            myGeo.getPoint(address, function(point) {
              if (point) {
                map.centerAndZoom(point, setZoom);
                marker.setPosition(point);
                map.addOverlay(marker);
                map.openInfoWindow(infoWindow, point); // 开启信息窗口
              }
            }, '');

          } else {
            // 使用经纬度来设置地图
            myGeo.getLocation(point, function(result) {
              map.centerAndZoom(point, setZoom);
              marker.setPosition(point);
              map.addOverlay(marker);
              if (address) {
                map.openInfoWindow(infoWindow, point); // 开启信息窗口
              } else {
                map.openInfoWindow(new BMap.InfoWindow(address, opts),
                  point); // 开启信息窗口
              }
            });
          }
        }

        var mapInit = function() {
          $('.am-map').length && addMapApi(addBdMap);
        };

        $(document).on('ready', mapInit);

        module.exports = $.AMUI.map = {
          VERSION: '2.0.2',
          init: mapInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  15: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');

        function mechatInit() {
          if (!$('#mechat').length) {
            return;
          }

          var $mechat = $('[data-am-widget="mechat"]');
          var unitid = $mechat.data('am-mechat-unitid');
          var $mechatData = $('<script>', {
            charset: 'utf-8',
            src: 'http://mechatim.com/js/unit/button.js?id=' + unitid
          });

          $('body').append($mechatData);
        }

        // Lazy load
        $(window).on('load', mechatInit);

        module.exports = $.AMUI.mechat = {
          VERSION: '2.0.1',
          init: mechatInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  16: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');
        require('./ui.offcanvas');
        require('./ui.collapse');
        var IScroll = require('./ui.iscroll-lite');

        var menuInit = function() {
          var $menus = $('[data-am-widget="menu"]');

          $menus.find('.am-menu-nav .am-parent > a').on('click', function(
            e) {
            e.preventDefault();
            var $clicked = $(this);
            var $parent = $clicked.parent();
            var $subMenu = $clicked.next('.am-menu-sub');

            $parent.toggleClass('am-open');
            $subMenu.collapse('toggle');
            $parent.siblings('.am-parent').removeClass('am-open')
              .children('.am-menu-sub.am-in').collapse('close');
          });

          // Dropdown/slideDown menu
          $menus.
          filter('[data-am-menu-collapse]').
          find('> .am-menu-toggle').
          on('click', function(e) {
            e.preventDefault();
            var $this = $(this);
            var $nav = $this.next('.am-menu-nav');

            $this.toggleClass('am-active');

            $nav.collapse('toggle');
          });

          // OffCanvas menu
          $menus.
          filter('[data-am-menu-offcanvas]').
          find('> .am-menu-toggle').
          on('click', function(e) {
            e.preventDefault();
            var $this = $(this);
            var $nav = $this.next('.am-offcanvas');

            $this.toggleClass('am-active');

            $nav.offCanvas('open');
          });

          // Close offCanvas when link clicked
          var autoCloseOffCanvas =
            '.am-offcanvas[data-dismiss-on="click"]';
          var $autoCloseOffCanvas = $(autoCloseOffCanvas);

          $autoCloseOffCanvas.find('a').not('.am-parent>a').on('click',
            function(e) {
              $(this).parents(autoCloseOffCanvas).offCanvas('close');
            });

          // one theme
          $menus.filter('.am-menu-one').each(function(index) {
            var $this = $(this);
            var $wrap = $('<div class="am-menu-nav-sub-wrap"></div>');
            var allWidth = 0;
            var $nav = $this.find('.am-menu-nav');
            var $navTopItem = $nav.children('li');
            var prevIndex;

            $navTopItem.filter('.am-parent').each(function(index) {
              $(this).attr('data-rel', '#am-menu-sub-' + index);
              $(this).
              find('.am-menu-sub').
              attr('id', 'am-menu-sub-' + index).
              appendTo($wrap);
            });

            $this.append($wrap);

            $nav.wrap('<div class="am-menu-nav-wrap" id="am-menu-' +
              index + '">');

            // $navTopItem.eq(0).addClass('am-active');

            // 计算出所有 li 宽度
            $navTopItem.each(function(i) {
              allWidth += parseFloat($(this).css('width'));
            });

            $nav.width(allWidth);

            var menuScroll = new IScroll('#am-menu-' + index, {
              eventPassthrough: true,
              scrollX: true,
              scrollY: false,
              preventDefault: false
            });

            $navTopItem.on('click', function() {
              var $clicked = $(this);
              $clicked.addClass('am-active').siblings().removeClass(
                'am-active');

              $wrap.find('.am-menu-sub.am-in').collapse('close');

              if ($clicked.is('.am-parent')) {
                !$clicked.hasClass('.am-open') &&
                  $wrap.find($clicked.attr('data-rel')).collapse(
                    'open');
              } else {
                $clicked.siblings().removeClass('am-open');
              }

              // 第一次调用，没有prevIndex
              if (prevIndex === undefined) {
                prevIndex = $(this).index() ? 0 : 1;
              }

              // 判断方向
              var dir = $(this).index() > prevIndex;
              var target = $(this)[dir ? 'next' : 'prev']();

              // 点击的按钮，显示一半
              var offset = target.offset() || $(this).offset();
              var within = $this.offset();

              // 父类左边距
              var listOffset;
              var parentLeft = parseInt($this.css('padding-left'));

              if (dir ? offset.left + offset.width > within.left +
                within.width :
                offset.left < within.left) {
                listOffset = $nav.offset();
                menuScroll.scrollTo(dir ?
                  within.width - offset.left + listOffset.left -
                  offset.width - parentLeft :
                  listOffset.left - offset.left, 0, 400);
              }

              prevIndex = $(this).index();

            });

            $this.on('touchmove', function(event) {
              event.preventDefault();
            });
          });
        };

        $(function() {
          menuInit();
        });

        module.exports = $.AMUI.menu = {
          VERSION: '4.0.3',
          init: menuInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.collapse": 26,
      "./ui.iscroll-lite": 31,
      "./ui.offcanvas": 33
    }
  ],
  17: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');
        require('./ui.modal');
        var share = require('./ui.share');
        var QRCode = require('./util.qrcode');
        var UI = $.AMUI;

        function navbarInit() {
          var $navBar = $('[data-am-widget="navbar"]');

          if (!$navBar.length) {
            return;
          }

          var $win = $(window);
          var $body = $('body');
          var $navBarNav = $navBar.find('.am-navbar-nav');
          var $navItems = $navBar.find('li');
          var navItemsCounter = $navItems.length;
          var configItems = $navBarNav.attr('class') &&
            parseInt($navBarNav.attr('class').match(/am-avg-sm-(\d+)/)[1]) ||
            3;
          var navMinWidth = 60; // 每个 li 最小宽度
          var offsetWidth = 16;
          var $share = $navItems.filter('[data-am-navbar-share]');
          var $qrcode = $navItems.filter('[data-am-navbar-qrcode]');
          var activeStatus = 'am-active';
          var $moreActions = $('<ul class="am-navbar-actions"></ul>', {
            id: UI.utils.generateGUID('am-navbar-actions')
          });
          var $moreLink = $('<li class="am-navbar-labels am-navbar-more">' +
            '<a href="javascript: void(0);">' +
            '<span class="am-icon-angle-up"></span>' +
            '<span class="am-navbar-label">更多</span></a></li>');

          // 如果有 Fix 的工具栏则设置 body 的 padding-bottom
          if ($navBar.css('position') == 'fixed') {
            $body.addClass('am-with-fixed-navbar');
          }

          if ($qrcode.length) {
            var qrId = 'am-navbar-qrcode';
            $qrModal = $('#' + qrId);

            if (!$qrModal.length) {
              var qrImg = $qrcode.attr('data-am-navbar-qrcode');
              var $qrModal = $(
                '<div class="am-modal am-modal-no-btn" id="">' +
                '<div class="am-modal-dialog">' +
                '<div class="am-modal-bd"></div></div>' +
                '</div>', {
                  id: qrId
                });
              var $qrContainer = $qrModal.find('.am-modal-bd');

              // 判断上传自定义的二维码没有，否则生成二维码
              if (qrImg) {
                $qrContainer.html('<img src="' + qrImg + '"/>');
              } else {
                var qrnode = new QRCode({
                  render: 'canvas',
                  correctLevel: 0,
                  text: window.location.href,
                  width: 200,
                  height: 200,
                  background: '#fff',
                  foreground: '#000'
                });
                $qrContainer.html(qrnode);
              }

              $body.append($qrModal);
            }

            $qrcode.on('click', function(e) {
              e.preventDefault();
              $qrModal.modal();
            });
          }

          if (navItemsCounter > configItems && navItemsCounter >
            calcSuiteItems()) {
            initActions();
          }

          // console.log('NavItems: %d, config: %d, best: %d',
          //    navItemsCounter, configItems, calcSuiteItems());

          function initActions() {
            $navBarNav.append($moreLink);

            $navBarNav.
            find('li').
            not('.am-navbar-more').
            slice(calcSuiteItems() - 1).
            appendTo($moreActions);

            // Append more actions
            $navBar.append($moreActions);
          }

          function checkNavBarItems() {
            if (calcSuiteItems() >= navItemsCounter) {
              // 显示所有链接，隐藏 more
              $moreLink.hide();
              $moreActions.find('li').insertBefore($moreLink);
              return;
            }

            !$navBar.find('.am-navbar-actions').length && initActions();

            $moreLink.show();

            if ($navBarNav.find('li').length < calcSuiteItems()) {
              $moreActions.find('li').
              slice(0, calcSuiteItems() - $navBarNav.find('li').length).
              insertBefore($moreLink);
            } else if ($navBarNav.find('li').length > calcSuiteItems()) {
              if ($moreActions.find('li').length) {
                $navBarNav.find('li').not($moreLink).slice(calcSuiteItems() -
                  1).
                insertBefore($moreActions.find('li').first());
              } else {
                $navBarNav.find('li').not($moreLink).slice(calcSuiteItems() -
                  1).
                appendTo($moreActions);
              }
            }
          }

          /**
           * 计算最适合显示的条目个数
           * @returns {number}
           */
          function calcSuiteItems() {
            return Math.floor(($win.width() - offsetWidth) / navMinWidth);
          }

          $navBar.on('click.navbar.amui', '.am-navbar-more', function(e) {
            e.preventDefault();

            $moreLink[$moreActions.hasClass(activeStatus) ?
              'removeClass' : 'addClass'](activeStatus);

            $moreActions.toggleClass(activeStatus);
          });

          if ($share.length) {
            $share.on('click.navbar.amui', function(e) {
              e.preventDefault();
              share.toggle();
            });
          }

          $win.on('resize.navbar.amui orientationchange.navbar.amui',
            UI.utils.debounce(checkNavBarItems, 150));
        }

        // DOMContent ready
        $(function() {
          navbarInit();
        });

        module.exports = $.AMUI.navbar = {
          VERSION: '2.0.2',
          init: navbarInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.modal": 32,
      "./ui.share": 41,
      "./util.qrcode": 52
    }
  ],
  18: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');

        module.exports = $.AMUI.pagination = {
          VERSION: '3.0.1'
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  19: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');
        require('./ui.pureview');
        var IScroll = require('./ui.iscroll-lite');
        var UI = $.AMUI;

        /**
         * 表格滚动
         * @param index ID 标识，多个 paragraph 里面多个 table
         */
        $.fn.scrollTable = function(index) {
          var $this = $(this);
          var $parent;

          $this.wrap('<div class="am-paragraph-table-container" ' +
            'id="am-paragraph-table-' + index + '">' +
            '<div class="am-paragraph-table-scroller"></div></div>');

          $parent = $this.parent();
          $parent.width($this.width());
          $parent.height($this.height());

          new IScroll('#am-paragraph-table-' + index, {
            eventPassthrough: true,
            scrollX: true,
            scrollY: false,
            preventDefault: false
          });
        };

        function paragraphInit() {
          var $paragraph = $('[data-am-widget="paragraph"]');

          $paragraph.each(function(index) {
            var $this = $(this);
            var options = UI.utils.parseOptions($this.attr(
              'data-am-paragraph'));
            var $index = index;

            if (options.pureview) {
              $this.pureview();
            }

            if (options.tableScrollable) {
              $this.find('table').each(function(index) {
                if ($(this).width() > $(window).width()) {
                  $(this).scrollTable($index + '-' + index);
                }
              });
            }
          });
        }

        $(window).on('load', function() {
          paragraphInit();
        });

        module.exports = $.AMUI.paragraph = {
          VERSION: '2.0.1',
          init: paragraphInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.iscroll-lite": 31,
      "./ui.pureview": 37
    }
  ],
  20: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');
        require('./ui.flexslider');
        var UI = $.AMUI;

        function sliderInit() {
          var $sliders = $('[data-am-widget="slider"]');
          $sliders.not('.am-slider-manual').each(function(i, item) {
            var options = UI.utils.parseOptions($(item).attr(
              'data-am-slider'));
            $(item).flexslider(options);
          });
        }

        $(document).on('ready', sliderInit);

        module.exports = $.AMUI.slider = {
          VERSION: '3.0.1',
          init: sliderInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.flexslider": 30
    }
  ],
  21: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');
        require('./ui.tabs');

        function tabsInit() {
          $('[data-am-widget="tabs"]').each(function() {
            var options = $(this).data('amTabsNoswipe') ? {
              noSwipe: 1
            } : {};
            $(this).tabs(options);
          });
        }

        $(function() {
          tabsInit();
        });

        module.exports = $.AMUI.tab = {
          VERSION: '4.0.1',
          init: tabsInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.tabs": 44
    }
  ],
  22: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');

        module.exports = $.AMUI.titlebar = {
          VERSION: '4.0.1'
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  23: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');

        /* jshint -W101, -W106 */
        /* Add to Homescreen v3.0.8 ~ (c) 2014 Matteo Spinelli ~ @license: http://cubiq.org/license */

        // Check if document is loaded, needed by autostart
        var _DOMReady = false;
        if (document.readyState === 'complete') {
          _DOMReady = true;
        } else {
          window.addEventListener('load', loaded, false);
        }

        function loaded() {
          window.removeEventListener('load', loaded, false);
          _DOMReady = true;
        }

        // regex used to detect if app has been added to the homescreen
        var _reSmartURL = /\/ath(\/)?$/;
        var _reQueryString = /([\?&]ath=[^&]*$|&ath=[^&]*(&))/;

        // singleton
        var _instance;

        function ath(options) {
          _instance = _instance || new ath.Class(options);

          return _instance;
        }

        // message in all supported languages
        ath.intl = {
          en_us: {
            message: 'To add this web app to the home screen: tap %icon and then <strong>%action</strong>.',
            action: {
              ios: 'Add to Home Screen',
              android: 'Add to homescreen',
              windows: 'pin to start'
            }
          },

          zh_cn: {
            message: '如要把应用程式加至主屏幕,请点击%icon, 然后<strong>%action</strong>',
            action: {
              ios: '加至主屏幕',
              android: '加至主屏幕',
              windows: '按住启动'
            }
          },

          zh_tw: {
            message: '如要把應用程式加至主屏幕, 請點擊%icon, 然後<strong>%action</strong>.',
            action: {
              ios: '加至主屏幕',
              android: '加至主屏幕',
              windows: '按住啟動'
            }
          }
        };

        // Add 2 characters language support (Android mostly)
        for (var lang in ath.intl) {
          ath.intl[lang.substr(0, 2)] = ath.intl[lang];
        }

        // default options
        ath.defaults = {
          appID: 'org.cubiq.addtohome', // local storage name (no need to change)
          fontSize: 15, // base font size, used to properly resize the popup based on viewport scale factor
          debug: false, // override browser checks
          modal: false, // prevent further actions until the message is closed
          mandatory: false, // you can't proceed if you don't add the app to the homescreen
          autostart: true, // show the message automatically
          skipFirstVisit: false, // show only to returning visitors (ie: skip the first time you visit)
          startDelay: 1, // display the message after that many seconds from page load
          lifespan: 15, // life of the message in seconds
          displayPace: 1440, // minutes before the message is shown again (0: display every time, default 24 hours)
          maxDisplayCount: 0, // absolute maximum number of times the message will be shown to the user (0: no limit)
          icon: true, // add touch icon to the message
          message: '', // the message can be customized
          validLocation: [], // list of pages where the message will be shown (array of regexes)
          onInit: null, // executed on instance creation
          onShow: null, // executed when the message is shown
          onRemove: null, // executed when the message is removed
          onAdd: null, // when the application is launched the first time from the homescreen (guesstimate)
          onPrivate: null, // executed if user is in private mode
          detectHomescreen: false // try to detect if the site has been added to the homescreen (false | true | 'hash' | 'queryString' | 'smartURL')
        };

        // browser info and capability
        var _ua = window.navigator.userAgent;

        var _nav = window.navigator;
        _extend(ath, {
          hasToken: document.location.hash == '#ath' || _reSmartURL.test(
            document.location.href) || _reQueryString.test(document.location
            .search),
          isRetina: window.devicePixelRatio && window.devicePixelRatio >
            1,
          isIDevice: (/iphone|ipod|ipad/i).test(_ua),
          isMobileChrome: _ua.indexOf('Android') > -1 && (
            /Chrome\/[.0-9]*/).test(_ua),
          isMobileIE: _ua.indexOf('Windows Phone') > -1,
          language: _nav.language && _nav.language.toLowerCase().replace(
            '-', '_') || ''
        });

        // falls back to en_us if language is unsupported
        ath.language = ath.language && ath.language in ath.intl ? ath.language :
          'en_us';

        ath.isMobileSafari = ath.isIDevice && _ua.indexOf('Safari') > -1 &&
          _ua.indexOf('CriOS') < 0;
        ath.OS = ath.isIDevice ? 'ios' : ath.isMobileChrome ? 'android' :
          ath.isMobileIE ? 'windows' : 'unsupported';

        ath.OSVersion = _ua.match(/(OS|Android) (\d+[_\.]\d+)/);
        ath.OSVersion = ath.OSVersion && ath.OSVersion[2] ? +ath.OSVersion[
          2].replace('_', '.') : 0;

        ath.isStandalone = window.navigator.standalone || (ath.isMobileChrome &&
          (screen.height - document.documentElement.clientHeight < 40)); // TODO: check the lame polyfill
        ath.isTablet = (ath.isMobileSafari && _ua.indexOf('iPad') > -1) ||
          (ath.isMobileChrome && _ua.indexOf('Mobile') < 0);

        ath.isCompatible = (ath.isMobileSafari && ath.OSVersion >= 6) ||
          ath.isMobileChrome; // TODO: add winphone

        var _defaultSession = {
          lastDisplayTime: 0, // last time we displayed the message
          returningVisitor: false, // is this the first time you visit
          displayCount: 0, // number of times the message has been shown
          optedout: false, // has the user opted out
          added: false // has been actually added to the homescreen
        };

        ath.removeSession = function(appID) {
          try {
            localStorage.removeItem(appID || ath.defaults.appID);
          } catch (e) {
            // we are most likely in private mode
          }
        };

        ath.Class = function(options) {
          // merge default options with user config
          this.options = _extend({}, ath.defaults);
          _extend(this.options, options);

          // normalize some options
          this.options.mandatory = this.options.mandatory && ('standalone' in
            window.navigator || this.options.debug);
          this.options.modal = this.options.modal || this.options.mandatory;
          if (this.options.mandatory) {
            this.options.startDelay = -0.5; // make the popup hasty
          }
          this.options.detectHomescreen = this.options.detectHomescreen ===
            true ? 'hash' : this.options.detectHomescreen;

          // setup the debug environment
          if (this.options.debug) {
            ath.isCompatible = true;
            ath.OS = typeof this.options.debug == 'string' ? this.options.debug :
              ath.OS == 'unsupported' ? 'android' : ath.OS;
            ath.OSVersion = ath.OS == 'ios' ? '8' : '4';
          }

          // the element the message will be appended to
          this.container = document.documentElement;

          // load session
          this.session = localStorage.getItem(this.options.appID);
          this.session = this.session ? JSON.parse(this.session) :
            undefined;

          // user most likely came from a direct link containing our token, we don't need it and we remove it
          if (ath.hasToken && (!ath.isCompatible || !this.session)) {
            ath.hasToken = false;
            _removeToken();
          }

          // the device is not supported
          if (!ath.isCompatible) {
            return;
          }

          this.session = this.session || _defaultSession;

          // check if we can use the local storage
          try {
            localStorage.setItem(this.options.appID, JSON.stringify(this.session));
            ath.hasLocalStorage = true;
          } catch (e) {
            // we are most likely in private mode
            ath.hasLocalStorage = false;

            if (this.options.onPrivate) {
              this.options.onPrivate.call(this);
            }
          }

          // check if this is a valid location
          var isValidLocation = !this.options.validLocation.length;
          for (var i = this.options.validLocation.length; i--;) {
            if (this.options.validLocation[i].test(document.location.href)) {
              isValidLocation = true;
              break;
            }
          }

          // check compatibility with old versions of add to homescreen. Opt-out if an old session is found
          if (localStorage.getItem('addToHome')) {
            this.optOut();
          }

          // critical errors:
          // user opted out, already added to the homescreen, not a valid location
          if (this.session.optedout || this.session.added || !
            isValidLocation) {
            return;
          }

          // check if the app is in stand alone mode
          if (ath.isStandalone) {
            // execute the onAdd event if we haven't already
            if (!this.session.added) {
              this.session.added = true;
              this.updateSession();

              if (this.options.onAdd && ath.hasLocalStorage) { // double check on localstorage to avoid multiple calls to the custom event
                this.options.onAdd.call(this);
              }
            }

            return;
          }

          // (try to) check if the page has been added to the homescreen
          if (this.options.detectHomescreen) {
            // the URL has the token, we are likely coming from the homescreen
            if (ath.hasToken) {
              _removeToken(); // we don't actually need the token anymore, we remove it to prevent redistribution

              // this is called the first time the user opens the app from the homescreen
              if (!this.session.added) {
                this.session.added = true;
                this.updateSession();

                if (this.options.onAdd && ath.hasLocalStorage) { // double check on localstorage to avoid multiple calls to the custom event
                  this.options.onAdd.call(this);
                }
              }

              return;
            }

            // URL doesn't have the token, so add it
            if (this.options.detectHomescreen == 'hash') {
              history.replaceState('', window.document.title, document.location
                .href + '#ath');
            } else if (this.options.detectHomescreen == 'smartURL') {
              history.replaceState('', window.document.title, document.location
                .href.replace(/(\/)?$/, '/ath$1'));
            } else {
              history.replaceState('', window.document.title, document.location
                .href + (document.location.search ? '&' : '?') + 'ath=');
            }
          }

          // check if this is a returning visitor
          if (!this.session.returningVisitor) {
            this.session.returningVisitor = true;
            this.updateSession();

            // we do not show the message if this is your first visit
            if (this.options.skipFirstVisit) {
              return;
            }
          }

          // we do no show the message in private mode
          if (!ath.hasLocalStorage) {
            return;
          }

          // all checks passed, ready to display
          this.ready = true;

          if (this.options.onInit) {
            this.options.onInit.call(this);
          }

          if (this.options.autostart) {
            this.show();
          }
        };

        ath.Class.prototype = {
          // event type to method conversion
          events: {
            load: '_delayedShow',
            error: '_delayedShow',
            orientationchange: 'resize',
            resize: 'resize',
            scroll: 'resize',
            click: 'remove',
            touchmove: '_preventDefault',
            transitionend: '_removeElements',
            webkitTransitionEnd: '_removeElements',
            MSTransitionEnd: '_removeElements'
          },

          handleEvent: function(e) {
            var type = this.events[e.type];
            if (type) {
              this[type](e);
            }
          },

          show: function(force) {
            // in autostart mode wait for the document to be ready
            if (this.options.autostart && !_DOMReady) {
              setTimeout(this.show.bind(this), 50);
              return;
            }

            // message already on screen
            if (this.shown) {
              return;
            }

            var now = Date.now();
            var lastDisplayTime = this.session.lastDisplayTime;

            if (force !== true) {
              // this is needed if autostart is disabled and you programmatically call the show() method
              if (!this.ready) {
                return;
              }

              // we obey the display pace (prevent the message to popup too often)
              if (now - lastDisplayTime < this.options.displayPace * 60000) {
                return;
              }

              // obey the maximum number of display count
              if (this.options.maxDisplayCount && this.session.displayCount >=
                this.options.maxDisplayCount) {
                return;
              }
            }

            this.shown = true;

            // increment the display count
            this.session.lastDisplayTime = now;
            this.session.displayCount++;
            this.updateSession();

            // try to get the highest resolution application icon
            if (!this.applicationIcon) {
              if (ath.OS == 'ios') {
                this.applicationIcon = document.querySelector(
                  'head link[rel^=apple-touch-icon][sizes="152x152"],head link[rel^=apple-touch-icon][sizes="144x144"],head link[rel^=apple-touch-icon][sizes="120x120"],head link[rel^=apple-touch-icon][sizes="114x114"],head link[rel^=apple-touch-icon]'
                );
              } else {
                this.applicationIcon = document.querySelector(
                  'head link[rel^="shortcut icon"][sizes="196x196"],head link[rel^=apple-touch-icon]'
                );
              }
            }

            var message = '';

            if (this.options.message in ath.intl) { // you can force the locale
              message = ath.intl[this.options.message].message.replace(
                '%action', ath.intl[this.options.message].action[ath.OS]);
            } else if (this.options.message !== '') { // or use a custom message
              message = this.options.message;
            } else { // otherwise we use our message
              message = ath.intl[ath.language].message.replace('%action',
                ath.intl[ath.language].action[ath.OS]);
            }

            // add the action icon
            message = '<p>' + message.replace('%icon',
              '<span class="ath-action-icon">icon</span>') + '</p>';

            // create the message container
            this.viewport = document.createElement('div');
            this.viewport.className = 'ath-viewport';
            if (this.options.modal) {
              this.viewport.className += ' ath-modal';
            }
            if (this.options.mandatory) {
              this.viewport.className += ' ath-mandatory';
            }
            this.viewport.style.position = 'absolute';

            // create the actual message element
            this.element = document.createElement('div');
            this.element.className = 'ath-container ath-' + ath.OS +
              ' ath-' + ath.OS + (ath.OSVersion + '').substr(0, 1) +
              ' ath-' + (ath.isTablet ? 'tablet' : 'phone');
            this.element.style.cssText =
              '-webkit-transition-property:-webkit-transform,opacity;-webkit-transition-duration:0;-webkit-transform:translate3d(0,0,0);transition-property:transform,opacity;transition-duration:0;transform:translate3d(0,0,0);-webkit-transition-timing-function:ease-out';
            this.element.style.webkitTransform = 'translate3d(0,-' + window
              .innerHeight + 'px,0)';
            this.element.style.webkitTransitionDuration = '0s';

            // add the application icon
            if (this.options.icon && this.applicationIcon) {
              this.element.className += ' ath-icon';
              this.img = document.createElement('img');
              this.img.className = 'ath-application-icon';
              this.img.addEventListener('load', this, false);
              this.img.addEventListener('error', this, false);

              this.img.src = this.applicationIcon.href;
              this.element.appendChild(this.img);
            }

            this.element.innerHTML += message;

            // we are not ready to show, place the message out of sight
            this.viewport.style.left = '-99999em';

            // attach all elements to the DOM
            this.viewport.appendChild(this.element);
            this.container.appendChild(this.viewport);

            // if we don't have to wait for an image to load, show the message right away
            if (!this.img) {
              this._delayedShow();
            }
          },

          _delayedShow: function(e) {
            setTimeout(this._show.bind(this), this.options.startDelay *
              1000 + 500);
          },

          _show: function() {
            var that = this;

            // update the viewport size and orientation
            this.updateViewport();

            // reposition/resize the message on orientation change
            window.addEventListener('resize', this, false);
            window.addEventListener('scroll', this, false);
            window.addEventListener('orientationchange', this, false);

            if (this.options.modal) {
              // lock any other interaction
              document.addEventListener('touchmove', this, true);
            }

            // Enable closing after 1 second
            if (!this.options.mandatory) {
              setTimeout(function() {
                that.element.addEventListener('click', that, true);
              }, 1000);
            }

            // kick the animation
            setTimeout(function() {
              that.element.style.webkitTransform = 'translate3d(0,0,0)';
              that.element.style.webkitTransitionDuration = '1.2s';
            }, 0);

            // set the destroy timer
            if (this.options.lifespan) {
              this.removeTimer = setTimeout(this.remove.bind(this), this.options
                .lifespan * 1000);
            }

            // fire the custom onShow event
            if (this.options.onShow) {
              this.options.onShow.call(this);
            }
          },

          remove: function() {
            clearTimeout(this.removeTimer);

            // clear up the event listeners
            if (this.img) {
              this.img.removeEventListener('load', this, false);
              this.img.removeEventListener('error', this, false);
            }

            window.removeEventListener('resize', this, false);
            window.removeEventListener('scroll', this, false);
            window.removeEventListener('orientationchange', this, false);
            document.removeEventListener('touchmove', this, true);
            this.element.removeEventListener('click', this, true);

            // remove the message element on transition end
            this.element.addEventListener('transitionend', this, false);
            this.element.addEventListener('webkitTransitionEnd', this,
              false);
            this.element.addEventListener('MSTransitionEnd', this, false);

            // start the fade out animation
            this.element.style.webkitTransitionDuration = '0.3s';
            this.element.style.opacity = '0';
          },

          _removeElements: function() {
            this.element.removeEventListener('transitionend', this, false);
            this.element.removeEventListener('webkitTransitionEnd', this,
              false);
            this.element.removeEventListener('MSTransitionEnd', this, false);

            // remove the message from the DOM
            this.container.removeChild(this.viewport);

            this.shown = false;

            // fire the custom onRemove event
            if (this.options.onRemove) {
              this.options.onRemove.call(this);
            }
          },

          updateViewport: function() {
            if (!this.shown) {
              return;
            }

            this.viewport.style.width = window.innerWidth + 'px';
            this.viewport.style.height = window.innerHeight + 'px';
            this.viewport.style.left = window.scrollX + 'px';
            this.viewport.style.top = window.scrollY + 'px';

            var clientWidth = document.documentElement.clientWidth;

            this.orientation = clientWidth > document.documentElement.clientHeight ?
              'landscape' : 'portrait';

            var screenWidth = ath.OS == 'ios' ? this.orientation ==
              'portrait' ? screen.width : screen.height : screen.width;
            this.scale = screen.width > clientWidth ? 1 : screenWidth /
              window.innerWidth;

            this.element.style.fontSize = this.options.fontSize / this.scale +
              'px';
          },

          resize: function() {
            clearTimeout(this.resizeTimer);
            this.resizeTimer = setTimeout(this.updateViewport.bind(this),
              100);
          },

          updateSession: function() {
            if (ath.hasLocalStorage === false) {
              return;
            }

            localStorage.setItem(this.options.appID, JSON.stringify(this.session));
          },

          clearSession: function() {
            this.session = _defaultSession;
            this.updateSession();
          },

          optOut: function() {
            this.session.optedout = true;
            this.updateSession();
          },

          optIn: function() {
            this.session.optedout = false;
            this.updateSession();
          },

          clearDisplayCount: function() {
            this.session.displayCount = 0;
            this.updateSession();
          },

          _preventDefault: function(e) {
            e.preventDefault();
            e.stopPropagation();
          }
        };

        // utility
        function _extend(target, obj) {
          for (var i in obj) {
            target[i] = obj[i];
          }

          return target;
        }

        function _removeToken() {
          if (document.location.hash == '#ath') {
            history.replaceState('', window.document.title, document.location
              .href.split('#')[0]);
          }

          if (_reSmartURL.test(document.location.href)) {
            history.replaceState('', window.document.title, document.location
              .href.replace(_reSmartURL, '$1'));
          }

          if (_reQueryString.test(document.location.search)) {
            history.replaceState('', window.document.title, document.location
              .href.replace(_reQueryString, '$2'));
          }
        }

        /* jshint +W101, +W106 */

        $.AMUI.addToHomescreen = ath;

        module.exports = ath;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  24: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        /**
         * @via https://github.com/Minwe/bootstrap/blob/master/js/alert.js
         * @copyright Copyright 2013 Twitter, Inc.
         * @license Apache 2.0
         */

        // Alert Class
        // NOTE: removeElement option is unavailable now
        var Alert = function(element, options) {
          var _this = this;
          this.options = $.extend({}, Alert.DEFAULTS, options);
          this.$element = $(element);

          this.$element.
          addClass('am-fade am-in').
          on('click.alert.amui', '.am-close', function() {
            _this.close.call(this);
          });
        };

        Alert.DEFAULTS = {
          removeElement: true
        };

        Alert.prototype.close = function() {
          var $this = $(this);
          var $target = $this.hasClass('am-alert') ?
            $this :
            $this.parent('.am-alert');

          $target.trigger('close.alert.amui');

          $target.removeClass('am-in');

          function processAlert() {
            $target.trigger('closed.alert.amui').remove();
          }

          UI.support.transition && $target.hasClass('am-fade') ?
            $target.
          one(UI.support.transition.end, processAlert).
          emulateTransitionEnd(200) : processAlert();
        };

        // Alert Plugin
        $.fn.alert = function(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.alert');
            var options = typeof option == 'object' && option;

            if (!data) {
              $this.data('amui.alert', (data = new Alert(this, options || {})));
            }

            if (typeof option == 'string') {
              data[option].call($this);
            }
          });
        };

        // Init code
        $(document).on('click.alert.amui.data-api', '[data-am-alert]',
          function(e) {
            var $target = $(e.target);
            $(this).addClass('am-fade am-in');
            $target.is('.am-close') && $(this).alert('close');
          });

        $.AMUI.alert = Alert;

        module.exports = Alert;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  25: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        /**
         * @via https://github.com/twbs/bootstrap/blob/master/js/button.js
         * @copyright (c) 2011-2014 Twitter, Inc
         * @license The MIT License
         */

        var Button = function(element, options) {
          this.$element = $(element);
          this.options = $.extend({}, Button.DEFAULTS, options);
          this.isLoading = false;
          this.hasSpinner = false;
        };

        Button.DEFAULTS = {
          loadingText: 'loading...',
          className: {
            loading: 'am-btn-loading',
            disabled: 'am-disabled'
          },
          spinner: undefined
        };

        Button.prototype.setState = function(state) {
          var disabled = 'disabled';
          var $element = this.$element;
          var options = this.options;
          var val = $element.is('input') ? 'val' : 'html';
          var loadingClassName = options.className.disabled + ' ' +
            options.className.loading;

          state = state + 'Text';

          if (!options.resetText) {
            options.resetText = $element[val]();
          }

          // add spinner for element with html()
          if (UI.support.animation && options.spinner &&
            val === 'html' && !this.hasSpinner) {
            options.loadingText = '<span class="am-icon-' +
              options.spinner +
              ' am-icon-spin"></span>' + options.loadingText;

            this.hasSpinner = true;
          }

          $element[val](options[state]);

          // push to event loop to allow forms to submit
          setTimeout($.proxy(function() {
            if (state == 'loadingText') {
              $element.addClass(loadingClassName).attr(disabled,
                disabled);
              this.isLoading = true;
            } else if (this.isLoading) {
              $element.removeClass(loadingClassName).removeAttr(
                disabled);
              this.isLoading = false;
            }
          }, this), 0);
        };

        Button.prototype.toggle = function() {
          var changed = true;
          var $element = this.$element;
          var $parent = this.$element.parent('.am-btn-group');

          if ($parent.length) {
            var $input = this.$element.find('input');

            if ($input.prop('type') == 'radio') {
              if ($input.prop('checked') && $element.hasClass('am-active')) {
                changed = false;
              } else {
                $parent.find('.am-active').removeClass('am-active');
              }
            }

            if (changed) {
              $input.prop('checked', !$element.hasClass('am-active')).trigger(
                'change');
            }
          }

          if (changed) {
            $element.toggleClass('am-active');
            if (!$element.hasClass('am-active')) {
              $element.blur();
            }
          }
        };

        // Button plugin
        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.button');
            var options = typeof option == 'object' && option || {};

            if (!data) {
              $this.data('amui.button', (data = new Button(this,
                options)));
            }

            if (option == 'toggle') {
              data.toggle();
            } else if (typeof option == 'string') {
              data.setState(option);
            }
          });
        }

        $.fn.button = Plugin;

        // Init code
        $(document).on('click.button.amui.data-api', '[data-am-button]',
          function(e) {
            var $btn = $(e.target);

            if (!$btn.hasClass('am-btn')) {
              $btn = $btn.closest('.am-btn');
            }

            Plugin.call($btn, 'toggle');
            e.preventDefault();
          });

        UI.ready(function(context) {
          $('[data-am-loading]', context).each(function() {
            $(this).button(UI.utils.parseOptions($(this).data(
              'amLoading')));
          });
        });

        $.AMUI.button = Button;

        module.exports = Button;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  26: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        /**
         * @via https://github.com/twbs/bootstrap/blob/master/js/collapse.js
         * @copyright (c) 2011-2014 Twitter, Inc
         * @license The MIT License
         */

        var Collapse = function(element, options) {
          this.$element = $(element);
          this.options = $.extend({}, Collapse.DEFAULTS, options);
          this.transitioning = null;

          if (this.options.parent) {
            this.$parent = $(this.options.parent);
          }

          if (this.options.toggle) {
            this.toggle();
          }
        };

        Collapse.DEFAULTS = {
          toggle: true
        };

        Collapse.prototype.open = function() {
          if (this.transitioning || this.$element.hasClass('am-in')) {
            return;
          }

          var startEvent = $.Event('open.collapse.amui');
          this.$element.trigger(startEvent);

          if (startEvent.isDefaultPrevented()) {
            return;
          }

          var actives = this.$parent && this.$parent.find(
            '> .am-panel > .am-in');

          if (actives && actives.length) {
            var hasData = actives.data('amui.collapse');

            if (hasData && hasData.transitioning) {
              return;
            }

            Plugin.call(actives, 'close');

            hasData || actives.data('amui.collapse', null);
          }

          this.$element
            .removeClass('am-collapse')
            .addClass('am-collapsing').height(0);

          this.transitioning = 1;

          var complete = function() {
            this.$element.
            removeClass('am-collapsing').
            addClass('am-collapse am-in').
            height('');
            this.transitioning = 0;
            this.$element.trigger('opened.collapse.amui');
          };

          if (!UI.support.transition) {
            return complete.call(this);
          }

          var scrollHeight = this.$element[0].scrollHeight;

          this.$element
            .one(UI.support.transition.end, $.proxy(complete, this))
            .emulateTransitionEnd(300).
          css({
            height: scrollHeight
          }); // 当折叠的容器有 padding 时，如果用 height() 只能设置内容的宽度
        };

        Collapse.prototype.close = function() {
          if (this.transitioning || !this.$element.hasClass('am-in')) {
            return;
          }

          var startEvent = $.Event('close.collapse.amui');
          this.$element.trigger(startEvent);

          if (startEvent.isDefaultPrevented()) {
            return;
          }

          this.$element.height(this.$element.height()).redraw();

          this.$element.addClass('am-collapsing').
          removeClass('am-collapse am-in');

          this.transitioning = 1;

          var complete = function() {
            this.transitioning = 0;
            this.$element.trigger('closed.collapse.amui').
            removeClass('am-collapsing').
            addClass('am-collapse');
            // css({height: '0'});
          };

          if (!UI.support.transition) {
            return complete.call(this);
          }

          this.$element.height(0)
            .one(UI.support.transition.end, $.proxy(complete, this))
            .emulateTransitionEnd(300);
        };

        Collapse.prototype.toggle = function() {
          this[this.$element.hasClass('am-in') ? 'close' : 'open']();
        };

        // Collapse Plugin
        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.collapse');
            var options = $.extend({}, Collapse.DEFAULTS,
              UI.utils.options($this.attr('data-am-collapse')),
              typeof option == 'object' && option);

            if (!data && options.toggle && option == 'open') {
              option = !option;
            }
            if (!data) {
              $this.data('amui.collapse', (data = new Collapse(this,
                options)));
            }
            if (typeof option == 'string') {
              data[option]();
            }
          });
        }

        $.fn.collapse = Plugin;

        // Init code
        $(document).on('click.collapse.amui.data-api', '[data-am-collapse]',
          function(e) {
            var href;
            var $this = $(this);
            var options = UI.utils.options($this.attr('data-am-collapse'));
            var target = options.target ||
              e.preventDefault() ||
              (href = $this.attr('href')) &&
              href.replace(/.*(?=#[^\s]+$)/, '');
            var $target = $(target);
            var data = $target.data('amui.collapse');
            var option = data ? 'toggle' : options;
            var parent = options.parent;
            var $parent = parent && $(parent);

            if (!data || !data.transitioning) {
              if ($parent) {
                // '[data-am-collapse*="{parent: \'' + parent + '"]
                $parent.find('[data-am-collapse]').not($this).addClass(
                  'am-collapsed');
              }

              $this[$target.hasClass('am-in') ? 'addClass' :
                'removeClass']('am-collapsed');
            }

            Plugin.call($target, option);
          });

        $.AMUI.collapse = Collapse;

        module.exports = Collapse;

        // TODO: 更好的 target 选择方式
        //       折叠的容器必须没有 border/padding 才能正常处理，否则动画会有一些小问题
        //       寻找更好的未知高度 transition 动画解决方案，max-height 之类的就算了

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  27: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var $doc = $(document);

        /**
         * bootstrap-datepicker.js
         * @via http://www.eyecon.ro/bootstrap-datepicker
         * @license http://www.apache.org/licenses/LICENSE-2.0
         */
        var Datepicker = function(element, options) {
          this.$element = $(element);
          this.options = $.extend({}, Datepicker.DEFAULTS, options);
          this.format = DPGlobal.parseFormat(this.options.format);

          this.$element.data('date', this.options.date);
          this.language = this.getLocale(this.options.locale);
          this.theme = this.options.theme;
          this.$picker = $(DPGlobal.template).appendTo('body').on({
            click: $.proxy(this.click, this)
            // mousedown: $.proxy(this.mousedown, this)
          });

          this.isInput = this.$element.is('input');
          this.component = this.$element.is('.am-datepicker-date') ?
            this.$element.find('.am-datepicker-add-on') : false;

          if (this.isInput) {
            this.$element.on({
              'click.datepicker.amui': $.proxy(this.open, this),
              // blur: $.proxy(this.close, this),
              'keyup.datepicker.amui': $.proxy(this.update, this)
            });
          } else {
            if (this.component) {
              this.component.on('click.datepicker.amui', $.proxy(this.open,
                this));
            } else {
              this.$element.on('click.datepicker.amui', $.proxy(this.open,
                this));
            }
          }

          this.minViewMode = this.options.minViewMode;

          if (typeof this.minViewMode === 'string') {
            switch (this.minViewMode) {
              case 'months':
                this.minViewMode = 1;
                break;
              case 'years':
                this.minViewMode = 2;
                break;
              default:
                this.minViewMode = 0;
                break;
            }
          }

          this.viewMode = this.options.viewMode;

          if (typeof this.viewMode === 'string') {
            switch (this.viewMode) {
              case 'months':
                this.viewMode = 1;
                break;
              case 'years':
                this.viewMode = 2;
                break;
              default:
                this.viewMode = 0;
                break;
            }
          }

          this.startViewMode = this.viewMode;
          this.weekStart = ((this.options.weekStart ||
            Datepicker.locales[this.language].weekStart || 0) % 7);
          this.weekEnd = ((this.weekStart + 6) % 7);
          this.onRender = this.options.onRender;

          this.setTheme();
          this.fillDow();
          this.fillMonths();
          this.update();
          this.showMode();
        };

        Datepicker.DEFAULTS = {
          locale: 'zh_CN',
          format: 'yyyy-mm-dd',
          weekStart: undefined,
          viewMode: 0,
          minViewMode: 0,
          date: '',
          theme: '',
          autoClose: 1,
          onRender: function(date) {
            return '';
          }
        };

        Datepicker.prototype.open = function(e) {
          this.$picker.show();
          this.height = this.component ?
            this.component.outerHeight() : this.$element.outerHeight();

          this.place();
          $(window).on('resize.datepicker.amui', $.proxy(this.place, this));
          if (e) {
            e.stopPropagation();
            e.preventDefault();
          }
          var that = this;
          $doc.on('mousedown.datapicker.amui touchstart.datepicker.amui',
            function(ev) {
              if ($(ev.target).closest('.am-datepicker').length === 0) {
                that.close();
              }
            });
          this.$element.trigger({
            type: 'open.datepicker.amui',
            date: this.date
          });
        };

        Datepicker.prototype.close = function() {
          this.$picker.hide();
          $(window).off('resize.datepicker.amui', this.place);
          this.viewMode = this.startViewMode;
          this.showMode();
          if (!this.isInput) {
            $(document).off(
              'mousedown.datapicker.amui touchstart.datepicker.amui', this.close
            );
          }
          // this.set();
          this.$element.trigger({
            type: 'close.datepicker.amui',
            date: this.date
          });
        };

        Datepicker.prototype.set = function() {
          var formated = DPGlobal.formatDate(this.date, this.format);
          if (!this.isInput) {
            if (this.component) {
              this.$element.find('input').prop('value', formated);
            }
            this.$element.data('date', formated);
          } else {
            this.$element.prop('value', formated);
          }
        };

        Datepicker.prototype.setValue = function(newDate) {
          if (typeof newDate === 'string') {
            this.date = DPGlobal.parseDate(newDate, this.format);
          } else {
            this.date = new Date(newDate);
          }
          this.set();

          this.viewDate = new Date(this.date.getFullYear(),
            this.date.getMonth(), 1, 0, 0, 0, 0);

          this.fill();
        };

        Datepicker.prototype.place = function() {
          var offset = this.component ?
            this.component.offset() : this.$element.offset();
          var $width = this.component ?
            this.component.width() : this.$element.width();
          var top = offset.top + this.height;
          var left = offset.left;
          var right = $doc.width() - offset.left - $width;
          var isOutView = this.isOutView();
          this.$picker.removeClass('am-datepicker-right');
          this.$picker.removeClass('am-datepicker-up');
          if ($doc.width() > 640) {
            if (isOutView.outRight) {
              this.$picker.addClass('am-datepicker-right');
              this.$picker.css({
                top: top,
                left: 'auto',
                right: right
              });
              return;
            }
            if (isOutView.outBottom) {
              this.$picker.addClass('am-datepicker-up');
              top = offset.top - this.$picker.outerHeight(true);
            }
          } else {
            left = 0;
          }
          this.$picker.css({
            top: top,
            left: left
          });
        };

        Datepicker.prototype.update = function(newDate) {
          this.date = DPGlobal.parseDate(
            typeof newDate === 'string' ? newDate : (this.isInput ?
              this.$element.prop('value') : this.$element.data('date')),
            this.format
          );
          this.viewDate = new Date(this.date.getFullYear(),
            this.date.getMonth(), 1, 0, 0, 0, 0);
          this.fill();
        };

        // Days of week
        Datepicker.prototype.fillDow = function() {
          var dowCount = this.weekStart;
          var html = '<tr>';
          while (dowCount < this.weekStart + 7) {
            // NOTE: do % then add 1
            html += '<th class="am-datepicker-dow">' +
              Datepicker.locales[this.language].daysMin[(dowCount++) % 7] +
              '</th>';
          }
          html += '</tr>';

          this.$picker.find('.am-datepicker-days thead').append(html);
        };

        Datepicker.prototype.fillMonths = function() {
          var html = '';
          var i = 0;
          while (i < 12) {
            html += '<span class="am-datepicker-month">' +
              Datepicker.locales[this.language].monthsShort[i++] +
              '</span>';
          }
          this.$picker.find('.am-datepicker-months td').append(html);
        };

        Datepicker.prototype.fill = function() {
          var d = new Date(this.viewDate);
          var year = d.getFullYear();
          var month = d.getMonth();
          var currentDate = this.date.valueOf();

          var prevMonth = new Date(year, month - 1, 28, 0, 0, 0, 0);
          var day = DPGlobal
            .getDaysInMonth(prevMonth.getFullYear(), prevMonth.getMonth());

          var daysSelect = this.$picker
            .find('.am-datepicker-days .am-datepicker-select');

          if (this.language === 'zh_CN') {
            daysSelect.text(year + Datepicker.locales[this.language].year[0] +
              ' ' + Datepicker.locales[this.language].months[month]);
          } else {
            daysSelect.text(Datepicker.locales[this.language].months[month] +
              ' ' + year);
          }

          prevMonth.setDate(day);
          prevMonth.setDate(day - (prevMonth.getDay() - this.weekStart + 7) %
            7);

          var nextMonth = new Date(prevMonth);
          nextMonth.setDate(nextMonth.getDate() + 42);
          nextMonth = nextMonth.valueOf();
          var html = [];

          var className;
          var prevY;
          var prevM;

          while (prevMonth.valueOf() < nextMonth) {
            if (prevMonth.getDay() === this.weekStart) {
              html.push('<tr>');
            }
            className = this.onRender(prevMonth);
            prevY = prevMonth.getFullYear();
            prevM = prevMonth.getMonth();
            if ((prevM < month && prevY === year) || prevY < year) {
              className += ' am-datepicker-old';
            } else if ((prevM > month && prevY === year) || prevY > year) {
              className += ' am-datepicker-new';
            }
            if (prevMonth.valueOf() === currentDate) {
              className += ' am-active';
            }
            html.push('<td class="am-datepicker-day ' +
              className + '">' + prevMonth.getDate() + '</td>');

            if (prevMonth.getDay() === this.weekEnd) {
              html.push('</tr>');
            }
            prevMonth.setDate(prevMonth.getDate() + 1);
          }

          this.$picker.find('.am-datepicker-days tbody')
            .empty().append(html.join(''));

          var currentYear = this.date.getFullYear();
          var months = this.$picker.find('.am-datepicker-months')
            .find('.am-datepicker-select')
            .text(year);
          months = months.end()
            .find('span').removeClass('am-active').removeClass(
              'am-disabled');

          var monthLen = 0;

          while (monthLen < 12) {
            if (this.onRender(d.setFullYear(year, monthLen))) {
              months.eq(monthLen).addClass('am-disabled');
            }
            monthLen++;
          }

          if (currentYear === year) {
            months.eq(this.date.getMonth())
              .removeClass('am-disabled')
              .addClass('am-active');
          }

          html = '';
          year = parseInt(year / 10, 10) * 10;
          var yearCont = this.$picker
            .find('.am-datepicker-years')
            .find('.am-datepicker-select')
            .text(year + '-' + (year + 9))
            .end()
            .find('td');

          var yearClassName;
          year -= 1;
          for (var i = -1; i < 11; i++) {
            yearClassName = this.onRender(d.setFullYear(year));
            html += '<span class="' + yearClassName + '' +
              (i === -1 || i === 10 ? ' am-datepicker-old' : '') +
              (currentYear === year ? ' am-active' : '') + '">' + year +
              '</span>';
            year += 1;
          }
          yearCont.html(html);
        };

        Datepicker.prototype.click = function(event) {
          event.stopPropagation();
          event.preventDefault();
          var month;
          var year;
          var $dayActive = this.$picker.find('.am-datepicker-days').find(
            '.am-active');
          var $months = this.$picker.find('.am-datepicker-months');
          var $monthIndex = $months.find('.am-active').index();

          var $target = $(event.target).closest('span, td, th');
          if ($target.length === 1) {
            switch ($target[0].nodeName.toLowerCase()) {
              case 'th':
                switch ($target[0].className) {
                  case 'am-datepicker-switch':
                    this.showMode(1);
                    break;
                  case 'am-datepicker-prev':
                  case 'am-datepicker-next':
                    this.viewDate['set' + DPGlobal.modes[this.viewMode].navFnc]
                      .call(
                        this.viewDate,
                        this.viewDate['get' + DPGlobal.modes[this.viewMode]
                          .navFnc]
                        .call(this.viewDate) +
                        DPGlobal.modes[this.viewMode].navStep *
                        ($target[0].className === 'am-datepicker-prev' ? -1 :
                          1)
                    );
                    this.fill();
                    this.set();
                    break;
                }
                break;
              case 'span':
                if ($target.is('.am-disabled')) {
                  return
                }

                if ($target.is('.am-datepicker-month')) {
                  month = $target.parent().find('span').index($target);

                  if ($target.is('.am-active')) {
                    this.viewDate.setMonth(month, $dayActive.text());
                  } else {
                    this.viewDate.setMonth(month);
                  }

                } else {
                  year = parseInt($target.text(), 10) || 0;
                  if ($target.is('.am-active')) {
                    this.viewDate.setFullYear(year, $monthIndex, $dayActive
                      .text());
                  } else {
                    this.viewDate.setFullYear(year);
                  }

                }

                if (this.viewMode !== 0) {
                  this.date = new Date(this.viewDate);
                  this.$element.trigger({
                    type: 'changeDate.datepicker.amui',
                    date: this.date,
                    viewMode: DPGlobal.modes[this.viewMode].clsName
                  });
                }

                this.showMode(-1);
                this.fill();
                this.set();
                break;
              case 'td':
                if ($target.is('.am-datepicker-day') && !$target.is(
                  '.am-disabled')) {
                  var day = parseInt($target.text(), 10) || 1;
                  month = this.viewDate.getMonth();
                  if ($target.is('.am-datepicker-old')) {
                    month -= 1;
                  } else if ($target.is('.am-datepicker-new')) {
                    month += 1;
                  }
                  year = this.viewDate.getFullYear();
                  this.date = new Date(year, month, day, 0, 0, 0, 0);
                  this.viewDate = new Date(year, month, Math.min(28, day),
                    0, 0, 0, 0);
                  this.fill();
                  this.set();
                  this.$element.trigger({
                    type: 'changeDate.datepicker.amui',
                    date: this.date,
                    viewMode: DPGlobal.modes[this.viewMode].clsName
                  });

                  this.options.autoClose && this.close();
                }
                break;
            }
          }
        };

        Datepicker.prototype.mousedown = function(event) {
          event.stopPropagation();
          event.preventDefault();
        };

        Datepicker.prototype.showMode = function(dir) {
          if (dir) {
            this.viewMode = Math.max(this.minViewMode,
              Math.min(2, this.viewMode + dir));
          }

          this.$picker.find('>div').hide().
          filter('.am-datepicker-' + DPGlobal.modes[this.viewMode].clsName)
            .show();
        };

        Datepicker.prototype.isOutView = function() {
          var offset = this.component ?
            this.component.offset() : this.$element.offset();
          var isOutView = {
            outRight: false,
            outBottom: false
          };
          var $picker = this.$picker;
          var width = offset.left + $picker.outerWidth(true);
          var height = offset.top + $picker.outerHeight(true) +
            this.$element.innerHeight();

          if (width > $doc.width()) {
            isOutView.outRight = true;
          }
          if (height > $doc.height()) {
            isOutView.outBottom = true;
          }
          return isOutView;
        };

        Datepicker.prototype.getLocale = function(locale) {
          if (!locale) {
            locale = navigator.language && navigator.language.split('-');
            locale[1] = locale[1].toUpperCase();
            locale = locale.join('_');
          }

          if (!Datepicker.locales[locale]) {
            locale = 'en_US';
          }
          return locale;
        };

        Datepicker.prototype.setTheme = function() {
          if (this.theme) {
            this.$picker.addClass('am-datepicker-' + this.theme);
          }
        };

        // Datepicker locales
        Datepicker.locales = {
          en_US: {
            days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday',
              'Friday', 'Saturday'
            ],
            daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            daysMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
            months: ['January', 'February', 'March', 'April', 'May', 'June',
              'July', 'August', 'September', 'October', 'November',
              'December'
            ],
            monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
              'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'
            ],
            weekStart: 0
          },
          zh_CN: {
            days: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],
            daysShort: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],
            daysMin: ['日', '一', '二', '三', '四', '五', '六'],
            months: ['一月', '二月', '三月', '四月', '五月', '六月', '七月',
              '八月', '九月', '十月', '十一月', '十二月'
            ],
            monthsShort: ['一月', '二月', '三月', '四月', '五月', '六月',
              '七月', '八月', '九月', '十月', '十一月', '十二月'
            ],
            weekStart: 1,
            year: ['年']
          }
        };

        var DPGlobal = {
          modes: [{
            clsName: 'days',
            navFnc: 'Month',
            navStep: 1
          }, {
            clsName: 'months',
            navFnc: 'FullYear',
            navStep: 1
          }, {
            clsName: 'years',
            navFnc: 'FullYear',
            navStep: 10
          }],

          isLeapYear: function(year) {
            return (((year % 4 === 0) && (year % 100 !== 0)) || (year %
              400 === 0));
          },

          getDaysInMonth: function(year, month) {
            return [31, (DPGlobal.isLeapYear(year) ? 29 : 28),
              31, 30, 31, 30, 31, 31, 30, 31, 30, 31
            ][month];
          },

          parseFormat: function(format) {
            var separator = format.match(/[.\/\-\s].*?/);
            var parts = format.split(/\W+/);

            if (!separator || !parts || parts.length === 0) {
              throw new Error('Invalid date format.');
            }

            return {
              separator: separator,
              parts: parts
            };
          },

          parseDate: function(date, format) {
            var parts = date.split(format.separator);
            var val;
            date = new Date();

            date.setHours(0);
            date.setMinutes(0);
            date.setSeconds(0);
            date.setMilliseconds(0);

            if (parts.length === format.parts.length) {
              var year = date.getFullYear();
              var day = date.getDate();
              var month = date.getMonth();

              for (var i = 0, cnt = format.parts.length; i < cnt; i++) {
                val = parseInt(parts[i], 10) || 1;
                switch (format.parts[i]) {
                  case 'dd':
                  case 'd':
                    day = val;
                    date.setDate(val);
                    break;
                  case 'mm':
                  case 'm':
                    month = val - 1;
                    date.setMonth(val - 1);
                    break;
                  case 'yy':
                    year = 2000 + val;
                    date.setFullYear(2000 + val);
                    break;
                  case 'yyyy':
                    year = val;
                    date.setFullYear(val);
                    break;
                }
              }
              date = new Date(year, month, day, 0, 0, 0);
            }
            return date;
          },

          formatDate: function(date, format) {
            var val = {
              d: date.getDate(),
              m: date.getMonth() + 1,
              yy: date.getFullYear().toString().substring(2),
              yyyy: date.getFullYear()
            };
            var dateArray = [];

            val.dd = (val.d < 10 ? '0' : '') + val.d;
            val.mm = (val.m < 10 ? '0' : '') + val.m;

            for (var i = 0, cnt = format.parts.length; i < cnt; i++) {
              dateArray.push(val[format.parts[i]]);
            }
            return dateArray.join(format.separator);
          },

          headTemplate: '<thead>' +
            '<tr class="am-datepicker-header">' +
            '<th class="am-datepicker-prev">' +
            '<i class="am-datepicker-prev-icon"></i></th>' +
            '<th colspan="5" class="am-datepicker-switch">' +
            '<div class="am-datepicker-select"></div></th>' +
            '<th class="am-datepicker-next"><i class="am-datepicker-next-icon"></i>' +
            '</th></tr></thead>',

          contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>'
        };

        DPGlobal.template =
          '<div class="am-datepicker am-datepicker-dropdown">' +
          '<div class="am-datepicker-caret"></div>' +
          '<div class="am-datepicker-days">' +
          '<table class="am-datepicker-table">' +
          DPGlobal.headTemplate +
          '<tbody></tbody>' +
          '</table>' +
          '</div>' +
          '<div class="am-datepicker-months">' +
          '<table class="am-datepicker-table">' +
          DPGlobal.headTemplate +
          DPGlobal.contTemplate +
          '</table>' +
          '</div>' +
          '<div class="am-datepicker-years">' +
          '<table class="am-datepicker-table">' +
          DPGlobal.headTemplate +
          DPGlobal.contTemplate +
          '</table>' +
          '</div>' +
          '</div>';

        $.fn.datepicker = function(option, val) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.datepicker');

            var options = $.extend({},
              UI.utils.options($this.data('amDatepicker')),
              typeof option === 'object' && option);
            if (!data) {
              $this.data('amui.datepicker', (data = new Datepicker(this,
                options)));
            }
            if (typeof option === 'string') {
              data[option] && data[option](val);
            }
          });
        };

        $.fn.datepicker.Constructor = Datepicker;

        // Init code
        UI.ready(function(context) {
          $('[data-am-datepicker]').datepicker();
        });

        $.AMUI.datepicker = Datepicker;

        module.exports = Datepicker;

        // TODO: 1. 载入动画
        //       2. less 优化

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  28: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var $doc = $(document);
        var transition = UI.support.transition;

        var Dimmer = function() {
          this.id = UI.utils.generateGUID('am-dimmer');
          this.$element = $(Dimmer.DEFAULTS.tpl, {
            id: this.id
          });

          this.inited = false;
          this.scrollbarWidth = 0;
          this.$used = $([]);
        };

        Dimmer.DEFAULTS = {
          tpl: '<div class="am-dimmer" data-am-dimmer></div>'
        };

        Dimmer.prototype.init = function() {
          if (!this.inited) {
            $(document.body).append(this.$element);
            this.inited = true;
            $doc.trigger('init.dimmer.amui');
          }

          return this;
        };

        Dimmer.prototype.open = function(relatedElement) {
          if (!this.inited) {
            this.init();
          }

          var $element = this.$element;

          // 用于多重调用
          if (relatedElement) {
            this.$used = this.$used.add($(relatedElement));
          }

          this.checkScrollbar().setScrollbar();

          $element.off(transition.end).show().trigger('open.dimmer.amui');

          setTimeout(function() {
            $element.addClass('am-active');
          }, 0);

          return this;
        };

        Dimmer.prototype.close = function(relatedElement, force) {
          this.$used = this.$used.not($(relatedElement));

          if (!force && this.$used.length) {
            return this;
          }

          var $element = this.$element;

          $element.removeClass('am-active').trigger('close.dimmer.amui');

          function complete() {
            $element.hide();
            this.resetScrollbar();
          }

          // transition ? $element.one(transition.end, $.proxy(complete, this)) :
          complete.call(this);

          return this;
        };

        Dimmer.prototype.checkScrollbar = function() {
          this.scrollbarWidth = UI.utils.measureScrollbar();

          return this;
        };

        Dimmer.prototype.setScrollbar = function() {
          var $body = $(document.body);
          var bodyPaddingRight = parseInt(($body.css('padding-right') || 0),
            10);

          if (this.scrollbarWidth) {
            $body.css('padding-right', bodyPaddingRight + this.scrollbarWidth);
          }

          $body.addClass('am-dimmer-active');

          return this;
        };

        Dimmer.prototype.resetScrollbar = function() {
          $(document.body).css('padding-right', '').removeClass(
            'am-dimmer-active');

          return this;
        };

        var dimmer = new Dimmer();

        $.AMUI.dimmer = dimmer;

        module.exports = dimmer;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  29: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var animation = UI.support.animation;

        /**
         * @via https://github.com/Minwe/bootstrap/blob/master/js/dropdown.js
         * @copyright (c) 2011-2014 Twitter, Inc
         * @license The MIT License
         */

        // var toggle = '[data-am-dropdown] > .am-dropdown-toggle';

        var Dropdown = function(element, options) {
          this.options = $.extend({}, Dropdown.DEFAULTS, options);

          options = this.options;

          this.$element = $(element);
          this.$toggle = this.$element.find(options.selector.toggle);
          this.$dropdown = this.$element.find(options.selector.dropdown);
          this.$boundary = (options.boundary === window) ? $(window) :
            this.$element.closest(options.boundary);
          this.$justify = (options.justify && $(options.justify).length &&
            $(options.justify)) || undefined;

          !this.$boundary.length && (this.$boundary = $(window));

          this.active = this.$element.hasClass('am-active') ? true :
            false;
          this.animating = null;

          this.events();
        };

        Dropdown.DEFAULTS = {
          animation: 'am-animation-slide-top-fixed',
          boundary: window,
          justify: undefined,
          selector: {
            dropdown: '.am-dropdown-content',
            toggle: '.am-dropdown-toggle'
          },
          trigger: 'click'
        };

        Dropdown.prototype.toggle = function() {
          this.clear();

          if (this.animating) {
            return;
          }

          this[this.active ? 'close' : 'open']();
        };

        Dropdown.prototype.open = function(e) {
          var $toggle = this.$toggle;
          var $element = this.$element;
          var $dropdown = this.$dropdown;

          if ($toggle.is('.am-disabled, :disabled')) {
            return;
          }

          if (this.active) {
            return;
          }

          $element.trigger('open.dropdown.amui').addClass('am-active');

          $toggle.trigger('focus');

          this.checkDimensions();

          var complete = $.proxy(function() {
            $element.trigger('opened.dropdown.amui');
            this.active = true;
            this.animating = 0;
          }, this);

          if (animation) {
            this.animating = 1;
            $dropdown.addClass(this.options.animation).
            on(animation.end + '.open.dropdown.amui', $.proxy(function() {
              complete();
              $dropdown.removeClass(this.options.animation);
            }, this));
          } else {
            complete();
          }
        };

        Dropdown.prototype.close = function() {
          if (!this.active) {
            return;
          }

          // fix #165
          // var animationName = this.options.animation + ' am-animation-reverse';
          var animationName = 'am-dropdown-animation';
          var $element = this.$element;
          var $dropdown = this.$dropdown;

          $element.trigger('close.dropdown.amui');

          var complete = $.proxy(function complete() {
            $element.
            removeClass('am-active').
            trigger('closed.dropdown.amui');
            this.active = false;
            this.animating = 0;
            this.$toggle.blur();
          }, this);

          if (animation) {
            $dropdown.removeClass(this.options.animation);
            $dropdown.addClass(animationName);
            this.animating = 1;
            // animation
            $dropdown.one(animation.end + '.close.dropdown.amui', function() {
              $dropdown.removeClass(animationName);
              complete();
            });
          } else {
            complete();
          }
        };

        Dropdown.prototype.checkDimensions = function() {
          if (!this.$dropdown.length) {
            return;
          }

          var $dropdown = this.$dropdown;
          var offset = $dropdown.offset();
          var width = $dropdown.outerWidth();
          var boundaryWidth = this.$boundary.width();
          var boundaryOffset = $.isWindow(this.boundary) && this.$boundary.offset() ?
            this.$boundary.offset().left : 0;

          if (this.$justify) {
            // jQuery.fn.width() is really...
            $dropdown.css({
              'min-width': this.$justify.css('width')
            });
          }

          if ((width + (offset.left - boundaryOffset)) > boundaryWidth) {
            this.$element.addClass('am-dropdown-flip');
          }
        };

        Dropdown.prototype.clear = function() {
          $('[data-am-dropdown]').not(this.$element).each(function() {
            var data = $(this).data('amui.dropdown');
            data && data.close();
          });
        };

        Dropdown.prototype.events = function() {
          var eventNS = 'dropdown.amui';
          // triggers = this.options.trigger.split(' '),
          var $toggle = this.$toggle;

          $toggle.on('click.' + eventNS, $.proxy(function(e) {
            e.preventDefault();
            this.toggle();
          }, this));

          /*for (var i = triggers.length; i--;) {
   var trigger = triggers[i];

   if (trigger === 'click') {
   $toggle.on('click.' + eventNS, $.proxy(this.toggle, this))
   }

   if (trigger === 'focus' || trigger === 'hover') {
   var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin';
   var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout';

   this.$element.on(eventIn + '.' + eventNS, $.proxy(this.open, this))
   .on(eventOut + '.' + eventNS, $.proxy(this.close, this));
   }
   }*/

          $(document).on('keydown.dropdown.amui', $.proxy(function(e) {
            e.keyCode === 27 && this.active && this.close();
          }, this)).on('click.outer.dropdown.amui', $.proxy(function(e) {
            // var $target = $(e.target);

            if (this.active &&
              (this.$element[0] === e.target || !this.$element.find(e.target)
                .length)) {
              this.close();
            }
          }, this));
        };

        // Dropdown Plugin
        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.dropdown');
            var options = $.extend({},
              UI.utils.parseOptions($this.attr('data-am-dropdown')),
              typeof option == 'object' && option);

            if (!data) {
              $this.data('amui.dropdown', (data = new Dropdown(this,
                options)));
            }

            if (typeof option == 'string') {
              data[option]();
            }
          });
        }

        $.fn.dropdown = Plugin;

        // Init code
        UI.ready(function(context) {
          $('[data-am-dropdown]', context).dropdown();
        });

        $(document).on('click.dropdown.amui.data-api', '.am-dropdown form',
          function(e) {
            e.stopPropagation();
          });

        $.AMUI.dropdown = Dropdown;

        module.exports = Dropdown;

        // TODO: 1. 处理链接 focus
        //       2. 增加 mouseenter / mouseleave 选项
        //       3. 宽度适应

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  30: [
    function(require, module, exports) {
      (function(global) {
        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        // MODIFIED:
        // - LINE 226: add `<i></i>`
        // - namespace
        // - Init code
        // TODO: start after x ms when pause on actions

        /*
         * jQuery FlexSlider v2.2.2
         * Copyright 2012 WooThemes
         * Contributing Author: Tyler Smith
         */

        // FlexSlider: Object Instance
        $.flexslider = function(el, options) {
          var slider = $(el);

          // making variables public
          slider.vars = $.extend({}, $.flexslider.defaults, options);

          var namespace = slider.vars.namespace,
            msGesture = window.navigator && window.navigator.msPointerEnabled &&
            window.MSGesture,
            touch = (("ontouchstart" in window) || msGesture || window.DocumentTouch &&
              document instanceof DocumentTouch) && slider.vars.touch,
            // depricating this idea, as devices are being released with both of these events
            //eventType = (touch) ? "touchend" : "click",
            eventType = "click touchend MSPointerUp keyup",
            watchedEvent = "",
            watchedEventClearTimer,
            vertical = slider.vars.direction === "vertical",
            reverse = slider.vars.reverse,
            carousel = (slider.vars.itemWidth > 0),
            fade = slider.vars.animation === "fade",
            asNav = slider.vars.asNavFor !== "",
            methods = {},
            focused = true;

          // Store a reference to the slider object
          $.data(el, 'flexslider', slider);

          // Private slider methods
          methods = {
            init: function() {
              slider.animating = false;
              // Get current slide and make sure it is a number
              slider.currentSlide = parseInt((slider.vars.startAt ? slider.vars
                .startAt : 0), 10);
              if (isNaN(slider.currentSlide)) {
                slider.currentSlide = 0;
              }
              slider.animatingTo = slider.currentSlide;
              slider.atEnd = (slider.currentSlide === 0 || slider.currentSlide ===
                slider.last);
              slider.containerSelector = slider.vars.selector.substr(0,
                slider.vars.selector.search(' '));
              slider.slides = $(slider.vars.selector, slider);
              slider.container = $(slider.containerSelector, slider);
              slider.count = slider.slides.length;
              // SYNC:
              slider.syncExists = $(slider.vars.sync).length > 0;
              // SLIDE:
              if (slider.vars.animation === "slide") slider.vars.animation =
                "swing";
              slider.prop = (vertical) ? "top" : "marginLeft";
              slider.args = {};
              // SLIDESHOW:
              slider.manualPause = false;
              slider.stopped = false;
              //PAUSE WHEN INVISIBLE
              slider.started = false;
              slider.startTimeout = null;
              // TOUCH/USECSS:
              slider.transitions = !slider.vars.video && !fade && slider.vars
                .useCSS && (function() {
                  var obj = document.createElement('div'),
                    props = ['perspectiveProperty', 'WebkitPerspective',
                      'MozPerspective', 'OPerspective', 'msPerspective'
                    ];
                  for (var i in props) {
                    if (obj.style[props[i]] !== undefined) {
                      slider.pfx = props[i].replace('Perspective', '').toLowerCase();
                      slider.prop = "-" + slider.pfx + "-transform";
                      return true;
                    }
                  }
                  return false;
                }());
              slider.ensureAnimationEnd = '';
              // CONTROLSCONTAINER:
              if (slider.vars.controlsContainer !== "") slider.controlsContainer =
                $(slider.vars.controlsContainer).length > 0 && $(slider.vars
                  .controlsContainer);
              // MANUAL:
              if (slider.vars.manualControls !== "") slider.manualControls =
                $(slider.vars.manualControls).length > 0 && $(slider.vars.manualControls);

              // RANDOMIZE:
              if (slider.vars.randomize) {
                slider.slides.sort(function() {
                  return (Math.round(Math.random()) - 0.5);
                });
                slider.container.empty().append(slider.slides);
              }

              slider.doMath();

              // INIT
              slider.setup("init");

              // CONTROLNAV:
              if (slider.vars.controlNav) methods.controlNav.setup();

              // DIRECTIONNAV:
              if (slider.vars.directionNav) methods.directionNav.setup();

              // KEYBOARD:
              if (slider.vars.keyboard && ($(slider.containerSelector).length ===
                1 || slider.vars.multipleKeyboard)) {
                $(document).bind('keyup', function(event) {
                  var keycode = event.keyCode;
                  if (!slider.animating && (keycode === 39 || keycode ===
                    37)) {
                    var target = (keycode === 39) ? slider.getTarget(
                        'next') :
                      (keycode === 37) ? slider.getTarget('prev') : false;
                    slider.flexAnimate(target, slider.vars.pauseOnAction);
                  }
                });
              }
              // MOUSEWHEEL:
              if (slider.vars.mousewheel) {
                slider.bind('mousewheel', function(event, delta, deltaX,
                  deltaY) {
                  event.preventDefault();
                  var target = (delta < 0) ? slider.getTarget('next') :
                    slider.getTarget('prev');
                  slider.flexAnimate(target, slider.vars.pauseOnAction);
                });
              }

              // PAUSEPLAY
              if (slider.vars.pausePlay) methods.pausePlay.setup();

              //PAUSE WHEN INVISIBLE
              if (slider.vars.slideshow && slider.vars.pauseInvisible)
                methods.pauseInvisible.init();

              // SLIDSESHOW
              if (slider.vars.slideshow) {
                if (slider.vars.pauseOnHover) {
                  slider.hover(function() {
                    if (!slider.manualPlay && !slider.manualPause) slider
                      .pause();
                  }, function() {
                    if (!slider.manualPause && !slider.manualPlay && !
                      slider.stopped) slider.play();
                  });
                }
                // initialize animation
                //If we're visible, or we don't use PageVisibility API
                if (!slider.vars.pauseInvisible || !methods.pauseInvisible.isHidden()) {
                  (slider.vars.initDelay > 0) ? slider.startTimeout =
                    setTimeout(slider.play, slider.vars.initDelay) : slider
                    .play();
                }
              }

              // ASNAV:
              if (asNav) methods.asNav.setup();

              // TOUCH
              if (touch && slider.vars.touch) methods.touch();

              // FADE&&SMOOTHHEIGHT || SLIDE:
              if (!fade || (fade && slider.vars.smoothHeight)) $(window).bind(
                "resize orientationchange focus", methods.resize);

              slider.find("img").attr("draggable", "false");

              // API: start() Callback
              setTimeout(function() {
                slider.vars.start(slider);
              }, 200);
            },
            asNav: {
              setup: function() {
                slider.asNav = true;
                slider.animatingTo = Math.floor(slider.currentSlide /
                  slider.move);
                slider.currentItem = slider.currentSlide;
                slider.slides.removeClass(namespace + "active-slide").eq(
                  slider.currentItem).addClass(namespace + "active-slide");
                if (!msGesture) {
                  slider.slides.on(eventType, function(e) {
                    e.preventDefault();
                    var $slide = $(this),
                      target = $slide.index();
                    var posFromLeft = $slide.offset().left - $(slider).scrollLeft(); // Find position of slide relative to left of slider container
                    if (posFromLeft <= 0 && $slide.hasClass(namespace +
                      'active-slide')) {
                      slider.flexAnimate(slider.getTarget("prev"), true);
                    } else if (!$(slider.vars.asNavFor).data('flexslider')
                      .animating && !$slide.hasClass(namespace +
                        "active-slide")) {
                      slider.direction = (slider.currentItem < target) ?
                        "next" : "prev";
                      slider.flexAnimate(target, slider.vars.pauseOnAction,
                        false, true, true);
                    }
                  });
                } else {
                  el._slider = slider;
                  slider.slides.each(function() {
                    var that = this;
                    that._gesture = new MSGesture();
                    that._gesture.target = that;
                    that.addEventListener("MSPointerDown", function(e) {
                      e.preventDefault();
                      if (e.currentTarget._gesture)
                        e.currentTarget._gesture.addPointer(e.pointerId);
                    }, false);
                    that.addEventListener("MSGestureTap", function(e) {
                      e.preventDefault();
                      var $slide = $(this),
                        target = $slide.index();
                      if (!$(slider.vars.asNavFor).data('flexslider').animating &&
                        !$slide.hasClass('active')) {
                        slider.direction = (slider.currentItem < target) ?
                          "next" : "prev";
                        slider.flexAnimate(target, slider.vars.pauseOnAction,
                          false, true, true);
                      }
                    });
                  });
                }
              }
            },
            controlNav: {
              setup: function() {
                if (!slider.manualControls) {
                  methods.controlNav.setupPaging();
                } else { // MANUALCONTROLS:
                  methods.controlNav.setupManual();
                }
              },
              setupPaging: function() {
                var type = (slider.vars.controlNav === "thumbnails") ?
                  'control-thumbs' : 'control-paging',
                  j = 1,
                  item,
                  slide;

                slider.controlNavScaffold = $('<ol class="' + namespace +
                  'control-nav ' + namespace + type + '"></ol>');

                if (slider.pagingCount > 1) {
                  for (var i = 0; i < slider.pagingCount; i++) {
                    slide = slider.slides.eq(i);
                    item = (slider.vars.controlNav === "thumbnails") ?
                      '<img src="' + slide.attr('data-thumb') + '"/>' :
                      '<a>' + j + '</a>';
                    if ('thumbnails' === slider.vars.controlNav && true ===
                      slider.vars.thumbCaptions) {
                      var captn = slide.attr('data-thumbcaption');
                      if ('' != captn && undefined != captn) item +=
                        '<span class="' + namespace + 'caption">' + captn +
                        '</span>';
                    }
                    // slider.controlNavScaffold.append('<li>' + item + '</li>');
                    slider.controlNavScaffold.append('<li>' + item +
                      '<i></i></li>');
                    j++;
                  }
                }

                // CONTROLSCONTAINER:
                (slider.controlsContainer) ? $(slider.controlsContainer).append(
                  slider.controlNavScaffold) : slider.append(slider.controlNavScaffold);
                methods.controlNav.set();

                methods.controlNav.active();

                slider.controlNavScaffold.delegate('a, img', eventType,
                  function(event) {
                    event.preventDefault();

                    if (watchedEvent === "" || watchedEvent === event.type) {
                      var $this = $(this),
                        target = slider.controlNav.index($this);

                      if (!$this.hasClass(namespace + 'active')) {
                        slider.direction = (target > slider.currentSlide) ?
                          "next" : "prev";
                        slider.flexAnimate(target, slider.vars.pauseOnAction);
                      }
                    }

                    // setup flags to prevent event duplication
                    if (watchedEvent === "") {
                      watchedEvent = event.type;
                    }
                    methods.setToClearWatchedEvent();

                  });
              },
              setupManual: function() {
                slider.controlNav = slider.manualControls;
                methods.controlNav.active();

                slider.controlNav.bind(eventType, function(event) {
                  event.preventDefault();

                  if (watchedEvent === "" || watchedEvent === event.type) {
                    var $this = $(this),
                      target = slider.controlNav.index($this);

                    if (!$this.hasClass(namespace + 'active')) {
                      (target > slider.currentSlide) ? slider.direction =
                        "next" : slider.direction = "prev";
                      slider.flexAnimate(target, slider.vars.pauseOnAction);
                    }
                  }

                  // setup flags to prevent event duplication
                  if (watchedEvent === "") {
                    watchedEvent = event.type;
                  }
                  methods.setToClearWatchedEvent();
                });
              },
              set: function() {
                var selector = (slider.vars.controlNav === "thumbnails") ?
                  'img' : 'a';
                slider.controlNav = $('.' + namespace + 'control-nav li ' +
                  selector, (slider.controlsContainer) ? slider.controlsContainer :
                  slider);
              },
              active: function() {
                slider.controlNav.removeClass(namespace + "active").eq(
                  slider.animatingTo).addClass(namespace + "active");
              },
              update: function(action, pos) {
                if (slider.pagingCount > 1 && action === "add") {
                  slider.controlNavScaffold.append($('<li><a>' + slider.count +
                    '</a></li>'));
                } else if (slider.pagingCount === 1) {
                  slider.controlNavScaffold.find('li').remove();
                } else {
                  slider.controlNav.eq(pos).closest('li').remove();
                }
                methods.controlNav.set();
                (slider.pagingCount > 1 && slider.pagingCount !== slider.controlNav
                  .length) ? slider.update(pos, action) : methods.controlNav
                  .active();
              }
            },
            directionNav: {
              setup: function() {
                var directionNavScaffold = $('<ul class="' + namespace +
                  'direction-nav"><li><a class="' + namespace +
                  'prev" href="#">' + slider.vars.prevText +
                  '</a></li><li><a class="' + namespace +
                  'next" href="#">' + slider.vars.nextText +
                  '</a></li></ul>');

                // CONTROLSCONTAINER:
                if (slider.controlsContainer) {
                  $(slider.controlsContainer).append(directionNavScaffold);
                  slider.directionNav = $('.' + namespace +
                    'direction-nav li a', slider.controlsContainer);
                } else {
                  slider.append(directionNavScaffold);
                  slider.directionNav = $('.' + namespace +
                    'direction-nav li a', slider);
                }

                methods.directionNav.update();

                slider.directionNav.bind(eventType, function(event) {
                  event.preventDefault();
                  var target;

                  if (watchedEvent === "" || watchedEvent === event.type) {
                    target = ($(this).hasClass(namespace + 'next')) ?
                      slider.getTarget('next') : slider.getTarget('prev');
                    slider.flexAnimate(target, slider.vars.pauseOnAction);
                  }

                  // setup flags to prevent event duplication
                  if (watchedEvent === "") {
                    watchedEvent = event.type;
                  }
                  methods.setToClearWatchedEvent();
                });
              },
              update: function() {
                var disabledClass = namespace + 'disabled';
                if (slider.pagingCount === 1) {
                  slider.directionNav.addClass(disabledClass).attr(
                    'tabindex', '-1');
                } else if (!slider.vars.animationLoop) {
                  if (slider.animatingTo === 0) {
                    slider.directionNav.removeClass(disabledClass).filter(
                      '.' + namespace + "prev").addClass(disabledClass).attr(
                      'tabindex', '-1');
                  } else if (slider.animatingTo === slider.last) {
                    slider.directionNav.removeClass(disabledClass).filter(
                      '.' + namespace + "next").addClass(disabledClass).attr(
                      'tabindex', '-1');
                  } else {
                    slider.directionNav.removeClass(disabledClass).removeAttr(
                      'tabindex');
                  }
                } else {
                  slider.directionNav.removeClass(disabledClass).removeAttr(
                    'tabindex');
                }
              }
            },
            pausePlay: {
              setup: function() {
                var pausePlayScaffold = $('<div class="' + namespace +
                  'pauseplay"><a></a></div>');

                // CONTROLSCONTAINER:
                if (slider.controlsContainer) {
                  slider.controlsContainer.append(pausePlayScaffold);
                  slider.pausePlay = $('.' + namespace + 'pauseplay a',
                    slider.controlsContainer);
                } else {
                  slider.append(pausePlayScaffold);
                  slider.pausePlay = $('.' + namespace + 'pauseplay a',
                    slider);
                }

                methods.pausePlay.update((slider.vars.slideshow) ?
                  namespace + 'pause' : namespace + 'play');

                slider.pausePlay.bind(eventType, function(event) {
                  event.preventDefault();

                  if (watchedEvent === "" || watchedEvent === event.type) {
                    if ($(this).hasClass(namespace + 'pause')) {
                      slider.manualPause = true;
                      slider.manualPlay = false;
                      slider.pause();
                    } else {
                      slider.manualPause = false;
                      slider.manualPlay = true;
                      slider.play();
                    }
                  }

                  // setup flags to prevent event duplication
                  if (watchedEvent === "") {
                    watchedEvent = event.type;
                  }
                  methods.setToClearWatchedEvent();
                });
              },
              update: function(state) {
                (state === "play") ? slider.pausePlay.removeClass(namespace +
                  'pause').addClass(namespace + 'play').html(slider.vars.playText) :
                  slider.pausePlay.removeClass(namespace + 'play').addClass(
                    namespace + 'pause').html(slider.vars.pauseText);
              }
            },
            touch: function() {
              var startX,
                startY,
                offset,
                cwidth,
                dx,
                startT,
                scrolling = false,
                localX = 0,
                localY = 0,
                accDx = 0;

              if (!msGesture) {
                el.addEventListener('touchstart', onTouchStart, false);

                function onTouchStart(e) {
                  if (slider.animating) {
                    e.preventDefault();
                  } else if ((window.navigator.msPointerEnabled) || e.touches
                    .length === 1) {
                    slider.pause();
                    // CAROUSEL:
                    cwidth = (vertical) ? slider.h : slider.w;
                    startT = Number(new Date());
                    // CAROUSEL:

                    // Local vars for X and Y points.
                    localX = e.touches[0].pageX;
                    localY = e.touches[0].pageY;

                    offset = (carousel && reverse && slider.animatingTo ===
                      slider.last) ? 0 :
                      (carousel && reverse) ? slider.limit - (((slider.itemW +
                      slider.vars.itemMargin) * slider.move) * slider.animatingTo) :
                      (carousel && slider.currentSlide === slider.last) ?
                      slider.limit :
                      (carousel) ? ((slider.itemW + slider.vars.itemMargin) *
                        slider.move) * slider.currentSlide :
                      (reverse) ? (slider.last - slider.currentSlide +
                        slider.cloneOffset) * cwidth : (slider.currentSlide +
                        slider.cloneOffset) * cwidth;
                    startX = (vertical) ? localY : localX;
                    startY = (vertical) ? localX : localY;

                    el.addEventListener('touchmove', onTouchMove, false);
                    el.addEventListener('touchend', onTouchEnd, false);
                  }
                }

                function onTouchMove(e) {
                  // Local vars for X and Y points.

                  localX = e.touches[0].pageX;
                  localY = e.touches[0].pageY;

                  dx = (vertical) ? startX - localY : startX - localX;
                  scrolling = (vertical) ? (Math.abs(dx) < Math.abs(localX -
                    startY)) : (Math.abs(dx) < Math.abs(localY - startY));

                  var fxms = 500;

                  if (!scrolling || Number(new Date()) - startT > fxms) {
                    e.preventDefault();
                    if (!fade && slider.transitions) {
                      if (!slider.vars.animationLoop) {
                        dx = dx / ((slider.currentSlide === 0 && dx < 0 ||
                            slider.currentSlide === slider.last && dx > 0) ?
                          (Math.abs(dx) / cwidth + 2) : 1);
                      }
                      slider.setProps(offset + dx, "setTouch");
                    }
                  }
                }

                function onTouchEnd(e) {
                  // finish the touch by undoing the touch session
                  el.removeEventListener('touchmove', onTouchMove, false);

                  if (slider.animatingTo === slider.currentSlide && !
                    scrolling && !(dx === null)) {
                    var updateDx = (reverse) ? -dx : dx,
                      target = (updateDx > 0) ? slider.getTarget('next') :
                      slider.getTarget('prev');

                    if (slider.canAdvance(target) && (Number(new Date()) -
                      startT < 550 && Math.abs(updateDx) > 50 || Math.abs(
                        updateDx) > cwidth / 2)) {
                      slider.flexAnimate(target, slider.vars.pauseOnAction);
                    } else {
                      if (!fade) slider.flexAnimate(slider.currentSlide,
                        slider.vars.pauseOnAction, true);
                    }
                  }
                  el.removeEventListener('touchend', onTouchEnd, false);

                  startX = null;
                  startY = null;
                  dx = null;
                  offset = null;
                }
              } else {
                el.style.msTouchAction = "none";
                el._gesture = new MSGesture();
                el._gesture.target = el;
                el.addEventListener("MSPointerDown", onMSPointerDown, false);
                el._slider = slider;
                el.addEventListener("MSGestureChange", onMSGestureChange,
                  false);
                el.addEventListener("MSGestureEnd", onMSGestureEnd, false);

                function onMSPointerDown(e) {
                  e.stopPropagation();
                  if (slider.animating) {
                    e.preventDefault();
                  } else {
                    slider.pause();
                    el._gesture.addPointer(e.pointerId);
                    accDx = 0;
                    cwidth = (vertical) ? slider.h : slider.w;
                    startT = Number(new Date());
                    // CAROUSEL:

                    offset = (carousel && reverse && slider.animatingTo ===
                      slider.last) ? 0 :
                      (carousel && reverse) ? slider.limit - (((slider.itemW +
                      slider.vars.itemMargin) * slider.move) * slider.animatingTo) :
                      (carousel && slider.currentSlide === slider.last) ?
                      slider.limit :
                      (carousel) ? ((slider.itemW + slider.vars.itemMargin) *
                        slider.move) * slider.currentSlide :
                      (reverse) ? (slider.last - slider.currentSlide +
                        slider.cloneOffset) * cwidth : (slider.currentSlide +
                        slider.cloneOffset) * cwidth;
                  }
                }

                function onMSGestureChange(e) {
                  e.stopPropagation();
                  var slider = e.target._slider;
                  if (!slider) {
                    return;
                  }
                  var transX = -e.translationX,
                    transY = -e.translationY;

                  //Accumulate translations.
                  accDx = accDx + ((vertical) ? transY : transX);
                  dx = accDx;
                  scrolling = (vertical) ? (Math.abs(accDx) < Math.abs(-
                    transX)) : (Math.abs(accDx) < Math.abs(-transY));

                  if (e.detail === e.MSGESTURE_FLAG_INERTIA) {
                    setImmediate(function() {
                      el._gesture.stop();
                    });

                    return;
                  }

                  if (!scrolling || Number(new Date()) - startT > 500) {
                    e.preventDefault();
                    if (!fade && slider.transitions) {
                      if (!slider.vars.animationLoop) {
                        dx = accDx / ((slider.currentSlide === 0 && accDx <
                          0 || slider.currentSlide === slider.last &&
                          accDx > 0) ? (Math.abs(accDx) / cwidth + 2) : 1);
                      }
                      slider.setProps(offset + dx, "setTouch");
                    }
                  }
                }

                function onMSGestureEnd(e) {
                  e.stopPropagation();
                  var slider = e.target._slider;
                  if (!slider) {
                    return;
                  }
                  if (slider.animatingTo === slider.currentSlide && !
                    scrolling && !(dx === null)) {
                    var updateDx = (reverse) ? -dx : dx,
                      target = (updateDx > 0) ? slider.getTarget('next') :
                      slider.getTarget('prev');

                    if (slider.canAdvance(target) && (Number(new Date()) -
                      startT < 550 && Math.abs(updateDx) > 50 || Math.abs(
                        updateDx) > cwidth / 2)) {
                      slider.flexAnimate(target, slider.vars.pauseOnAction);
                    } else {
                      if (!fade) slider.flexAnimate(slider.currentSlide,
                        slider.vars.pauseOnAction, true);
                    }
                  }

                  startX = null;
                  startY = null;
                  dx = null;
                  offset = null;
                  accDx = 0;
                }
              }
            },
            resize: function() {
              if (!slider.animating && slider.is(':visible')) {
                if (!carousel) slider.doMath();

                if (fade) {
                  // SMOOTH HEIGHT:
                  methods.smoothHeight();
                } else if (carousel) { //CAROUSEL:
                  slider.slides.width(slider.computedW);
                  slider.update(slider.pagingCount);
                  slider.setProps();
                } else if (vertical) { //VERTICAL:
                  slider.viewport.height(slider.h);
                  slider.setProps(slider.h, "setTotal");
                } else {
                  // SMOOTH HEIGHT:
                  if (slider.vars.smoothHeight) methods.smoothHeight();
                  slider.newSlides.width(slider.computedW);
                  slider.setProps(slider.computedW, "setTotal");
                }
              }
            },
            smoothHeight: function(dur) {
              if (!vertical || fade) {
                var $obj = (fade) ? slider : slider.viewport;
                (dur) ? $obj.animate({
                  "height": slider.slides.eq(slider.animatingTo).height()
                }, dur) : $obj.height(slider.slides.eq(slider.animatingTo).height());
              }
            },
            sync: function(action) {
              var $obj = $(slider.vars.sync).data("flexslider"),
                target = slider.animatingTo;

              switch (action) {
                case "animate":
                  $obj.flexAnimate(target, slider.vars.pauseOnAction, false,
                    true);
                  break;
                case "play":
                  if (!$obj.playing && !$obj.asNav) {
                    $obj.play();
                  }
                  break;
                case "pause":
                  $obj.pause();
                  break;
              }
            },
            uniqueID: function($clone) {
              // Append _clone to current level and children elements with id attributes
              $clone.filter('[id]').add($clone.find('[id]')).each(function() {
                var $this = $(this);
                $this.attr('id', $this.attr('id') + '_clone');
              });
              return $clone;
            },
            pauseInvisible: {
              visProp: null,
              init: function() {
                var prefixes = ['webkit', 'moz', 'ms', 'o'];

                if ('hidden' in document) return 'hidden';
                for (var i = 0; i < prefixes.length; i++) {
                  if ((prefixes[i] + 'Hidden') in document)
                    methods.pauseInvisible.visProp = prefixes[i] + 'Hidden';
                }
                if (methods.pauseInvisible.visProp) {
                  var evtname = methods.pauseInvisible.visProp.replace(
                    /[H|h]idden/, '') + 'visibilitychange';
                  document.addEventListener(evtname, function() {
                    if (methods.pauseInvisible.isHidden()) {
                      if (slider.startTimeout) clearTimeout(slider.startTimeout); //If clock is ticking, stop timer and prevent from starting while invisible
                      else slider.pause(); //Or just pause
                    } else {
                      if (slider.started) slider.play(); //Initiated before, just play
                      else(slider.vars.initDelay > 0) ? setTimeout(slider
                        .play, slider.vars.initDelay) : slider.play(); //Didn't init before: simply init or wait for it
                    }
                  });
                }
              },
              isHidden: function() {
                return document[methods.pauseInvisible.visProp] || false;
              }
            },
            setToClearWatchedEvent: function() {
              clearTimeout(watchedEventClearTimer);
              watchedEventClearTimer = setTimeout(function() {
                watchedEvent = "";
              }, 3000);
            }
          };

          // public methods
          slider.flexAnimate = function(target, pause, override, withSync,
            fromNav) {
            if (!slider.vars.animationLoop && target !== slider.currentSlide) {
              slider.direction = (target > slider.currentSlide) ? "next" :
                "prev";
            }

            if (asNav && slider.pagingCount === 1) slider.direction = (
              slider.currentItem < target) ? "next" : "prev";

            if (!slider.animating && (slider.canAdvance(target, fromNav) ||
              override) && slider.is(":visible")) {
              if (asNav && withSync) {
                var master = $(slider.vars.asNavFor).data('flexslider');
                slider.atEnd = target === 0 || target === slider.count - 1;
                master.flexAnimate(target, true, false, true, fromNav);
                slider.direction = (slider.currentItem < target) ? "next" :
                  "prev";
                master.direction = slider.direction;

                if (Math.ceil((target + 1) / slider.visible) - 1 !== slider
                  .currentSlide && target !== 0) {
                  slider.currentItem = target;
                  slider.slides.removeClass(namespace + "active-slide").eq(
                    target).addClass(namespace + "active-slide");
                  target = Math.floor(target / slider.visible);
                } else {
                  slider.currentItem = target;
                  slider.slides.removeClass(namespace + "active-slide").eq(
                    target).addClass(namespace + "active-slide");
                  return false;
                }
              }

              slider.animating = true;
              slider.animatingTo = target;

              // SLIDESHOW:
              if (pause) slider.pause();

              // API: before() animation Callback
              slider.vars.before(slider);

              // SYNC:
              if (slider.syncExists && !fromNav) methods.sync("animate");

              // CONTROLNAV
              if (slider.vars.controlNav) methods.controlNav.active();

              // !CAROUSEL:
              // CANDIDATE: slide active class (for add/remove slide)
              if (!carousel) slider.slides.removeClass(namespace +
                'active-slide').eq(target).addClass(namespace +
                'active-slide');

              // INFINITE LOOP:
              // CANDIDATE: atEnd
              slider.atEnd = target === 0 || target === slider.last;

              // DIRECTIONNAV:
              if (slider.vars.directionNav) methods.directionNav.update();

              if (target === slider.last) {
                // API: end() of cycle Callback
                slider.vars.end(slider);
                // SLIDESHOW && !INFINITE LOOP:
                if (!slider.vars.animationLoop) slider.pause();
              }

              // SLIDE:
              if (!fade) {
                var dimension = (vertical) ? slider.slides.filter(':first')
                  .height() : slider.computedW,
                  margin, slideString, calcNext;

                // INFINITE LOOP / REVERSE:
                if (carousel) {
                  //margin = (slider.vars.itemWidth > slider.w) ? slider.vars.itemMargin * 2 : slider.vars.itemMargin;
                  margin = slider.vars.itemMargin;
                  calcNext = ((slider.itemW + margin) * slider.move) *
                    slider.animatingTo;
                  slideString = (calcNext > slider.limit && slider.visible !==
                    1) ? slider.limit : calcNext;
                } else if (slider.currentSlide === 0 && target === slider.count -
                  1 && slider.vars.animationLoop && slider.direction !==
                  "next") {
                  slideString = (reverse) ? (slider.count + slider.cloneOffset) *
                    dimension : 0;
                } else if (slider.currentSlide === slider.last && target ===
                  0 && slider.vars.animationLoop && slider.direction !==
                  "prev") {
                  slideString = (reverse) ? 0 : (slider.count + 1) *
                    dimension;
                } else {
                  slideString = (reverse) ? ((slider.count - 1) - target +
                    slider.cloneOffset) * dimension : (target + slider.cloneOffset) *
                    dimension;
                }
                slider.setProps(slideString, "", slider.vars.animationSpeed);
                if (slider.transitions) {
                  if (!slider.vars.animationLoop || !slider.atEnd) {
                    slider.animating = false;
                    slider.currentSlide = slider.animatingTo;
                  }

                  // Unbind previous transitionEnd events and re-bind new transitionEnd event
                  slider.container.unbind(
                    "webkitTransitionEnd transitionend");
                  slider.container.bind("webkitTransitionEnd transitionend",
                    function() {
                      clearTimeout(slider.ensureAnimationEnd);
                      slider.wrapup(dimension);
                    });

                  // Insurance for the ever-so-fickle transitionEnd event
                  clearTimeout(slider.ensureAnimationEnd);
                  slider.ensureAnimationEnd = setTimeout(function() {
                    slider.wrapup(dimension);
                  }, slider.vars.animationSpeed + 100);

                } else {
                  slider.container.animate(slider.args, slider.vars.animationSpeed,
                    slider.vars.easing, function() {
                      slider.wrapup(dimension);
                    });
                }
              } else { // FADE:
                if (!touch) {
                  //slider.slides.eq(slider.currentSlide).fadeOut(slider.vars.animationSpeed, slider.vars.easing);
                  //slider.slides.eq(target).fadeIn(slider.vars.animationSpeed, slider.vars.easing, slider.wrapup);

                  slider.slides.eq(slider.currentSlide).css({
                    "zIndex": 1
                  }).animate({
                    "opacity": 0
                  }, slider.vars.animationSpeed, slider.vars.easing);
                  slider.slides.eq(target).css({
                    "zIndex": 2
                  }).animate({
                      "opacity": 1
                    }, slider.vars.animationSpeed, slider.vars.easing,
                    slider.wrapup);

                } else {
                  slider.slides.eq(slider.currentSlide).css({
                    "opacity": 0,
                    "zIndex": 1
                  });
                  slider.slides.eq(target).css({
                    "opacity": 1,
                    "zIndex": 2
                  });
                  slider.wrapup(dimension);
                }
              }
              // SMOOTH HEIGHT:
              if (slider.vars.smoothHeight) methods.smoothHeight(slider.vars
                .animationSpeed);
            }
          };
          slider.wrapup = function(dimension) {
            // SLIDE:
            if (!fade && !carousel) {
              if (slider.currentSlide === 0 && slider.animatingTo ===
                slider.last && slider.vars.animationLoop) {
                slider.setProps(dimension, "jumpEnd");
              } else if (slider.currentSlide === slider.last && slider.animatingTo ===
                0 && slider.vars.animationLoop) {
                slider.setProps(dimension, "jumpStart");
              }
            }
            slider.animating = false;
            slider.currentSlide = slider.animatingTo;
            // API: after() animation Callback
            slider.vars.after(slider);
          };

          // SLIDESHOW:
          slider.animateSlides = function() {
            if (!slider.animating && focused) slider.flexAnimate(slider.getTarget(
              "next"));
          };
          // SLIDESHOW:
          slider.pause = function() {
            clearInterval(slider.animatedSlides);
            slider.animatedSlides = null;
            slider.playing = false;
            // PAUSEPLAY:
            if (slider.vars.pausePlay) methods.pausePlay.update("play");
            // SYNC:
            if (slider.syncExists) methods.sync("pause");
          };
          // SLIDESHOW:
          slider.play = function() {
            if (slider.playing) clearInterval(slider.animatedSlides);
            slider.animatedSlides = slider.animatedSlides || setInterval(
              slider.animateSlides, slider.vars.slideshowSpeed);
            slider.started = slider.playing = true;
            // PAUSEPLAY:
            if (slider.vars.pausePlay) methods.pausePlay.update("pause");
            // SYNC:
            if (slider.syncExists) methods.sync("play");
          };
          // STOP:
          slider.stop = function() {
            slider.pause();
            slider.stopped = true;
          };
          slider.canAdvance = function(target, fromNav) {
            // ASNAV:
            var last = (asNav) ? slider.pagingCount - 1 : slider.last;
            return (fromNav) ? true :
              (asNav && slider.currentItem === slider.count - 1 && target ===
                0 && slider.direction === "prev") ? true :
              (asNav && slider.currentItem === 0 && target === slider.pagingCount -
                1 && slider.direction !== "next") ? false :
              (target === slider.currentSlide && !asNav) ? false :
              (slider.vars.animationLoop) ? true :
              (slider.atEnd && slider.currentSlide === 0 && target === last &&
                slider.direction !== "next") ? false :
              (slider.atEnd && slider.currentSlide === last && target === 0 &&
                slider.direction === "next") ? false :
              true;
          };
          slider.getTarget = function(dir) {
            slider.direction = dir;
            if (dir === "next") {
              return (slider.currentSlide === slider.last) ? 0 : slider.currentSlide +
                1;
            } else {
              return (slider.currentSlide === 0) ? slider.last : slider.currentSlide -
                1;
            }
          };

          // SLIDE:
          slider.setProps = function(pos, special, dur) {
            var target = (function() {
              var posCheck = (pos) ? pos : ((slider.itemW + slider.vars
                  .itemMargin) * slider.move) * slider.animatingTo,
                posCalc = (function() {
                  if (carousel) {
                    return (special === "setTouch") ? pos :
                      (reverse && slider.animatingTo === slider.last) ?
                      0 :
                      (reverse) ? slider.limit - (((slider.itemW +
                          slider.vars.itemMargin) * slider.move) *
                        slider.animatingTo) :
                      (slider.animatingTo === slider.last) ? slider.limit :
                      posCheck;
                  } else {
                    switch (special) {
                      case "setTotal":
                        return (reverse) ? ((slider.count - 1) -
                            slider.currentSlide + slider.cloneOffset) *
                          pos : (slider.currentSlide + slider.cloneOffset) *
                          pos;
                      case "setTouch":
                        return (reverse) ? pos : pos;
                      case "jumpEnd":
                        return (reverse) ? pos : slider.count * pos;
                      case "jumpStart":
                        return (reverse) ? slider.count * pos : pos;
                      default:
                        return pos;
                    }
                  }
                }());

              return (posCalc * -1) + "px";
            }());

            if (slider.transitions) {
              target = (vertical) ? "translate3d(0," + target + ",0)" :
                "translate3d(" + target + ",0,0)";
              dur = (dur !== undefined) ? (dur / 1000) + "s" : "0s";
              slider.container.css("-" + slider.pfx +
                "-transition-duration", dur);
              slider.container.css("transition-duration", dur);
            }

            slider.args[slider.prop] = target;
            if (slider.transitions || dur === undefined) slider.container.css(
              slider.args);

            slider.container.css('transform', target);
          };

          slider.setup = function(type) {
            // SLIDE:
            if (!fade) {
              var sliderOffset, arr;

              if (type === "init") {
                slider.viewport = $('<div class="' + namespace +
                  'viewport"></div>').css({
                  "overflow": "hidden",
                  "position": "relative"
                }).appendTo(slider).append(slider.container);
                // INFINITE LOOP:
                slider.cloneCount = 0;
                slider.cloneOffset = 0;
                // REVERSE:
                if (reverse) {
                  arr = $.makeArray(slider.slides).reverse();
                  slider.slides = $(arr);
                  slider.container.empty().append(slider.slides);
                }
              }
              // INFINITE LOOP && !CAROUSEL:
              if (slider.vars.animationLoop && !carousel) {
                slider.cloneCount = 2;
                slider.cloneOffset = 1;
                // clear out old clones
                if (type !== "init") slider.container.find('.clone').remove();
                slider.container.append(methods.uniqueID(slider.slides.first()
                  .clone().addClass('clone')).attr('aria-hidden', 'true'))
                  .prepend(methods.uniqueID(slider.slides.last().clone().addClass(
                    'clone')).attr('aria-hidden', 'true'));
              }
              slider.newSlides = $(slider.vars.selector, slider);

              sliderOffset = (reverse) ? slider.count - 1 - slider.currentSlide +
                slider.cloneOffset : slider.currentSlide + slider.cloneOffset;
              // VERTICAL:
              if (vertical && !carousel) {
                slider.container.height((slider.count + slider.cloneCount) *
                  200 + "%").css("position", "absolute").width("100%");
                setTimeout(function() {
                  slider.newSlides.css({
                    "display": "block"
                  });
                  slider.doMath();
                  slider.viewport.height(slider.h);
                  slider.setProps(sliderOffset * slider.h, "init");
                }, (type === "init") ? 100 : 0);
              } else {
                slider.container.width((slider.count + slider.cloneCount) *
                  200 + "%");
                slider.setProps(sliderOffset * slider.computedW, "init");
                setTimeout(function() {
                  slider.doMath();
                  slider.newSlides.css({
                    "width": slider.computedW,
                    "float": "left",
                    "display": "block"
                  });
                  // SMOOTH HEIGHT:
                  if (slider.vars.smoothHeight) methods.smoothHeight();
                }, (type === "init") ? 100 : 0);
              }
            } else { // FADE:
              slider.slides.css({
                "width": "100%",
                "float": "left",
                "marginRight": "-100%",
                "position": "relative"
              });
              if (type === "init") {
                if (!touch) {
                  //slider.slides.eq(slider.currentSlide).fadeIn(slider.vars.animationSpeed, slider.vars.easing);
                  if (slider.vars.fadeFirstSlide == false) {
                    slider.slides.css({
                      "opacity": 0,
                      "display": "block",
                      "zIndex": 1
                    }).eq(slider.currentSlide).css({
                      "zIndex": 2
                    }).css({
                      "opacity": 1
                    });
                  } else {
                    slider.slides.css({
                      "opacity": 0,
                      "display": "block",
                      "zIndex": 1
                    }).eq(slider.currentSlide).css({
                      "zIndex": 2
                    }).animate({
                      "opacity": 1
                    }, slider.vars.animationSpeed, slider.vars.easing);
                  }
                } else {
                  slider.slides.css({
                    "opacity": 0,
                    "display": "block",
                    "webkitTransition": "opacity " + slider.vars.animationSpeed /
                      1000 + "s ease",
                    "zIndex": 1
                  }).eq(slider.currentSlide).css({
                    "opacity": 1,
                    "zIndex": 2
                  });
                }
              }
              // SMOOTH HEIGHT:
              if (slider.vars.smoothHeight) methods.smoothHeight();
            }
            // !CAROUSEL:
            // CANDIDATE: active slide
            if (!carousel) slider.slides.removeClass(namespace +
              "active-slide").eq(slider.currentSlide).addClass(namespace +
              "active-slide");

            //FlexSlider: init() Callback
            slider.vars.init(slider);
          };

          slider.doMath = function() {
            var slide = slider.slides.first(),
              slideMargin = slider.vars.itemMargin,
              minItems = slider.vars.minItems,
              maxItems = slider.vars.maxItems;

            slider.w = (slider.viewport === undefined) ? slider.width() :
              slider.viewport.width();
            slider.h = slide.height();
            slider.boxPadding = slide.outerWidth() - slide.width();

            // CAROUSEL:
            if (carousel) {
              slider.itemT = slider.vars.itemWidth + slideMargin;
              slider.minW = (minItems) ? minItems * slider.itemT : slider.w;
              slider.maxW = (maxItems) ? (maxItems * slider.itemT) -
                slideMargin : slider.w;
              slider.itemW = (slider.minW > slider.w) ? (slider.w - (
                slideMargin * (minItems - 1))) / minItems :
                (slider.maxW < slider.w) ? (slider.w - (slideMargin * (
                maxItems - 1))) / maxItems :
                (slider.vars.itemWidth > slider.w) ? slider.w : slider.vars
                .itemWidth;

              slider.visible = Math.floor(slider.w / (slider.itemW));
              slider.move = (slider.vars.move > 0 && slider.vars.move <
                slider.visible) ? slider.vars.move : slider.visible;
              slider.pagingCount = Math.ceil(((slider.count - slider.visible) /
                slider.move) + 1);
              slider.last = slider.pagingCount - 1;
              slider.limit = (slider.pagingCount === 1) ? 0 :
                (slider.vars.itemWidth > slider.w) ? (slider.itemW * (
                slider.count - 1)) + (slideMargin * (slider.count - 1)) : (
                (slider.itemW + slideMargin) * slider.count) - slider.w -
                slideMargin;
            } else {
              slider.itemW = slider.w;
              slider.pagingCount = slider.count;
              slider.last = slider.count - 1;
            }
            slider.computedW = slider.itemW - slider.boxPadding;
          };

          slider.update = function(pos, action) {
            slider.doMath();

            // update currentSlide and slider.animatingTo if necessary
            if (!carousel) {
              if (pos < slider.currentSlide) {
                slider.currentSlide += 1;
              } else if (pos <= slider.currentSlide && pos !== 0) {
                slider.currentSlide -= 1;
              }
              slider.animatingTo = slider.currentSlide;
            }

            // update controlNav
            if (slider.vars.controlNav && !slider.manualControls) {
              if ((action === "add" && !carousel) || slider.pagingCount >
                slider.controlNav.length) {
                methods.controlNav.update("add");
              } else if ((action === "remove" && !carousel) || slider.pagingCount <
                slider.controlNav.length) {
                if (carousel && slider.currentSlide > slider.last) {
                  slider.currentSlide -= 1;
                  slider.animatingTo -= 1;
                }
                methods.controlNav.update("remove", slider.last);
              }
            }
            // update directionNav
            if (slider.vars.directionNav) methods.directionNav.update();

          };

          slider.addSlide = function(obj, pos) {
            var $obj = $(obj);

            slider.count += 1;
            slider.last = slider.count - 1;

            // append new slide
            if (vertical && reverse) {
              (pos !== undefined) ? slider.slides.eq(slider.count - pos).after(
                $obj) : slider.container.prepend($obj);
            } else {
              (pos !== undefined) ? slider.slides.eq(pos).before($obj) :
                slider.container.append($obj);
            }

            // update currentSlide, animatingTo, controlNav, and directionNav
            slider.update(pos, "add");

            // update slider.slides
            slider.slides = $(slider.vars.selector + ':not(.clone)', slider);
            // re-setup the slider to accomdate new slide
            slider.setup();

            //FlexSlider: added() Callback
            slider.vars.added(slider);
          };
          slider.removeSlide = function(obj) {
            var pos = (isNaN(obj)) ? slider.slides.index($(obj)) : obj;

            // update count
            slider.count -= 1;
            slider.last = slider.count - 1;

            // remove slide
            if (isNaN(obj)) {
              $(obj, slider.slides).remove();
            } else {
              (vertical && reverse) ? slider.slides.eq(slider.last).remove() :
                slider.slides.eq(obj).remove();
            }

            // update currentSlide, animatingTo, controlNav, and directionNav
            slider.doMath();
            slider.update(pos, "remove");

            // update slider.slides
            slider.slides = $(slider.vars.selector + ':not(.clone)', slider);
            // re-setup the slider to accomdate new slide
            slider.setup();

            // FlexSlider: removed() Callback
            slider.vars.removed(slider);
          };

          //FlexSlider: Initialize
          methods.init();
        };

        // Ensure the slider isn't focussed if the window loses focus.
        $(window).blur(function(e) {
          focused = false;
        }).focus(function(e) {
          focused = true;
        });

        // FlexSlider: Default Settings
        $.flexslider.defaults = {
          namespace: "am-", //{NEW} String: Prefix string attached to the class of every element generated by the plugin
          selector: ".am-slides > li", //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril
          animation: "slide", //String: Select your animation type, "fade" or "slide"
          easing: "swing", //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!
          direction: "horizontal", //String: Select the sliding direction, "horizontal" or "vertical"
          reverse: false, //{NEW} Boolean: Reverse the animation direction
          animationLoop: true, //Boolean: Should the animation loop? If false, directionNav will received "disable" classes at either end
          smoothHeight: false, //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode
          startAt: 0, //Integer: The slide that the slider should start on. Array notation (0 = first slide)
          slideshow: true, //Boolean: Animate slider automatically
          slideshowSpeed: 5000, //Integer: Set the speed of the slideshow cycling, in milliseconds
          animationSpeed: 600, //Integer: Set the speed of animations, in milliseconds
          initDelay: 0, //{NEW} Integer: Set an initialization delay, in milliseconds
          randomize: false, //Boolean: Randomize slide order
          fadeFirstSlide: true, //Boolean: Fade in the first slide when animation type is "fade"
          thumbCaptions: false, //Boolean: Whether or not to put captions on thumbnails when using the "thumbnails" controlNav.

          // Usability features
          pauseOnAction: true, //Boolean: Pause the slideshow when interacting with control elements, highly recommended.
          pauseOnHover: false, //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering
          pauseInvisible: true, //{NEW} Boolean: Pause the slideshow when tab is invisible, resume when visible. Provides better UX, lower CPU usage.
          useCSS: true, //{NEW} Boolean: Slider will use CSS3 transitions if available
          touch: true, //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices
          video: false, //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches

          // Primary Controls
          controlNav: true, //Boolean: Create navigation for paging control of each slide? Note: Leave true for manualControls usage
          directionNav: true, //Boolean: Create navigation for previous/next navigation? (true/false)
          prevText: "Previous", //String: Set the text for the "previous" directionNav item
          nextText: "Next", //String: Set the text for the "next" directionNav item

          // Secondary Navigation
          keyboard: true, //Boolean: Allow slider navigating via keyboard left/right keys
          multipleKeyboard: false, //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.
          mousewheel: false, //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel
          pausePlay: false, //Boolean: Create pause/play dynamic element
          pauseText: "Pause", //String: Set the text for the "pause" pausePlay item
          playText: "Play", //String: Set the text for the "play" pausePlay item

          // Special properties
          controlsContainer: "", //{UPDATED} jQuery Object/Selector: Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be $(".flexslider-container"). Property is ignored if given element is not found.
          manualControls: "", //{UPDATED} jQuery Object/Selector: Declare custom control navigation. Examples would be $(".flex-control-nav li") or "#tabs-nav li img", etc. The number of elements in your controlNav should match the number of slides/tabs.
          sync: "", //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.
          asNavFor: "", //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider

          // Carousel Options
          itemWidth: 0, //{NEW} Integer: Box-model width of individual carousel items, including horizontal borders and padding.
          itemMargin: 0, //{NEW} Integer: Margin between carousel items.
          minItems: 1, //{NEW} Integer: Minimum number of carousel items that should be visible. Items will resize fluidly when below this.
          maxItems: 0, //{NEW} Integer: Maxmimum number of carousel items that should be visible. Items will resize fluidly when above this limit.
          move: 0, //{NEW} Integer: Number of carousel items that should move on animation. If 0, slider will move all visible items.
          allowOneSlide: true, //{NEW} Boolean: Whether or not to allow a slider comprised of a single slide

          // Callback API
          start: function() {}, //Callback: function(slider) - Fires when the slider loads the first slide
          before: function() {}, //Callback: function(slider) - Fires asynchronously with each slider animation
          after: function() {}, //Callback: function(slider) - Fires after each slider animation completes
          end: function() {}, //Callback: function(slider) - Fires when the slider reaches the last slide (asynchronous)
          added: function() {}, //{NEW} Callback: function(slider) - Fires after a slide is added
          removed: function() {}, //{NEW} Callback: function(slider) - Fires after a slide is removed
          init: function() {} //{NEW} Callback: function(slider) - Fires after the slider is initially setup
        };

        // FlexSlider: Plugin Function
        $.fn.flexslider = function(options) {
          if (options === undefined) options = {};

          if (typeof options === "object") {
            return this.each(function() {
              var $this = $(this),
                selector = (options.selector) ? options.selector :
                ".am-slides > li",
                $slides = $this.find(selector);

              if (($slides.length === 1 && options.allowOneSlide ===
                true) || $slides.length === 0) {
                $slides.fadeIn(400);
                if (options.start) options.start($this);
              } else if ($this.data('flexslider') === undefined) {
                new $.flexslider(this, options);
              }
            });
          } else {
            // Helper strings to quickly pecdrform functions on the slider
            var $slider = $(this).data('flexslider');
            switch (options) {
              case 'play':
                $slider.play();
                break;
              case 'pause':
                $slider.pause();
                break;
              case 'stop':
                $slider.stop();
                break;
              case 'next':
                $slider.flexAnimate($slider.getTarget('next'), true);
                break;
              case 'prev':
              case 'previous':
                $slider.flexAnimate($slider.getTarget('prev'), true);
                break;
              default:
                if (typeof options === 'number') {
                  $slider.flexAnimate(options, true);
                }
            }
          }
        };

        // Init code
        UI.ready(function(context) {
          $('[data-am-flexslider]', context).each(function(i, item) {
            var $slider = $(item);
            var options = UI.utils.parseOptions($slider.data(
              'amFlexslider'));

            options.before = function(slider) {
              if (slider._pausedTimer) {
                window.clearTimeout(slider._pausedTimer);
                slider._pausedTimer = null;
              }
            };

            options.after = function(slider) {
              var pauseTime = slider.vars.playAfterPaused;
              if (pauseTime && !isNaN(pauseTime) && !slider.playing) {
                if (!slider.manualPause && !slider.manualPlay && !
                  slider.stopped) {
                  slider._pausedTimer = window.setTimeout(function() {
                    slider.play();
                  }, pauseTime);
                }
              }
            };

            $slider.flexslider(options);
          });
        });

        // if (!slider.manualPause && !slider.manualPlay && !slider.stopped) slider.play();

        module.exports = $.flexslider;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  31: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        /* jshint unused: false */
        /* jshint -W101, -W116, -W109 */

        /*! iScroll v5.1.3
         * (c) 2008-2014 Matteo Spinelli
         * http://cubiq.org/license
         */

        var rAF = window.requestAnimationFrame ||
          window.webkitRequestAnimationFrame ||
          window.mozRequestAnimationFrame ||
          window.oRequestAnimationFrame ||
          window.msRequestAnimationFrame ||
          function(callback) {
            window.setTimeout(callback, 1000 / 60);
          };

        var utils = (function() {
          var me = {};

          var _elementStyle = document.createElement('div').style;
          var _vendor = (function() {
            var vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],
              transform,
              i = 0,
              l = vendors.length;

            for (; i < l; i++) {
              transform = vendors[i] + 'ransform';
              if (transform in _elementStyle) return vendors[i].substr(
                0, vendors[i].length - 1);
            }

            return false;
          })();

          function _prefixStyle(style) {
            if (_vendor === false) return false;
            if (_vendor === '') return style;
            return _vendor + style.charAt(0).toUpperCase() + style.substr(
              1);
          }

          me.getTime = Date.now || function getTime() {
            return new Date().getTime();
          };

          me.extend = function(target, obj) {
            for (var i in obj) {
              target[i] = obj[i];
            }
          };

          me.addEvent = function(el, type, fn, capture) {
            el.addEventListener(type, fn, !!capture);
          };

          me.removeEvent = function(el, type, fn, capture) {
            el.removeEventListener(type, fn, !!capture);
          };

          me.prefixPointerEvent = function(pointerEvent) {
            return window.MSPointerEvent ?
              'MSPointer' + pointerEvent.charAt(9).toUpperCase() +
              pointerEvent.substr(10) :
              pointerEvent;
          };

          me.momentum = function(current, start, time, lowerMargin,
            wrapperSize, deceleration) {
            var distance = current - start,
              speed = Math.abs(distance) / time,
              destination,
              duration;

            deceleration = deceleration === undefined ? 0.0006 :
              deceleration;

            destination = current + (speed * speed) / (2 * deceleration) *
              (distance < 0 ? -1 : 1);
            duration = speed / deceleration;

            if (destination < lowerMargin) {
              destination = wrapperSize ? lowerMargin - (wrapperSize /
                2.5 * (speed / 8)) : lowerMargin;
              distance = Math.abs(destination - current);
              duration = distance / speed;
            } else if (destination > 0) {
              destination = wrapperSize ? wrapperSize / 2.5 * (speed /
                8) : 0;
              distance = Math.abs(current) + destination;
              duration = distance / speed;
            }

            return {
              destination: Math.round(destination),
              duration: duration
            };
          };

          var _transform = _prefixStyle('transform');

          me.extend(me, {
            hasTransform: _transform !== false,
            hasPerspective: _prefixStyle('perspective') in
              _elementStyle,
            hasTouch: 'ontouchstart' in window,
            hasPointer: window.PointerEvent || window.MSPointerEvent, // IE10 is prefixed
            hasTransition: _prefixStyle('transition') in
              _elementStyle
          });

          // This should find all Android browsers lower than build 535.19 (both stock browser and webview)
          me.isBadAndroid = /Android /.test(window.navigator.appVersion) &&
            !(/Chrome\/\d/.test(window.navigator.appVersion));

          me.extend(me.style = {}, {
            transform: _transform,
            transitionTimingFunction: _prefixStyle(
              'transitionTimingFunction'),
            transitionDuration: _prefixStyle('transitionDuration'),
            transitionDelay: _prefixStyle('transitionDelay'),
            transformOrigin: _prefixStyle('transformOrigin')
          });

          me.hasClass = function(e, c) {
            var re = new RegExp("(^|\\s)" + c + "(\\s|$)");
            return re.test(e.className);
          };

          me.addClass = function(e, c) {
            if (me.hasClass(e, c)) {
              return;
            }

            var newclass = e.className.split(' ');
            newclass.push(c);
            e.className = newclass.join(' ');
          };

          me.removeClass = function(e, c) {
            if (!me.hasClass(e, c)) {
              return;
            }

            var re = new RegExp("(^|\\s)" + c + "(\\s|$)", 'g');
            e.className = e.className.replace(re, ' ');
          };

          me.offset = function(el) {
            var left = -el.offsetLeft,
              top = -el.offsetTop;

            // jshint -W084
            while (el = el.offsetParent) {
              left -= el.offsetLeft;
              top -= el.offsetTop;
            }
            // jshint +W084

            return {
              left: left,
              top: top
            };
          };

          me.preventDefaultException = function(el, exceptions) {
            for (var i in exceptions) {
              if (exceptions[i].test(el[i])) {
                return true;
              }
            }

            return false;
          };

          me.extend(me.eventType = {}, {
            touchstart: 1,
            touchmove: 1,
            touchend: 1,

            mousedown: 2,
            mousemove: 2,
            mouseup: 2,

            pointerdown: 3,
            pointermove: 3,
            pointerup: 3,

            MSPointerDown: 3,
            MSPointerMove: 3,
            MSPointerUp: 3
          });

          me.extend(me.ease = {}, {
            quadratic: {
              style: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',
              fn: function(k) {
                return k * (2 - k);
              }
            },
            circular: {
              style: 'cubic-bezier(0.1, 0.57, 0.1, 1)', // Not properly "circular" but this looks better, it should be (0.075, 0.82, 0.165, 1)
              fn: function(k) {
                return Math.sqrt(1 - (--k * k));
              }
            },
            back: {
              style: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',
              fn: function(k) {
                var b = 4;
                return (k = k - 1) * k * ((b + 1) * k + b) + 1;
              }
            },
            bounce: {
              style: '',
              fn: function(k) {
                if ((k /= 1) < (1 / 2.75)) {
                  return 7.5625 * k * k;
                } else if (k < (2 / 2.75)) {
                  return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;
                } else if (k < (2.5 / 2.75)) {
                  return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;
                } else {
                  return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;
                }
              }
            },
            elastic: {
              style: '',
              fn: function(k) {
                var f = 0.22,
                  e = 0.4;

                if (k === 0) {
                  return 0;
                }
                if (k == 1) {
                  return 1;
                }

                return (e * Math.pow(2, -10 * k) * Math.sin((k - f /
                  4) * (2 * Math.PI) / f) + 1);
              }
            }
          });

          me.tap = function(e, eventName) {
            var ev = document.createEvent('Event');
            ev.initEvent(eventName, true, true);
            ev.pageX = e.pageX;
            ev.pageY = e.pageY;
            e.target.dispatchEvent(ev);
          };

          me.click = function(e) {
            var target = e.target,
              ev;

            if (!(/(SELECT|INPUT|TEXTAREA)/i).test(target.tagName)) {
              ev = document.createEvent('MouseEvents');
              ev.initMouseEvent('click', true, true, e.view, 1,
                target.screenX, target.screenY, target.clientX, target.clientY,
                e.ctrlKey, e.altKey, e.shiftKey, e.metaKey,
                0, null);

              ev._constructed = true;
              target.dispatchEvent(ev);
            }
          };

          return me;
        })();

        function IScroll(el, options) {
          this.wrapper = typeof el == 'string' ? document.querySelector(el) :
            el;
          this.scroller = this.wrapper.children[0];
          this.scrollerStyle = this.scroller.style; // cache style for better performance

          this.options = {

            // INSERT POINT: OPTIONS

            startX: 0,
            startY: 0,
            scrollY: true,
            directionLockThreshold: 5,
            momentum: true,

            bounce: true,
            bounceTime: 600,
            bounceEasing: '',

            preventDefault: true,
            preventDefaultException: {
              tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/
            },

            HWCompositing: true,
            useTransition: true,
            useTransform: true
          };

          for (var i in options) {
            this.options[i] = options[i];
          }

          // Normalize options
          this.translateZ = this.options.HWCompositing && utils.hasPerspective ?
            ' translateZ(0)' : '';

          this.options.useTransition = utils.hasTransition && this.options.useTransition;
          this.options.useTransform = utils.hasTransform && this.options.useTransform;

          this.options.eventPassthrough = this.options.eventPassthrough ===
            true ? 'vertical' : this.options.eventPassthrough;
          this.options.preventDefault = !this.options.eventPassthrough &&
            this.options.preventDefault;

          // If you want eventPassthrough I have to lock one of the axes
          this.options.scrollY = this.options.eventPassthrough ==
            'vertical' ? false : this.options.scrollY;
          this.options.scrollX = this.options.eventPassthrough ==
            'horizontal' ? false : this.options.scrollX;

          // With eventPassthrough we also need lockDirection mechanism
          this.options.freeScroll = this.options.freeScroll && !this.options
            .eventPassthrough;
          this.options.directionLockThreshold = this.options.eventPassthrough ?
            0 : this.options.directionLockThreshold;

          this.options.bounceEasing = typeof this.options.bounceEasing ==
            'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular :
            this.options.bounceEasing;

          this.options.resizePolling = this.options.resizePolling ===
            undefined ? 60 : this.options.resizePolling;

          if (this.options.tap === true) {
            this.options.tap = 'tap';
          }

          // INSERT POINT: NORMALIZATION

          // Some defaults
          this.x = 0;
          this.y = 0;
          this.directionX = 0;
          this.directionY = 0;
          this._events = {};

          // INSERT POINT: DEFAULTS

          this._init();
          this.refresh();

          this.scrollTo(this.options.startX, this.options.startY);
          this.enable();
        }

        IScroll.prototype = {
          version: '5.1.3',

          _init: function() {
            this._initEvents();

            // INSERT POINT: _init

          },

          destroy: function() {
            this._initEvents(true);

            this._execEvent('destroy');
          },

          _transitionEnd: function(e) {
            if (e.target != this.scroller || !this.isInTransition) {
              return;
            }

            this._transitionTime();
            if (!this.resetPosition(this.options.bounceTime)) {
              this.isInTransition = false;
              this._execEvent('scrollEnd');
            }
          },

          _start: function(e) {
            // React to left mouse button only
            if (utils.eventType[e.type] != 1) {
              if (e.button !== 0) {
                return;
              }
            }

            if (!this.enabled || (this.initiated && utils.eventType[e.type] !==
              this.initiated)) {
              return;
            }

            if (this.options.preventDefault && !utils.isBadAndroid && !
              utils.preventDefaultException(e.target, this.options.preventDefaultException)
            ) {
              e.preventDefault();
            }

            var point = e.touches ? e.touches[0] : e,
              pos;

            this.initiated = utils.eventType[e.type];
            this.moved = false;
            this.distX = 0;
            this.distY = 0;
            this.directionX = 0;
            this.directionY = 0;
            this.directionLocked = 0;

            this._transitionTime();

            this.startTime = utils.getTime();

            if (this.options.useTransition && this.isInTransition) {
              this.isInTransition = false;
              pos = this.getComputedPosition();
              this._translate(Math.round(pos.x), Math.round(pos.y));
              this._execEvent('scrollEnd');
            } else if (!this.options.useTransition && this.isAnimating) {
              this.isAnimating = false;
              this._execEvent('scrollEnd');
            }

            this.startX = this.x;
            this.startY = this.y;
            this.absStartX = this.x;
            this.absStartY = this.y;
            this.pointX = point.pageX;
            this.pointY = point.pageY;

            this._execEvent('beforeScrollStart');
          },

          _move: function(e) {
            if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
              return;
            }

            if (this.options.preventDefault) { // increases performance on Android? TODO: check!
              e.preventDefault();
            }

            var point = e.touches ? e.touches[0] : e,
              deltaX = point.pageX - this.pointX,
              deltaY = point.pageY - this.pointY,
              timestamp = utils.getTime(),
              newX, newY,
              absDistX, absDistY;

            this.pointX = point.pageX;
            this.pointY = point.pageY;

            this.distX += deltaX;
            this.distY += deltaY;
            absDistX = Math.abs(this.distX);
            absDistY = Math.abs(this.distY);

            // We need to move at least 10 pixels for the scrolling to initiate
            if (timestamp - this.endTime > 300 && (absDistX < 10 &&
              absDistY < 10)) {
              return;
            }

            // If you are scrolling in one direction lock the other
            if (!this.directionLocked && !this.options.freeScroll) {
              if (absDistX > absDistY + this.options.directionLockThreshold) {
                this.directionLocked = 'h'; // lock horizontally
              } else if (absDistY >= absDistX + this.options.directionLockThreshold) {
                this.directionLocked = 'v'; // lock vertically
              } else {
                this.directionLocked = 'n'; // no lock
              }
            }

            if (this.directionLocked == 'h') {
              if (this.options.eventPassthrough == 'vertical') {
                e.preventDefault();
              } else if (this.options.eventPassthrough == 'horizontal') {
                this.initiated = false;
                return;
              }

              deltaY = 0;
            } else if (this.directionLocked == 'v') {
              if (this.options.eventPassthrough == 'horizontal') {
                e.preventDefault();
              } else if (this.options.eventPassthrough == 'vertical') {
                this.initiated = false;
                return;
              }

              deltaX = 0;
            }

            deltaX = this.hasHorizontalScroll ? deltaX : 0;
            deltaY = this.hasVerticalScroll ? deltaY : 0;

            newX = this.x + deltaX;
            newY = this.y + deltaY;

            // Slow down if outside of the boundaries
            if (newX > 0 || newX < this.maxScrollX) {
              newX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ?
                0 : this.maxScrollX;
            }
            if (newY > 0 || newY < this.maxScrollY) {
              newY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ?
                0 : this.maxScrollY;
            }

            this.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;
            this.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;

            if (!this.moved) {
              this._execEvent('scrollStart');
            }

            this.moved = true;

            this._translate(newX, newY);

            /* REPLACE START: _move */

            if (timestamp - this.startTime > 300) {
              this.startTime = timestamp;
              this.startX = this.x;
              this.startY = this.y;
            }

            /* REPLACE END: _move */

          },

          _end: function(e) {
            if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
              return;
            }

            if (this.options.preventDefault && !utils.preventDefaultException(
              e.target, this.options.preventDefaultException)) {
              e.preventDefault();
            }

            var point = e.changedTouches ? e.changedTouches[0] : e,
              momentumX,
              momentumY,
              duration = utils.getTime() - this.startTime,
              newX = Math.round(this.x),
              newY = Math.round(this.y),
              distanceX = Math.abs(newX - this.startX),
              distanceY = Math.abs(newY - this.startY),
              time = 0,
              easing = '';

            this.isInTransition = 0;
            this.initiated = 0;
            this.endTime = utils.getTime();

            // reset if we are outside of the boundaries
            if (this.resetPosition(this.options.bounceTime)) {
              return;
            }

            this.scrollTo(newX, newY); // ensures that the last position is rounded

            // we scrolled less than 10 pixels
            if (!this.moved) {
              if (this.options.tap) {
                utils.tap(e, this.options.tap);
              }

              if (this.options.click) {
                utils.click(e);
              }

              this._execEvent('scrollCancel');
              return;
            }

            if (this._events.flick && duration < 200 && distanceX < 100 &&
              distanceY < 100) {
              this._execEvent('flick');
              return;
            }

            // start momentum animation if needed
            if (this.options.momentum && duration < 300) {
              momentumX = this.hasHorizontalScroll ? utils.momentum(this.x,
                this.startX, duration, this.maxScrollX, this.options.bounce ?
                this.wrapperWidth : 0, this.options.deceleration) : {
                destination: newX,
                duration: 0
              };
              momentumY = this.hasVerticalScroll ? utils.momentum(this.y,
                this.startY, duration, this.maxScrollY, this.options.bounce ?
                this.wrapperHeight : 0, this.options.deceleration) : {
                destination: newY,
                duration: 0
              };
              newX = momentumX.destination;
              newY = momentumY.destination;
              time = Math.max(momentumX.duration, momentumY.duration);
              this.isInTransition = 1;
            }

            // INSERT POINT: _end

            if (newX != this.x || newY != this.y) {
              // change easing function when scroller goes out of the boundaries
              if (newX > 0 || newX < this.maxScrollX || newY > 0 || newY <
                this.maxScrollY) {
                easing = utils.ease.quadratic;
              }

              this.scrollTo(newX, newY, time, easing);
              return;
            }

            this._execEvent('scrollEnd');
          },

          _resize: function() {
            var that = this;

            clearTimeout(this.resizeTimeout);

            this.resizeTimeout = setTimeout(function() {
              that.refresh();
            }, this.options.resizePolling);
          },

          resetPosition: function(time) {
            var x = this.x,
              y = this.y;

            time = time || 0;

            if (!this.hasHorizontalScroll || this.x > 0) {
              x = 0;
            } else if (this.x < this.maxScrollX) {
              x = this.maxScrollX;
            }

            if (!this.hasVerticalScroll || this.y > 0) {
              y = 0;
            } else if (this.y < this.maxScrollY) {
              y = this.maxScrollY;
            }

            if (x == this.x && y == this.y) {
              return false;
            }

            this.scrollTo(x, y, time, this.options.bounceEasing);

            return true;
          },

          disable: function() {
            this.enabled = false;
          },

          enable: function() {
            this.enabled = true;
          },

          refresh: function() {
            var rf = this.wrapper.offsetHeight; // Force reflow

            this.wrapperWidth = this.wrapper.clientWidth;
            this.wrapperHeight = this.wrapper.clientHeight;

            /* REPLACE START: refresh */

            this.scrollerWidth = this.scroller.offsetWidth;
            this.scrollerHeight = this.scroller.offsetHeight;

            this.maxScrollX = this.wrapperWidth - this.scrollerWidth;
            this.maxScrollY = this.wrapperHeight - this.scrollerHeight;

            /* REPLACE END: refresh */

            this.hasHorizontalScroll = this.options.scrollX && this.maxScrollX <
              0;
            this.hasVerticalScroll = this.options.scrollY && this.maxScrollY <
              0;

            if (!this.hasHorizontalScroll) {
              this.maxScrollX = 0;
              this.scrollerWidth = this.wrapperWidth;
            }

            if (!this.hasVerticalScroll) {
              this.maxScrollY = 0;
              this.scrollerHeight = this.wrapperHeight;
            }

            this.endTime = 0;
            this.directionX = 0;
            this.directionY = 0;

            this.wrapperOffset = utils.offset(this.wrapper);

            this._execEvent('refresh');

            this.resetPosition();

            // INSERT POINT: _refresh

          },

          on: function(type, fn) {
            if (!this._events[type]) {
              this._events[type] = [];
            }

            this._events[type].push(fn);
          },

          off: function(type, fn) {
            if (!this._events[type]) {
              return;
            }

            var index = this._events[type].indexOf(fn);

            if (index > -1) {
              this._events[type].splice(index, 1);
            }
          },

          _execEvent: function(type) {
            if (!this._events[type]) {
              return;
            }

            var i = 0,
              l = this._events[type].length;

            if (!l) {
              return;
            }

            for (; i < l; i++) {
              this._events[type][i].apply(this, [].slice.call(arguments, 1));
            }
          },

          scrollBy: function(x, y, time, easing) {
            x = this.x + x;
            y = this.y + y;
            time = time || 0;

            this.scrollTo(x, y, time, easing);
          },

          scrollTo: function(x, y, time, easing) {
            easing = easing || utils.ease.circular;

            this.isInTransition = this.options.useTransition && time > 0;

            if (!time || (this.options.useTransition && easing.style)) {
              this._transitionTimingFunction(easing.style);
              this._transitionTime(time);
              this._translate(x, y);
            } else {
              this._animate(x, y, time, easing.fn);
            }
          },

          scrollToElement: function(el, time, offsetX, offsetY, easing) {
            el = el.nodeType ? el : this.scroller.querySelector(el);

            if (!el) {
              return;
            }

            var pos = utils.offset(el);

            pos.left -= this.wrapperOffset.left;
            pos.top -= this.wrapperOffset.top;

            // if offsetX/Y are true we center the element to the screen
            if (offsetX === true) {
              offsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth /
                2);
            }
            if (offsetY === true) {
              offsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight /
                2);
            }

            pos.left -= offsetX || 0;
            pos.top -= offsetY || 0;

            pos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this
              .maxScrollX : pos.left;
            pos.top = pos.top > 0 ? 0 : pos.top < this.maxScrollY ? this.maxScrollY :
              pos.top;

            time = time === undefined || time === null || time === 'auto' ?
              Math.max(Math.abs(this.x - pos.left), Math.abs(this.y - pos.top)) :
              time;

            this.scrollTo(pos.left, pos.top, time, easing);
          },

          _transitionTime: function(time) {
            time = time || 0;

            this.scrollerStyle[utils.style.transitionDuration] = time +
              'ms';

            if (!time && utils.isBadAndroid) {
              this.scrollerStyle[utils.style.transitionDuration] = '0.001s';
            }

            // INSERT POINT: _transitionTime

          },

          _transitionTimingFunction: function(easing) {
            this.scrollerStyle[utils.style.transitionTimingFunction] =
              easing;

            // INSERT POINT: _transitionTimingFunction

          },

          _translate: function(x, y) {
            if (this.options.useTransform) {

              /* REPLACE START: _translate */

              this.scrollerStyle[utils.style.transform] = 'translate(' + x +
                'px,' + y + 'px)' + this.translateZ;

              /* REPLACE END: _translate */

            } else {
              x = Math.round(x);
              y = Math.round(y);
              this.scrollerStyle.left = x + 'px';
              this.scrollerStyle.top = y + 'px';
            }

            this.x = x;
            this.y = y;

            // INSERT POINT: _translate

          },

          _initEvents: function(remove) {
            var eventType = remove ? utils.removeEvent : utils.addEvent,
              target = this.options.bindToWrapper ? this.wrapper : window;

            eventType(window, 'orientationchange', this);
            eventType(window, 'resize', this);

            if (this.options.click) {
              eventType(this.wrapper, 'click', this, true);
            }

            if (!this.options.disableMouse) {
              eventType(this.wrapper, 'mousedown', this);
              eventType(target, 'mousemove', this);
              eventType(target, 'mousecancel', this);
              eventType(target, 'mouseup', this);
            }

            if (utils.hasPointer && !this.options.disablePointer) {
              eventType(this.wrapper, utils.prefixPointerEvent(
                'pointerdown'), this);
              eventType(target, utils.prefixPointerEvent('pointermove'),
                this);
              eventType(target, utils.prefixPointerEvent('pointercancel'),
                this);
              eventType(target, utils.prefixPointerEvent('pointerup'), this);
            }

            if (utils.hasTouch && !this.options.disableTouch) {
              eventType(this.wrapper, 'touchstart', this);
              eventType(target, 'touchmove', this);
              eventType(target, 'touchcancel', this);
              eventType(target, 'touchend', this);
            }

            eventType(this.scroller, 'transitionend', this);
            eventType(this.scroller, 'webkitTransitionEnd', this);
            eventType(this.scroller, 'oTransitionEnd', this);
            eventType(this.scroller, 'MSTransitionEnd', this);
          },

          getComputedPosition: function() {
            var matrix = window.getComputedStyle(this.scroller, null),
              x, y;

            if (this.options.useTransform) {
              matrix = matrix[utils.style.transform].split(')')[0].split(
                ', ');
              x = +(matrix[12] || matrix[4]);
              y = +(matrix[13] || matrix[5]);
            } else {
              x = +matrix.left.replace(/[^-\d.]/g, '');
              y = +matrix.top.replace(/[^-\d.]/g, '');
            }

            return {
              x: x,
              y: y
            };
          },

          _animate: function(destX, destY, duration, easingFn) {
            var that = this,
              startX = this.x,
              startY = this.y,
              startTime = utils.getTime(),
              destTime = startTime + duration;

            function step() {
              var now = utils.getTime(),
                newX, newY,
                easing;

              if (now >= destTime) {
                that.isAnimating = false;
                that._translate(destX, destY);

                if (!that.resetPosition(that.options.bounceTime)) {
                  that._execEvent('scrollEnd');
                }

                return;
              }

              now = (now - startTime) / duration;
              easing = easingFn(now);
              newX = (destX - startX) * easing + startX;
              newY = (destY - startY) * easing + startY;
              that._translate(newX, newY);

              if (that.isAnimating) {
                rAF(step);
              }
            }

            this.isAnimating = true;
            step();
          },
          handleEvent: function(e) {
            switch (e.type) {
              case 'touchstart':
              case 'pointerdown':
              case 'MSPointerDown':
              case 'mousedown':
                this._start(e);
                break;
              case 'touchmove':
              case 'pointermove':
              case 'MSPointerMove':
              case 'mousemove':
                this._move(e);
                break;
              case 'touchend':
              case 'pointerup':
              case 'MSPointerUp':
              case 'mouseup':
              case 'touchcancel':
              case 'pointercancel':
              case 'MSPointerCancel':
              case 'mousecancel':
                this._end(e);
                break;
              case 'orientationchange':
              case 'resize':
                this._resize();
                break;
              case 'transitionend':
              case 'webkitTransitionEnd':
              case 'oTransitionEnd':
              case 'MSTransitionEnd':
                this._transitionEnd(e);
                break;
              case 'wheel':
              case 'DOMMouseScroll':
              case 'mousewheel':
                this._wheel(e);
                break;
              case 'keydown':
                this._key(e);
                break;
              case 'click':
                if (!e._constructed) {
                  e.preventDefault();
                  e.stopPropagation();
                }
                break;
            }
          }
        };

        IScroll.utils = utils;

        $.AMUI.iScroll = IScroll;

        module.exports = IScroll;

        /* jshint unused: true */
        /* jshint +W101, +W116, +W109 */

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  32: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var dimmer = require('./ui.dimmer');
        var $doc = $(document);
        var supportTransition = UI.support.transition;

        /**
         * @reference https://github.com/nolimits4web/Framework7/blob/master/src/js/modals.js
         * @license https://github.com/nolimits4web/Framework7/blob/master/LICENSE
         */

        var Modal = function(element, options) {
          this.options = $.extend({}, Modal.DEFAULTS, options || {});
          this.$element = $(element);
          this.$dialog = this.$element.find('.am-modal-dialog');

          if (!this.$element.attr('id')) {
            this.$element.attr('id', UI.utils.generateGUID('am-modal'));
          }

          this.isPopup = this.$element.hasClass('am-popup');
          this.isActions = this.$element.hasClass('am-modal-actions');
          this.isPrompt = this.$element.hasClass('am-modal-prompt');
          this.isLoading = this.$element.hasClass('am-modal-loading');
          this.active = this.transitioning = this.relatedTarget = null;

          this.events();
        };

        Modal.DEFAULTS = {
          className: {
            active: 'am-modal-active',
            out: 'am-modal-out'
          },
          selector: {
            modal: '.am-modal',
            active: '.am-modal-active'
          },
          closeViaDimmer: true,
          cancelable: true,
          onConfirm: function() {},
          onCancel: function() {},
          height: undefined,
          width: undefined,
          duration: 300, // must equal the CSS transition duration
          transitionEnd: supportTransition && supportTransition.end +
            '.modal.amui'
        };

        Modal.prototype.toggle = function(relatedTarget) {
          return this.active ? this.close() : this.open(relatedTarget);
        };

        Modal.prototype.open = function(relatedTarget) {
          var $element = this.$element;
          var options = this.options;
          var isPopup = this.isPopup;
          var width = options.width;
          var height = options.height;
          var style = {};

          if (this.active) {
            return;
          }

          if (!this.$element.length) {
            return;
          }

          // callback hook
          relatedTarget && (this.relatedTarget = relatedTarget);

          // 判断如果还在动画，就先触发之前的closed事件
          if (this.transitioning) {
            clearTimeout($element.transitionEndTimmer);
            $element.transitionEndTimmer = null;
            $element.trigger(options.transitionEnd).off(options.transitionEnd);
          }

          isPopup && this.$element.show();

          this.active = true;

          $element.trigger($.Event('open.modal.amui', {
            relatedTarget: relatedTarget
          }));

          dimmer.open($element);

          $element.show().redraw();

          // apply Modal width/height if set
          if (!isPopup && !this.isActions) {
            if (width) {
              width = parseInt(width, 10);
              style.width = width + 'px';
              style.marginLeft = -parseInt(width / 2) + 'px';
            }

            if (height) {
              height = parseInt(height, 10);
              // style.height = height + 'px';
              style.marginTop = -parseInt(height / 2) + 'px';

              // the background color is styled to $dialog
              // so the height should set to $dialog
              this.$dialog.css({
                height: height + 'px'
              });
            } else {
              style.marginTop = -parseInt($element.height() / 2, 10) + 'px';
            }

            $element.css(style);
          }

          $element.
          removeClass(options.className.out).
          addClass(options.className.active);

          this.transitioning = 1;

          var complete = function() {
            $element.trigger($.Event('opened.modal.amui', {
              relatedTarget: relatedTarget
            }));
            this.transitioning = 0;

            // Prompt auto focus
            if (this.isPrompt) {
              this.$dialog.find('input').eq(0).focus();
            }
          };

          if (!supportTransition) {
            return complete.call(this);
          }

          $element.
          one(options.transitionEnd, $.proxy(complete, this)).
          emulateTransitionEnd(options.duration);
        };

        Modal.prototype.close = function(relatedTarget) {
          if (!this.active) {
            return;
          }

          var $element = this.$element;
          var options = this.options;
          var isPopup = this.isPopup;

          // 判断如果还在动画，就先触发之前的opened事件
          if (this.transitioning) {
            clearTimeout($element.transitionEndTimmer);
            $element.transitionEndTimmer = null;
            $element.trigger(options.transitionEnd).off(options.transitionEnd);
            dimmer.close($element, true);
          }

          this.$element.trigger($.Event('close.modal.amui', {
            relatedTarget: relatedTarget
          }));

          this.transitioning = 1;

          var complete = function() {
            $element.trigger('closed.modal.amui');
            isPopup && $element.removeClass(options.className.out);
            $element.hide();
            this.transitioning = 0;
            // 不强制关闭 Dimmer，以便多个 Modal 可以共享 Dimmer
            dimmer.close($element, false);
            this.active = false;
          };

          $element.removeClass(options.className.active).
          addClass(options.className.out);

          if (!supportTransition) {
            return complete.call(this);
          }

          $element.one(options.transitionEnd, $.proxy(complete, this)).
          emulateTransitionEnd(options.duration);
        };

        Modal.prototype.events = function() {
          var that = this;
          var $element = this.$element;
          var $ipt = $element.find('.am-modal-prompt-input');
          var getData = function() {
            var data = [];
            $ipt.each(function() {
              data.push($(this).val());
            });

            return (data.length === 0) ? undefined :
              ((data.length === 1) ? data[0] : data);
          };

          // close via Esc key
          if (this.options.cancelable) {
            $element.on('keyup.modal.amui', function(e) {
              if (that.active && e.which === 27) {
                $element.trigger('cancel.modal.amui');
                that.close();
              }
            });
          }

          // Close Modal when dimmer clicked
          if (this.options.closeViaDimmer && !this.isLoading) {
            dimmer.$element.on('click.dimmer.modal.amui', function(e) {
              that.close();
            });
          }

          // Close Modal when button clicked
          $element.find('[data-am-modal-close], .am-modal-btn').
          on('click.close.modal.amui', function(e) {
            e.preventDefault();
            that.close();
          });

          $element.find('[data-am-modal-confirm]').on(
            'click.confirm.modal.amui',
            function() {
              $element.trigger($.Event('confirm.modal.amui', {
                trigger: this
              }));
            });

          $element.find('[data-am-modal-cancel]').
          on('click.cancel.modal.amui', function() {
            $element.trigger($.Event('cancel.modal.amui', {
              trigger: this
            }));
          });

          $element.on('confirm.modal.amui', function(e) {
            e.data = getData();
            that.options.onConfirm.call(that, e);
          }).on('cancel.modal.amui', function(e) {
            e.data = getData();
            that.options.onCancel.call(that, e);
          });
        };

        function Plugin(option, relatedTarget) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.modal');
            var options = $.extend({},
              Modal.DEFAULTS, typeof option == 'object' && option);

            if (!data) {
              $this.data('amui.modal', (data = new Modal(this, options)));
            }

            if (typeof option == 'string') {
              data[option] && data[option](relatedTarget);
            } else {
              data.toggle(option && option.relatedTarget || undefined);
            }
          });
        }

        $.fn.modal = Plugin;

        // Init
        $doc.on('click.modal.amui.data-api', '[data-am-modal]', function() {
          var $this = $(this);
          var options = UI.utils.parseOptions($this.attr('data-am-modal'));
          var $target = $(options.target ||
            (this.href && this.href.replace(/.*(?=#[^\s]+$)/, '')));
          var option = $target.data('amui.modal') ? 'toggle' : options;

          Plugin.call($target, option, this);
        });

        $.AMUI.modal = Modal;

        module.exports = Modal;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.dimmer": 28
    }
  ],
  33: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var Hammer = require('./util.hammer');
        var $win = $(window);
        var $doc = $(document);
        var scrollPos;

        /**
         * @via https://github.com/uikit/uikit/blob/master/src/js/offcanvas.js
         * @license https://github.com/uikit/uikit/blob/master/LICENSE.md
         */

        var OffCanvas = function(element, options) {
          this.$element = $(element);
          this.options = $.extend({}, OffCanvas.DEFAULTS, options);
          this.active = null;
          this.bindEvents();
        };

        OffCanvas.DEFAULTS = {
          duration: 300,
          effect: 'overlay' // {push|overlay}, push is too expensive
        };

        OffCanvas.prototype.open = function(relatedElement) {
          var _this = this;
          var $element = this.$element;

          if (!$element.length || $element.hasClass('am-active')) {
            return;
          }

          var effect = this.options.effect;
          var $html = $('html');
          var $body = $('body');
          var $bar = $element.find('.am-offcanvas-bar').first();
          var dir = $bar.hasClass('am-offcanvas-bar-flip') ? -1 : 1;

          $bar.addClass('am-offcanvas-bar-' + effect);

          scrollPos = {
            x: window.scrollX,
            y: window.scrollY
          };

          $element.addClass('am-active');

          $body.css({
            width: window.innerWidth,
            height: $win.height()
          }).addClass('am-offcanvas-page');

          if (effect !== 'overlay') {
            $body.css({
              'margin-left': $bar.outerWidth() * dir
            }).width(); // force redraw
          }

          $html.css('margin-top', scrollPos.y * -1);

          setTimeout(function() {
            $bar.addClass('am-offcanvas-bar-active').width();
          }, 0);

          $element.trigger('open.offcanvas.amui');

          this.active = 1;

          // Close OffCanvas when none content area clicked
          $element.on('click.offcanvas.amui', function(e) {
            var $target = $(e.target);

            if ($target.hasClass('am-offcanvas-bar')) {
              return;
            }

            if ($target.parents('.am-offcanvas-bar').first().length) {
              return;
            }

            // https://developer.mozilla.org/zh-CN/docs/DOM/event.stopImmediatePropagation
            e.stopImmediatePropagation();

            _this.close();
          });

          $html.on('keydown.offcanvas.amui', function(e) {
            (e.keyCode === 27) && _this.close();
          });
        };

        OffCanvas.prototype.close = function(relatedElement) {
          var _this = this;
          var $html = $('html');
          var $body = $('body');
          var $element = this.$element;
          var $bar = $element.find('.am-offcanvas-bar').first();

          if (!$element.length || !this.active || !$element.hasClass(
            'am-active')) {
            return;
          }

          $element.trigger('close.offcanvas.amui');

          function complete() {
            $body.removeClass('am-offcanvas-page').
            css({
              width: '',
              height: '',
              'margin-left': '',
              'margin-right': ''
            });
            $element.removeClass('am-active');
            $bar.removeClass('am-offcanvas-bar-active');
            $html.css('margin-top', '');
            window.scrollTo(scrollPos.x, scrollPos.y);
            $element.trigger('closed.offcanvas.amui');
            _this.active = 0;
          }

          if (UI.support.transition) {
            setTimeout(function() {
              $bar.removeClass('am-offcanvas-bar-active');
            }, 0);

            $body.css('margin-left', '').one(UI.support.transition.end,
              function() {
                complete();
              }).emulateTransitionEnd(this.options.duration);
          } else {
            complete();
          }

          $element.off('click.offcanvas.amui');
          $html.off('.offcanvas.amui');
        };

        OffCanvas.prototype.bindEvents = function() {
          var _this = this;
          $doc.on('click.offcanvas.amui', '[data-am-dismiss="offcanvas"]',
            function(e) {
              e.preventDefault();
              _this.close();
            });

          $win.on('resize.offcanvas.amui orientationchange.offcanvas.amui',
            function() {
              _this.active && _this.close();
            });

          this.$element.hammer().on('swipeleft swipeleft', function(e) {
            e.preventDefault();
            _this.close();
          });

          return this;
        };

        function Plugin(option, relatedElement) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.offcanvas');
            var options = $.extend({}, typeof option == 'object' &&
              option);

            if (!data) {
              $this.data('amui.offcanvas', (data = new OffCanvas(this,
                options)));
              (!option || typeof option == 'object') && data.open(
                relatedElement);
            }

            if (typeof option == 'string') {
              data[option] && data[option](relatedElement);
            }
          });
        }

        $.fn.offCanvas = Plugin;

        // Init code
        $doc.on('click.offcanvas.amui', '[data-am-offcanvas]', function(e) {
          e.preventDefault();
          var $this = $(this);
          var options = UI.utils.parseOptions($this.data('amOffcanvas'));
          var $target = $(options.target ||
            (this.href && this.href.replace(/.*(?=#[^\s]+$)/, '')));
          var option = $target.data('amui.offcanvas') ? 'open' : options;

          Plugin.call($target, option, this);
        });

        $.AMUI.offcanvas = OffCanvas;

        module.exports = OffCanvas;

        // TODO: 优化动画效果
        // http://dbushell.github.io/Responsive-Off-Canvas-Menu/step4.html

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./util.hammer": 51
    }
  ],
  34: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        /**
         * @via https://github.com/manuelstofer/pinchzoom/blob/master/src/pinchzoom.js
         * @license the MIT License.
         */

        var definePinchZoom = function($) {
          /**
           * Pinch zoom using jQuery
           * @version 0.0.2
           * @author Manuel Stofer <mst@rtp.ch>
           * @param el
           * @param options
           * @constructor
           */
          var PinchZoom = function(el, options) {
              this.el = $(el);
              this.zoomFactor = 1;
              this.lastScale = 1;
              this.offset = {
                x: 0,
                y: 0
              };
              this.options = $.extend({}, this.defaults, options);
              this.setupMarkup();
              this.bindEvents();
              this.update();
              // default enable.
              this.enable();

            },
            sum = function(a, b) {
              return a + b;
            },
            isCloseTo = function(value, expected) {
              return value > expected - 0.01 && value < expected + 0.01;
            };

          PinchZoom.prototype = {

            defaults: {
              tapZoomFactor: 2,
              zoomOutFactor: 1.3,
              animationDuration: 300,
              animationInterval: 5,
              maxZoom: 5,
              minZoom: 0.5,
              lockDragAxis: false,
              use2d: false,
              zoomStartEventName: 'pz_zoomstart',
              zoomEndEventName: 'pz_zoomend',
              dragStartEventName: 'pz_dragstart',
              dragEndEventName: 'pz_dragend',
              doubleTapEventName: 'pz_doubletap'
            },

            /**
             * Event handler for 'dragstart'
             * @param event
             */
            handleDragStart: function(event) {
              this.el.trigger(this.options.dragStartEventName);
              this.stopAnimation();
              this.lastDragPosition = false;
              this.hasInteraction = true;
              this.handleDrag(event);
            },

            /**
             * Event handler for 'drag'
             * @param event
             */
            handleDrag: function(event) {

              if (this.zoomFactor > 1.0) {
                var touch = this.getTouches(event)[0];
                this.drag(touch, this.lastDragPosition);
                this.offset = this.sanitizeOffset(this.offset);
                this.lastDragPosition = touch;
              }
            },

            handleDragEnd: function() {
              this.el.trigger(this.options.dragEndEventName);
              this.end();
            },

            /**
             * Event handler for 'zoomstart'
             * @param event
             */
            handleZoomStart: function(event) {
              this.el.trigger(this.options.zoomStartEventName);
              this.stopAnimation();
              this.lastScale = 1;
              this.nthZoom = 0;
              this.lastZoomCenter = false;
              this.hasInteraction = true;
            },

            /**
             * Event handler for 'zoom'
             * @param event
             */
            handleZoom: function(event, newScale) {

              // a relative scale factor is used
              var touchCenter = this.getTouchCenter(this.getTouches(event)),
                scale = newScale / this.lastScale;
              this.lastScale = newScale;

              // the first touch events are thrown away since they are not precise
              this.nthZoom += 1;
              if (this.nthZoom > 3) {

                this.scale(scale, touchCenter);
                this.drag(touchCenter, this.lastZoomCenter);
              }
              this.lastZoomCenter = touchCenter;
            },

            handleZoomEnd: function() {
              this.el.trigger(this.options.zoomEndEventName);
              this.end();
            },

            /**
             * Event handler for 'doubletap'
             * @param event
             */
            handleDoubleTap: function(event) {
              var center = this.getTouches(event)[0],
                zoomFactor = this.zoomFactor > 1 ? 1 : this.options.tapZoomFactor,
                startZoomFactor = this.zoomFactor,
                updateProgress = (function(progress) {
                  this.scaleTo(startZoomFactor + progress * (zoomFactor -
                    startZoomFactor), center);
                }).bind(this);

              if (this.hasInteraction) {
                return;
              }
              if (startZoomFactor > zoomFactor) {
                center = this.getCurrentZoomCenter();
              }

              this.animate(this.options.animationDuration, this.options.animationInterval,
                updateProgress, this.swing);
              this.el.trigger(this.options.doubleTapEventName);
            },

            /**
             * Max / min values for the offset
             * @param offset
             * @return {Object} the sanitized offset
             */
            sanitizeOffset: function(offset) {
              var maxX = (this.zoomFactor - 1) * this.getContainerX(),
                maxY = (this.zoomFactor - 1) * this.getContainerY(),
                maxOffsetX = Math.max(maxX, 0),
                maxOffsetY = Math.max(maxY, 0),
                minOffsetX = Math.min(maxX, 0),
                minOffsetY = Math.min(maxY, 0);

              return {
                x: Math.min(Math.max(offset.x, minOffsetX), maxOffsetX),
                y: Math.min(Math.max(offset.y, minOffsetY), maxOffsetY)
              };
            },

            /**
             * Scale to a specific zoom factor (not relative)
             * @param zoomFactor
             * @param center
             */
            scaleTo: function(zoomFactor, center) {
              this.scale(zoomFactor / this.zoomFactor, center);
            },

            /**
             * Scales the element from specified center
             * @param scale
             * @param center
             */
            scale: function(scale, center) {
              scale = this.scaleZoomFactor(scale);
              this.addOffset({
                x: (scale - 1) * (center.x + this.offset.x),
                y: (scale - 1) * (center.y + this.offset.y)
              });
            },

            /**
             * Scales the zoom factor relative to current state
             * @param scale
             * @return the actual scale (can differ because of max min zoom factor)
             */
            scaleZoomFactor: function(scale) {
              var originalZoomFactor = this.zoomFactor;
              this.zoomFactor *= scale;
              this.zoomFactor = Math.min(this.options.maxZoom, Math.max(
                this.zoomFactor, this.options.minZoom));
              return this.zoomFactor / originalZoomFactor;
            },

            /**
             * Drags the element
             * @param center
             * @param lastCenter
             */
            drag: function(center, lastCenter) {
              if (lastCenter) {
                if (this.options.lockDragAxis) {
                  // lock scroll to position that was changed the most
                  if (Math.abs(center.x - lastCenter.x) > Math.abs(center
                    .y - lastCenter.y)) {
                    this.addOffset({
                      x: -(center.x - lastCenter.x),
                      y: 0
                    });
                  } else {
                    this.addOffset({
                      y: -(center.y - lastCenter.y),
                      x: 0
                    });
                  }
                } else {
                  this.addOffset({
                    y: -(center.y - lastCenter.y),
                    x: -(center.x - lastCenter.x)
                  });
                }
              }
            },

            /**
             * Calculates the touch center of multiple touches
             * @param touches
             * @return {Object}
             */
            getTouchCenter: function(touches) {
              return this.getVectorAvg(touches);
            },

            /**
             * Calculates the average of multiple vectors (x, y values)
             */
            getVectorAvg: function(vectors) {
              return {
                x: vectors.map(function(v) {
                  return v.x;
                }).reduce(sum) / vectors.length,
                y: vectors.map(function(v) {
                  return v.y;
                }).reduce(sum) / vectors.length
              };
            },

            /**
             * Adds an offset
             * @param offset the offset to add
             * @return return true when the offset change was accepted
             */
            addOffset: function(offset) {
              this.offset = {
                x: this.offset.x + offset.x,
                y: this.offset.y + offset.y
              };
            },

            sanitize: function() {
              if (this.zoomFactor < this.options.zoomOutFactor) {
                this.zoomOutAnimation();
              } else if (this.isInsaneOffset(this.offset)) {
                this.sanitizeOffsetAnimation();
              }
            },

            /**
             * Checks if the offset is ok with the current zoom factor
             * @param offset
             * @return {Boolean}
             */
            isInsaneOffset: function(offset) {
              var sanitizedOffset = this.sanitizeOffset(offset);
              return sanitizedOffset.x !== offset.x ||
                sanitizedOffset.y !== offset.y;
            },

            /**
             * Creates an animation moving to a sane offset
             */
            sanitizeOffsetAnimation: function() {
              var targetOffset = this.sanitizeOffset(this.offset),
                startOffset = {
                  x: this.offset.x,
                  y: this.offset.y
                },
                updateProgress = (function(progress) {
                  this.offset.x = startOffset.x + progress * (
                    targetOffset.x - startOffset.x);
                  this.offset.y = startOffset.y + progress * (
                    targetOffset.y - startOffset.y);
                  this.update();
                }).bind(this);

              this.animate(
                this.options.animationDuration,
                this.options.animationInterval,
                updateProgress,
                this.swing
              );
            },

            /**
             * Zooms back to the original position,
             * (no offset and zoom factor 1)
             */
            zoomOutAnimation: function() {
              var startZoomFactor = this.zoomFactor,
                zoomFactor = 1,
                center = this.getCurrentZoomCenter(),
                updateProgress = (function(progress) {
                  this.scaleTo(startZoomFactor + progress * (zoomFactor -
                    startZoomFactor), center);
                }).bind(this);

              this.animate(
                this.options.animationDuration,
                this.options.animationInterval,
                updateProgress,
                this.swing
              );
            },

            /**
             * Updates the aspect ratio
             */
            updateAspectRatio: function() {
              // this.setContainerY(this.getContainerX() / this.getAspectRatio());
              // @modified
              this.setContainerY()
            },

            /**
             * Calculates the initial zoom factor (for the element to fit into the container)
             * @return the initial zoom factor
             */
            getInitialZoomFactor: function() {
              // use .offsetWidth instead of width()
              // because jQuery-width() return the original width but Zepto-width() will calculate width with transform.
              // the same as .height()
              return this.container[0].offsetWidth / this.el[0].offsetWidth;
            },

            /**
             * Calculates the aspect ratio of the element
             * @return the aspect ratio
             */
            getAspectRatio: function() {
              return this.el[0].offsetWidth / this.el[0].offsetHeight;
            },

            /**
             * Calculates the virtual zoom center for the current offset and zoom factor
             * (used for reverse zoom)
             * @return {Object} the current zoom center
             */
            getCurrentZoomCenter: function() {

              // uses following formula to calculate the zoom center x value
              // offset_left / offset_right = zoomcenter_x / (container_x - zoomcenter_x)
              var length = this.container[0].offsetWidth * this.zoomFactor,
                offsetLeft = this.offset.x,
                offsetRight = length - offsetLeft - this.container[0].offsetWidth,
                widthOffsetRatio = offsetLeft / offsetRight,
                centerX = widthOffsetRatio * this.container[0].offsetWidth /
                (widthOffsetRatio + 1),

                // the same for the zoomcenter y
                height = this.container[0].offsetHeight * this.zoomFactor,
                offsetTop = this.offset.y,
                offsetBottom = height - offsetTop - this.container[0].offsetHeight,
                heightOffsetRatio = offsetTop / offsetBottom,
                centerY = heightOffsetRatio * this.container[0].offsetHeight /
                (heightOffsetRatio + 1);

              // prevents division by zero
              if (offsetRight === 0) {
                centerX = this.container[0].offsetWidth;
              }
              if (offsetBottom === 0) {
                centerY = this.container[0].offsetHeight;
              }

              return {
                x: centerX,
                y: centerY
              };
            },

            canDrag: function() {
              return !isCloseTo(this.zoomFactor, 1);
            },

            /**
             * Returns the touches of an event relative to the container offset
             * @param event
             * @return array touches
             */
            getTouches: function(event) {
              var position = this.container.offset();
              return Array.prototype.slice.call(event.touches).map(
                function(touch) {
                  return {
                    x: touch.pageX - position.left,
                    y: touch.pageY - position.top
                  };
                });
            },

            /**
             * Animation loop
             * does not support simultaneous animations
             * @param duration
             * @param interval
             * @param framefn
             * @param timefn
             * @param callback
             */
            animate: function(duration, interval, framefn, timefn,
              callback) {
              var startTime = new Date().getTime(),
                renderFrame = (function() {
                  if (!this.inAnimation) {
                    return;
                  }
                  var frameTime = new Date().getTime() - startTime,
                    progress = frameTime / duration;
                  if (frameTime >= duration) {
                    framefn(1);
                    if (callback) {
                      callback();
                    }
                    this.update();
                    this.stopAnimation();
                    this.update();
                  } else {
                    if (timefn) {
                      progress = timefn(progress);
                    }
                    framefn(progress);
                    this.update();
                    setTimeout(renderFrame, interval);
                  }
                }).bind(this);
              this.inAnimation = true;
              renderFrame();
            },

            /**
             * Stops the animation
             */
            stopAnimation: function() {
              this.inAnimation = false;
            },

            /**
             * Swing timing function for animations
             * @param p
             * @return {Number}
             */
            swing: function(p) {
              return -Math.cos(p * Math.PI) / 2 + 0.5;
            },

            getContainerX: function() {
              // return this.container[0].offsetWidth;
              // @modified
              return window.innerWidth
            },

            getContainerY: function() {
              // return this.container[0].offsetHeight;
              // @modified
              return window.innerHeight
            },

            setContainerY: function(y) {
              // return this.container.height(y);
              // @modified
              var t = window.innerHeight;
              return this.el.css({
                height: t
              }), this.container.height(t);
            },

            /**
             * Creates the expected html structure
             */
            setupMarkup: function() {
              this.container = $(
                '<div class="pinch-zoom-container"></div>');
              this.el.before(this.container);
              this.container.append(this.el);

              this.container.css({
                'overflow': 'hidden',
                'position': 'relative'
              });

              // Zepto doesn't recognize `webkitTransform..` style
              this.el.css({
                '-webkit-transform-origin': '0% 0%',
                '-moz-transform-origin': '0% 0%',
                '-ms-transform-origin': '0% 0%',
                '-o-transform-origin': '0% 0%',
                'transform-origin': '0% 0%',
                'position': 'absolute'
              });
            },

            end: function() {
              this.hasInteraction = false;
              this.sanitize();
              this.update();
            },

            /**
             * Binds all required event listeners
             */
            bindEvents: function() {
              detectGestures(this.container.get(0), this);
              // Zepto and jQuery both know about `on`
              $(window).on('resize', this.update.bind(this));
              $(this.el).find('img').on('load', this.update.bind(this));
            },

            /**
             * Updates the css values according to the current zoom factor and offset
             */
            update: function() {

              if (this.updatePlaned) {
                return;
              }
              this.updatePlaned = true;

              setTimeout((function() {
                this.updatePlaned = false;
                this.updateAspectRatio();

                var zoomFactor = this.getInitialZoomFactor() * this.zoomFactor,
                  offsetX = -this.offset.x / zoomFactor,
                  offsetY = -this.offset.y / zoomFactor,
                  transform3d = 'scale3d(' + zoomFactor + ', ' +
                  zoomFactor + ',1) ' +
                  'translate3d(' + offsetX + 'px,' + offsetY +
                  'px,0px)',
                  transform2d = 'scale(' + zoomFactor + ', ' +
                  zoomFactor + ') ' +
                  'translate(' + offsetX + 'px,' + offsetY + 'px)',
                  removeClone = (function() {
                    if (this.clone) {
                      this.clone.remove();
                      delete this.clone;
                    }
                  }).bind(this);

                // Scale 3d and translate3d are faster (at least on ios)
                // but they also reduce the quality.
                // PinchZoom uses the 3d transformations during interactions
                // after interactions it falls back to 2d transformations
                if (!this.options.use2d || this.hasInteraction ||
                  this.inAnimation) {
                  this.is3d = true;
                  removeClone();
                  this.el.css({
                    '-webkit-transform': transform3d,
                    '-o-transform': transform2d,
                    '-ms-transform': transform2d,
                    '-moz-transform': transform2d,
                    'transform': transform3d
                  });
                } else {

                  // When changing from 3d to 2d transform webkit has some glitches.
                  // To avoid this, a copy of the 3d transformed element is displayed in the
                  // foreground while the element is converted from 3d to 2d transform
                  if (this.is3d) {
                    this.clone = this.el.clone();
                    this.clone.css('pointer-events', 'none');
                    this.clone.appendTo(this.container);
                    setTimeout(removeClone, 200);
                  }
                  this.el.css({
                    '-webkit-transform': transform2d,
                    '-o-transform': transform2d,
                    '-ms-transform': transform2d,
                    '-moz-transform': transform2d,
                    'transform': transform2d
                  });
                  this.is3d = false;
                }
              }).bind(this), 0);
            },

            /**
             * Enables event handling for gestures
             */
            enable: function() {
              this.enabled = true;
            },

            /**
             * Disables event handling for gestures
             */
            disable: function() {
              this.enabled = false;
            }
          };

          var detectGestures = function(el, target) {
            var interaction = null,
              fingers = 0,
              lastTouchStart = null,
              startTouches = null,

              setInteraction = function(newInteraction, event) {
                if (interaction !== newInteraction) {

                  if (interaction && !newInteraction) {
                    switch (interaction) {
                      case "zoom":
                        target.handleZoomEnd(event);
                        break;
                      case 'drag':
                        target.handleDragEnd(event);
                        break;
                    }
                  }

                  switch (newInteraction) {
                    case 'zoom':
                      target.handleZoomStart(event);
                      break;
                    case 'drag':
                      target.handleDragStart(event);
                      break;
                  }
                }
                interaction = newInteraction;
              },

              updateInteraction = function(event) {
                if (fingers === 2) {
                  setInteraction('zoom');
                } else if (fingers === 1 && target.canDrag()) {
                  setInteraction('drag', event);
                } else {
                  setInteraction(null, event);
                }
              },

              targetTouches = function(touches) {
                return Array.prototype.slice.call(touches).map(function(
                  touch) {
                  return {
                    x: touch.pageX,
                    y: touch.pageY
                  };
                });
              },

              getDistance = function(a, b) {
                var x, y;
                x = a.x - b.x;
                y = a.y - b.y;
                return Math.sqrt(x * x + y * y);
              },

              calculateScale = function(startTouches, endTouches) {
                var startDistance = getDistance(startTouches[0],
                    startTouches[1]),
                  endDistance = getDistance(endTouches[0], endTouches[1]);
                return endDistance / startDistance;
              },

              cancelEvent = function(event) {
                event.stopPropagation();
                event.preventDefault();
              },

              detectDoubleTap = function(event) {
                var time = (new Date()).getTime();

                if (fingers > 1) {
                  lastTouchStart = null;
                }

                if (time - lastTouchStart < 300) {
                  cancelEvent(event);

                  target.handleDoubleTap(event);
                  switch (interaction) {
                    case "zoom":
                      target.handleZoomEnd(event);
                      break;
                    case 'drag':
                      target.handleDragEnd(event);
                      break;
                  }
                }

                if (fingers === 1) {
                  lastTouchStart = time;
                }
              },
              firstMove = true;

            el.addEventListener('touchstart', function(event) {
              if (target.enabled) {
                firstMove = true;
                fingers = event.touches.length;
                detectDoubleTap(event);
              }
            });

            el.addEventListener('touchmove', function(event) {
              if (target.enabled) {
                if (firstMove) {
                  updateInteraction(event);
                  if (interaction) {
                    cancelEvent(event);
                  }
                  startTouches = targetTouches(event.touches);
                } else {
                  switch (interaction) {
                    case 'zoom':
                      target.handleZoom(event, calculateScale(
                        startTouches, targetTouches(event.touches)));
                      break;
                    case 'drag':
                      target.handleDrag(event);
                      break;
                  }
                  if (interaction) {
                    cancelEvent(event);
                    target.update();
                  }
                }

                firstMove = false;
              }
            });

            el.addEventListener('touchend', function(event) {
              if (target.enabled) {
                fingers = event.touches.length;
                updateInteraction(event);
              }
            });
          };

          return PinchZoom;
        };

        $.AMUI.pichzoom = definePinchZoom($);

        module.exports = definePinchZoom($);

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  35: [
    function(require, module, exports) {
      (function(global) {
        'use strict';
        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var $w = $(window);

        /**
         * @reference https://github.com/nolimits4web/Framework7/blob/master/src/js/modals.js
         * @license https://github.com/nolimits4web/Framework7/blob/master/LICENSE
         */

        var Popover = function(element, options) {
          this.options = $.extend({}, Popover.DEFAULTS, options || {});
          this.$element = $(element);
          this.active = null;
          this.$popover = (this.options.target && $(this.options.target)) ||
            null;

          this.init();
          this.events();
        };

        Popover.DEFAULTS = {
          theme: undefined,
          trigger: 'click',
          content: '',
          open: false,
          target: undefined,
          tpl: '<div class="am-popover">' +
            '<div class="am-popover-inner"></div>' +
            '<div class="am-popover-caret"></div></div>'
        };

        Popover.prototype.init = function() {
          var me = this;
          var $element = this.$element;
          var $popover;

          if (!this.options.target) {
            this.$popover = this.getPopover();
            this.setContent();
          }

          $popover = this.$popover;

          $popover.appendTo($('body'));

          this.sizePopover();

          function sizePopover() {
            me.sizePopover();
          }

          // TODO: 监听页面内容变化，重新调整位置

          $element.on('open.popover.amui', function() {
            $(window).on('resize.popover.amui', UI.utils.debounce(
              sizePopover, 50));
          });

          $element.on('close.popover.amui', function() {
            $(window).off('resize.popover.amui', sizePopover);
          });

          this.options.open && this.open();
        };

        Popover.prototype.sizePopover = function sizePopover() {
          var $element = this.$element;
          var $popover = this.$popover;

          if (!$popover || !$popover.length) {
            return;
          }

          var popWidth = $popover.outerWidth();
          var popHeight = $popover.outerHeight();
          var $popCaret = $popover.find('.am-popover-caret');
          var popCaretSize = ($popCaret.outerWidth() / 2) || 8;
          // 取不到 $popCaret.outerHeight() 的值，所以直接加 8
          var popTotalHeight = popHeight + 8; // $popCaret.outerHeight();

          var triggerWidth = $element.outerWidth();
          var triggerHeight = $element.outerHeight();
          var triggerOffset = $element.offset();
          var triggerRect = $element[0].getBoundingClientRect();

          var winHeight = $w.height();
          var winWidth = $w.width();
          var popTop = 0;
          var popLeft = 0;
          var diff = 0;
          var spacing = 2;
          var popPosition = 'top';

          $popover.css({
            left: '',
            top: ''
          }).removeClass('am-popover-left ' +
            'am-popover-right am-popover-top am-popover-bottom');

          $popCaret.css({
            left: '',
            top: ''
          });

          if (popTotalHeight - spacing < triggerRect.top + spacing) {
            // Popover on the top of trigger
            popTop = triggerOffset.top - popTotalHeight - spacing;
          } else if (popTotalHeight <
            winHeight - triggerRect.top - triggerRect.height) {
            // On bottom
            popPosition = 'bottom';
            popTop = triggerOffset.top + triggerHeight + popCaretSize +
              spacing;
          } else { // On middle
            popPosition = 'middle';
            popTop = triggerHeight / 2 + triggerOffset.top - popHeight / 2;
          }

          // Horizontal Position
          if (popPosition === 'top' || popPosition === 'bottom') {
            popLeft = triggerWidth / 2 + triggerOffset.left - popWidth / 2;

            diff = popLeft;

            if (popLeft < 5) {
              popLeft = 5;
            }

            if (popLeft + popWidth > winWidth) {
              popLeft = (winWidth - popWidth - 20);
              // console.log('left %d, win %d, popw %d', popLeft, winWidth, popWidth);
            }

            if (popPosition === 'top') {
              // This is the Popover position, NOT caret position
              // Popover on the Top of trigger, caret on the bottom of Popover
              $popover.addClass('am-popover-top');
            }

            if (popPosition === 'bottom') {
              $popover.addClass('am-popover-bottom');
            }

            diff = diff - popLeft;
            $popCaret.css({
              left: (popWidth / 2 - popCaretSize + diff) + 'px'
            });

          } else if (popPosition === 'middle') {
            popLeft = triggerOffset.left - popWidth - popCaretSize;
            $popover.addClass('am-popover-left');
            if (popLeft < 5) {
              popLeft = triggerOffset.left + triggerWidth + popCaretSize;
              $popover.removeClass('am-popover-left').addClass(
                'am-popover-right');
            }

            if (popLeft + popWidth > winWidth) {
              popLeft = winWidth - popWidth - 5;
              $popover.removeClass('am-popover-left').addClass(
                'am-popover-right');
            }
            $popCaret.css({
              top: (popHeight / 2 - popCaretSize / 2) + 'px'
            });
          }

          // Apply position style
          $popover.css({
            top: popTop + 'px',
            left: popLeft + 'px'
          });
        };

        Popover.prototype.toggle = function() {
          return this[this.active ? 'close' : 'open']();
        };

        Popover.prototype.open = function() {
          var $popover = this.$popover;

          this.$element.trigger('open.popover.amui');
          this.sizePopover();
          $popover.show().addClass('am-active');
          this.active = true;
        };

        Popover.prototype.close = function() {
          var $popover = this.$popover;

          this.$element.trigger('close.popover.amui');

          $popover.
          removeClass('am-active').
          trigger('closed.popover.amui').
          hide();

          this.active = false;
        };

        Popover.prototype.getPopover = function() {
          var uid = UI.utils.generateGUID('am-popover');
          var theme = [];

          if (this.options.theme) {
            $.each(this.options.theme.split(','), function(i, item) {
              theme.push('am-popover-' + $.trim(item));
            });
          }
          return $(this.options.tpl).attr('id', uid).addClass(theme.join(
            ' '));
        };

        Popover.prototype.setContent = function(content) {
          content = content || this.options.content;
          this.$popover && this.$popover.find('.am-popover-inner').empty().
          html(content);
        };

        Popover.prototype.events = function() {
          var eventNS = 'popover.amui';
          var triggers = this.options.trigger.split(' ');

          for (var i = triggers.length; i--;) {
            var trigger = triggers[i];

            if (trigger === 'click') {
              this.$element.on('click.' + eventNS, $.proxy(this.toggle,
                this));
            } else { // hover or focus
              var eventIn = trigger == 'hover' ? 'mouseenter' : 'focusin';
              var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout';

              this.$element.on(eventIn + '.' + eventNS, $.proxy(this.open,
                this));
              this.$element.on(eventOut + '.' + eventNS, $.proxy(this.close,
                this));
            }
          }
        };

        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.popover');
            var options = $.extend({},
              UI.utils.parseOptions($this.attr('data-am-popover')),
              typeof option == 'object' && option);

            if (!data) {
              $this.data('amui.popover', (data = new Popover(this,
                options)));
            }

            if (typeof option == 'string') {
              data[option] && data[option]();
            }
          });
        }

        $.fn.popover = Plugin;

        // Init code
        UI.ready(function(context) {
          $('[data-am-popover]', context).popover();
        });

        $.AMUI.popover = Popover;

        module.exports = Popover;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  36: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        var Progress = (function() {
          /**
           * NProgress (c) 2013, Rico Sta. Cruz
           * @via http://ricostacruz.com/nprogress
           */

          var NProgress = {};
          var $html = $('html');

          NProgress.version = '0.1.6';

          var Settings = NProgress.settings = {
            minimum: 0.08,
            easing: 'ease',
            positionUsing: '',
            speed: 200,
            trickle: true,
            trickleRate: 0.02,
            trickleSpeed: 800,
            showSpinner: true,
            parent: 'body',
            barSelector: '[role="nprogress-bar"]',
            spinnerSelector: '[role="nprogress-spinner"]',
            template: '<div class="nprogress-bar" role="nprogress-bar">' +
              '<div class="nprogress-peg"></div></div>' +
              '<div class="nprogress-spinner" role="nprogress-spinner">' +
              '<div class="nprogress-spinner-icon"></div></div>'
          };

          /**
           * Updates configuration.
           *
           *     NProgress.configure({
           *       minimum: 0.1
           *     });
           */
          NProgress.configure = function(options) {
            var key, value;
            for (key in options) {
              value = options[key];
              if (value !== undefined && options.hasOwnProperty(key))
                Settings[key] = value;
            }

            return this;
          };

          /**
           * Last number.
           */

          NProgress.status = null;

          /**
           * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.
           *
           *     NProgress.set(0.4);
           *     NProgress.set(1.0);
           */

          NProgress.set = function(n) {
            var started = NProgress.isStarted();

            n = clamp(n, Settings.minimum, 1);
            NProgress.status = (n === 1 ? null : n);

            var progress = NProgress.render(!started),
              bar = progress.querySelector(Settings.barSelector),
              speed = Settings.speed,
              ease = Settings.easing;

            progress.offsetWidth;
            /* Repaint */

            queue(function(next) {
              // Set positionUsing if it hasn't already been set
              if (Settings.positionUsing === '') Settings.positionUsing =
                NProgress.getPositioningCSS();

              // Add transition
              css(bar, barPositionCSS(n, speed, ease));

              if (n === 1) {
                // Fade out
                css(progress, {
                  transition: 'none',
                  opacity: 1
                });
                progress.offsetWidth;
                /* Repaint */

                setTimeout(function() {
                  css(progress, {
                    transition: 'all ' + speed + 'ms linear',
                    opacity: 0
                  });
                  setTimeout(function() {
                    NProgress.remove();
                    next();
                  }, speed);
                }, speed);
              } else {
                setTimeout(next, speed);
              }
            });

            return this;
          };

          NProgress.isStarted = function() {
            return typeof NProgress.status === 'number';
          };

          /**
           * Shows the progress bar.
           * This is the same as setting the status to 0%, except that it doesn't go backwards.
           *
           *     NProgress.start();
           *
           */
          NProgress.start = function() {
            if (!NProgress.status) NProgress.set(0);

            var work = function() {
              setTimeout(function() {
                if (!NProgress.status) return;
                NProgress.trickle();
                work();
              }, Settings.trickleSpeed);
            };

            if (Settings.trickle) work();

            return this;
          };

          /**
           * Hides the progress bar.
           * This is the *sort of* the same as setting the status to 100%, with the
           * difference being `done()` makes some placebo effect of some realistic motion.
           *
           *     NProgress.done();
           *
           * If `true` is passed, it will show the progress bar even if its hidden.
           *
           *     NProgress.done(true);
           */

          NProgress.done = function(force) {
            if (!force && !NProgress.status) return this;

            return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);
          };

          /**
           * Increments by a random amount.
           */

          NProgress.inc = function(amount) {
            var n = NProgress.status;

            if (!n) {
              return NProgress.start();
            } else {
              if (typeof amount !== 'number') {
                amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);
              }

              n = clamp(n + amount, 0, 0.994);
              return NProgress.set(n);
            }
          };

          NProgress.trickle = function() {
            return NProgress.inc(Math.random() * Settings.trickleRate);
          };


          /**
           * (Internal) renders the progress bar markup based on the `template`
           * setting.
           */

          NProgress.render = function(fromStart) {
            if (NProgress.isRendered()) return document.getElementById(
              'nprogress');

            $html.addClass('nprogress-busy');

            var progress = document.createElement('div');
            progress.id = 'nprogress';
            progress.innerHTML = Settings.template;

            var bar = progress.querySelector(Settings.barSelector),
              perc = fromStart ? '-100' : toBarPerc(NProgress.status ||
                0),
              parent = document.querySelector(Settings.parent),
              spinner;

            css(bar, {
              transition: 'all 0 linear',
              transform: 'translate3d(' + perc + '%,0,0)'
            });

            if (!Settings.showSpinner) {
              spinner = progress.querySelector(Settings.spinnerSelector);
              spinner && $(spinner).remove();
            }

            if (parent != document.body) {
              $(parent).addClass('nprogress-custom-parent');
            }

            parent.appendChild(progress);
            return progress;
          };

          /**
           * Removes the element. Opposite of render().
           */

          NProgress.remove = function() {
            $html.removeClass('nprogress-busy');
            $(Settings.parent).removeClass('nprogress-custom-parent');

            var progress = document.getElementById('nprogress');
            progress && $(progress).remove();
          };

          /**
           * Checks if the progress bar is rendered.
           */

          NProgress.isRendered = function() {
            return !!document.getElementById('nprogress');
          };

          /**
           * Determine which positioning CSS rule to use.
           */

          NProgress.getPositioningCSS = function() {
            // Sniff on document.body.style
            var bodyStyle = document.body.style;

            // Sniff prefixes
            var vendorPrefix = ('WebkitTransform' in bodyStyle) ?
              'Webkit' :
              ('MozTransform' in bodyStyle) ? 'Moz' :
              ('msTransform' in bodyStyle) ? 'ms' :
              ('OTransform' in bodyStyle) ? 'O' : '';

            if (vendorPrefix + 'Perspective' in bodyStyle) {
              // Modern browsers with 3D support, e.g. Webkit, IE10
              return 'translate3d';
            } else if (vendorPrefix + 'Transform' in bodyStyle) {
              // Browsers without 3D support, e.g. IE9
              return 'translate';
            } else {
              // Browsers without translate() support, e.g. IE7-8
              return 'margin';
            }
          };

          /**
           * Helpers
           */

          function clamp(n, min, max) {
            if (n < min) return min;
            if (n > max) return max;
            return n;
          }

          /**
           * (Internal) converts a percentage (`0..1`) to a bar translateX
           * percentage (`-100%..0%`).
           */

          function toBarPerc(n) {
            return (-1 + n) * 100;
          }


          /**
           * (Internal) returns the correct CSS for changing the bar's
           * position given an n percentage, and speed and ease from Settings
           */

          function barPositionCSS(n, speed, ease) {
            var barCSS;

            if (Settings.positionUsing === 'translate3d') {
              barCSS = {
                transform: 'translate3d(' + toBarPerc(n) + '%,0,0)'
              };
            } else if (Settings.positionUsing === 'translate') {
              barCSS = {
                transform: 'translate(' + toBarPerc(n) + '%,0)'
              };
            } else {
              barCSS = {
                'margin-left': toBarPerc(n) + '%'
              };
            }

            barCSS.transition = 'all ' + speed + 'ms ' + ease;

            return barCSS;
          }


          /**
           * (Internal) Queues a function to be executed.
           */

          var queue = (function() {
            var pending = [];

            function next() {
              var fn = pending.shift();
              if (fn) {
                fn(next);
              }
            }

            return function(fn) {
              pending.push(fn);
              if (pending.length == 1) next();
            };
          })();


          /**
           * (Internal) Applies css properties to an element, similar to the jQuery
           * css method.
           *
           * While this helper does assist with vendor prefixed property names, it
           * does not perform any manipulation of values prior to setting styles.
           */

          var css = (function() {
            var cssPrefixes = ['Webkit', 'O', 'Moz', 'ms'],
              cssProps = {};

            function camelCase(string) {
              return string.replace(/^-ms-/, 'ms-').replace(
                /-([\da-z])/gi, function(match, letter) {
                  return letter.toUpperCase();
                });
            }

            function getVendorProp(name) {
              var style = document.body.style;
              if (name in style) return name;

              var i = cssPrefixes.length,
                capName = name.charAt(0).toUpperCase() + name.slice(
                  1),
                vendorName;
              while (i--) {
                vendorName = cssPrefixes[i] + capName;
                if (vendorName in style) return vendorName;
              }

              return name;
            }

            function getStyleProp(name) {
              name = camelCase(name);
              return cssProps[name] || (cssProps[name] =
                getVendorProp(name));
            }

            function applyCss(element, prop, value) {
              prop = getStyleProp(prop);
              element.style[prop] = value;
            }

            return function(element, properties) {
              var args = arguments,
                prop,
                value;

              if (args.length == 2) {
                for (prop in properties) {
                  value = properties[prop];
                  if (value !== undefined && properties.hasOwnProperty(
                    prop)) applyCss(element, prop, value);
                }
              } else {
                applyCss(element, args[1], args[2]);
              }
            }
          })();

          return NProgress;
        })();

        $.AMUI.progress = Progress;

        module.exports = Progress;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  37: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var PinchZoom = require('./ui.pinchzoom');
        var Hammer = require('./util.hammer');
        var animation = UI.support.animation;
        var transition = UI.support.transition;

        /**
         * PureView
         * @desc Image browser for Mobile
         * @param element
         * @param options
         * @constructor
         */

        var PureView = function(element, options) {
          this.$element = $(element);
          this.$body = $(document.body);
          this.options = $.extend({}, PureView.DEFAULTS, options);
          this.$pureview = $(this.options.tpl).attr('id',
            UI.utils.generateGUID('am-pureview'));

          this.$slides = null;
          this.transitioning = null;
          this.scrollbarWidth = 0;

          this.init();
        };

        PureView.DEFAULTS = {
          tpl: '<div class="am-pureview am-pureview-bar-active">' +
            '<ul class="am-pureview-slider"></ul>' +
            '<ul class="am-pureview-direction">' +
            '<li class="am-pureview-prev"><a href=""></a></li>' +
            '<li class="am-pureview-next"><a href=""></a></li></ul>' +
            '<ol class="am-pureview-nav"></ol>' +
            '<div class="am-pureview-bar am-active">' +
            '<span class="am-pureview-title"></span>' +
            '<div class="am-pureview-counter"><span class="am-pureview-current"></span> / ' +
            '<span class="am-pureview-total"></span></div></div>' +
            '<div class="am-pureview-actions am-active">' +
            '<a href="javascript: void(0)" class="am-icon-chevron-left" ' +
            'data-am-close="pureview"></a></div>' +
            '</div>',

          className: {
            prevSlide: 'am-pureview-slide-prev',
            nextSlide: 'am-pureview-slide-next',
            onlyOne: 'am-pureview-only',
            active: 'am-active',
            barActive: 'am-pureview-bar-active',
            activeBody: 'am-pureview-active'
          },

          selector: {
            slider: '.am-pureview-slider',
            close: '[data-am-close="pureview"]',
            total: '.am-pureview-total',
            current: '.am-pureview-current',
            title: '.am-pureview-title',
            actions: '.am-pureview-actions',
            bar: '.am-pureview-bar',
            pinchZoom: '.am-pinch-zoom',
            nav: '.am-pureview-nav'
          },

          shareBtn: false,

          // press to toggle Toolbar
          toggleToolbar: true,

          // 从何处获取图片，img 可以使用 data-rel 指定大图
          target: 'img',

          // 微信 Webview 中调用微信的图片浏览器
          // 实现图片保存、分享好友、收藏图片等功能
          weChatImagePreview: true
        };

        PureView.prototype.init = function() {
          var _this = this;
          var options = this.options;
          var $element = this.$element;
          var $pureview = this.$pureview;

          this.refreshSlides();

          $('body').append($pureview);

          this.$title = $pureview.find(options.selector.title);
          this.$current = $pureview.find(options.selector.current);
          this.$bar = $pureview.find(options.selector.bar);
          this.$actions = $pureview.find(options.selector.actions);

          if (options.shareBtn) {
            this.$actions.append('<a href="javascript: void(0)" ' +
              'class="am-icon-share-square-o" data-am-toggle="share"></a>');
          }

          this.$element.on('click.pureview.amui', options.target, function(
            e) {
            e.preventDefault();
            var clicked = _this.$images.index(this);

            // Invoke WeChat ImagePreview in WeChat
            // TODO: detect WeChat before init
            if (options.weChatImagePreview && window.WeixinJSBridge) {
              window.WeixinJSBridge.invoke('imagePreview', {
                current: _this.imgUrls[clicked],
                urls: _this.imgUrls
              });
            } else {
              _this.open(clicked);
            }
          });

          $pureview.find('.am-pureview-direction').
          on('click.direction.pureview.amui', 'li', function(e) {
            e.preventDefault();

            if ($(this).is('.am-pureview-prev')) {
              _this.prevSlide();
            } else {
              _this.nextSlide();
            }
          });

          // Nav Contorl
          $pureview.find(options.selector.nav).on('click.nav.pureview.amui',
            'li',
            function() {
              var index = _this.$navItems.index($(this));
              _this.activate(_this.$slides.eq(index));
            });

          // Close Icon
          $pureview.find(options.selector.close).
          on('click.close.pureview.amui', function(e) {
            e.preventDefault();
            _this.close();
          });

          this.$slider.hammer().on('swipeleft.pureview.amui', function(e) {
            e.preventDefault();
            _this.nextSlide();
          }).on('swiperight.pureview.amui', function(e) {
            e.preventDefault();
            _this.prevSlide();
          }).on('press.pureview.amui', function(e) {
            e.preventDefault();
            options.toggleToolbar && _this.toggleToolBar();
          });

          this.$slider.data('hammer').get('swipe').set({
            direction: Hammer.DIRECTION_HORIZONTAL,
            velocity: 0.35
          });

          // Observe DOM
          $element.DOMObserve({
            childList: true,
            subtree: true
          }, function(mutations, observer) {
            // _this.refreshSlides();
            // console.log('mutations[0].type);
          });

          // NOTE:
          // trigger this event manually if MutationObserver not supported
          //   when new images appended, or call refreshSlides()
          // if (!UI.support.mutationobserver) $element.trigger('changed.dom.amui')
          $element.on('changed.dom.amui', function(e) {
            e.stopPropagation();
            _this.refreshSlides();
          });

          $(document).on('keydown.pureview.amui', $.proxy(function(e) {
            var keyCode = e.keyCode;
            if (keyCode == 37) {
              this.prevSlide();
            } else if (keyCode == 39) {
              this.nextSlide();
            } else if (keyCode == 27) {
              this.close();
            }
          }, this));
        };

        PureView.prototype.refreshSlides = function() {
          // update images collections
          this.$images = this.$element.find(this.options.target);
          var _this = this;
          var options = this.options;
          var $pureview = this.$pureview;
          var $slides = $([]);
          var $navItems = $([]);
          var $images = this.$images;
          var total = $images.length;
          this.$slider = $pureview.find(options.selector.slider);
          this.$nav = $pureview.find(options.selector.nav);
          var viewedFlag = 'data-am-pureviewed';
          // for WeChat Image Preview
          this.imgUrls = this.imgUrls || [];

          if (!total) {
            return;
          }

          if (total === 1) {
            $pureview.addClass(options.className.onlyOne);
          }

          $images.not('[' + viewedFlag + ']').each(function(i, item) {
            var src;
            var title;

            // get image URI from link's href attribute
            if (item.nodeName === 'A') {
              src = item.href; // to absolute path
              title = item.title || '';
            } else {
              // NOTE: `data-rel` should be a full URL, otherwise,
              //        WeChat images preview will not work
              src = $(item).data('rel') || item.src; // <img src='' data-rel='' />
              title = $(item).attr('alt') || '';
            }

            // add pureviewed flag
            item.setAttribute(viewedFlag, '1');

            // hide bar: wechat_webview_type=1
            // http://tmt.io/wechat/  not working?
            _this.imgUrls.push(src);

            $slides = $slides.add($('<li data-src="' + src +
              '" data-title="' + title +
              '"></li>'));
            $navItems = $navItems.add($('<li>' + (i + 1) + '</li>'));
          });

          $pureview.find(options.selector.total).text(total);

          this.$slider.append($slides);
          this.$nav.append($navItems);
          this.$navItems = this.$nav.find('li');
          this.$slides = this.$slider.find('li');
        };

        PureView.prototype.loadImage = function($slide, callback) {
          var appendedFlag = 'image-appended';

          if (!$slide.data(appendedFlag)) {
            var $img = $('<img>', {
              src: $slide.data('src'),
              alt: $slide.data('title')
            });

            $slide.html($img).wrapInner('<div class="am-pinch-zoom"></div>')
              .redraw();

            var $pinchWrapper = $slide.find(this.options.selector.pinchZoom);
            $pinchWrapper.data('amui.pinchzoom', new PinchZoom(
              $pinchWrapper[0], {}));
            $slide.data('image-appended', true);
          }

          callback && callback.call(this);
        };

        PureView.prototype.activate = function($slide) {
          var options = this.options;
          var $slides = this.$slides;
          var activeIndex = $slides.index($slide);
          var title = $slide.data('title') || '';
          var active = options.className.active;

          if ($slides.find('.' + active).is($slide)) {
            return;
          }

          if (this.transitioning) {
            return;
          }

          this.loadImage($slide, function() {
            UI.utils.imageLoader($slide.find('img'), function(image) {
              $(image).addClass('am-img-loaded');
            });
          });

          this.transitioning = 1;

          this.$title.text(title);
          this.$current.text(activeIndex + 1);
          $slides.removeClass();
          $slide.addClass(active);
          $slides.eq(activeIndex - 1).addClass(options.className.prevSlide);
          $slides.eq(activeIndex + 1).addClass(options.className.nextSlide);

          this.$navItems.removeClass().
          eq(activeIndex).addClass(options.className.active);

          if (transition) {
            $slide.one(transition.end, $.proxy(function() {
              this.transitioning = 0;
            }, this)).emulateTransitionEnd(300);
          } else {
            this.transitioning = 0;
          }

          // TODO: pre-load next image
        };

        PureView.prototype.nextSlide = function() {
          if (this.$slides.length === 1) {
            return;
          }

          var $slides = this.$slides;
          var $active = $slides.filter('.am-active');
          var activeIndex = $slides.index($active);
          var rightSpring = 'am-animation-right-spring';

          if (activeIndex + 1 >= $slides.length) { // last one
            animation && $active.addClass(rightSpring).on(animation.end,
              function() {
                $active.removeClass(rightSpring);
              });
          } else {
            this.activate($slides.eq(activeIndex + 1));
          }
        };

        PureView.prototype.prevSlide = function() {
          if (this.$slides.length === 1) {
            return;
          }

          var $slides = this.$slides;
          var $active = $slides.filter('.am-active');
          var activeIndex = this.$slides.index(($active));
          var leftSpring = 'am-animation-left-spring';

          if (activeIndex === 0) { // first one
            animation && $active.addClass(leftSpring).on(animation.end,
              function() {
                $active.removeClass(leftSpring);
              });
          } else {
            this.activate($slides.eq(activeIndex - 1));
          }
        };

        PureView.prototype.toggleToolBar = function() {
          this.$pureview.toggleClass(this.options.className.barActive);
        };

        PureView.prototype.open = function(index) {
          var active = index || 0;
          this.checkScrollbar();
          this.setScrollbar();
          this.activate(this.$slides.eq(active));
          this.$pureview.show().redraw().addClass(this.options.className.active);
          this.$body.addClass(this.options.className.activeBody);
        };

        PureView.prototype.close = function() {
          var options = this.options;

          this.$pureview.removeClass(options.className.active);
          this.$slides.removeClass();

          function resetBody() {
            this.$pureview.hide();
            this.$body.removeClass(options.className.activeBody);
            this.resetScrollbar();
          }

          if (transition) {
            this.$pureview.one(transition.end, $.proxy(resetBody, this)).
            emulateTransitionEnd(300);
          } else {
            resetBody.call(this);
          }
        };

        PureView.prototype.checkScrollbar = function() {
          this.scrollbarWidth = UI.utils.measureScrollbar();
        };

        PureView.prototype.setScrollbar = function() {
          var bodyPaddingRight = parseInt((this.$body.css('padding-right') ||
            0), 10);
          if (this.scrollbarWidth) {
            this.$body.css('padding-right', bodyPaddingRight + this.scrollbarWidth);
          }
        };

        PureView.prototype.resetScrollbar = function() {
          this.$body.css('padding-right', '');
        };

        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.pureview');
            var options = $.extend({},
              UI.utils.parseOptions($this.data('amPureview')),
              typeof option == 'object' && option);

            if (!data) {
              $this.data('amui.pureview', (data = new PureView(this,
                options)));
            }

            if (typeof option == 'string') {
              data[option]();
            }
          });
        }

        $.fn.pureview = Plugin;

        // Init code
        UI.ready(function(context) {
          $('[data-am-pureview]', context).pureview();
        });

        $.AMUI.pureview = PureView;

        module.exports = PureView;

        // TODO: 1. 动画改进
        //       2. 改变图片的时候恢复 Zoom
        //       3. 选项
        //       4. 图片高度问题：由于 PinchZoom 的原因，过高的图片如果设置看了滚动，则放大以后显示不全

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.pinchzoom": 34,
      "./util.hammer": 51
    }
  ],
  38: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        /**
         * @via https://github.com/uikit/uikit/blob/master/src/js/scrollspy.js
         * @license https://github.com/uikit/uikit/blob/master/LICENSE.md
         */

        var ScrollSpy = function(element, options) {
          if (!UI.support.animation) {
            return;
          }

          this.options = $.extend({}, ScrollSpy.DEFAULTS, options);
          this.$element = $(element);

          var checkViewRAF = function() {
            UI.utils.rAF.call(window, $.proxy(this.checkView, this));
          }.bind(this);

          this.$window = $(window).on('scroll.scrollspy.amui',
            checkViewRAF)
            .on('resize.scrollspy.amui orientationchange.scrollspy.amui',
              UI.utils.debounce(checkViewRAF, 50));

          this.timer = this.inViewState = this.initInView = null;

          checkViewRAF();
        };

        ScrollSpy.DEFAULTS = {
          animation: 'fade',
          className: {
            inView: 'am-scrollspy-inview',
            init: 'am-scrollspy-init'
          },
          repeat: true,
          delay: 0,
          topOffset: 0,
          leftOffset: 0
        };

        ScrollSpy.prototype.checkView = function() {
          var $element = this.$element;
          var options = this.options;
          var inView = UI.utils.isInView($element, options);
          var animation = options.animation ?
            ' am-animation-' + options.animation : '';

          if (inView && !this.inViewState) {
            if (this.timer) {
              clearTimeout(this.timer);
            }

            if (!this.initInView) {
              $element.addClass(options.className.init);
              this.offset = $element.offset();
              this.initInView = true;

              $element.trigger('init.scrollspy.amui');
            }

            this.timer = setTimeout(function() {
              if (inView) {
                $element.addClass(options.className.inView + animation).width();
              }
            }, options.delay);

            this.inViewState = true;
            $element.trigger('inview.scrollspy.amui');
          }

          if (!inView && this.inViewState && options.repeat) {
            $element.removeClass(options.className.inView + animation);

            this.inViewState = false;

            $element.trigger('outview.scrollspy.amui');
          }
        };

        ScrollSpy.prototype.check = function() {
          UI.utils.rAF.call(window, $.proxy(this.checkView, this));
        };

        // Sticky Plugin
        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('am.scrollspy');
            var options = typeof option == 'object' && option;

            if (!data) {
              $this.data('am.scrollspy', (data = new ScrollSpy(this,
                options)));
            }

            if (typeof option == 'string') {
              data[option]();
            }
          });
        }

        $.fn.scrollspy = Plugin;

        // Init code
        UI.ready(function(context) {
          $('[data-am-scrollspy]', context).each(function() {
            var $this = $(this);
            var options = UI.utils.options($this.data('amScrollspy'));
            $this.scrollspy(options);
          });
        });

        $.AMUI.scrollspy = ScrollSpy;

        module.exports = ScrollSpy;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  39: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        require('./ui.smooth-scroll');

        /**
         * @via https://github.com/uikit/uikit/
         * @license https://github.com/uikit/uikit/blob/master/LICENSE.md
         */

        // ScrollSpyNav Class
        var ScrollSpyNav = function(element, options) {
          this.options = $.extend({}, ScrollSpyNav.DEFAULTS, options);
          this.$element = $(element);
          this.anchors = [];

          this.$links = this.$element.find('a[href^="#"]').each(function(
            i, link) {
            this.anchors.push($(link).attr('href'));
          }.bind(this));

          this.$targets = $(this.anchors.join(', '));

          var processRAF = function() {
            UI.utils.rAF.call(window, $.proxy(this.process, this));
          }.bind(this);

          this.$window = $(window).on('scroll.scrollspynav.amui',
            processRAF)
            .on(
              'resize.scrollspynav.amui orientationchange.scrollspynav.amui',
              UI.utils.debounce(processRAF, 50));

          processRAF();
          this.scrollProcess();
        };

        ScrollSpyNav.DEFAULTS = {
          className: {
            active: 'am-active'
          },
          closest: false,
          smooth: true,
          offsetTop: 0
        };

        ScrollSpyNav.prototype.process = function() {
          var scrollTop = this.$window.scrollTop();
          var options = this.options;
          var inViews = [];
          var $links = this.$links;

          var $targets = this.$targets;

          $targets.each(function(i, target) {
            if (UI.utils.isInView(target, options)) {
              inViews.push(target);
            }
          });

          // console.log(inViews.length);

          if (inViews.length) {
            var $target;

            $.each(inViews, function(i, item) {
              if ($(item).offset().top >= scrollTop) {
                $target = $(item);
                return false; // break
              }
            });

            if (!$target) {
              return;
            }

            if (options.closest) {
              $links.closest(options.closest).removeClass(options.className
                .active);
              $links.filter('a[href="#' + $target.attr('id') + '"]').
              closest(options.closest).addClass(options.className.active);
            } else {
              $links.removeClass(options.className.active).
              filter('a[href="#' + $target.attr('id') + '"]').
              addClass(options.className.active);
            }
          }
        };

        ScrollSpyNav.prototype.scrollProcess = function() {
          var $links = this.$links;
          var options = this.options;

          // smoothScroll
          if (options.smooth) {
            $links.on('click', function(e) {
              e.preventDefault();

              var $this = $(this);
              var $target = $($this.attr('href'));

              if (!$target) {
                return;
              }

              var offsetTop = options.offsetTop &&
                !isNaN(parseInt(options.offsetTop)) && parseInt(options.offsetTop) ||
                0;

              $(window).smoothScroll({
                position: $target.offset().top - offsetTop
              });
            });
          }
        };

        // ScrollSpyNav Plugin
        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.scrollspynav');
            var options = typeof option == 'object' && option;

            if (!data) {
              $this.data('amui.scrollspynav', (data = new ScrollSpyNav(
                this, options)));
            }

            if (typeof option == 'string') {
              data[option]();
            }
          });
        }

        $.fn.scrollspynav = Plugin;

        // Init code
        UI.ready(function(context) {
          $('[data-am-scrollspy-nav]', context).each(function() {
            var $this = $(this);
            var options = UI.utils.options($this.data('amScrollspyNav'));

            Plugin.call($this, options);
          });
        });

        $.AMUI.scrollspynav = ScrollSpyNav;

        module.exports = ScrollSpyNav;

        // TODO: 1. 算法改进
        //       2. 多级菜单支持
        //       3. smooth scroll pushState

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.smooth-scroll": 42
    }
  ],
  40: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        // Make jQuery :contains Case-Insensitive
        $.expr[':'].containsNC = function(elem, i, match, array) {
          return (elem.textContent || elem.innerText || '').toLowerCase().
          indexOf((match[3] || '').toLowerCase()) >= 0;
        };

        /**
         * Selected
         * @desc HTML select replacer
         * @via https://github.com/silviomoreto/bootstrap-select
         * @license https://github.com/silviomoreto/bootstrap-select/blob/master/LICENSE
         * @param element
         * @param options
         * @constructor
         */

        var Selected = function(element, options) {
          this.$element = $(element);
          this.options = $.extend({}, Selected.DEFAULTS, options);
          this.$originalOptions = this.$element.find('option');
          this.multiple = element.multiple;
          this.$selector = null;
          this.init();
        };

        Selected.DEFAULTS = {
          btnWidth: null,
          btnSize: null,
          btnStyle: 'default',
          dropUp: 0,
          maxHeight: null,
          noSelectedText: '点击选择...',
          selectedClass: 'am-checked',
          disabledClass: 'am-disabled',
          searchBox: false,
          tpl: '<div class="am-selected am-dropdown ' +
            '<%= dropUp ? \'am-dropdown-up\': \'\' %>" id="<%= id %>" data-am-dropdown>' +
            '  <button type="button" class="am-selected-btn am-btn am-dropdown-toggle">' +
            '    <span class="am-selected-status am-fl"></span>' +
            '    <i class="am-selected-icon am-icon-caret-' +
            '<%= dropUp ? \'up\' : \'down\' %>"></i>' +
            '  </button>' +
            '  <div class="am-selected-content am-dropdown-content">' +
            '    <h2 class="am-selected-header">' +
            '<span class="am-icon-chevron-left">返回</span></h2>' +
            '   <% if (searchBox) { %>' +
            '   <div class="am-selected-search">' +
            '     <input type="text" autocomplete="off" class="am-form-field" />' +
            '   </div>' +
            '   <% } %>' +
            '    <ul class="am-selected-list">' +
            '      <% for (var i = 0; i < options.length; i++) { %>' +
            '       <% var option = options[i] %>' +
            '       <% if (option.header) { %>' +
            '  <li data-group="<%= option.group %>" class="am-selected-list-header">' +
            '       <%= option.text %></li>' +
            '       <% } else { %>' +
            '       <li class="<%= option.classNames%>" ' +
            '         data-index="<%= option.index %>" ' +
            '         data-group="<%= option.group || 0 %>" ' +
            '         data-value="<%= option.value %>" >' +
            '         <span class="am-selected-text"><%= option.text %></span>' +
            '         <i class="am-icon-check"></i></li>' +
            '      <% } %>' +
            '      <% } %>' +
            '    </ul>' +
            '    <div class="am-selected-hint"></div>' +
            '  </div>' +
            '</div>',
          listTpl: '<% for (var i = 0; i < options.length; i++) { %>' +
            '       <% var option = options[i] %>' +
            '       <% if (option.header) { %>' +
            '  <li data-group="<%= option.group %>" class="am-selected-list-header">' +
            '       <%= option.text %></li>' +
            '       <% } else { %>' +
            '       <li class="<%= option.classNames %>" ' +
            '         data-index="<%= option.index %>" ' +
            '         data-group="<%= option.group || 0 %>" ' +
            '         data-value="<%= option.value %>" >' +
            '         <span class="am-selected-text"><%= option.text %></span>' +
            '         <i class="am-icon-check"></i></li>' +
            '      <% } %>' +
            '      <% } %>'
        };

        Selected.prototype.init = function() {
          var _this = this;
          var $element = this.$element;
          var options = this.options;

          $element.hide();

          var data = {
            id: UI.utils.generateGUID('am-selected'),
            multiple: this.multiple,
            options: [],
            searchBox: options.searchBox,
            dropUp: options.dropUp
          };

          this.$selector = $(UI.template(this.options.tpl, data));
          this.$list = this.$selector.find('.am-selected-list');
          this.$searchField = this.$selector.find(
            '.am-selected-search input');
          this.$hint = this.$selector.find('.am-selected-hint');

          // set select button styles
          var $selectorBtn = this.$selector.find('.am-selected-btn').
          css({
            width: this.options.btnWidth
          });
          var btnClassNames = [];

          options.btnSize && btnClassNames.push('am-btn-' + options.btnSize);
          options.btnStyle && btnClassNames.push('am-btn-' + options.btnStyle);
          $selectorBtn.addClass(btnClassNames.join(' '));

          this.$selector.dropdown({
            justify: $selectorBtn
          });

          // set list height
          if (options.maxHeight) {
            this.$selector.find('.am-selected-list').css({
              'max-height': options.maxHeight,
              'overflow-y': 'scroll'
            });
          }

          // set hint text
          var hint = [];
          var min = $element.attr('minchecked');
          var max = $element.attr('maxchecked');

          if ($element[0].required) {
            hint.push('必选');
          }

          if (min || max) {
            min && hint.push('至少选择 ' + min + ' 项');
            max && hint.push('至多选择 ' + max + ' 项');
          }

          this.$hint.text(hint.join('，'));

          // render dropdown list
          this.renderOptions();

          // append $selector after <select>
          this.$element.after(this.$selector);
          this.dropdown = this.$selector.data('amui.dropdown');
          this.$status = this.$selector.find('.am-selected-status');

          // #try to fixes #476
          setTimeout(function() {
            _this.syncData();
          }, 0);

          this.bindEvents();
        };

        Selected.prototype.renderOptions = function() {
          var $element = this.$element;
          var options = this.options;
          var optionItems = [];
          var $optgroup = $element.find('optgroup');
          this.$originalOptions = this.$element.find('option');

          // 单选框使用 JS 禁用已经选择的 option 以后，
          // 浏览器会重新选定第一个 option，但有一定延迟，致使 JS 获取 value 时返回 null
          if (!this.multiple && ($element.val() === null)) {
            this.$originalOptions.get(0).selected = true;
          }

          function pushOption(index, item, group) {
            var classNames = '';
            item.disabled && (classNames += options.disabledClass);
            !item.disabled && item.selected && (classNames += options.selectedClass);

            optionItems.push({
              group: group,
              index: index,
              classNames: classNames,
              text: item.text,
              value: item.value
            });
          }

          // select with option groups
          if ($optgroup.length) {
            $optgroup.each(function(i) {
              // push group name
              optionItems.push({
                header: true,
                group: i + 1,
                text: this.label
              });

              $optgroup.eq(i).find('option').each(function(index, item) {
                pushOption(index, item, i);
              });
            });
          } else {
            // without option groups
            this.$originalOptions.each(function(index, item) {
              pushOption(index, item, null);
            });
          }

          this.$list.html(UI.template(options.listTpl, {
            options: optionItems
          }));
          this.$shadowOptions = this.$list.find('> li').
          not('.am-selected-list-header');
        };

        Selected.prototype.setChecked = function(item) {
          var options = this.options;
          var $item = $(item);
          var isChecked = $item.hasClass(options.selectedClass);
          if (!this.multiple) {
            if (!isChecked) {
              this.dropdown.close();
              this.$shadowOptions.not($item).removeClass(options.selectedClass);
            } else {
              return;
            }
          }

          $item.toggleClass(options.selectedClass);

          this.syncData(item);
        };

        /**
         * syncData
         * @desc if `item` set, only sync `item` related option
         * @param {Object} item
         */
        Selected.prototype.syncData = function(item) {
          var _this = this;
          var options = this.options;
          var status = [];
          var $checked = $([]);
          this.$shadowOptions.filter('.' + options.selectedClass).each(
            function() {
              var $this = $(this);
              status.push($this.find('.am-selected-text').text());

              if (!item) {
                $checked = $checked.add(_this.$originalOptions.filter(
                  '[value="' + $this.data('value') + '"]').prop(
                  'selected', true));
              }
            });

          if (item) {
            var $item = $(item);
            this.$originalOptions.filter('[value="' + $item.data('value') +
              '"]').
            prop('selected', $item.hasClass(options.selectedClass));
          } else {
            this.$originalOptions.not($checked).prop('selected', false);
          }

          // nothing selected
          if (!this.$element.val()) {
            status = [options.noSelectedText];
          }

          this.$status.text(status.join(', '));
          this.$element.trigger('change');
        };

        Selected.prototype.bindEvents = function() {
          var _this = this;
          var header = 'am-selected-list-header';
          var handleKeyup = UI.utils.debounce(function(e) {
            _this.$shadowOptions.not('.' + header).hide().
            filter(':containsNC("' + e.target.value + '")').show();
          }, 100);

          this.$list.on('click', '> li', function(e) {
            var $this = $(this);
            !$this.hasClass(_this.options.disabledClass) &&
              !$this.hasClass(header) && _this.setChecked(this);
          });

          // simple search with jQuery :contains
          this.$searchField.on('keyup.selected.amui', handleKeyup);

          // empty search keywords
          this.$selector.on('closed.dropdown.amui', function() {
            _this.$searchField.val('');
            _this.$shadowOptions.css({
              display: ''
            });
          });

          // observe DOM
          if (UI.support.mutationobserver) {
            this.observer = new UI.support.mutationobserver(function() {
              _this.$element.trigger('changed.selected.amui');
            });

            this.observer.observe(this.$element[0], {
              childList: true,
              attributes: true,
              subtree: true,
              characterData: true
            });
          }

          // custom event
          this.$element.on('changed.selected.amui', function() {
            _this.renderOptions();
            _this.syncData();
          });
        };

        Selected.prototype.destroy = function() {
          this.$element.removeData('amui.selected').show();
          this.$selector.remove();
        };

        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.selected');
            var options = $.extend({}, UI.utils.parseOptions($this.data(
                'amSelected')),
              UI.utils.parseOptions($this.data('amSelectit')),
              typeof option === 'object' && option);

            if (!data && option === 'destroy') {
              return;
            }

            if (!data) {
              $this.data('amui.selected', (data = new Selected(this,
                options)));
            }

            if (typeof option == 'string') {
              data[option] && data[option]();
            }
          });
        }

        // Conflict with jQuery form
        // https://github.com/malsup/form/blob/6bf24a5f6d8be65f4e5491863180c09356d9dadd/jquery.form.js#L1240-L1258
        // https://github.com/allmobilize/amazeui/issues/379
        $.fn.selected = $.fn.selectIt = Plugin;

        UI.ready(function(context) {
          $('[data-am-selected]', context).selectIt();
        });

        $.AMUI.selected = Selected;

        module.exports = Selected;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  41: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        require('./ui.modal');
        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var QRCode = require('./util.qrcode');
        var doc = document;
        var $doc = $(doc);

        var Share = function(options) {
          this.options = $.extend({}, Share.DEFAULTS, options || {});
          this.$element = null;
          this.$wechatQr = null;
          this.pics = null;
          this.inited = false;
          this.active = false;
          // this.init();
        };

        Share.DEFAULTS = {
          sns: ['weibo', 'qq', 'qzone', 'tqq', 'wechat', 'renren'],
          title: '分享到',
          cancel: '取消',
          closeOnShare: true,
          id: UI.utils.generateGUID('am-share'),
          desc: 'Hi，孤夜观天象，发现一个不错的西西，分享一下下 ;-)',
          via: 'Amaze UI',
          tpl: '<div class="am-share am-modal-actions" id="<%= id %>">' +
            '<h3 class="am-share-title"><%= title %></h3>' +
            '<ul class="am-share-sns am-avg-sm-3">' +
            '<% for(var i = 0; i < sns.length; i++) {%>' +
            '<li>' +
            '<a href="<%= sns[i].shareUrl %>" ' +
            'data-am-share-to="<%= sns[i].id %>" >' +
            '<i class="am-icon-<%= sns[i].icon %>"></i>' +
            '<span><%= sns[i].title %></span>' +
            '</a></li>' +
            '<% } %></ul>' +
            '<div class="am-share-footer">' +
            '<button class="am-btn am-btn-default am-btn-block" ' +
            'data-am-share-close><%= cancel %></button></div>' +
            '</div>'
        };

        Share.SNS = {
          weibo: {
            title: '新浪微博',
            url: 'http://service.weibo.com/share/share.php',
            width: 620,
            height: 450,
            icon: 'weibo'
          },
          // url          链接地址
          // title:”,     分享的文字内容(可选，默认为所在页面的title)
          // appkey:”,    您申请的应用appkey,显示分享来源(可选)
          // pic:”,       分享图片的路径(可选)
          // ralateUid:”, 关联用户的UID，分享微博会@该用户(可选)
          // NOTE: 会自动抓取图片，不用指定 pic

          qq: {
            title: 'QQ 好友',
            url: 'http://connect.qq.com/widget/shareqq/index.html',
            icon: 'qq'
          },
          // url:,
          // title:'',    分享标题(可选)
          // pics:'',     分享图片的路径(可选)
          // summary:'',  分享摘要(可选)
          // site:'',     分享来源 如：腾讯网(可选)
          // desc: ''     发送给用户的消息
          // NOTE: 经过测试，最终发给用户的只有 url 和 desc

          qzone: {
            title: 'QQ 空间',
            url: 'http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey',
            icon: 'star'
          },
          // http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?url=xxx&title=xxx&desc=&summary=&site=
          // url:,
          // title:'',    分享标题(可选)
          // desc:'',     默认分享理由(可选)
          // summary:'',  分享摘要(可选)
          // site:'',     分享来源 如：腾讯网(可选)
          // pics:'',     分享图片的路径(可选)，不会自动抓取，多个图片用|分隔

          tqq: {
            title: '腾讯微博',
            url: 'http://v.t.qq.com/share/share.php',
            icon: 'tencent-weibo'
          },
          // url=xx&title=&appkey=801cf76d3cfc44ada52ec13114e84a96
          // url
          // title
          // pic 多个图片用 | 分隔
          // appkey
          // NOTE: 不会自动抓取图片

          wechat: {
            title: '微信',
            url: '[qrcode]',
            icon: 'wechat'
          },
          // 生成一个二维码 供用户扫描
          // 相关接口 https://github.com/zxlie/WeixinApi

          renren: {
            title: '人人网',
            url: 'http://widget.renren.com/dialog/share',
            icon: 'renren'
          },
          // http://widget.renren.com/dialog/share?resourceUrl=www&srcUrl=www&title=ww&description=xxx
          // 550 * 400
          // resourceUrl : '', // 分享的资源Url
          // srcUrl : '',	     // 分享的资源来源Url,
          //                   //   默认为header中的Referer,如果分享失败可以调整此值为resourceUrl试试
          // pic : '',		 // 分享的主题图片，会自动抓取
          // title : '',		 // 分享的标题
          // description : ''	 // 分享的详细描述
          // NOTE: 经过测试，直接使用 url 参数即可

          douban: {
            title: '豆瓣',
            url: 'http://www.douban.com/recommend/',
            icon: 'share-alt'
          },
          // http://www.douban.com/service/sharebutton
          // 450 * 330
          // http://www.douban.com/share/service?bm=1&image=&href=xxx&updated=&name=
          // href 链接
          // name 标题

          /* void (function() {
   var d = document, e = encodeURIComponent,
   s1 = window.getSelection, s2 = d.getSelection,
   s3 = d.selection, s = s1 ? s1()
   : s2 ? s2() : s3 ? s3.createRange().text : '',
   r = 'http://www.douban.com/recommend/?url=&title=&sel=&v=1&r=1'
   })();
   */

          // tsohu: '',
          // http://t.sohu.com/third/post.jsp?url=&title=&content=utf-8&pic=

          // print: '',

          mail: {
            title: '邮件分享',
            url: 'mailto:',
            icon: 'envelope-o'
          },

          sms: {
            title: '短信分享',
            url: 'sms:',
            icon: 'comment'
          }
        };

        Share.prototype.render = function() {
          var options = this.options;
          var snsData = [];
          var title = encodeURIComponent(doc.title);
          var link = encodeURIComponent(doc.location);
          var msgBody = '?body=' + title + link;

          options.sns.forEach(function(item, i) {
            if (Share.SNS[item]) {
              var tmp = Share.SNS[item];
              var shareUrl;

              tmp.id = item;

              if (item === 'mail') {
                shareUrl = msgBody + '&subject=' + options.desc;
              } else if (item === 'sms') {
                shareUrl = msgBody;
              } else {
                shareUrl = '?url=' + link + '&title=' + title;
              }

              tmp.shareUrl = tmp.url + shareUrl;

              snsData.push(tmp);
            }
          });

          return UI.template(options.tpl, $.extend({}, options, {
            sns: snsData
          }));
        };

        Share.prototype.init = function() {
          if (this.inited) {
            return;
          }

          var me = this;
          var shareItem = '[data-am-share-to]';

          $doc.ready($.proxy(function() {
            $('body').append(this.render()); // append share DOM to body
            this.$element = $('#' + this.options.id);

            this.$element.find('[data-am-share-close]').
            on('click.share.amui', function() {
              me.close();
            });
          }, this));

          $doc.on('click.share.amui', shareItem, $.proxy(function(e) {
            var $clicked = $(e.target);
            var $target = $clicked.is(shareItem) && $clicked ||
              $clicked.parent(shareItem);
            var sns = $target.attr('data-am-share-to');

            if (!(sns === 'mail' || sns === 'sms')) {
              e.preventDefault();
              this.shareTo(sns, this.setData(sns));
            }

            this.close();
          }, this));

          this.inited = true;
        };

        Share.prototype.open = function() {
          !this.inited && this.init();
          this.$element && this.$element.modal('open');
          this.$element.trigger('open.share.amui');
          this.active = true;
        };

        Share.prototype.close = function() {
          this.$element && this.$element.modal('close');
          this.$element.trigger('close.share.amui');
          this.active = false;
        };

        Share.prototype.toggle = function() {
          this.active ? this.close() : this.open();
        };

        Share.prototype.setData = function(sns) {
          if (!sns) {
            return;
          }

          var shareData = {
            url: doc.location,
            title: doc.title
          };
          var desc = this.options.desc;
          var imgSrc = this.pics || [];
          var qqReg = /^(qzone|qq|tqq)$/;

          if (qqReg.test(sns) && !imgSrc.length) {
            var allImages = doc.images;

            for (var i = 0; i < allImages.length && i < 10; i++) {
              !!allImages[i].src && imgSrc.push(encodeURIComponent(
                allImages[i].src));
            }

            this.pics = imgSrc; // 缓存图片
          }

          switch (sns) {
            case 'qzone':
              shareData.desc = desc;
              shareData.site = this.options.via;
              shareData.pics = imgSrc.join('|');
              // TODO: 抓取图片多张
              break;
            case 'qq':
              shareData.desc = desc;
              shareData.site = this.options.via;
              shareData.pics = imgSrc[0];
              // 抓取一张图片
              break;
            case 'tqq':
              // 抓取图片多张
              shareData.pic = imgSrc.join('|');
              break;
          }

          return shareData;
        };

        Share.prototype.shareTo = function(sns, data) {
          var snsInfo = Share.SNS[sns];

          if (!snsInfo) {
            return;
          }

          if (sns === 'wechat' || sns === 'weixin') {
            return this.wechatQr();
          }

          var query = [];
          for (var key in data) {
            if (data[key]) {
              // 避免 encode 图片分隔符 |
              query.push(key.toString() + '=' + ((key === 'pic' || key ===
                  'pics') ?
                data[key] : encodeURIComponent(data[key])));
            }
          }

          window.open(snsInfo.url + '?' + query.join('&'));
        };

        Share.prototype.wechatQr = function() {
          if (!this.$wechatQr) {
            var qrId = UI.utils.generateGUID('am-share-wechat');
            var $qr = $(
              '<div class="am-modal am-modal-no-btn am-share-wechat-qr">' +
              '<div class="am-modal-dialog"><div class="am-modal-hd">分享到微信 ' +
              '<a href="" class="am-close am-close-spin" ' +
              'data-am-modal-close>&times;</a> </div>' +
              '<div class="am-modal-bd">' +
              '<div class="am-share-wx-qr"></div>' +
              '<div class="am-share-wechat-tip">' +
              '打开微信，点击底部的<em>发现</em>，<br/> ' +
              '使用<em>扫一扫</em>将网页分享至朋友圈</div></div></div></div>');

            $qr.attr('id', qrId);

            var qrNode = new QRCode({
              render: 'canvas',
              correctLevel: 0,
              text: doc.location.href,
              width: 180,
              height: 180,
              background: '#fff',
              foreground: '#000'
            });

            $qr.find('.am-share-wx-qr').html(qrNode);

            $qr.appendTo($('body'));

            this.$wechatQr = $('#' + qrId);
          }

          this.$wechatQr.modal('open');
        };

        var share = new Share();

        $doc.on('click.share.amui.data-api', '[data-am-toggle="share"]',
          function(e) {
            e.preventDefault();
            share.toggle();
          });

        $.AMUI.share = share;

        module.exports = share;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./ui.modal": 32,
      "./util.qrcode": 52
    }
  ],
  42: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var rAF = UI.utils.rAF;
        var cAF = UI.utils.cancelAF;

        /**
         * Smooth Scroll
         * @param position
         * @via http://mir.aculo.us/2014/01/19/scrolling-dom-elements-to-the-top-a-zepto-plugin/
         */

        // Usage: $(window).smoothScroll([options])

        // only allow one scroll to top operation to be in progress at a time,
        // which is probably what you want
        var smoothScrollInProgress = false;

        var SmoothScroll = function(element, options) {
          options = options || {};

          var $this = $(element);
          var targetY = parseInt(options.position) || SmoothScroll.DEFAULTS
            .position;
          var initialY = $this.scrollTop();
          var lastY = initialY;
          var delta = targetY - initialY;
          // duration in ms, make it a bit shorter for short distances
          // this is not scientific and you might want to adjust this for
          // your preferences
          var speed = options.speed ||
            Math.min(750, Math.min(1500, Math.abs(initialY - targetY)));
          // temp variables (t will be a position between 0 and 1, y is the calculated scrollTop)
          var start;
          var t;
          var y;
          var cancelScroll = function() {
            abort();
          };

          // abort if already in progress or nothing to scroll
          if (smoothScrollInProgress) {
            return;
          }

          if (delta === 0) {
            return;
          }

          // quint ease-in-out smoothing, from
          // https://github.com/madrobby/scripty2/blob/master/src/effects/transitions/penner.js#L127-L136
          function smooth(pos) {
            if ((pos /= 0.5) < 1) {
              return 0.5 * Math.pow(pos, 5);
            }

            return 0.5 * (Math.pow((pos - 2), 5) + 2);
          }

          function abort() {
            $this.off('touchstart.smoothscroll.amui', cancelScroll);
            smoothScrollInProgress = false;
          }

          // when there's a touch detected while scrolling is in progress, abort
          // the scrolling (emulates native scrolling behavior)
          $this.on('touchstart.smoothscroll.amui', cancelScroll);
          smoothScrollInProgress = true;

          // start rendering away! note the function given to frame
          // is named "render" so we can reference it again further down
          function render(now) {
            if (!smoothScrollInProgress) {
              return;
            }
            if (!start) {
              start = now;
            }

            // calculate t, position of animation in [0..1]
            t = Math.min(1, Math.max((now - start) / speed, 0));
            // calculate the new scrollTop position (don't forget to smooth)
            y = Math.round(initialY + delta * smooth(t));
            // bracket scrollTop so we're never over-scrolling
            if (delta > 0 && y > targetY) {
              y = targetY;
            }
            if (delta < 0 && y < targetY) {
              y = targetY;
            }

            // only actually set scrollTop if there was a change fromt he last frame
            if (lastY != y) {
              $this.scrollTop(y);
            }

            lastY = y;
            // if we're not done yet, queue up an other frame to render,
            // or clean up
            if (y !== targetY) {
              cAF(scrollRAF);
              scrollRAF = rAF(render);
            } else {
              cAF(scrollRAF);
              abort();
            }
          }

          var scrollRAF = rAF(render);
        };

        SmoothScroll.DEFAULTS = {
          position: 0
        };

        $.fn.smoothScroll = function(option) {
          return this.each(function() {
            new SmoothScroll(this, option);
          });
        };

        // Init code
        $(document).on('click.smoothScroll.amui.data-api',
          '[data-am-smooth-scroll]',
          function(e) {
            e.preventDefault();
            var options = UI.utils.parseOptions($(this).data(
              'amSmoothScroll'));

            $(window).smoothScroll(options);
          });

        module.exports = SmoothScroll;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  43: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        /**
         * @via https://github.com/uikit/uikit/blob/master/src/js/addons/sticky.js
         * @license https://github.com/uikit/uikit/blob/master/LICENSE.md
         */

        // Sticky Class
        var Sticky = function(element, options) {
          var me = this;

          this.options = $.extend({}, Sticky.DEFAULTS, options);
          this.$element = $(element);
          this.sticked = null;
          this.inited = null;
          this.$holder = undefined;

          this.$window = $(window).
          on('scroll.sticky.amui',
            UI.utils.debounce($.proxy(this.checkPosition, this), 10)).
          on('resize.sticky.amui orientationchange.sticky.amui',
            UI.utils.debounce(function() {
              me.reset(true, function() {
                me.checkPosition();
              });
            }, 50)).
          on('load.sticky.amui', $.proxy(this.checkPosition, this));

          // the `.offset()` is diff between jQuery & Zepto.js
          // jQuery: return `top` and `left`
          // Zepto.js: return `top`, `left`, `width`, `height`
          this.offset = this.$element.offset();

          this.init();
        };

        Sticky.DEFAULTS = {
          top: 0,
          bottom: 0,
          animation: '',
          className: {
            sticky: 'am-sticky',
            resetting: 'am-sticky-resetting',
            stickyBtm: 'am-sticky-bottom',
            animationRev: 'am-animation-reverse'
          }
        };

        Sticky.prototype.init = function() {
          var result = this.check();

          if (!result) {
            return false;
          }

          var $element = this.$element;
          var $elementMargin = '';

          $.each($element.css(
              ['marginTop', 'marginRight', 'marginBottom', 'marginLeft']),
            function(name, value) {
              return $elementMargin += ' ' + value;
            });

          var $holder = $('<div class="am-sticky-placeholder"></div>').css({
            height: $element.css('position') != 'absolute' ?
              $element.outerHeight() : '',
            float: $element.css('float') != 'none' ? $element.css(
              'float') : '',
            margin: $elementMargin
          });

          this.$holder = $element.css('margin', 0).wrap($holder).parent();
          this.inited = 1;

          return true;
        };

        Sticky.prototype.reset = function(force, cb) {
          var options = this.options;
          var $element = this.$element;
          var animation = (options.animation) ?
            ' am-animation-' + options.animation : '';
          var complete = function() {
            $element.css({
              position: '',
              top: '',
              width: '',
              left: '',
              margin: 0
            });
            $element.removeClass([
              animation,
              options.className.animationRev,
              options.className.sticky,
              options.className.resetting
            ].join(' '));

            this.animating = false;
            this.sticked = false;
            this.offset = $element.offset();
            cb && cb();
          }.bind(this);

          $element.addClass(options.className.resetting);

          if (!force && options.animation && UI.support.animation) {

            this.animating = true;

            $element.removeClass(animation).one(UI.support.animation.end,
              function() {
                complete();
              }).width(); // force redraw

            $element.addClass(animation + ' ' + options.className.animationRev);
          } else {
            complete();
          }
        };

        Sticky.prototype.check = function() {
          if (!this.$element.is(':visible')) {
            return false;
          }

          var media = this.options.media;

          if (media) {
            switch (typeof(media)) {
              case 'number':
                if (window.innerWidth < media) {
                  return false;
                }
                break;

              case 'string':
                if (window.matchMedia && !window.matchMedia(media).matches) {
                  return false;
                }
                break;
            }
          }

          return true;
        };

        Sticky.prototype.checkPosition = function() {
          if (!this.inited) {
            var initialized = this.init();
            if (!initialized) {
              return;
            }
          }

          var options = this.options;
          var scrollTop = this.$window.scrollTop();
          var offsetTop = options.top;
          var offsetBottom = options.bottom;
          var $element = this.$element;
          var animation = (options.animation) ?
            ' am-animation-' + options.animation : '';
          var className = [options.className.sticky, animation].join(' ');

          if (typeof offsetBottom == 'function') {
            offsetBottom = offsetBottom(this.$element);
          }

          var checkResult = (scrollTop > this.$holder.offset().top);

          if (!this.sticked && checkResult) {
            $element.addClass(className);
          } else if (this.sticked && !checkResult) {
            this.reset();
          }

          this.$holder.height($element.is(':visible') ? $element.height() :
            0);

          if (checkResult) {
            $element.css({
              top: offsetTop,
              left: this.$holder.offset().left,
              width: this.$holder.width()
            });

            /*
     if (offsetBottom) {
     // （底部边距 + 元素高度 > 窗口高度） 时定位到底部
     if ((offsetBottom + this.offset.height > $(window).height()) &&
     (scrollTop + $(window).height() >= scrollHeight - offsetBottom)) {
     $element.addClass(options.className.stickyBtm).
     css({top: $(window).height() - offsetBottom - this.offset.height});
     } else {
     $element.removeClass(options.className.stickyBtm).css({top: offsetTop});
     }
     }
     */
          }

          this.sticked = checkResult;
        };

        // Sticky Plugin
        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.sticky');
            var options = typeof option == 'object' && option;

            if (!data) {
              $this.data('amui.sticky', (data = new Sticky(this,
                options)));
            }

            if (typeof option == 'string') {
              data[option]();
            }
          });
        }

        $.fn.sticky = Plugin;

        // Init code
        $(window).on('load', function() {
          $('[data-am-sticky]').each(function() {
            var $this = $(this);
            var options = UI.utils.options($this.attr('data-am-sticky'));

            Plugin.call($this, options);
          });
        });

        $.AMUI.sticky = Sticky;

        module.exports = Sticky;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  44: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var Hammer = require('./util.hammer');
        var supportTransition = UI.support.transition;
        var animation = UI.support.animation;

        /**
         * @via https://github.com/twbs/bootstrap/blob/master/js/tab.js
         * @copyright 2011-2014 Twitter, Inc.
         * @license MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
         */

        var Tabs = function(element, options) {
          this.$element = $(element);
          this.options = $.extend({}, Tabs.DEFAULTS, options || {});

          this.$tabNav = this.$element.find(this.options.selector.nav);
          this.$navs = this.$tabNav.find('a');

          this.$content = this.$element.find(this.options.selector.content);
          this.$tabPanels = this.$content.find(this.options.selector.panel);

          this.transitioning = null;

          this.init();
        };

        Tabs.DEFAULTS = {
          selector: {
            nav: '> .am-tabs-nav',
            content: '> .am-tabs-bd',
            panel: '> .am-tab-panel'
          },
          className: {
            active: 'am-active'
          }
        };

        Tabs.prototype.init = function() {
          var _this = this;
          var options = this.options;

          // Activate the first Tab when no active Tab or multiple active Tabs
          if (this.$tabNav.find('> .am-active').length !== 1) {
            var $tabNav = this.$tabNav;
            this.activate($tabNav.children('li').first(), $tabNav);
            this.activate(this.$tabPanels.first(), this.$content);
          }

          this.$navs.on('click.tabs.amui', function(e) {
            e.preventDefault();
            _this.open($(this));
          });

          // TODO: nested Tabs touch events
          if (!options.noSwipe) {
            var hammer = new Hammer(this.$content[0]);

            hammer.get('pan').set({
              direction: Hammer.DIRECTION_HORIZONTAL,
              threshold: 120
            });

            hammer.on('panleft', UI.utils.debounce(function(e) {
              e.preventDefault();
              var $target = $(e.target);

              if (!$target.is(options.selector.panel)) {
                $target = $target.closest(options.selector.panel);
              }

              $target.focus();

              var $nav = _this.getNextNav($target);
              $nav && _this.open($nav);
            }, 100));

            hammer.on('panright', UI.utils.debounce(function(e) {
              e.preventDefault();

              var $target = $(e.target);

              if (!$target.is(options.selector.panel)) {
                $target = $target.closest(options.selector.panel);
              }

              var $nav = _this.getPrevNav($target);

              $nav && _this.open($nav);
            }, 100));
          }
        };

        Tabs.prototype.open = function($nav) {
          if (!$nav ||
            this.transitioning ||
            $nav.parent('li').hasClass('am-active')) {
            return;
          }

          var $tabNav = this.$tabNav;
          var $navs = this.$navs;
          var $tabContent = this.$content;
          var href = $nav.attr('href');
          var regexHash = /^#.+$/;
          var $target = regexHash.test(href) && this.$content.find(href) ||
            this.$tabPanels.eq($navs.index($nav));
          var previous = $tabNav.find('.am-active a')[0];
          var e = $.Event('open.tabs.amui', {
            relatedTarget: previous
          });

          $nav.trigger(e);

          if (e.isDefaultPrevented()) {
            return;
          }

          // activate Tab nav
          this.activate($nav.closest('li'), $tabNav);

          // activate Tab content
          this.activate($target, $tabContent, function() {
            $nav.trigger({
              type: 'opened.tabs.amui',
              relatedTarget: previous
            });
          });
        };

        Tabs.prototype.activate = function($element, $container, callback) {
          this.transitioning = true;

          var $active = $container.find('> .am-active');
          var transition = callback && supportTransition && !!$active.length;

          $active.removeClass('am-active am-in');

          $element.addClass('am-active');

          if (transition) {
            $element.redraw(); // reflow for transition
            $element.addClass('am-in');
          } else {
            $element.removeClass('am-fade');
          }

          function complete() {
            callback && callback();
            this.transitioning = false;
          }

          transition ?
            $active.one(supportTransition.end, $.proxy(complete, this)) :
            $.proxy(complete, this)();

        };

        Tabs.prototype.getNextNav = function($panel) {
          var navIndex = this.$tabPanels.index($panel);
          var rightSpring = 'am-animation-right-spring';

          if (navIndex + 1 >= this.$navs.length) { // last one
            animation && $panel.addClass(rightSpring).on(animation.end,
              function() {
                $panel.removeClass(rightSpring);
              });
            return null;
          } else {
            return this.$navs.eq(navIndex + 1);
          }
        };

        Tabs.prototype.getPrevNav = function($panel) {
          var navIndex = this.$tabPanels.index($panel);
          var leftSpring = 'am-animation-left-spring';

          if (navIndex === 0) { // first one
            animation && $panel.addClass(leftSpring).on(animation.end,
              function() {
                $panel.removeClass(leftSpring);
              });
            return null;
          } else {
            return this.$navs.eq(navIndex - 1);
          }
        };

        // Plugin
        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var $tabs = $this.is('.am-tabs') && $this || $this.closest(
              '.am-tabs');
            var data = $tabs.data('amui.tabs');
            var options = $.extend({}, $.isPlainObject(option) ? option : {},
              UI.utils.parseOptions($this.data('amTabs')));

            if (!data) {
              $tabs.data('amui.tabs', (data = new Tabs($tabs[0],
                options)));
            }

            if (typeof option == 'string' && $this.is('.am-tabs-nav a')) {
              data[option]($this);
            }
          });
        }

        $.fn.tabs = Plugin;

        // Init code
        UI.ready(function(context) {
          $('[data-am-tabs]', context).tabs();
        });

        $.AMUI.tabs = Tabs;

        module.exports = Tabs;

        // TODO: 1. Ajax 支持
        //       2. touch 事件处理逻辑优化
        //       3. 暴露方法 API

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4,
      "./util.hammer": 51
    }
  ],
  45: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        /**
         * UCheck
         * @via https://github.com/designmodo/Flat-UI/blob/8ef98df23ba7f5033e596a9bd05b53b535a9fe99/js/radiocheck.js
         * @license CC BY 3.0 & MIT
         * @param element
         * @param options
         * @constructor
         */

        var UCheck = function(element, options) {
          this.options = $.extend({}, UCheck.DEFAULTS, options);
          // this.options = $.extend({}, UCheck.DEFAULTS, this.$element.data(), options);
          this.$element = $(element);
          this.init();
        };

        UCheck.DEFAULTS = {
          checkboxClass: 'am-ucheck-checkbox',
          radioClass: 'am-ucheck-radio',
          checkboxTpl: '<span class="am-ucheck-icons">' +
            '<i class="am-icon-unchecked"></i><i class="am-icon-checked"></i></span>',
          radioTpl: '<span class="am-ucheck-icons">' +
            '<i class="am-icon-unchecked"></i><i class="am-icon-checked"></i></span>'
        };

        UCheck.prototype.init = function() {
          var $element = this.$element;
          var element = $element[0];
          var options = this.options;

          if (element.type === 'checkbox') {
            $element.addClass(options.checkboxClass).after(options.checkboxTpl);
          } else if (element.type === 'radio') {
            $element.addClass(options.radioClass).after(options.radioTpl);
          }
        };

        UCheck.prototype.check = function() {
          this.$element.prop('checked', true)
            .trigger('change.ucheck.amui').trigger('checked.ucheck.amui');
        },

        UCheck.prototype.uncheck = function() {
          this.$element.prop('checked', false)
            .trigger('change.ucheck.amui').trigger('unchecked.ucheck.amui');
        },

        UCheck.prototype.toggle = function() {
          this.$element.prop('checked', function(i, value) {
            return !value;
          }).trigger('change.ucheck.amui').trigger('toggled.ucheck.amui');
        },

        UCheck.prototype.disable = function() {
          this.$element.prop('disabled', true).
          trigger('change.ucheck.amui').trigger('disabled.ucheck.amui');
        },

        UCheck.prototype.enable = function() {
          this.$element.prop('disabled', false);
          this.$element.trigger('change.ucheck.amui').trigger(
            'enabled.ucheck.amui');
        },

        UCheck.prototype.destroy = function() {
          this.$element.removeData('amui.ucheck').
          removeClass(this.options.checkboxClass + ' ' + this.options.radioClass)
            .
          next('.am-ucheck-icons').remove().
          end().trigger('destroyed.ucheck.amui');
        };

        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.ucheck');
            var options = $.extend({}, UI.utils.parseOptions($this.data(
                'amUcheck')),
              typeof option === 'object' && option);

            if (!data && option === 'destroy') {
              return;
            }

            if (!data) {
              $this.data('amui.ucheck', (data = new UCheck(this,
                options)));
            }

            if (typeof option == 'string') {
              data[option] && data[option]();
            }

            // Adding 'am-nohover' class for touch devices
            if (UI.support.touch) {
              $this.parent().hover(function() {
                $this.addClass('am-nohover');
              }, function() {
                $this.removeClass('am-nohover');
              });
            }
          });
        }

        $.fn.uCheck = Plugin;

        UI.ready(function(context) {
          $('[data-am-ucheck]', context).uCheck();
        });

        $.AMUI.uCheck = UCheck;

        module.exports = UCheck;

        // TODO: 与表单验证结合使用的情况

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  46: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        var Validator = function(element, options) {
          this.options = $.extend({}, Validator.DEFAULTS, options);
          this.options.patterns = $.extend({}, Validator.patterns,
            this.options.patterns);
          var locales = this.options.locales;
          !Validator.validationMessages[locales] && (this.options.locales =
            'zh_CN');
          this.$element = $(element);
          this.init();
        };

        Validator.DEFAULTS = {
          debug: false,
          locales: 'zh_CN',
          H5validation: false,
          H5inputType: ['email', 'url', 'number'],
          patterns: {},
          patternClassPrefix: 'js-pattern-',
          activeClass: 'am-active',
          inValidClass: 'am-field-error',
          validClass: 'am-field-valid',

          validateOnSubmit: true,
          // Elements to validate with allValid (only validating visible elements)
          // :input: selects all input, textarea, select and button elements.
          allFields: ':input:visible:not(:submit, :button, :disabled, .am-novalidate)',

          // Custom events
          customEvents: 'validate',

          // Keyboard events
          keyboardFields: ':input:not(:submit, :button, :disabled, .am-novalidate)',
          keyboardEvents: 'focusout, change', // keyup, focusin

          activeKeyup: true,

          // Mouse events
          pointerFields: 'input[type="range"]:not(:disabled, .am-novalidate), ' +
            'input[type="radio"]:not(:disabled, .am-novalidate), ' +
            'input[type="checkbox"]:not(:disabled, .am-novalidate), ' +
            'select:not(:disabled, .am-novalidate), ' +
            'option:not(:disabled, .am-novalidate)',
          pointerEvents: 'click',

          onValid: function(validity) {},

          onInValid: function(validity) {},

          markValid: function(validity) {
            // this is Validator instance
            var options = this.options;
            var $field = $(validity.field);
            var $parent = $field.closest('.am-form-group');

            $field.addClass(options.validClass).removeClass(options.inValidClass);
            $parent.addClass('am-form-success').removeClass('am-form-error');
            options.onValid.call(this, validity);
          },

          markInValid: function(validity) {
            var options = this.options;
            var $field = $(validity.field);
            var $parent = $field.closest('.am-form-group');

            $field.addClass(options.inValidClass + ' ' + options.activeClass)
              .
            removeClass(options.validClass);
            $parent.addClass('am-form-error').removeClass('am-form-success');
            options.onInValid.call(this, validity);
          },

          validate: function(validity) {
            // return validity;
          },

          submit: null
        };

        Validator.VERSION = '2.0.0';

        /* jshint -W101 */
        Validator.patterns = {
          email: /^((([a-zA-Z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-zA-Z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/,

          url: /^(https?|ftp):\/\/(((([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/,

          // Number, including positive, negative, and floating decimal
          number: /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/,
          dateISO: /^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/,
          integer: /^-?\d+$/
        };
        /* jshint +W101 */

        Validator.validationMessages = {
          zh_CN: {
            valueMissing: '请填写此字段',
            customError: {
              tooShort: '至少填写 %s 个字符',
              checkedOverflow: '至多选择 %s 项',
              checkedUnderflow: '至少选择 %s 项'
            },
            patternMismatch: '请按照要求的格式填写',
            rangeOverflow: '请填写小于等于 %s 的值',
            rangeUnderflow: '请填写大于等于 %s 的值',
            stepMismatch: '',
            tooLong: '至多填写 %s 个字符',
            typeMismatch: '请按照要求的类型填写'
          }
        };

        Validator.ERROR_MAP = {
          tooShort: 'minlength',
          checkedOverflow: 'maxchecked',
          checkedUnderflow: 'minchecked',
          rangeOverflow: 'max',
          rangeUnderflow: 'min',
          tooLong: 'maxlength'
        };

        // TODO: 考虑表单元素不是 form 子元素的情形
        // TODO: change/click/focusout 同时触发时处理重复
        // TODO: 显示提示信息

        Validator.prototype.init = function() {
          var _this = this;
          var $element = this.$element;
          var options = this.options;

          // using H5 form validation if option set and supported
          if (options.H5validation && UI.support.formValidation) {
            return false;
          }

          // disable HTML5 form validation
          $element.attr('novalidate', 'novalidate');

          function regexToPattern(regex) {
            var pattern = regex.toString();
            return pattern.substring(1, pattern.length - 1);
          }

          // add pattern to H5 input type
          $.each(options.H5inputType, function(i, type) {
            var $field = $element.find('input[type=' + type + ']');
            if (!$field.attr('pattern')) {
              $field.attr('pattern', regexToPattern(options.patterns[type]));
            }
          });

          // add pattern to .js-pattern-xx
          $.each(options.patterns, function(key, value) {
            var $field = $element.find('.' + options.patternClassPrefix +
              key);
            !$field.attr('pattern') && $field.attr('pattern',
              regexToPattern(value));
          });

          $element.submit(function(e) {
            // user custom submit handler
            if (typeof options.submit === 'function') {
              return options.submit.call(_this, e);
            }

            if (options.validateOnSubmit) {
              var formValidity = _this.isFormValid();

              // sync validate, return result
              if ($.type(formValidity) === 'boolean') {
                return formValidity;
              }

              if ($element.data('amui.checked')) {
                return true;
              } else {
                $.when(formValidity).then(function() {
                  // done, submit form
                  $element.data('amui.checked', true).submit();
                }, function() {
                  // fail
                  $element.data('amui.checked', false).
                  find('.' + options.inValidClass).eq(0).focus();
                });
                return false;
              }
            }
          });

          function bindEvents(fields, eventFlags, debounce) {
            var events = eventFlags.split(',');
            var validate = function(e) {
              // console.log(e.type);
              _this.validate(this);
            };

            if (debounce) {
              validate = UI.utils.debounce(validate, debounce);
            }

            $.each(events, function(i, event) {
              $element.on(event + '.validator.amui', fields, validate);
            });
          }

          bindEvents(':input', options.customEvents);
          bindEvents(options.keyboardFields, options.keyboardEvents);
          bindEvents(options.pointerFields, options.pointerEvents);
          // active filed
          bindEvents('.am-active', 'keyup', 50);
          bindEvents('textarea[maxlength]', 'keyup', 50);

          /*if (options.errorMessage === 'tooltip') {
    this.$tooltip = $('<div></div>', {
      'class': 'am-validator-message',
      id: UI.utils.generateGUID('am-validator-message')
    });

    $(document.body).append(this.$tooltip);
  }*/
        };

        Validator.prototype.isValid = function(field) {
          var $field = $(field);
          // valid field not has been validated
          if ($field.data('validity') === undefined) {
            this.validate(field);
          }
          return $field.data('validity') && $field.data('validity').valid;
        };

        Validator.prototype.validate = function(field) {
          var _this = this;
          var $element = this.$element;
          var options = this.options;
          var $field = $(field);

          // Validate equal, e.g. confirm password
          var equalTo = $field.data('equalTo');
          if (equalTo) {
            $field.attr('pattern', '^' + $element.find(equalTo).val() + '$');
          }

          var pattern = $field.attr('pattern') || false;
          var re = new RegExp(pattern);
          var $radioGroup = null;
          var $checkboxGroup = null;
          // if checkbox, return `:chcked` length
          // NOTE: checkbox and radio should have name attribute
          var value = ($field.is('[type=checkbox]')) ?
            ($checkboxGroup = $element.find('input[name="' + field.name +
              '"]')).
          filter(':checked').length: ($field.is('[type=radio]') ?
            ($radioGroup = this.$element.find('input[name="' + field.name +
              '"]')).filter(':checked').length > 0 : $field.val());

          // if checkbox, valid the first input of checkbox group
          $field = ($checkboxGroup && $checkboxGroup.length) ?
            $checkboxGroup.first() : $field;

          var required = ($field.attr('required') !== undefined) &&
            ($field.attr('required') !== 'false');
          var maxLength = parseInt($field.attr('maxlength'), 10);
          var minLength = parseInt($field.attr('minlength'), 10);
          var min = Number($field.attr('min'));
          var max = Number($field.attr('max'));
          var validity = this.createValidity({
            field: $field[0],
            valid: true
          });

          // Debug
          if (options.debug && window.console) {
            console.log('Validate: value -> [' + value + ', regex -> [' +
              re +
              '], required -> ' + required);
            console.log('Regex test: ' + re.test(value) + ', Pattern: ' +
              pattern);
          }

          // check value length
          if (!isNaN(maxLength) && value.length > maxLength) {
            validity.valid = false;
            validity.tooLong = true;
          }

          if (!isNaN(minLength) && value.length < minLength) {
            validity.valid = false;
            validity.customError = 'tooShort';
          }

          // check minimum and maximum
          // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Input
          // TODO: 日期验证最小值和最大值 min/max
          if (!isNaN(min) && Number(value) < min) {
            validity.valid = false;
            validity.rangeUnderflow = true;
          }

          if (!isNaN(max) && Number(value) > max) {
            validity.valid = false;
            validity.rangeOverflow = true;
          }

          // check required
          if (required && !value) {
            validity.valid = false;
            validity.valueMissing = true;
          } else if (($checkboxGroup || $field.is(
              'select[multiple="multiple"]')) &&
            value) {
            // check checkboxes / multiple select with `minchecked`/`maxchecked` attr
            // var $multipleField = $checkboxGroup ? $checkboxGroup.first() : $field;

            // if is select[multiple="multiple"], return selected length
            value = $checkboxGroup ? value : value.length;

            // at least checked
            var minChecked = parseInt($field.attr('minchecked'), 10);
            // at most checked
            var maxChecked = parseInt($field.attr('maxchecked'), 10);

            if (!isNaN(minChecked) && value < minChecked) {
              // console.log('At least [%d] items checked！', maxChecked);
              validity.valid = false;
              validity.customError = 'checkedUnderflow';
            }

            if (!isNaN(maxChecked) && value > maxChecked) {
              // console.log('At most [%d] items checked！', maxChecked);
              validity.valid = false;
              validity.customError = 'checkedOverflow';
            }
          } else if (pattern && !re.test(value) && value) { // check pattern
            validity.valid = false;
            validity.patternMismatch = true;
          }

          var validateComplete = function(validity) {
            this.markField(validity);

            $field.trigger('validated.field.validator.amui', validity).
            data('validity', validity);

            // validate the radios/checkboxes with the same name
            var $fields = $radioGroup || $checkboxGroup;
            if ($fields) {
              $fields.not($field).data('validity', validity).each(
                function() {
                  validity.field = this;
                  _this.markField(validity);
                });
            }
          };

          // Run custom validate
          // NOTE: async custom validate should return Deferred project
          var customValidate;
          (typeof options.validate === 'function') &&
            (customValidate = options.validate.call(this, validity));

          // Deferred
          if (customValidate) {
            var dfd = new $.Deferred();
            $field.data('amui.dfdValidity', dfd.promise());
            return $.when(customValidate).always(function(validity) {
              dfd[validity.valid ? 'resolve' : 'reject'](validity);
              validateComplete.call(_this, validity);
            });
          }

          validateComplete.call(this, validity);
        };

        Validator.prototype.markField = function(validity) {
          var options = this.options;
          var flag = 'mark' + (validity.valid ? '' : 'In') + 'Valid';
          options[flag] && options[flag].call(this, validity);
        };

        // check all fields in the form are valid
        Validator.prototype.validateForm = function() {
          var _this = this;
          var $element = this.$element;
          var options = this.options;
          var $allFields = $element.find(options.allFields);
          var radioNames = [];
          var valid = true;
          var formValidity = [];
          var $inValidFields = $([]);
          var promises = [];
          // for async validate
          var async = false;

          $element.trigger('validate.form.validator.amui');

          // Filter radio with the same name and keep only one,
          //   since they will be checked as a group by validate()
          var $filteredFields = $allFields.filter(function(index) {
            var name;
            if (this.tagName === 'INPUT' && this.type === 'radio') {
              name = this.name;
              if (radioNames[name] === true) {
                return false;
              }
              radioNames[name] = true;
            }
            return true;
          });

          $filteredFields.each(function() {
            var $this = $(this);
            var fieldValid = _this.isValid(this);
            var fieldValidity = $this.data('validity');

            valid = !!fieldValid && valid;
            formValidity.push(fieldValidity);

            if (!fieldValid) {
              $inValidFields = $inValidFields.add($(this), $element);
            }

            // async validity
            var promise = $this.data('amui.dfdValidity');

            if (promise) {
              promises.push(promise);
              async = true;
            } else {
              // convert sync validity to Promise
              var dfd = new $.Deferred();
              promises.push(dfd.promise());
              dfd[fieldValid ? 'resolve' : 'reject'](fieldValidity);
            }
          });

          // NOTE: If there are async validity, the valid may be not exact result.
          var validity = {
            valid: valid,
            $invalidFields: $inValidFields,
            validity: formValidity,
            promises: promises,
            async: async
          };

          $element.trigger('validated.form.validator.amui', validity);

          return validity;
        };

        Validator.prototype.isFormValid = function() {
          var _this = this;
          var formValidity = this.validateForm();
          var triggerValid = function(type) {
            _this.$element.trigger(type + '.validator.amui');
          };

          if (formValidity.async) {
            var masterDfd = new $.Deferred();

            $.when.apply(null, formValidity.promises).then(function() {
              masterDfd.resolve();
              triggerValid('valid');
            }, function() {
              masterDfd.reject();
              triggerValid('invalid');
            });

            return masterDfd.promise();
          } else {
            if (!formValidity.valid) {
              formValidity.$invalidFields.first().focus();
              triggerValid('invalid');
              return false;
            }

            triggerValid('valid');
            return true;
          }
        };

        // customErrors:
        //    1. tooShort
        //    2. checkedOverflow
        //    3. checkedUnderflow
        Validator.prototype.createValidity = function(validity) {
          return $.extend({
            customError: validity.customError || false,
            patternMismatch: validity.patternMismatch || false,
            rangeOverflow: validity.rangeOverflow || false, // higher than maximum
            rangeUnderflow: validity.rangeUnderflow || false, // lower than  minimum
            stepMismatch: validity.stepMismatch || false,
            tooLong: validity.tooLong || false,
            // value is not in the correct syntax
            typeMismatch: validity.typeMismatch || false,
            valid: validity.valid || true,
            // Returns true if the element has no value but is a required field
            valueMissing: validity.valueMissing || false
          }, validity);
        };

        Validator.prototype.getValidationMessage = function(validity) {
          var messages = Validator.validationMessages[this.options.locales];
          var error;
          var message;
          var placeholder = '%s';
          var $field = $(validity.field);

          if ($field.is('[type="checkbox"]') || $field.is('[type="radio"]')) {
            $field = this.$element.find('[name=' + $field.attr('name') +
              ']').first();
          }

          // get error name
          $.each(validity, function(key, val) {
            // skip `field` and `valid`
            if (key === 'field' || key === 'valid') {
              return key;
            }

            // Amaze UI custom error type
            if (key === 'customError' && val) {
              error = val;
              messages = messages.customError;
              return false;
            }

            // W3C specs error type
            if (val === true) {
              error = key;
              return false;
            }
          });

          message = messages[error] || undefined;

          if (message && Validator.ERROR_MAP[error]) {
            message = message.replace(placeholder,
              $field.attr(Validator.ERROR_MAP[error]) || '规定的');
          }

          return message;
        };

        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.validator');
            var options = $.extend({}, UI.utils.parseOptions($this.data(
                'amValidator')),
              typeof option === 'object' && option);

            if (!data) {
              $this.data('amui.validator', (data = new Validator(this,
                options)));
            }

            if (typeof option === 'string') {
              data[option] && data[option]();
            }
          });
        }

        $.fn.validator = Plugin;

        // init code
        UI.ready(function(context) {
          $('[data-am-validator]', context).validator();
        });

        $.AMUI.validator = Validator;

        module.exports = Validator;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  47: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');

        var cookie = {
          get: function(name) {
            var cookieName = encodeURIComponent(name) + '=';
            var cookieStart = document.cookie.indexOf(cookieName);
            var cookieValue = null;
            var cookieEnd;

            if (cookieStart > -1) {
              cookieEnd = document.cookie.indexOf(';', cookieStart);
              if (cookieEnd == -1) {
                cookieEnd = document.cookie.length;
              }
              cookieValue = decodeURIComponent(document.cookie.substring(
                cookieStart +
                cookieName.length, cookieEnd));
            }

            return cookieValue;
          },

          set: function(name, value, expires, path, domain, secure) {
            var cookieText = encodeURIComponent(name) + '=' +
              encodeURIComponent(value);

            if (expires instanceof Date) {
              cookieText += '; expires=' + expires.toGMTString();
            }

            if (path) {
              cookieText += '; path=' + path;
            }

            if (domain) {
              cookieText += '; domain=' + domain;
            }

            if (secure) {
              cookieText += '; secure';
            }

            document.cookie = cookieText;
          },

          unset: function(name, path, domain, secure) {
            this.set(name, '', new Date(0), path, domain, secure);
          }
        };

        $.AMUI.utils.cookie = cookie;

        module.exports = cookie;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  48: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);

        /**
         * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
         *
         * @codingstandard ftlabs-jsv2
         * @copyright The Financial Times Limited [All Rights Reserved]
         * @license MIT License (see LICENSE.txt)
         * @version 1.0.6
         */

        /*jslint browser:true, node:true*/
        /*global define, Event, Node*/


        /**
         * Instantiate fast-clicking listeners on the specified layer.
         *
         * @constructor
         * @param {Element} layer The layer to listen on
         * @param {Object} [options={}] The options to override the defaults
         */
        function FastClick(layer, options) {
          var oldOnClick;

          options = options || {};

          /**
           * Whether a click is currently being tracked.
           *
           * @type boolean
           */
          this.trackingClick = false;


          /**
           * Timestamp for when click tracking started.
           *
           * @type number
           */
          this.trackingClickStart = 0;


          /**
           * The element being tracked for a click.
           *
           * @type EventTarget
           */
          this.targetElement = null;


          /**
           * X-coordinate of touch start event.
           *
           * @type number
           */
          this.touchStartX = 0;


          /**
           * Y-coordinate of touch start event.
           *
           * @type number
           */
          this.touchStartY = 0;


          /**
           * ID of the last touch, retrieved from Touch.identifier.
           *
           * @type number
           */
          this.lastTouchIdentifier = 0;


          /**
           * Touchmove boundary, beyond which a click will be cancelled.
           *
           * @type number
           */
          this.touchBoundary = options.touchBoundary || 10;


          /**
           * The FastClick layer.
           *
           * @type Element
           */
          this.layer = layer;

          /**
           * The minimum time between tap(touchstart and touchend) events
           *
           * @type number
           */
          this.tapDelay = options.tapDelay || 200;

          /**
           * The maximum time for a tap
           *
           * @type number
           */
          this.tapTimeout = options.tapTimeout || 700;

          if (FastClick.notNeeded(layer)) {
            return;
          }

          // Some old versions of Android don't have Function.prototype.bind
          function bind(method, context) {
            return function() {
              return method.apply(context, arguments);
            };
          }


          var methods = ['onMouse', 'onClick', 'onTouchStart',
            'onTouchMove', 'onTouchEnd', 'onTouchCancel'
          ];
          var context = this;
          for (var i = 0, l = methods.length; i < l; i++) {
            context[methods[i]] = bind(context[methods[i]], context);
          }

          // Set up event handlers as required
          if (deviceIsAndroid) {
            layer.addEventListener('mouseover', this.onMouse, true);
            layer.addEventListener('mousedown', this.onMouse, true);
            layer.addEventListener('mouseup', this.onMouse, true);
          }

          layer.addEventListener('click', this.onClick, true);
          layer.addEventListener('touchstart', this.onTouchStart, false);
          layer.addEventListener('touchmove', this.onTouchMove, false);
          layer.addEventListener('touchend', this.onTouchEnd, false);
          layer.addEventListener('touchcancel', this.onTouchCancel, false);

          // Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
          // which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick
          // layer when they are cancelled.
          if (!Event.prototype.stopImmediatePropagation) {
            layer.removeEventListener = function(type, callback, capture) {
              var rmv = Node.prototype.removeEventListener;
              if (type === 'click') {
                rmv.call(layer, type, callback.hijacked || callback,
                  capture);
              } else {
                rmv.call(layer, type, callback, capture);
              }
            };

            layer.addEventListener = function(type, callback, capture) {
              var adv = Node.prototype.addEventListener;
              if (type === 'click') {
                adv.call(layer, type, callback.hijacked || (callback.hijacked =
                  function(event) {
                    if (!event.propagationStopped) {
                      callback(event);
                    }
                  }), capture);
              } else {
                adv.call(layer, type, callback, capture);
              }
            };
          }

          // If a handler is already declared in the element's onclick attribute, it will be fired before
          // FastClick's onClick handler. Fix this by pulling out the user-defined handler function and
          // adding it as listener.
          if (typeof layer.onclick === 'function') {

            // Android browser on at least 3.2 requires a new reference to the function in layer.onclick
            // - the old one won't work if passed to addEventListener directly.
            oldOnClick = layer.onclick;
            layer.addEventListener('click', function(event) {
              oldOnClick(event);
            }, false);
            layer.onclick = null;
          }
        }

        /**
         * Windows Phone 8.1 fakes user agent string to look like Android and iPhone.
         *
         * @type boolean
         */
        var deviceIsWindowsPhone = navigator.userAgent.indexOf(
          "Windows Phone") >= 0;

        /**
         * Android requires exceptions.
         *
         * @type boolean
         */
        var deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0 &&
          !deviceIsWindowsPhone;


        /**
         * iOS requires exceptions.
         *
         * @type boolean
         */
        var deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent) && !
          deviceIsWindowsPhone;


        /**
         * iOS 4 requires an exception for select elements.
         *
         * @type boolean
         */
        var deviceIsIOS4 = deviceIsIOS && (/OS 4_\d(_\d)?/).test(navigator.userAgent);


        /**
         * iOS 6.0-7.* requires the target element to be manually derived
         *
         * @type boolean
         */
        var deviceIsIOSWithBadTarget = deviceIsIOS && (/OS [6-7]_\d/).test(
          navigator.userAgent);

        /**
         * BlackBerry requires exceptions.
         *
         * @type boolean
         */
        var deviceIsBlackBerry10 = navigator.userAgent.indexOf('BB10') > 0;

        /**
         * Determine whether a given element requires a native click.
         *
         * @param {EventTarget|Element} target Target DOM element
         * @returns {boolean} Returns true if the element needs a native click
         */
        FastClick.prototype.needsClick = function(target) {
          switch (target.nodeName.toLowerCase()) {

            // Don't send a synthetic click to disabled inputs (issue #62)
            case 'button':
            case 'select':
            case 'textarea':
              if (target.disabled) {
                return true;
              }

              break;
            case 'input':

              // File inputs need real clicks on iOS 6 due to a browser bug (issue #68)
              if ((deviceIsIOS && target.type === 'file') || target.disabled) {
                return true;
              }

              break;
            case 'label':
            case 'iframe': // iOS8 homescreen apps can prevent events bubbling into frames
            case 'video':
              return true;
          }

          return (/\bneedsclick\b/).test(target.className);
        };


        /**
         * Determine whether a given element requires a call to focus to simulate click into element.
         *
         * @param {EventTarget|Element} target Target DOM element
         * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.
         */
        FastClick.prototype.needsFocus = function(target) {
          switch (target.nodeName.toLowerCase()) {
            case 'textarea':
              return true;
            case 'select':
              return !deviceIsAndroid;
            case 'input':
              switch (target.type) {
                case 'button':
                case 'checkbox':
                case 'file':
                case 'image':
                case 'radio':
                case 'submit':
                  return false;
              }

              // No point in attempting to focus disabled inputs
              return !target.disabled && !target.readOnly;
            default:
              return (/\bneedsfocus\b/).test(target.className);
          }
        };


        /**
         * Send a click event to the specified element.
         *
         * @param {EventTarget|Element} targetElement
         * @param {Event} event
         */
        FastClick.prototype.sendClick = function(targetElement, event) {
          var clickEvent, touch;

          // On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)
          if (document.activeElement && document.activeElement !==
            targetElement) {
            document.activeElement.blur();
          }

          touch = event.changedTouches[0];

          // Synthesise a click event, with an extra attribute so it can be tracked
          clickEvent = document.createEvent('MouseEvents');
          clickEvent.initMouseEvent(this.determineEventType(targetElement),
            true, true, window, 1, touch.screenX, touch.screenY, touch.clientX,
            touch.clientY, false, false, false, false, 0, null);
          clickEvent.forwardedTouchEvent = true;
          targetElement.dispatchEvent(clickEvent);
        };

        FastClick.prototype.determineEventType = function(targetElement) {

          //Issue #159: Android Chrome Select Box does not open with a synthetic click event
          if (deviceIsAndroid && targetElement.tagName.toLowerCase() ===
            'select') {
            return 'mousedown';
          }

          return 'click';
        };


        /**
         * @param {EventTarget|Element} targetElement
         */
        FastClick.prototype.focus = function(targetElement) {
          var length;

          // Issue #160: on iOS 7, some input elements (e.g. date datetime month) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.
          if (deviceIsIOS && targetElement.setSelectionRange &&
            targetElement.type.indexOf('date') !== 0 && targetElement.type !==
            'time' && targetElement.type !== 'month') {
            length = targetElement.value.length;
            targetElement.setSelectionRange(length, length);
          } else {
            targetElement.focus();
          }
        };


        /**
         * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.
         *
         * @param {EventTarget|Element} targetElement
         */
        FastClick.prototype.updateScrollParent = function(targetElement) {
          var scrollParent, parentElement;

          scrollParent = targetElement.fastClickScrollParent;

          // Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the
          // target element was moved to another parent.
          if (!scrollParent || !scrollParent.contains(targetElement)) {
            parentElement = targetElement;
            do {
              if (parentElement.scrollHeight > parentElement.offsetHeight) {
                scrollParent = parentElement;
                targetElement.fastClickScrollParent = parentElement;
                break;
              }

              parentElement = parentElement.parentElement;
            } while (parentElement);
          }

          // Always update the scroll top tracker if possible.
          if (scrollParent) {
            scrollParent.fastClickLastScrollTop = scrollParent.scrollTop;
          }
        };


        /**
         * @param {EventTarget} targetElement
         * @returns {Element|EventTarget}
         */
        FastClick.prototype.getTargetElementFromEventTarget = function(
          eventTarget) {

          // On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.
          if (eventTarget.nodeType === Node.TEXT_NODE) {
            return eventTarget.parentNode;
          }

          return eventTarget;
        };


        /**
         * On touch start, record the position and scroll offset.
         *
         * @param {Event} event
         * @returns {boolean}
         */
        FastClick.prototype.onTouchStart = function(event) {
          var targetElement, touch, selection;

          // Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).
          if (event.targetTouches.length > 1) {
            return true;
          }

          targetElement = this.getTargetElementFromEventTarget(event.target);
          touch = event.targetTouches[0];

          if (deviceIsIOS) {

            // Only trusted events will deselect text on iOS (issue #49)
            selection = window.getSelection();
            if (selection.rangeCount && !selection.isCollapsed) {
              return true;
            }

            if (!deviceIsIOS4) {

              // Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):
              // when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched
              // with the same identifier as the touch event that previously triggered the click that triggered the alert.
              // Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an
              // immediately preceeding touch event (issue #52), so this fix is unavailable on that platform.
              // Issue 120: touch.identifier is 0 when Chrome dev tools 'Emulate touch events' is set with an iOS device UA string,
              // which causes all touch events to be ignored. As this block only applies to iOS, and iOS identifiers are always long,
              // random integers, it's safe to to continue if the identifier is 0 here.
              if (touch.identifier && touch.identifier === this.lastTouchIdentifier) {
                event.preventDefault();
                return false;
              }

              this.lastTouchIdentifier = touch.identifier;

              // If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:
              // 1) the user does a fling scroll on the scrollable layer
              // 2) the user stops the fling scroll with another tap
              // then the event.target of the last 'touchend' event will be the element that was under the user's finger
              // when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check
              // is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).
              this.updateScrollParent(targetElement);
            }
          }

          this.trackingClick = true;
          this.trackingClickStart = event.timeStamp;
          this.targetElement = targetElement;

          this.touchStartX = touch.pageX;
          this.touchStartY = touch.pageY;

          // Prevent phantom clicks on fast double-tap (issue #36)
          if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
            event.preventDefault();
          }

          return true;
        };


        /**
         * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.
         *
         * @param {Event} event
         * @returns {boolean}
         */
        FastClick.prototype.touchHasMoved = function(event) {
          var touch = event.changedTouches[0],
            boundary = this.touchBoundary;

          if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(
            touch.pageY - this.touchStartY) > boundary) {
            return true;
          }

          return false;
        };


        /**
         * Update the last position.
         *
         * @param {Event} event
         * @returns {boolean}
         */
        FastClick.prototype.onTouchMove = function(event) {
          if (!this.trackingClick) {
            return true;
          }

          // If the touch has moved, cancel the click tracking
          if (this.targetElement !== this.getTargetElementFromEventTarget(
            event.target) || this.touchHasMoved(event)) {
            this.trackingClick = false;
            this.targetElement = null;
          }

          return true;
        };


        /**
         * Attempt to find the labelled control for the given label element.
         *
         * @param {EventTarget|HTMLLabelElement} labelElement
         * @returns {Element|null}
         */
        FastClick.prototype.findControl = function(labelElement) {

          // Fast path for newer browsers supporting the HTML5 control attribute
          if (labelElement.control !== undefined) {
            return labelElement.control;
          }

          // All browsers under test that support touch events also support the HTML5 htmlFor attribute
          if (labelElement.htmlFor) {
            return document.getElementById(labelElement.htmlFor);
          }

          // If no for attribute exists, attempt to retrieve the first labellable descendant element
          // the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label
          return labelElement.querySelector(
            'button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea'
          );
        };


        /**
         * On touch end, determine whether to send a click event at once.
         *
         * @param {Event} event
         * @returns {boolean}
         */
        FastClick.prototype.onTouchEnd = function(event) {
          var forElement, trackingClickStart, targetTagName, scrollParent,
            touch, targetElement = this.targetElement;

          if (!this.trackingClick) {
            return true;
          }

          // Prevent phantom clicks on fast double-tap (issue #36)
          if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
            this.cancelNextClick = true;
            return true;
          }

          if ((event.timeStamp - this.trackingClickStart) > this.tapTimeout) {
            return true;
          }

          // Reset to prevent wrong click cancel on input (issue #156).
          this.cancelNextClick = false;

          this.lastClickTime = event.timeStamp;

          trackingClickStart = this.trackingClickStart;
          this.trackingClick = false;
          this.trackingClickStart = 0;

          // On some iOS devices, the targetElement supplied with the event is invalid if the layer
          // is performing a transition or scroll, and has to be re-detected manually. Note that
          // for this to function correctly, it must be called *after* the event target is checked!
          // See issue #57; also filed as rdar://13048589 .
          if (deviceIsIOSWithBadTarget) {
            touch = event.changedTouches[0];

            // In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null
            targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset,
              touch.pageY - window.pageYOffset) || targetElement;
            targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;
          }

          targetTagName = targetElement.tagName.toLowerCase();
          if (targetTagName === 'label') {
            forElement = this.findControl(targetElement);
            if (forElement) {
              this.focus(targetElement);
              if (deviceIsAndroid) {
                return false;
              }

              targetElement = forElement;
            }
          } else if (this.needsFocus(targetElement)) {

            // Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.
            // Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).
            if ((event.timeStamp - trackingClickStart) > 100 || (
              deviceIsIOS && window.top !== window && targetTagName ===
              'input')) {
              this.targetElement = null;
              return false;
            }

            this.focus(targetElement);
            this.sendClick(targetElement, event);

            // Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.
            // Also this breaks opening selects when VoiceOver is active on iOS6, iOS7 (and possibly others)
            if (!deviceIsIOS || targetTagName !== 'select') {
              this.targetElement = null;
              event.preventDefault();
            }

            return false;
          }

          if (deviceIsIOS && !deviceIsIOS4) {

            // Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled
            // and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).
            scrollParent = targetElement.fastClickScrollParent;
            if (scrollParent && scrollParent.fastClickLastScrollTop !==
              scrollParent.scrollTop) {
              return true;
            }
          }

          // Prevent the actual click from going though - unless the target node is marked as requiring
          // real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.
          if (!this.needsClick(targetElement)) {
            event.preventDefault();
            this.sendClick(targetElement, event);
          }

          return false;
        };


        /**
         * On touch cancel, stop tracking the click.
         *
         * @returns {void}
         */
        FastClick.prototype.onTouchCancel = function() {
          this.trackingClick = false;
          this.targetElement = null;
        };


        /**
         * Determine mouse events which should be permitted.
         *
         * @param {Event} event
         * @returns {boolean}
         */
        FastClick.prototype.onMouse = function(event) {

          // If a target element was never set (because a touch event was never fired) allow the event
          if (!this.targetElement) {
            return true;
          }

          if (event.forwardedTouchEvent) {
            return true;
          }

          // Programmatically generated events targeting a specific element should be permitted
          if (!event.cancelable) {
            return true;
          }

          // Derive and check the target element to see whether the mouse event needs to be permitted;
          // unless explicitly enabled, prevent non-touch click events from triggering actions,
          // to prevent ghost/doubleclicks.
          if (!this.needsClick(this.targetElement) || this.cancelNextClick) {

            // Prevent any user-added listeners declared on FastClick element from being fired.
            if (event.stopImmediatePropagation) {
              event.stopImmediatePropagation();
            } else {

              // Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
              event.propagationStopped = true;
            }

            // Cancel the event
            event.stopPropagation();
            event.preventDefault();

            return false;
          }

          // If the mouse event is permitted, return true for the action to go through.
          return true;
        };


        /**
         * On actual clicks, determine whether this is a touch-generated click, a click action occurring
         * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or
         * an actual click which should be permitted.
         *
         * @param {Event} event
         * @returns {boolean}
         */
        FastClick.prototype.onClick = function(event) {
          var permitted;

          // It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.
          if (this.trackingClick) {
            this.targetElement = null;
            this.trackingClick = false;
            return true;
          }

          // Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.
          if (event.target.type === 'submit' && event.detail === 0) {
            return true;
          }

          permitted = this.onMouse(event);

          // Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.
          if (!permitted) {
            this.targetElement = null;
          }

          // If clicks are permitted, return true for the action to go through.
          return permitted;
        };


        /**
         * Remove all FastClick's event listeners.
         *
         * @returns {void}
         */
        FastClick.prototype.destroy = function() {
          var layer = this.layer;

          if (deviceIsAndroid) {
            layer.removeEventListener('mouseover', this.onMouse, true);
            layer.removeEventListener('mousedown', this.onMouse, true);
            layer.removeEventListener('mouseup', this.onMouse, true);
          }

          layer.removeEventListener('click', this.onClick, true);
          layer.removeEventListener('touchstart', this.onTouchStart, false);
          layer.removeEventListener('touchmove', this.onTouchMove, false);
          layer.removeEventListener('touchend', this.onTouchEnd, false);
          layer.removeEventListener('touchcancel', this.onTouchCancel,
            false);
        };


        /**
         * Check whether FastClick is needed.
         *
         * @param {Element} layer The layer to listen on
         */
        FastClick.notNeeded = function(layer) {
          var metaViewport;
          var chromeVersion;
          var blackberryVersion;
          var firefoxVersion;

          // Devices that don't support touch don't need FastClick
          if (typeof window.ontouchstart === 'undefined') {
            return true;
          }

          // Chrome version - zero for other browsers
          chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [,
            0
          ])[1];

          if (chromeVersion) {

            if (deviceIsAndroid) {
              metaViewport = document.querySelector('meta[name=viewport]');

              if (metaViewport) {
                // Chrome on Android with user-scalable="no" doesn't need FastClick (issue #89)
                if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
                  return true;
                }
                // Chrome 32 and above with width=device-width or less don't need FastClick
                if (chromeVersion > 31 && document.documentElement.scrollWidth <=
                  window.outerWidth) {
                  return true;
                }
              }

              // Chrome desktop doesn't need FastClick (issue #15)
            } else {
              return true;
            }
          }

          if (deviceIsBlackBerry10) {
            blackberryVersion = navigator.userAgent.match(
              /Version\/([0-9]*)\.([0-9]*)/);

            // BlackBerry 10.3+ does not require Fastclick library.
            // https://github.com/ftlabs/fastclick/issues/251
            if (blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3) {
              metaViewport = document.querySelector('meta[name=viewport]');

              if (metaViewport) {
                // user-scalable=no eliminates click delay.
                if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
                  return true;
                }
                // width=device-width (or less than device-width) eliminates click delay.
                if (document.documentElement.scrollWidth <= window.outerWidth) {
                  return true;
                }
              }
            }
          }

          // IE10 with -ms-touch-action: none or manipulation, which disables double-tap-to-zoom (issue #97)
          if (layer.style.msTouchAction === 'none' || layer.style.touchAction ===
            'manipulation') {
            return true;
          }

          // Firefox version - zero for other browsers
          firefoxVersion = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [,
            0
          ])[1];

          if (firefoxVersion >= 27) {
            // Firefox 27+ does not have tap delay if the content is not zoomable - https://bugzilla.mozilla.org/show_bug.cgi?id=922896

            metaViewport = document.querySelector('meta[name=viewport]');
            if (metaViewport && (metaViewport.content.indexOf(
                'user-scalable=no') !== -1 || document.documentElement.scrollWidth <=
              window.outerWidth)) {
              return true;
            }
          }

          // IE11: prefixed -ms-touch-action is no longer supported and it's recomended to use non-prefixed version
          // http://msdn.microsoft.com/en-us/library/windows/apps/Hh767313.aspx
          if (layer.style.touchAction === 'none' || layer.style.touchAction ===
            'manipulation') {
            return true;
          }

          return false;
        };


        /**
         * Factory method for creating a FastClick object
         *
         * @param {Element} layer The layer to listen on
         * @param {Object} [options={}] The options to override the defaults
         */
        FastClick.attach = function(layer, options) {
          return new FastClick(layer, options);
        };

        FastClick.VERSION = '1.0.6';

        $ && ($.AMUI ? $.AMUI.FastClick = FastClick : $.AMUI = {
          FastClick: FastClick
        });

        module.exports = FastClick;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {}
  ],
  49: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        /**
         * @via https://github.com/sindresorhus/screenfull.js
         * @license MIT © Sindre Sorhus
         * @version 2.0.0
         */

        var keyboardAllowed = typeof Element !== 'undefined' &&
          'ALLOW_KEYBOARD_INPUT' in Element;

        var fn = (function() {
          var val;
          var valLength;

          var fnMap = [
            [
              'requestFullscreen',
              'exitFullscreen',
              'fullscreenElement',
              'fullscreenEnabled',
              'fullscreenchange',
              'fullscreenerror'
            ],
            // new WebKit
            [
              'webkitRequestFullscreen',
              'webkitExitFullscreen',
              'webkitFullscreenElement',
              'webkitFullscreenEnabled',
              'webkitfullscreenchange',
              'webkitfullscreenerror'

            ],
            // old WebKit (Safari 5.1)
            [
              'webkitRequestFullScreen',
              'webkitCancelFullScreen',
              'webkitCurrentFullScreenElement',
              'webkitCancelFullScreen',
              'webkitfullscreenchange',
              'webkitfullscreenerror'

            ],
            [
              'mozRequestFullScreen',
              'mozCancelFullScreen',
              'mozFullScreenElement',
              'mozFullScreenEnabled',
              'mozfullscreenchange',
              'mozfullscreenerror'
            ],
            [
              'msRequestFullscreen',
              'msExitFullscreen',
              'msFullscreenElement',
              'msFullscreenEnabled',
              'MSFullscreenChange',
              'MSFullscreenError'
            ]
          ];

          var i = 0;
          var l = fnMap.length;
          var ret = {};

          for (; i < l; i++) {
            val = fnMap[i];
            if (val && val[1] in document) {
              for (i = 0, valLength = val.length; i < valLength; i++) {
                ret[fnMap[0][i]] = val[i];
              }
              return ret;
            }
          }

          return false;
        })();

        var screenfull = {
          request: function(elem) {
            var request = fn.requestFullscreen;

            elem = elem || document.documentElement;

            // Work around Safari 5.1 bug: reports support for
            // keyboard in fullscreen even though it doesn't.
            // Browser sniffing, since the alternative with
            // setTimeout is even worse.
            if (/5\.1[\.\d]* Safari/.test(navigator.userAgent)) {
              elem[request]();
            } else {
              elem[request](keyboardAllowed && Element.ALLOW_KEYBOARD_INPUT);
            }
          },
          exit: function() {
            document[fn.exitFullscreen]();
          },
          toggle: function(elem) {
            if (this.isFullscreen) {
              this.exit();
            } else {
              this.request(elem);
            }
          },
          raw: fn
        };

        if (!fn) {
          module.exports = false;
          return;
        }

        Object.defineProperties(screenfull, {
          isFullscreen: {
            get: function() {
              return !!document[fn.fullscreenElement];
            }
          },
          element: {
            enumerable: true,
            get: function() {
              return document[fn.fullscreenElement];
            }
          },
          enabled: {
            enumerable: true,
            get: function() {
              // Coerce to boolean in case of old WebKit
              return !!document[fn.fullscreenEnabled];
            }
          }
        });

        screenfull.VERSION = '2.0.0';

        $.AMUI.fullscreen = screenfull;

        module.exports = screenfull;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  50: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        UI.support.geolocation = window.navigator && window.navigator.geolocation;

        var geo = UI.support.geolocation;

        var Geolocation = function(options) {
          this.options = options || {};
        };

        Geolocation.MESSAGES = {
          unsupportedBrowser: 'Browser does not support location services',
          permissionDenied: 'You have rejected access to your location',
          positionUnavailable: 'Unable to determine your location',
          timeout: 'Service timeout has been reached'
        };

        Geolocation.ERROR_CODE = {
          0: 'unsupportedBrowser',
          1: 'permissionDenied',
          2: 'positionUnavailable',
          3: 'timeout'
        };

        Geolocation.prototype.get = function(options) {
          var _this = this;
          options = $.extend({}, this.options, options);
          var deferred = new $.Deferred();

          if (geo) {
            this.watchID = geo.getCurrentPosition(function(position) {
              deferred.resolve.call(_this, position);
            }, function(error) {
              deferred.reject(Geolocation.MESSAGES[Geolocation.ERROR_CODE[
                error.code]]);
            }, options);
          } else {
            deferred.reject(Geolocation.MESSAGES.unsupportedBrowser);
          }

          return deferred.promise();
        };

        Geolocation.prototype.watch = function(options) {
          if (!geo) {
            return;
          }

          options = $.extend({}, this.options, options);

          if (!$.isFunction(options.done)) {
            return;
          }

          this.clearWatch();

          var fail = $.isFunction(options.fail) ? options.fail : null;

          this.watchID = geo.watchPosition(options.done, fail, options);

          return this.watchID;
        };

        Geolocation.prototype.clearWatch = function() {
          if (!geo || !this.watchID) {
            return;
          }
          geo.clearWatch(this.watchID);
          this.watchID = null;
        };

        $.AMUI.Geolocation = Geolocation;

        module.exports = Geolocation;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  51: [
    function(require, module, exports) {
      (function(global) {
        /*! Hammer.JS - v2.0.4 - 2014-09-28
         * http://hammerjs.github.io/
         *
         * Copyright (c) 2014 Jorik Tangelder;
         * Licensed under the MIT license */

        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        var VENDOR_PREFIXES = ['', 'webkit', 'moz', 'MS', 'ms', 'o'];
        var TEST_ELEMENT = document.createElement('div');

        var TYPE_FUNCTION = 'function';

        var round = Math.round;
        var abs = Math.abs;
        var now = Date.now;

        /**
         * set a timeout with a given scope
         * @param {Function} fn
         * @param {Number} timeout
         * @param {Object} context
         * @returns {number}
         */
        function setTimeoutContext(fn, timeout, context) {
          return setTimeout(bindFn(fn, context), timeout);
        }

        /**
         * if the argument is an array, we want to execute the fn on each entry
         * if it aint an array we don't want to do a thing.
         * this is used by all the methods that accept a single and array argument.
         * @param {*|Array} arg
         * @param {String} fn
         * @param {Object} [context]
         * @returns {Boolean}
         */
        function invokeArrayArg(arg, fn, context) {
          if (Array.isArray(arg)) {
            each(arg, context[fn], context);
            return true;
          }
          return false;
        }

        /**
         * walk objects and arrays
         * @param {Object} obj
         * @param {Function} iterator
         * @param {Object} context
         */
        function each(obj, iterator, context) {
          var i;

          if (!obj) {
            return;
          }

          if (obj.forEach) {
            obj.forEach(iterator, context);
          } else if (obj.length !== undefined) {
            i = 0;
            while (i < obj.length) {
              iterator.call(context, obj[i], i, obj);
              i++;
            }
          } else {
            for (i in obj) {
              obj.hasOwnProperty(i) && iterator.call(context, obj[i], i,
                obj);
            }
          }
        }

        /**
         * extend object.
         * means that properties in dest will be overwritten by the ones in src.
         * @param {Object} dest
         * @param {Object} src
         * @param {Boolean} [merge]
         * @returns {Object} dest
         */
        function extend(dest, src, merge) {
          var keys = Object.keys(src);
          var i = 0;
          while (i < keys.length) {
            if (!merge || (merge && dest[keys[i]] === undefined)) {
              dest[keys[i]] = src[keys[i]];
            }
            i++;
          }
          return dest;
        }

        /**
         * merge the values from src in the dest.
         * means that properties that exist in dest will not be overwritten by src
         * @param {Object} dest
         * @param {Object} src
         * @returns {Object} dest
         */
        function merge(dest, src) {
          return extend(dest, src, true);
        }

        /**
         * simple class inheritance
         * @param {Function} child
         * @param {Function} base
         * @param {Object} [properties]
         */
        function inherit(child, base, properties) {
          var baseP = base.prototype,
            childP;

          childP = child.prototype = Object.create(baseP);
          childP.constructor = child;
          childP._super = baseP;

          if (properties) {
            extend(childP, properties);
          }
        }

        /**
         * simple function bind
         * @param {Function} fn
         * @param {Object} context
         * @returns {Function}
         */
        function bindFn(fn, context) {
          return function boundFn() {
            return fn.apply(context, arguments);
          };
        }

        /**
         * let a boolean value also be a function that must return a boolean
         * this first item in args will be used as the context
         * @param {Boolean|Function} val
         * @param {Array} [args]
         * @returns {Boolean}
         */
        function boolOrFn(val, args) {
          if (typeof val == TYPE_FUNCTION) {
            return val.apply(args ? args[0] || undefined : undefined, args);
          }
          return val;
        }

        /**
         * use the val2 when val1 is undefined
         * @param {*} val1
         * @param {*} val2
         * @returns {*}
         */
        function ifUndefined(val1, val2) {
          return (val1 === undefined) ? val2 : val1;
        }

        /**
         * addEventListener with multiple events at once
         * @param {EventTarget} target
         * @param {String} types
         * @param {Function} handler
         */
        function addEventListeners(target, types, handler) {
          each(splitStr(types), function(type) {
            target.addEventListener(type, handler, false);
          });
        }

        /**
         * removeEventListener with multiple events at once
         * @param {EventTarget} target
         * @param {String} types
         * @param {Function} handler
         */
        function removeEventListeners(target, types, handler) {
          each(splitStr(types), function(type) {
            target.removeEventListener(type, handler, false);
          });
        }

        /**
         * find if a node is in the given parent
         * @method hasParent
         * @param {HTMLElement} node
         * @param {HTMLElement} parent
         * @return {Boolean} found
         */
        function hasParent(node, parent) {
          while (node) {
            if (node == parent) {
              return true;
            }
            node = node.parentNode;
          }
          return false;
        }

        /**
         * small indexOf wrapper
         * @param {String} str
         * @param {String} find
         * @returns {Boolean} found
         */
        function inStr(str, find) {
          return str.indexOf(find) > -1;
        }

        /**
         * split string on whitespace
         * @param {String} str
         * @returns {Array} words
         */
        function splitStr(str) {
          return str.trim().split(/\s+/g);
        }

        /**
         * find if a array contains the object using indexOf or a simple polyFill
         * @param {Array} src
         * @param {String} find
         * @param {String} [findByKey]
         * @return {Boolean|Number} false when not found, or the index
         */
        function inArray(src, find, findByKey) {
          if (src.indexOf && !findByKey) {
            return src.indexOf(find);
          } else {
            var i = 0;
            while (i < src.length) {
              if ((findByKey && src[i][findByKey] == find) || (!findByKey &&
                src[i] === find)) {
                return i;
              }
              i++;
            }
            return -1;
          }
        }

        /**
         * convert array-like objects to real arrays
         * @param {Object} obj
         * @returns {Array}
         */
        function toArray(obj) {
          return Array.prototype.slice.call(obj, 0);
        }

        /**
         * unique array with objects based on a key (like 'id') or just by the array's value
         * @param {Array} src [{id:1},{id:2},{id:1}]
         * @param {String} [key]
         * @param {Boolean} [sort=False]
         * @returns {Array} [{id:1},{id:2}]
         */
        function uniqueArray(src, key, sort) {
          var results = [];
          var values = [];
          var i = 0;

          while (i < src.length) {
            var val = key ? src[i][key] : src[i];
            if (inArray(values, val) < 0) {
              results.push(src[i]);
            }
            values[i] = val;
            i++;
          }

          if (sort) {
            if (!key) {
              results = results.sort();
            } else {
              results = results.sort(function sortUniqueArray(a, b) {
                return a[key] > b[key];
              });
            }
          }

          return results;
        }

        /**
         * get the prefixed property
         * @param {Object} obj
         * @param {String} property
         * @returns {String|Undefined} prefixed
         */
        function prefixed(obj, property) {
          var prefix, prop;
          var camelProp = property[0].toUpperCase() + property.slice(1);

          var i = 0;
          while (i < VENDOR_PREFIXES.length) {
            prefix = VENDOR_PREFIXES[i];
            prop = (prefix) ? prefix + camelProp : property;

            if (prop in obj) {
              return prop;
            }
            i++;
          }
          return undefined;
        }

        /**
         * get a unique id
         * @returns {number} uniqueId
         */
        var _uniqueId = 1;

        function uniqueId() {
          return _uniqueId++;
        }

        /**
         * get the window object of an element
         * @param {HTMLElement} element
         * @returns {DocumentView|Window}
         */
        function getWindowForElement(element) {
          var doc = element.ownerDocument;
          return (doc.defaultView || doc.parentWindow);
        }

        var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;

        var SUPPORT_TOUCH = ('ontouchstart' in window);
        var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !==
          undefined;
        var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(
          navigator.userAgent);

        var INPUT_TYPE_TOUCH = 'touch';
        var INPUT_TYPE_PEN = 'pen';
        var INPUT_TYPE_MOUSE = 'mouse';
        var INPUT_TYPE_KINECT = 'kinect';

        var COMPUTE_INTERVAL = 25;

        var INPUT_START = 1;
        var INPUT_MOVE = 2;
        var INPUT_END = 4;
        var INPUT_CANCEL = 8;

        var DIRECTION_NONE = 1;
        var DIRECTION_LEFT = 2;
        var DIRECTION_RIGHT = 4;
        var DIRECTION_UP = 8;
        var DIRECTION_DOWN = 16;

        var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;
        var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;
        var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;

        var PROPS_XY = ['x', 'y'];
        var PROPS_CLIENT_XY = ['clientX', 'clientY'];

        /**
         * create new input type manager
         * @param {Manager} manager
         * @param {Function} callback
         * @returns {Input}
         * @constructor
         */
        function Input(manager, callback) {
          var self = this;
          this.manager = manager;
          this.callback = callback;
          this.element = manager.element;
          this.target = manager.options.inputTarget;

          // smaller wrapper around the handler, for the scope and the enabled state of the manager,
          // so when disabled the input events are completely bypassed.
          this.domHandler = function(ev) {
            if (boolOrFn(manager.options.enable, [manager])) {
              self.handler(ev);
            }
          };

          this.init();

        }

        Input.prototype = {
          /**
           * should handle the inputEvent data and trigger the callback
           * @virtual
           */
          handler: function() {},

          /**
           * bind the events
           */
          init: function() {
            this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);
            this.evTarget && addEventListeners(this.target, this.evTarget,
              this.domHandler);
            this.evWin && addEventListeners(getWindowForElement(this.element),
              this.evWin, this.domHandler);
          },

          /**
           * unbind the events
           */
          destroy: function() {
            this.evEl && removeEventListeners(this.element, this.evEl, this
              .domHandler);
            this.evTarget && removeEventListeners(this.target, this.evTarget,
              this.domHandler);
            this.evWin && removeEventListeners(getWindowForElement(this.element),
              this.evWin, this.domHandler);
          }
        };

        /**
         * create new input type manager
         * called by the Manager constructor
         * @param {Hammer} manager
         * @returns {Input}
         */
        function createInputInstance(manager) {
          var Type;
          var inputClass = manager.options.inputClass;

          if (inputClass) {
            Type = inputClass;
          } else if (SUPPORT_POINTER_EVENTS) {
            Type = PointerEventInput;
          } else if (SUPPORT_ONLY_TOUCH) {
            Type = TouchInput;
          } else if (!SUPPORT_TOUCH) {
            Type = MouseInput;
          } else {
            Type = TouchMouseInput;
          }
          return new(Type)(manager, inputHandler);
        }

        /**
         * handle input events
         * @param {Manager} manager
         * @param {String} eventType
         * @param {Object} input
         */
        function inputHandler(manager, eventType, input) {
          var pointersLen = input.pointers.length;
          var changedPointersLen = input.changedPointers.length;
          var isFirst = (eventType & INPUT_START && (pointersLen -
            changedPointersLen === 0));
          var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (
            pointersLen - changedPointersLen === 0));

          input.isFirst = !!isFirst;
          input.isFinal = !!isFinal;

          if (isFirst) {
            manager.session = {};
          }

          // source event is the normalized value of the domEvents
          // like 'touchstart, mouseup, pointerdown'
          input.eventType = eventType;

          // compute scale, rotation etc
          computeInputData(manager, input);

          // emit secret event
          manager.emit('hammer.input', input);

          manager.recognize(input);
          manager.session.prevInput = input;
        }

        /**
         * extend the data with some usable properties like scale, rotate, velocity etc
         * @param {Object} manager
         * @param {Object} input
         */
        function computeInputData(manager, input) {
          var session = manager.session;
          var pointers = input.pointers;
          var pointersLength = pointers.length;

          // store the first input to calculate the distance and direction
          if (!session.firstInput) {
            session.firstInput = simpleCloneInputData(input);
          }

          // to compute scale and rotation we need to store the multiple touches
          if (pointersLength > 1 && !session.firstMultiple) {
            session.firstMultiple = simpleCloneInputData(input);
          } else if (pointersLength === 1) {
            session.firstMultiple = false;
          }

          var firstInput = session.firstInput;
          var firstMultiple = session.firstMultiple;
          var offsetCenter = firstMultiple ? firstMultiple.center :
            firstInput.center;

          var center = input.center = getCenter(pointers);
          input.timeStamp = now();
          input.deltaTime = input.timeStamp - firstInput.timeStamp;

          input.angle = getAngle(offsetCenter, center);
          input.distance = getDistance(offsetCenter, center);

          computeDeltaXY(session, input);
          input.offsetDirection = getDirection(input.deltaX, input.deltaY);

          input.scale = firstMultiple ? getScale(firstMultiple.pointers,
            pointers) : 1;
          input.rotation = firstMultiple ? getRotation(firstMultiple.pointers,
            pointers) : 0;

          computeIntervalInputData(session, input);

          // find the correct target
          var target = manager.element;
          if (hasParent(input.srcEvent.target, target)) {
            target = input.srcEvent.target;
          }
          input.target = target;
        }

        function computeDeltaXY(session, input) {
          var center = input.center;
          var offset = session.offsetDelta || {};
          var prevDelta = session.prevDelta || {};
          var prevInput = session.prevInput || {};

          if (input.eventType === INPUT_START || prevInput.eventType ===
            INPUT_END) {
            prevDelta = session.prevDelta = {
              x: prevInput.deltaX || 0,
              y: prevInput.deltaY || 0
            };

            offset = session.offsetDelta = {
              x: center.x,
              y: center.y
            };
          }

          input.deltaX = prevDelta.x + (center.x - offset.x);
          input.deltaY = prevDelta.y + (center.y - offset.y);
        }

        /**
         * velocity is calculated every x ms
         * @param {Object} session
         * @param {Object} input
         */
        function computeIntervalInputData(session, input) {
          var last = session.lastInterval || input,
            deltaTime = input.timeStamp - last.timeStamp,
            velocity, velocityX, velocityY, direction;

          if (input.eventType != INPUT_CANCEL && (deltaTime >
            COMPUTE_INTERVAL || last.velocity === undefined)) {
            var deltaX = last.deltaX - input.deltaX;
            var deltaY = last.deltaY - input.deltaY;

            var v = getVelocity(deltaTime, deltaX, deltaY);
            velocityX = v.x;
            velocityY = v.y;
            velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;
            direction = getDirection(deltaX, deltaY);

            session.lastInterval = input;
          } else {
            // use latest velocity info if it doesn't overtake a minimum period
            velocity = last.velocity;
            velocityX = last.velocityX;
            velocityY = last.velocityY;
            direction = last.direction;
          }

          input.velocity = velocity;
          input.velocityX = velocityX;
          input.velocityY = velocityY;
          input.direction = direction;
        }

        /**
         * create a simple clone from the input used for storage of firstInput and firstMultiple
         * @param {Object} input
         * @returns {Object} clonedInputData
         */
        function simpleCloneInputData(input) {
          // make a simple copy of the pointers because we will get a reference if we don't
          // we only need clientXY for the calculations
          var pointers = [];
          var i = 0;
          while (i < input.pointers.length) {
            pointers[i] = {
              clientX: round(input.pointers[i].clientX),
              clientY: round(input.pointers[i].clientY)
            };
            i++;
          }

          return {
            timeStamp: now(),
            pointers: pointers,
            center: getCenter(pointers),
            deltaX: input.deltaX,
            deltaY: input.deltaY
          };
        }

        /**
         * get the center of all the pointers
         * @param {Array} pointers
         * @return {Object} center contains `x` and `y` properties
         */
        function getCenter(pointers) {
          var pointersLength = pointers.length;

          // no need to loop when only one touch
          if (pointersLength === 1) {
            return {
              x: round(pointers[0].clientX),
              y: round(pointers[0].clientY)
            };
          }

          var x = 0,
            y = 0,
            i = 0;
          while (i < pointersLength) {
            x += pointers[i].clientX;
            y += pointers[i].clientY;
            i++;
          }

          return {
            x: round(x / pointersLength),
            y: round(y / pointersLength)
          };
        }

        /**
         * calculate the velocity between two points. unit is in px per ms.
         * @param {Number} deltaTime
         * @param {Number} x
         * @param {Number} y
         * @return {Object} velocity `x` and `y`
         */
        function getVelocity(deltaTime, x, y) {
          return {
            x: x / deltaTime || 0,
            y: y / deltaTime || 0
          };
        }

        /**
         * get the direction between two points
         * @param {Number} x
         * @param {Number} y
         * @return {Number} direction
         */
        function getDirection(x, y) {
          if (x === y) {
            return DIRECTION_NONE;
          }

          if (abs(x) >= abs(y)) {
            return x > 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
          }
          return y > 0 ? DIRECTION_UP : DIRECTION_DOWN;
        }

        /**
         * calculate the absolute distance between two points
         * @param {Object} p1 {x, y}
         * @param {Object} p2 {x, y}
         * @param {Array} [props] containing x and y keys
         * @return {Number} distance
         */
        function getDistance(p1, p2, props) {
          if (!props) {
            props = PROPS_XY;
          }
          var x = p2[props[0]] - p1[props[0]],
            y = p2[props[1]] - p1[props[1]];

          return Math.sqrt((x * x) + (y * y));
        }

        /**
         * calculate the angle between two coordinates
         * @param {Object} p1
         * @param {Object} p2
         * @param {Array} [props] containing x and y keys
         * @return {Number} angle
         */
        function getAngle(p1, p2, props) {
          if (!props) {
            props = PROPS_XY;
          }
          var x = p2[props[0]] - p1[props[0]],
            y = p2[props[1]] - p1[props[1]];
          return Math.atan2(y, x) * 180 / Math.PI;
        }

        /**
         * calculate the rotation degrees between two pointersets
         * @param {Array} start array of pointers
         * @param {Array} end array of pointers
         * @return {Number} rotation
         */
        function getRotation(start, end) {
          return getAngle(end[1], end[0], PROPS_CLIENT_XY) - getAngle(start[
            1], start[0], PROPS_CLIENT_XY);
        }

        /**
         * calculate the scale factor between two pointersets
         * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
         * @param {Array} start array of pointers
         * @param {Array} end array of pointers
         * @return {Number} scale
         */
        function getScale(start, end) {
          return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(
            start[0], start[1], PROPS_CLIENT_XY);
        }

        var MOUSE_INPUT_MAP = {
          mousedown: INPUT_START,
          mousemove: INPUT_MOVE,
          mouseup: INPUT_END
        };

        var MOUSE_ELEMENT_EVENTS = 'mousedown';
        var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';

        /**
         * Mouse events input
         * @constructor
         * @extends Input
         */
        function MouseInput() {
          this.evEl = MOUSE_ELEMENT_EVENTS;
          this.evWin = MOUSE_WINDOW_EVENTS;

          this.allow = true; // used by Input.TouchMouse to disable mouse events
          this.pressed = false; // mousedown state

          Input.apply(this, arguments);
        }

        inherit(MouseInput, Input, {
          /**
           * handle mouse events
           * @param {Object} ev
           */
          handler: function MEhandler(ev) {
            var eventType = MOUSE_INPUT_MAP[ev.type];

            // on start we want to have the left mouse button down
            if (eventType & INPUT_START && ev.button === 0) {
              this.pressed = true;
            }

            if (eventType & INPUT_MOVE && ev.which !== 1) {
              eventType = INPUT_END;
            }

            // mouse must be down, and mouse events are allowed (see the TouchMouse input)
            if (!this.pressed || !this.allow) {
              return;
            }

            if (eventType & INPUT_END) {
              this.pressed = false;
            }

            this.callback(this.manager, eventType, {
              pointers: [ev],
              changedPointers: [ev],
              pointerType: INPUT_TYPE_MOUSE,
              srcEvent: ev
            });
          }
        });

        var POINTER_INPUT_MAP = {
          pointerdown: INPUT_START,
          pointermove: INPUT_MOVE,
          pointerup: INPUT_END,
          pointercancel: INPUT_CANCEL,
          pointerout: INPUT_CANCEL
        };

        // in IE10 the pointer types is defined as an enum
        var IE10_POINTER_TYPE_ENUM = {
          2: INPUT_TYPE_TOUCH,
          3: INPUT_TYPE_PEN,
          4: INPUT_TYPE_MOUSE,
          5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816
        };

        var POINTER_ELEMENT_EVENTS = 'pointerdown';
        var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';

        // IE10 has prefixed support, and case-sensitive
        if (window.MSPointerEvent) {
          POINTER_ELEMENT_EVENTS = 'MSPointerDown';
          POINTER_WINDOW_EVENTS =
            'MSPointerMove MSPointerUp MSPointerCancel';
        }

        /**
         * Pointer events input
         * @constructor
         * @extends Input
         */
        function PointerEventInput() {
          this.evEl = POINTER_ELEMENT_EVENTS;
          this.evWin = POINTER_WINDOW_EVENTS;

          Input.apply(this, arguments);

          this.store = (this.manager.session.pointerEvents = []);
        }

        inherit(PointerEventInput, Input, {
          /**
           * handle mouse events
           * @param {Object} ev
           */
          handler: function PEhandler(ev) {
            var store = this.store;
            var removePointer = false;

            var eventTypeNormalized = ev.type.toLowerCase().replace('ms',
              '');
            var eventType = POINTER_INPUT_MAP[eventTypeNormalized];
            var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] ||
              ev.pointerType;

            var isTouch = (pointerType == INPUT_TYPE_TOUCH);

            // get index of the event in the store
            var storeIndex = inArray(store, ev.pointerId, 'pointerId');

            // start and mouse must be down
            if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {
              if (storeIndex < 0) {
                store.push(ev);
                storeIndex = store.length - 1;
              }
            } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
              removePointer = true;
            }

            // it not found, so the pointer hasn't been down (so it's probably a hover)
            if (storeIndex < 0) {
              return;
            }

            // update the event in the store
            store[storeIndex] = ev;

            this.callback(this.manager, eventType, {
              pointers: store,
              changedPointers: [ev],
              pointerType: pointerType,
              srcEvent: ev
            });

            if (removePointer) {
              // remove from the store
              store.splice(storeIndex, 1);
            }
          }
        });

        var SINGLE_TOUCH_INPUT_MAP = {
          touchstart: INPUT_START,
          touchmove: INPUT_MOVE,
          touchend: INPUT_END,
          touchcancel: INPUT_CANCEL
        };

        var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';
        var SINGLE_TOUCH_WINDOW_EVENTS =
          'touchstart touchmove touchend touchcancel';

        /**
         * Touch events input
         * @constructor
         * @extends Input
         */
        function SingleTouchInput() {
          this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;
          this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;
          this.started = false;

          Input.apply(this, arguments);
        }

        inherit(SingleTouchInput, Input, {
          handler: function TEhandler(ev) {
            var type = SINGLE_TOUCH_INPUT_MAP[ev.type];

            // should we handle the touch events?
            if (type === INPUT_START) {
              this.started = true;
            }

            if (!this.started) {
              return;
            }

            var touches = normalizeSingleTouches.call(this, ev, type);

            // when done, reset the started state
            if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length -
              touches[1].length === 0) {
              this.started = false;
            }

            this.callback(this.manager, type, {
              pointers: touches[0],
              changedPointers: touches[1],
              pointerType: INPUT_TYPE_TOUCH,
              srcEvent: ev
            });
          }
        });

        /**
         * @this {TouchInput}
         * @param {Object} ev
         * @param {Number} type flag
         * @returns {undefined|Array} [all, changed]
         */
        function normalizeSingleTouches(ev, type) {
          var all = toArray(ev.touches);
          var changed = toArray(ev.changedTouches);

          if (type & (INPUT_END | INPUT_CANCEL)) {
            all = uniqueArray(all.concat(changed), 'identifier', true);
          }

          return [all, changed];
        }

        var TOUCH_INPUT_MAP = {
          touchstart: INPUT_START,
          touchmove: INPUT_MOVE,
          touchend: INPUT_END,
          touchcancel: INPUT_CANCEL
        };

        var TOUCH_TARGET_EVENTS =
          'touchstart touchmove touchend touchcancel';

        /**
         * Multi-user touch events input
         * @constructor
         * @extends Input
         */
        function TouchInput() {
          this.evTarget = TOUCH_TARGET_EVENTS;
          this.targetIds = {};

          Input.apply(this, arguments);
        }

        inherit(TouchInput, Input, {
          handler: function MTEhandler(ev) {
            var type = TOUCH_INPUT_MAP[ev.type];
            var touches = getTouches.call(this, ev, type);
            if (!touches) {
              return;
            }

            this.callback(this.manager, type, {
              pointers: touches[0],
              changedPointers: touches[1],
              pointerType: INPUT_TYPE_TOUCH,
              srcEvent: ev
            });
          }
        });

        /**
         * @this {TouchInput}
         * @param {Object} ev
         * @param {Number} type flag
         * @returns {undefined|Array} [all, changed]
         */
        function getTouches(ev, type) {
          var allTouches = toArray(ev.touches);
          var targetIds = this.targetIds;

          // when there is only one touch, the process can be simplified
          if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {
            targetIds[allTouches[0].identifier] = true;
            return [allTouches, allTouches];
          }

          var i,
            targetTouches,
            changedTouches = toArray(ev.changedTouches),
            changedTargetTouches = [],
            target = this.target;

          // get target touches from touches
          targetTouches = allTouches.filter(function(touch) {
            return hasParent(touch.target, target);
          });

          // collect touches
          if (type === INPUT_START) {
            i = 0;
            while (i < targetTouches.length) {
              targetIds[targetTouches[i].identifier] = true;
              i++;
            }
          }

          // filter changed touches to only contain touches that exist in the collected target ids
          i = 0;
          while (i < changedTouches.length) {
            if (targetIds[changedTouches[i].identifier]) {
              changedTargetTouches.push(changedTouches[i]);
            }

            // cleanup removed touches
            if (type & (INPUT_END | INPUT_CANCEL)) {
              delete targetIds[changedTouches[i].identifier];
            }
            i++;
          }

          if (!changedTargetTouches.length) {
            return;
          }

          return [
            // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
            uniqueArray(targetTouches.concat(changedTargetTouches),
              'identifier', true),
            changedTargetTouches
          ];
        }

        /**
         * Combined touch and mouse input
         *
         * Touch has a higher priority then mouse, and while touching no mouse events are allowed.
         * This because touch devices also emit mouse events while doing a touch.
         *
         * @constructor
         * @extends Input
         */
        function TouchMouseInput() {
          Input.apply(this, arguments);

          var handler = bindFn(this.handler, this);
          this.touch = new TouchInput(this.manager, handler);
          this.mouse = new MouseInput(this.manager, handler);
        }

        inherit(TouchMouseInput, Input, {
          /**
           * handle mouse and touch events
           * @param {Hammer} manager
           * @param {String} inputEvent
           * @param {Object} inputData
           */
          handler: function TMEhandler(manager, inputEvent, inputData) {
            var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),
              isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);

            // when we're in a touch event, so  block all upcoming mouse events
            // most mobile browser also emit mouseevents, right after touchstart
            if (isTouch) {
              this.mouse.allow = false;
            } else if (isMouse && !this.mouse.allow) {
              return;
            }

            // reset the allowMouse when we're done
            if (inputEvent & (INPUT_END | INPUT_CANCEL)) {
              this.mouse.allow = true;
            }

            this.callback(manager, inputEvent, inputData);
          },

          /**
           * remove the event listeners
           */
          destroy: function destroy() {
            this.touch.destroy();
            this.mouse.destroy();
          }
        });

        var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style,
          'touchAction');
        var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;

        // magical touchAction value
        var TOUCH_ACTION_COMPUTE = 'compute';
        var TOUCH_ACTION_AUTO = 'auto';
        var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented
        var TOUCH_ACTION_NONE = 'none';
        var TOUCH_ACTION_PAN_X = 'pan-x';
        var TOUCH_ACTION_PAN_Y = 'pan-y';

        /**
         * Touch Action
         * sets the touchAction property or uses the js alternative
         * @param {Manager} manager
         * @param {String} value
         * @constructor
         */
        function TouchAction(manager, value) {
          this.manager = manager;
          this.set(value);
        }

        TouchAction.prototype = {
          /**
           * set the touchAction value on the element or enable the polyfill
           * @param {String} value
           */
          set: function(value) {
            // find out the touch-action by the event handlers
            if (value == TOUCH_ACTION_COMPUTE) {
              value = this.compute();
            }

            if (NATIVE_TOUCH_ACTION) {
              this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;
            }
            this.actions = value.toLowerCase().trim();
          },

          /**
           * just re-set the touchAction value
           */
          update: function() {
            this.set(this.manager.options.touchAction);
          },

          /**
           * compute the value for the touchAction property based on the recognizer's settings
           * @returns {String} value
           */
          compute: function() {
            var actions = [];
            each(this.manager.recognizers, function(recognizer) {
              if (boolOrFn(recognizer.options.enable, [recognizer])) {
                actions = actions.concat(recognizer.getTouchAction());
              }
            });
            return cleanTouchActions(actions.join(' '));
          },

          /**
           * this method is called on each input cycle and provides the preventing of the browser behavior
           * @param {Object} input
           */
          preventDefaults: function(input) {
            // not needed with native support for the touchAction property
            if (NATIVE_TOUCH_ACTION) {
              return;
            }

            var srcEvent = input.srcEvent;
            var direction = input.offsetDirection;

            // if the touch action did prevented once this session
            if (this.manager.session.prevented) {
              srcEvent.preventDefault();
              return;
            }

            var actions = this.actions;
            var hasNone = inStr(actions, TOUCH_ACTION_NONE);
            var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);
            var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);

            if (hasNone ||
              (hasPanY && direction & DIRECTION_HORIZONTAL) ||
              (hasPanX && direction & DIRECTION_VERTICAL)) {
              return this.preventSrc(srcEvent);
            }
          },

          /**
           * call preventDefault to prevent the browser's default behavior (scrolling in most cases)
           * @param {Object} srcEvent
           */
          preventSrc: function(srcEvent) {
            this.manager.session.prevented = true;
            srcEvent.preventDefault();
          }
        };

        /**
         * when the touchActions are collected they are not a valid value, so we need to clean things up. *
         * @param {String} actions
         * @returns {*}
         */
        function cleanTouchActions(actions) {
          // none
          if (inStr(actions, TOUCH_ACTION_NONE)) {
            return TOUCH_ACTION_NONE;
          }

          var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
          var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);

          // pan-x and pan-y can be combined
          if (hasPanX && hasPanY) {
            return TOUCH_ACTION_PAN_X + ' ' + TOUCH_ACTION_PAN_Y;
          }

          // pan-x OR pan-y
          if (hasPanX || hasPanY) {
            return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;
          }

          // manipulation
          if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {
            return TOUCH_ACTION_MANIPULATION;
          }

          return TOUCH_ACTION_AUTO;
        }

        /**
         * Recognizer flow explained; *
         * All recognizers have the initial state of POSSIBLE when a input session starts.
         * The definition of a input session is from the first input until the last input, with all it's movement in it. *
         * Example session for mouse-input: mousedown -> mousemove -> mouseup
         *
         * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed
         * which determines with state it should be.
         *
         * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to
         * POSSIBLE to give it another change on the next cycle.
         *
         *               Possible
         *                  |
         *            +-----+---------------+
         *            |                     |
         *      +-----+-----+               |
         *      |           |               |
         *   Failed      Cancelled          |
         *                          +-------+------+
         *                          |              |
         *                      Recognized       Began
         *                                         |
         *                                      Changed
         *                                         |
         *                                  Ended/Recognized
         */
        var STATE_POSSIBLE = 1;
        var STATE_BEGAN = 2;
        var STATE_CHANGED = 4;
        var STATE_ENDED = 8;
        var STATE_RECOGNIZED = STATE_ENDED;
        var STATE_CANCELLED = 16;
        var STATE_FAILED = 32;

        /**
         * Recognizer
         * Every recognizer needs to extend from this class.
         * @constructor
         * @param {Object} options
         */
        function Recognizer(options) {
          this.id = uniqueId();

          this.manager = null;
          this.options = merge(options || {}, this.defaults);

          // default is enable true
          this.options.enable = ifUndefined(this.options.enable, true);

          this.state = STATE_POSSIBLE;

          this.simultaneous = {};
          this.requireFail = [];
        }

        Recognizer.prototype = {
          /**
           * @virtual
           * @type {Object}
           */
          defaults: {},

          /**
           * set options
           * @param {Object} options
           * @return {Recognizer}
           */
          set: function(options) {
            extend(this.options, options);

            // also update the touchAction, in case something changed about the directions/enabled state
            this.manager && this.manager.touchAction.update();
            return this;
          },

          /**
           * recognize simultaneous with an other recognizer.
           * @param {Recognizer} otherRecognizer
           * @returns {Recognizer} this
           */
          recognizeWith: function(otherRecognizer) {
            if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {
              return this;
            }

            var simultaneous = this.simultaneous;
            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer,
              this);
            if (!simultaneous[otherRecognizer.id]) {
              simultaneous[otherRecognizer.id] = otherRecognizer;
              otherRecognizer.recognizeWith(this);
            }
            return this;
          },

          /**
           * drop the simultaneous link. it doesnt remove the link on the other recognizer.
           * @param {Recognizer} otherRecognizer
           * @returns {Recognizer} this
           */
          dropRecognizeWith: function(otherRecognizer) {
            if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {
              return this;
            }

            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer,
              this);
            delete this.simultaneous[otherRecognizer.id];
            return this;
          },

          /**
           * recognizer can only run when an other is failing
           * @param {Recognizer} otherRecognizer
           * @returns {Recognizer} this
           */
          requireFailure: function(otherRecognizer) {
            if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {
              return this;
            }

            var requireFail = this.requireFail;
            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer,
              this);
            if (inArray(requireFail, otherRecognizer) === -1) {
              requireFail.push(otherRecognizer);
              otherRecognizer.requireFailure(this);
            }
            return this;
          },

          /**
           * drop the requireFailure link. it does not remove the link on the other recognizer.
           * @param {Recognizer} otherRecognizer
           * @returns {Recognizer} this
           */
          dropRequireFailure: function(otherRecognizer) {
            if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {
              return this;
            }

            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer,
              this);
            var index = inArray(this.requireFail, otherRecognizer);
            if (index > -1) {
              this.requireFail.splice(index, 1);
            }
            return this;
          },

          /**
           * has require failures boolean
           * @returns {boolean}
           */
          hasRequireFailures: function() {
            return this.requireFail.length > 0;
          },

          /**
           * if the recognizer can recognize simultaneous with an other recognizer
           * @param {Recognizer} otherRecognizer
           * @returns {Boolean}
           */
          canRecognizeWith: function(otherRecognizer) {
            return !!this.simultaneous[otherRecognizer.id];
          },

          /**
           * You should use `tryEmit` instead of `emit` directly to check
           * that all the needed recognizers has failed before emitting.
           * @param {Object} input
           */
          emit: function(input) {
            var self = this;
            var state = this.state;

            function emit(withState) {
              self.manager.emit(self.options.event + (withState ? stateStr(
                state) : ''), input);
            }

            // 'panstart' and 'panmove'
            if (state < STATE_ENDED) {
              emit(true);
            }

            emit(); // simple 'eventName' events

            // panend and pancancel
            if (state >= STATE_ENDED) {
              emit(true);
            }
          },

          /**
           * Check that all the require failure recognizers has failed,
           * if true, it emits a gesture event,
           * otherwise, setup the state to FAILED.
           * @param {Object} input
           */
          tryEmit: function(input) {
            if (this.canEmit()) {
              return this.emit(input);
            }
            // it's failing anyway
            this.state = STATE_FAILED;
          },

          /**
           * can we emit?
           * @returns {boolean}
           */
          canEmit: function() {
            var i = 0;
            while (i < this.requireFail.length) {
              if (!(this.requireFail[i].state & (STATE_FAILED |
                STATE_POSSIBLE))) {
                return false;
              }
              i++;
            }
            return true;
          },

          /**
           * update the recognizer
           * @param {Object} inputData
           */
          recognize: function(inputData) {
            // make a new copy of the inputData
            // so we can change the inputData without messing up the other recognizers
            var inputDataClone = extend({}, inputData);

            // is is enabled and allow recognizing?
            if (!boolOrFn(this.options.enable, [this, inputDataClone])) {
              this.reset();
              this.state = STATE_FAILED;
              return;
            }

            // reset when we've reached the end
            if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED |
              STATE_FAILED)) {
              this.state = STATE_POSSIBLE;
            }

            this.state = this.process(inputDataClone);

            // the recognizer has recognized a gesture
            // so trigger an event
            if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED |
              STATE_CANCELLED)) {
              this.tryEmit(inputDataClone);
            }
          },

          /**
           * return the state of the recognizer
           * the actual recognizing happens in this method
           * @virtual
           * @param {Object} inputData
           * @returns {Const} STATE
           */
          process: function(inputData) {}, // jshint ignore:line

          /**
           * return the preferred touch-action
           * @virtual
           * @returns {Array}
           */
          getTouchAction: function() {},

          /**
           * called when the gesture isn't allowed to recognize
           * like when another is being recognized or it is disabled
           * @virtual
           */
          reset: function() {}
        };

        /**
         * get a usable string, used as event postfix
         * @param {Const} state
         * @returns {String} state
         */
        function stateStr(state) {
          if (state & STATE_CANCELLED) {
            return 'cancel';
          } else if (state & STATE_ENDED) {
            return 'end';
          } else if (state & STATE_CHANGED) {
            return 'move';
          } else if (state & STATE_BEGAN) {
            return 'start';
          }
          return '';
        }

        /**
         * direction cons to string
         * @param {Const} direction
         * @returns {String}
         */
        function directionStr(direction) {
          if (direction == DIRECTION_DOWN) {
            return 'down';
          } else if (direction == DIRECTION_UP) {
            return 'up';
          } else if (direction == DIRECTION_LEFT) {
            return 'left';
          } else if (direction == DIRECTION_RIGHT) {
            return 'right';
          }
          return '';
        }

        /**
         * get a recognizer by name if it is bound to a manager
         * @param {Recognizer|String} otherRecognizer
         * @param {Recognizer} recognizer
         * @returns {Recognizer}
         */
        function getRecognizerByNameIfManager(otherRecognizer, recognizer) {
          var manager = recognizer.manager;
          if (manager) {
            return manager.get(otherRecognizer);
          }
          return otherRecognizer;
        }

        /**
         * This recognizer is just used as a base for the simple attribute recognizers.
         * @constructor
         * @extends Recognizer
         */
        function AttrRecognizer() {
          Recognizer.apply(this, arguments);
        }

        inherit(AttrRecognizer, Recognizer, {
          /**
           * @namespace
           * @memberof AttrRecognizer
           */
          defaults: {
            /**
             * @type {Number}
             * @default 1
             */
            pointers: 1
          },

          /**
           * Used to check if it the recognizer receives valid input, like input.distance > 10.
           * @memberof AttrRecognizer
           * @param {Object} input
           * @returns {Boolean} recognized
           */
          attrTest: function(input) {
            var optionPointers = this.options.pointers;
            return optionPointers === 0 || input.pointers.length ===
              optionPointers;
          },

          /**
           * Process the input and return the state for the recognizer
           * @memberof AttrRecognizer
           * @param {Object} input
           * @returns {*} State
           */
          process: function(input) {
            var state = this.state;
            var eventType = input.eventType;

            var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);
            var isValid = this.attrTest(input);

            // on cancel input and we've recognized before, return STATE_CANCELLED
            if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {
              return state | STATE_CANCELLED;
            } else if (isRecognized || isValid) {
              if (eventType & INPUT_END) {
                return state | STATE_ENDED;
              } else if (!(state & STATE_BEGAN)) {
                return STATE_BEGAN;
              }
              return state | STATE_CHANGED;
            }
            return STATE_FAILED;
          }
        });

        /**
         * Pan
         * Recognized when the pointer is down and moved in the allowed direction.
         * @constructor
         * @extends AttrRecognizer
         */
        function PanRecognizer() {
          AttrRecognizer.apply(this, arguments);

          this.pX = null;
          this.pY = null;
        }

        inherit(PanRecognizer, AttrRecognizer, {
          /**
           * @namespace
           * @memberof PanRecognizer
           */
          defaults: {
            event: 'pan',
            threshold: 10,
            pointers: 1,
            direction: DIRECTION_ALL
          },

          getTouchAction: function() {
            var direction = this.options.direction;
            var actions = [];
            if (direction & DIRECTION_HORIZONTAL) {
              actions.push(TOUCH_ACTION_PAN_Y);
            }
            if (direction & DIRECTION_VERTICAL) {
              actions.push(TOUCH_ACTION_PAN_X);
            }
            return actions;
          },

          directionTest: function(input) {
            var options = this.options;
            var hasMoved = true;
            var distance = input.distance;
            var direction = input.direction;
            var x = input.deltaX;
            var y = input.deltaY;

            // lock to axis?
            if (!(direction & options.direction)) {
              if (options.direction & DIRECTION_HORIZONTAL) {
                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ?
                  DIRECTION_LEFT : DIRECTION_RIGHT;
                hasMoved = x != this.pX;
                distance = Math.abs(input.deltaX);
              } else {
                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ?
                  DIRECTION_UP : DIRECTION_DOWN;
                hasMoved = y != this.pY;
                distance = Math.abs(input.deltaY);
              }
            }
            input.direction = direction;
            return hasMoved && distance > options.threshold && direction &
              options.direction;
          },

          attrTest: function(input) {
            return AttrRecognizer.prototype.attrTest.call(this, input) &&
              (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) &&
                this.directionTest(input)));
          },

          emit: function(input) {
            this.pX = input.deltaX;
            this.pY = input.deltaY;

            var direction = directionStr(input.direction);
            if (direction) {
              this.manager.emit(this.options.event + direction, input);
            }

            this._super.emit.call(this, input);
          }
        });

        /**
         * Pinch
         * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).
         * @constructor
         * @extends AttrRecognizer
         */
        function PinchRecognizer() {
          AttrRecognizer.apply(this, arguments);
        }

        inherit(PinchRecognizer, AttrRecognizer, {
          /**
           * @namespace
           * @memberof PinchRecognizer
           */
          defaults: {
            event: 'pinch',
            threshold: 0,
            pointers: 2
          },

          getTouchAction: function() {
            return [TOUCH_ACTION_NONE];
          },

          attrTest: function(input) {
            return this._super.attrTest.call(this, input) &&
              (Math.abs(input.scale - 1) > this.options.threshold || this
                .state & STATE_BEGAN);
          },

          emit: function(input) {
            this._super.emit.call(this, input);
            if (input.scale !== 1) {
              var inOut = input.scale < 1 ? 'in' : 'out';
              this.manager.emit(this.options.event + inOut, input);
            }
          }
        });

        /**
         * Press
         * Recognized when the pointer is down for x ms without any movement.
         * @constructor
         * @extends Recognizer
         */
        function PressRecognizer() {
          Recognizer.apply(this, arguments);

          this._timer = null;
          this._input = null;
        }

        inherit(PressRecognizer, Recognizer, {
          /**
           * @namespace
           * @memberof PressRecognizer
           */
          defaults: {
            event: 'press',
            pointers: 1,
            time: 500, // minimal time of the pointer to be pressed
            threshold: 5 // a minimal movement is ok, but keep it low
          },

          getTouchAction: function() {
            return [TOUCH_ACTION_AUTO];
          },

          process: function(input) {
            var options = this.options;
            var validPointers = input.pointers.length === options.pointers;
            var validMovement = input.distance < options.threshold;
            var validTime = input.deltaTime > options.time;

            this._input = input;

            // we only allow little movement
            // and we've reached an end event, so a tap is possible
            if (!validMovement || !validPointers || (input.eventType & (
              INPUT_END | INPUT_CANCEL) && !validTime)) {
              this.reset();
            } else if (input.eventType & INPUT_START) {
              this.reset();
              this._timer = setTimeoutContext(function() {
                this.state = STATE_RECOGNIZED;
                this.tryEmit();
              }, options.time, this);
            } else if (input.eventType & INPUT_END) {
              return STATE_RECOGNIZED;
            }
            return STATE_FAILED;
          },

          reset: function() {
            clearTimeout(this._timer);
          },

          emit: function(input) {
            if (this.state !== STATE_RECOGNIZED) {
              return;
            }

            if (input && (input.eventType & INPUT_END)) {
              this.manager.emit(this.options.event + 'up', input);
            } else {
              this._input.timeStamp = now();
              this.manager.emit(this.options.event, this._input);
            }
          }
        });

        /**
         * Rotate
         * Recognized when two or more pointer are moving in a circular motion.
         * @constructor
         * @extends AttrRecognizer
         */
        function RotateRecognizer() {
          AttrRecognizer.apply(this, arguments);
        }

        inherit(RotateRecognizer, AttrRecognizer, {
          /**
           * @namespace
           * @memberof RotateRecognizer
           */
          defaults: {
            event: 'rotate',
            threshold: 0,
            pointers: 2
          },

          getTouchAction: function() {
            return [TOUCH_ACTION_NONE];
          },

          attrTest: function(input) {
            return this._super.attrTest.call(this, input) &&
              (Math.abs(input.rotation) > this.options.threshold || this.state &
                STATE_BEGAN);
          }
        });

        /**
         * Swipe
         * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.
         * @constructor
         * @extends AttrRecognizer
         */
        function SwipeRecognizer() {
          AttrRecognizer.apply(this, arguments);
        }

        inherit(SwipeRecognizer, AttrRecognizer, {
          /**
           * @namespace
           * @memberof SwipeRecognizer
           */
          defaults: {
            event: 'swipe',
            threshold: 10,
            velocity: 0.65,
            direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,
            pointers: 1
          },

          getTouchAction: function() {
            return PanRecognizer.prototype.getTouchAction.call(this);
          },

          attrTest: function(input) {
            var direction = this.options.direction;
            var velocity;

            if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {
              velocity = input.velocity;
            } else if (direction & DIRECTION_HORIZONTAL) {
              velocity = input.velocityX;
            } else if (direction & DIRECTION_VERTICAL) {
              velocity = input.velocityY;
            }

            return this._super.attrTest.call(this, input) &&
              direction & input.direction &&
              input.distance > this.options.threshold &&
              abs(velocity) > this.options.velocity && input.eventType &
              INPUT_END;
          },

          emit: function(input) {
            var direction = directionStr(input.direction);
            if (direction) {
              this.manager.emit(this.options.event + direction, input);
            }

            this.manager.emit(this.options.event, input);
          }
        });

        /**
         * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur
         * between the given interval and position. The delay option can be used to recognize multi-taps without firing
         * a single tap.
         *
         * The eventData from the emitted event contains the property `tapCount`, which contains the amount of
         * multi-taps being recognized.
         * @constructor
         * @extends Recognizer
         */
        function TapRecognizer() {
          Recognizer.apply(this, arguments);

          // previous time and center,
          // used for tap counting
          this.pTime = false;
          this.pCenter = false;

          this._timer = null;
          this._input = null;
          this.count = 0;
        }

        inherit(TapRecognizer, Recognizer, {
          /**
           * @namespace
           * @memberof PinchRecognizer
           */
          defaults: {
            event: 'tap',
            pointers: 1,
            taps: 1,
            interval: 300, // max time between the multi-tap taps
            time: 250, // max time of the pointer to be down (like finger on the screen)
            threshold: 2, // a minimal movement is ok, but keep it low
            posThreshold: 10 // a multi-tap can be a bit off the initial position
          },

          getTouchAction: function() {
            return [TOUCH_ACTION_MANIPULATION];
          },

          process: function(input) {
            var options = this.options;

            var validPointers = input.pointers.length === options.pointers;
            var validMovement = input.distance < options.threshold;
            var validTouchTime = input.deltaTime < options.time;

            this.reset();

            if ((input.eventType & INPUT_START) && (this.count === 0)) {
              return this.failTimeout();
            }

            // we only allow little movement
            // and we've reached an end event, so a tap is possible
            if (validMovement && validTouchTime && validPointers) {
              if (input.eventType != INPUT_END) {
                return this.failTimeout();
              }

              var validInterval = this.pTime ? (input.timeStamp - this.pTime <
                options.interval) : true;
              var validMultiTap = !this.pCenter || getDistance(this.pCenter,
                input.center) < options.posThreshold;

              this.pTime = input.timeStamp;
              this.pCenter = input.center;

              if (!validMultiTap || !validInterval) {
                this.count = 1;
              } else {
                this.count += 1;
              }

              this._input = input;

              // if tap count matches we have recognized it,
              // else it has began recognizing...
              var tapCount = this.count % options.taps;
              if (tapCount === 0) {
                // no failing requirements, immediately trigger the tap event
                // or wait as long as the multitap interval to trigger
                if (!this.hasRequireFailures()) {
                  return STATE_RECOGNIZED;
                } else {
                  this._timer = setTimeoutContext(function() {
                    this.state = STATE_RECOGNIZED;
                    this.tryEmit();
                  }, options.interval, this);
                  return STATE_BEGAN;
                }
              }
            }
            return STATE_FAILED;
          },

          failTimeout: function() {
            this._timer = setTimeoutContext(function() {
              this.state = STATE_FAILED;
            }, this.options.interval, this);
            return STATE_FAILED;
          },

          reset: function() {
            clearTimeout(this._timer);
          },

          emit: function() {
            if (this.state == STATE_RECOGNIZED) {
              this._input.tapCount = this.count;
              this.manager.emit(this.options.event, this._input);
            }
          }
        });

        /**
         * Simple way to create an manager with a default set of recognizers.
         * @param {HTMLElement} element
         * @param {Object} [options]
         * @constructor
         */
        function Hammer(element, options) {
          options = options || {};
          options.recognizers = ifUndefined(options.recognizers, Hammer.defaults
            .preset);
          return new Manager(element, options);
        }

        /**
         * @const {string}
         */
        Hammer.VERSION = '2.0.4';

        /**
         * default settings
         * @namespace
         */
        Hammer.defaults = {
          /**
           * set if DOM events are being triggered.
           * But this is slower and unused by simple implementations, so disabled by default.
           * @type {Boolean}
           * @default false
           */
          domEvents: false,

          /**
           * The value for the touchAction property/fallback.
           * When set to `compute` it will magically set the correct value based on the added recognizers.
           * @type {String}
           * @default compute
           */
          touchAction: TOUCH_ACTION_COMPUTE,

          /**
           * @type {Boolean}
           * @default true
           */
          enable: true,

          /**
           * EXPERIMENTAL FEATURE -- can be removed/changed
           * Change the parent input target element.
           * If Null, then it is being set the to main element.
           * @type {Null|EventTarget}
           * @default null
           */
          inputTarget: null,

          /**
           * force an input class
           * @type {Null|Function}
           * @default null
           */
          inputClass: null,

          /**
           * Default recognizer setup when calling `Hammer()`
           * When creating a new Manager these will be skipped.
           * @type {Array}
           */
          preset: [
            // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]
            [RotateRecognizer, {
              enable: false
            }],
            [PinchRecognizer, {
                enable: false
              },
              ['rotate']
            ],
            [SwipeRecognizer, {
              direction: DIRECTION_HORIZONTAL
            }],
            [PanRecognizer, {
                direction: DIRECTION_HORIZONTAL
              },
              ['swipe']
            ],
            [TapRecognizer],
            [TapRecognizer, {
                event: 'doubletap',
                taps: 2
              },
              ['tap']
            ],
            [PressRecognizer]
          ],

          /**
           * Some CSS properties can be used to improve the working of Hammer.
           * Add them to this method and they will be set when creating a new Manager.
           * @namespace
           */
          cssProps: {
            /**
             * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
             * @type {String}
             * @default 'none'
             */
            userSelect: 'none',

            /**
             * Disable the Windows Phone grippers when pressing an element.
             * @type {String}
             * @default 'none'
             */
            touchSelect: 'none',

            /**
             * Disables the default callout shown when you touch and hold a touch target.
             * On iOS, when you touch and hold a touch target such as a link, Safari displays
             * a callout containing information about the link. This property allows you to disable that callout.
             * @type {String}
             * @default 'none'
             */
            touchCallout: 'none',

            /**
             * Specifies whether zooming is enabled. Used by IE10>
             * @type {String}
             * @default 'none'
             */
            contentZooming: 'none',

            /**
             * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
             * @type {String}
             * @default 'none'
             */
            userDrag: 'none',

            /**
             * Overrides the highlight color shown when the user taps a link or a JavaScript
             * clickable element in iOS. This property obeys the alpha value, if specified.
             * @type {String}
             * @default 'rgba(0,0,0,0)'
             */
            tapHighlightColor: 'rgba(0,0,0,0)'
          }
        };

        var STOP = 1;
        var FORCED_STOP = 2;

        /**
         * Manager
         * @param {HTMLElement} element
         * @param {Object} [options]
         * @constructor
         */
        function Manager(element, options) {
          options = options || {};

          this.options = merge(options, Hammer.defaults);
          this.options.inputTarget = this.options.inputTarget || element;

          this.handlers = {};
          this.session = {};
          this.recognizers = [];

          this.element = element;
          this.input = createInputInstance(this);
          this.touchAction = new TouchAction(this, this.options.touchAction);

          toggleCssProps(this, true);

          each(options.recognizers, function(item) {
            var recognizer = this.add(new(item[0])(item[1]));
            item[2] && recognizer.recognizeWith(item[2]);
            item[3] && recognizer.requireFailure(item[3]);
          }, this);
        }

        Manager.prototype = {
          /**
           * set options
           * @param {Object} options
           * @returns {Manager}
           */
          set: function(options) {
            extend(this.options, options);

            // Options that need a little more setup
            if (options.touchAction) {
              this.touchAction.update();
            }
            if (options.inputTarget) {
              // Clean up existing event listeners and reinitialize
              this.input.destroy();
              this.input.target = options.inputTarget;
              this.input.init();
            }
            return this;
          },

          /**
           * stop recognizing for this session.
           * This session will be discarded, when a new [input]start event is fired.
           * When forced, the recognizer cycle is stopped immediately.
           * @param {Boolean} [force]
           */
          stop: function(force) {
            this.session.stopped = force ? FORCED_STOP : STOP;
          },

          /**
           * run the recognizers!
           * called by the inputHandler function on every movement of the pointers (touches)
           * it walks through all the recognizers and tries to detect the gesture that is being made
           * @param {Object} inputData
           */
          recognize: function(inputData) {
            var session = this.session;
            if (session.stopped) {
              return;
            }

            // run the touch-action polyfill
            this.touchAction.preventDefaults(inputData);

            var recognizer;
            var recognizers = this.recognizers;

            // this holds the recognizer that is being recognized.
            // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED
            // if no recognizer is detecting a thing, it is set to `null`
            var curRecognizer = session.curRecognizer;

            // reset when the last recognizer is recognized
            // or when we're in a new session
            if (!curRecognizer || (curRecognizer && curRecognizer.state &
              STATE_RECOGNIZED)) {
              curRecognizer = session.curRecognizer = null;
            }

            var i = 0;
            while (i < recognizers.length) {
              recognizer = recognizers[i];

              // find out if we are allowed try to recognize the input for this one.
              // 1.   allow if the session is NOT forced stopped (see the .stop() method)
              // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one
              //      that is being recognized.
              // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.
              //      this can be setup with the `recognizeWith()` method on the recognizer.
              if (session.stopped !== FORCED_STOP && ( // 1
                !curRecognizer || recognizer == curRecognizer || // 2
                recognizer.canRecognizeWith(curRecognizer))) { // 3
                recognizer.recognize(inputData);
              } else {
                recognizer.reset();
              }

              // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the
              // current active recognizer. but only if we don't already have an active recognizer
              if (!curRecognizer && recognizer.state & (STATE_BEGAN |
                STATE_CHANGED | STATE_ENDED)) {
                curRecognizer = session.curRecognizer = recognizer;
              }
              i++;
            }
          },

          /**
           * get a recognizer by its event name.
           * @param {Recognizer|String} recognizer
           * @returns {Recognizer|Null}
           */
          get: function(recognizer) {
            if (recognizer instanceof Recognizer) {
              return recognizer;
            }

            var recognizers = this.recognizers;
            for (var i = 0; i < recognizers.length; i++) {
              if (recognizers[i].options.event == recognizer) {
                return recognizers[i];
              }
            }
            return null;
          },

          /**
           * add a recognizer to the manager
           * existing recognizers with the same event name will be removed
           * @param {Recognizer} recognizer
           * @returns {Recognizer|Manager}
           */
          add: function(recognizer) {
            if (invokeArrayArg(recognizer, 'add', this)) {
              return this;
            }

            // remove existing
            var existing = this.get(recognizer.options.event);
            if (existing) {
              this.remove(existing);
            }

            this.recognizers.push(recognizer);
            recognizer.manager = this;

            this.touchAction.update();
            return recognizer;
          },

          /**
           * remove a recognizer by name or instance
           * @param {Recognizer|String} recognizer
           * @returns {Manager}
           */
          remove: function(recognizer) {
            if (invokeArrayArg(recognizer, 'remove', this)) {
              return this;
            }

            var recognizers = this.recognizers;
            recognizer = this.get(recognizer);
            recognizers.splice(inArray(recognizers, recognizer), 1);

            this.touchAction.update();
            return this;
          },

          /**
           * bind event
           * @param {String} events
           * @param {Function} handler
           * @returns {EventEmitter} this
           */
          on: function(events, handler) {
            var handlers = this.handlers;
            each(splitStr(events), function(event) {
              handlers[event] = handlers[event] || [];
              handlers[event].push(handler);
            });
            return this;
          },

          /**
           * unbind event, leave emit blank to remove all handlers
           * @param {String} events
           * @param {Function} [handler]
           * @returns {EventEmitter} this
           */
          off: function(events, handler) {
            var handlers = this.handlers;
            each(splitStr(events), function(event) {
              if (!handler) {
                delete handlers[event];
              } else {
                handlers[event].splice(inArray(handlers[event], handler),
                  1);
              }
            });
            return this;
          },

          /**
           * emit event to the listeners
           * @param {String} event
           * @param {Object} data
           */
          emit: function(event, data) {
            // we also want to trigger dom events
            if (this.options.domEvents) {
              triggerDomEvent(event, data);
            }

            // no handlers, so skip it all
            var handlers = this.handlers[event] && this.handlers[event].slice();
            if (!handlers || !handlers.length) {
              return;
            }

            data.type = event;
            data.preventDefault = function() {
              data.srcEvent.preventDefault();
            };

            var i = 0;
            while (i < handlers.length) {
              handlers[i](data);
              i++;
            }
          },

          /**
           * destroy the manager and unbinds all events
           * it doesn't unbind dom events, that is the user own responsibility
           */
          destroy: function() {
            this.element && toggleCssProps(this, false);

            this.handlers = {};
            this.session = {};
            this.input.destroy();
            this.element = null;
          }
        };

        /**
         * add/remove the css properties as defined in manager.options.cssProps
         * @param {Manager} manager
         * @param {Boolean} add
         */
        function toggleCssProps(manager, add) {
          var element = manager.element;
          each(manager.options.cssProps, function(value, name) {
            element.style[prefixed(element.style, name)] = add ? value :
              '';
          });
        }

        /**
         * trigger dom event
         * @param {String} event
         * @param {Object} data
         */
        function triggerDomEvent(event, data) {
          var gestureEvent = document.createEvent('Event');
          gestureEvent.initEvent(event, true, true);
          gestureEvent.gesture = data;
          data.target.dispatchEvent(gestureEvent);
        }

        extend(Hammer, {
          INPUT_START: INPUT_START,
          INPUT_MOVE: INPUT_MOVE,
          INPUT_END: INPUT_END,
          INPUT_CANCEL: INPUT_CANCEL,

          STATE_POSSIBLE: STATE_POSSIBLE,
          STATE_BEGAN: STATE_BEGAN,
          STATE_CHANGED: STATE_CHANGED,
          STATE_ENDED: STATE_ENDED,
          STATE_RECOGNIZED: STATE_RECOGNIZED,
          STATE_CANCELLED: STATE_CANCELLED,
          STATE_FAILED: STATE_FAILED,

          DIRECTION_NONE: DIRECTION_NONE,
          DIRECTION_LEFT: DIRECTION_LEFT,
          DIRECTION_RIGHT: DIRECTION_RIGHT,
          DIRECTION_UP: DIRECTION_UP,
          DIRECTION_DOWN: DIRECTION_DOWN,
          DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,
          DIRECTION_VERTICAL: DIRECTION_VERTICAL,
          DIRECTION_ALL: DIRECTION_ALL,

          Manager: Manager,
          Input: Input,
          TouchAction: TouchAction,

          TouchInput: TouchInput,
          MouseInput: MouseInput,
          PointerEventInput: PointerEventInput,
          TouchMouseInput: TouchMouseInput,
          SingleTouchInput: SingleTouchInput,

          Recognizer: Recognizer,
          AttrRecognizer: AttrRecognizer,
          Tap: TapRecognizer,
          Pan: PanRecognizer,
          Swipe: SwipeRecognizer,
          Pinch: PinchRecognizer,
          Rotate: RotateRecognizer,
          Press: PressRecognizer,

          on: addEventListeners,
          off: removeEventListeners,
          each: each,
          merge: merge,
          extend: extend,
          inherit: inherit,
          bindFn: bindFn,
          prefixed: prefixed
        });

        // jquery.hammer.js
        // This jQuery plugin is just a small wrapper around the Hammer() class.
        // It also extends the Manager.emit method by triggering jQuery events.
        // $(element).hammer(options).bind("pan", myPanHandler);
        // The Hammer instance is stored at $element.data("hammer").
        // https://github.com/hammerjs/jquery.hammer.js

        (function($, Hammer) {
          function hammerify(el, options) {
            var $el = $(el);
            if (!$el.data('hammer')) {
              $el.data('hammer', new Hammer($el[0], options));
            }
          }

          $.fn.hammer = function(options) {
            return this.each(function() {
              hammerify(this, options);
            });
          };

          // extend the emit method to also trigger jQuery events
          Hammer.Manager.prototype.emit = (function(originalEmit) {
            return function(type, data) {
              originalEmit.call(this, type, data);
              $(this.element).trigger({
                type: type,
                gesture: data
              });
            };
          })(Hammer.Manager.prototype.emit);
        })($, Hammer);

        $.AMUI.Hammer = Hammer;

        module.exports = Hammer;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  52: [
    function(require, module, exports) {
      (function(global) {
        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');

        /**
         * @ver 1.1.0
         * @via https://github.com/aralejs/qrcode/blob/master/src/qrcode.js
         * @license http://aralejs.org/
         */

        var qrcodeAlgObjCache = [];

        /**
         * 二维码构造函数，主要用于绘制
         * @param  {参数列表} opt 传递参数
         * @return {}
         */
        var qrcode = function(opt) {
          if (typeof opt === 'string') { // 只编码ASCII字符串
            opt = {
              text: opt
            };
          }
          //设置默认参数
          this.options = $.extend({}, {
            text: "",
            render: "",
            width: 256,
            height: 256,
            correctLevel: 3,
            background: "#ffffff",
            foreground: "#000000"
          }, opt);

          //使用QRCodeAlg创建二维码结构
          var qrCodeAlg = null;
          for (var i = 0, l = qrcodeAlgObjCache.length; i < l; i++) {
            if (qrcodeAlgObjCache[i].text == this.options.text &&
              qrcodeAlgObjCache[i].text.correctLevel == this.options.correctLevel
            ) {
              qrCodeAlg = qrcodeAlgObjCache[i].obj;
              break;
            }
          }
          if (i == l) {
            qrCodeAlg = new QRCodeAlg(this.options.text, this.options.correctLevel);
            qrcodeAlgObjCache.push({
              text: this.options.text,
              correctLevel: this.options.correctLevel,
              obj: qrCodeAlg
            });
          }

          if (this.options.render) {
            switch (this.options.render) {
              case "canvas":
                return this.createCanvas(qrCodeAlg);
              case "table":
                return this.createTable(qrCodeAlg);
              case "svg":
                return this.createSVG(qrCodeAlg);
              default:
                return this.createDefault(qrCodeAlg);
            }
          }
          return this.createDefault(qrCodeAlg);
        };
        /**
         * 使用Canvas来画二维码
         * @return {}
         */

        qrcode.prototype.createDefault = function(qrCodeAlg) {
          var canvas = document.createElement('canvas');
          if (canvas.getContext)
            return this.createCanvas(qrCodeAlg);
          if (!!document.createElementNS && !!document.createElementNS(
            SVG_NS, 'svg').createSVGRect)
            return this.createSVG(qrCodeAlg);
          return this.createTable(qrCodeAlg);
        };
        qrcode.prototype.createCanvas = function(qrCodeAlg) {
          //创建canvas节点
          var canvas = document.createElement('canvas');
          canvas.width = this.options.width;
          canvas.height = this.options.height;
          var ctx = canvas.getContext('2d');

          //计算每个点的长宽
          var tileW = (this.options.width / qrCodeAlg.getModuleCount()).toPrecision(
            4);
          var tileH = this.options.height / qrCodeAlg.getModuleCount().toPrecision(
            4);

          //绘制
          for (var row = 0; row < qrCodeAlg.getModuleCount(); row++) {
            for (var col = 0; col < qrCodeAlg.getModuleCount(); col++) {
              ctx.fillStyle = qrCodeAlg.modules[row][col] ? this.options.foreground :
                this.options.background;
              var w = (Math.ceil((col + 1) * tileW) - Math.floor(col *
                tileW));
              var h = (Math.ceil((row + 1) * tileW) - Math.floor(row *
                tileW));
              ctx.fillRect(Math.round(col * tileW), Math.round(row * tileH),
                w, h);
            }
          }
          //返回绘制的节点
          return canvas;
        };
        /**
         * 使用table来绘制二维码
         * @return {}
         */
        qrcode.prototype.createTable = function(qrCodeAlg) {
          //创建table节点
          var s = [];
          s.push(
            '<table style="border:0px; margin:0px; padding:0px; border-collapse:collapse; background-color: ' +
            this.options.background +
            ';">');
          // 计算每个节点的长宽；取整，防止点之间出现分离
          var tileW = -1,
            tileH = -1,
            caculateW = -1,
            caculateH = -1;
          tileW = caculateW = Math.floor(this.options.width / qrCodeAlg.getModuleCount());
          tileH = caculateH = Math.floor(this.options.height / qrCodeAlg.getModuleCount());
          if (caculateW <= 0) {
            if (qrCodeAlg.getModuleCount() < 80) {
              tileW = 2;
            } else {
              tileW = 1;
            }
          }
          if (caculateH <= 0) {
            if (qrCodeAlg.getModuleCount() < 80) {
              tileH = 2;
            } else {
              tileH = 1;
            }
          }

          // 绘制二维码
          foreTd = '<td style="border:0px; margin:0px; padding:0px; width:' +
            tileW + 'px; background-color: ' + this.options.foreground +
            '"></td>',
          backTd = '<td style="border:0px; margin:0px; padding:0px; width:' +
            tileW + 'px; background-color: ' + this.options.background +
            '"></td>',
          l = qrCodeAlg.getModuleCount();

          for (var row = 0; row < l; row++) {
            s.push(
              '<tr style="border:0px; margin:0px; padding:0px; height: ' +
              tileH + 'px">');
            for (var col = 0; col < l; col++) {
              s.push(qrCodeAlg.modules[row][col] ? foreTd : backTd);
            }
            s.push('</tr>');
          }
          s.push('</table>');
          var span = document.createElement("span");
          span.innerHTML = s.join('');

          return span.firstChild;
        };

        /**
         * 使用SVG开绘制二维码
         * @return {}
         */
        qrcode.prototype.createSVG = function(qrCodeAlg) {
          var x, dx, y, dy,
            moduleCount = qrCodeAlg.getModuleCount(),
            scale = this.options.height / this.options.width,
            svg = '<svg xmlns="http://www.w3.org/2000/svg" ' + 'width="' +
            this.options.width + 'px" height="' + this.options.height +
            'px" ' + 'viewbox="0 0 ' + moduleCount * 10 + ' ' + moduleCount *
            10 * scale + '">',
            rectHead = '<path ',
            foreRect = ' style="stroke-width:0.5;stroke:' + this.options.foreground +
            ';fill:' + this.options.foreground + ';"></path>',
            backRect = ' style="stroke-width:0.5;stroke:' + this.options.background +
            ';fill:' + this.options.background + ';"></path>';

          // draw in the svg
          for (var row = 0; row < moduleCount; row++) {
            for (var col = 0; col < moduleCount; col++) {
              x = col * 10;
              y = row * 10 * scale;
              dx = (col + 1) * 10;
              dy = (row + 1) * 10 * scale;

              svg += rectHead + 'd="M ' + x + ',' + y + ' L ' + dx + ',' +
                y + ' L ' + dx + ',' + dy + ' L ' + x + ',' + dy + ' Z"';

              svg += qrCodeAlg.modules[row][col] ? foreRect : backRect;
            }
          }

          svg += '</svg>';

          // return just built svg
          return $(svg)[0];
        };

        /**
         * 获取单个字符的utf8编码
         * unicode BMP平面约65535个字符
         * @param {num} code
         * return {array}
         */
        function unicodeFormat8(code) {
          // 1 byte
          if (code < 128) {
            return [code];
            // 2 bytes
          } else if (code < 2048) {
            c0 = 192 + (code >> 6);
            c1 = 128 + (code & 63);
            return [c0, c1];
            // 3 bytes
          } else {
            c0 = 224 + (code >> 12);
            c1 = 128 + (code >> 6 & 63);
            c2 = 128 + (code & 63);
            return [c0, c1, c2];
          }
        }

        /**
         * 获取字符串的utf8编码字节串
         * @param {string} string
         * @return {array}
         */
        function getUTF8Bytes(string) {
          var utf8codes = [];
          for (var i = 0; i < string.length; i++) {
            var code = string.charCodeAt(i);
            var utf8 = unicodeFormat8(code);
            for (var j = 0; j < utf8.length; j++) {
              utf8codes.push(utf8[j]);
            }
          }
          return utf8codes;
        }

        /**
         * 二维码算法实现
         * @param {string} data              要编码的信息字符串
         * @param {num} errorCorrectLevel 纠错等级
         */
        function QRCodeAlg(data, errorCorrectLevel) {
          this.typeNumber = -1; //版本
          this.errorCorrectLevel = errorCorrectLevel;
          this.modules = null; //二维矩阵，存放最终结果
          this.moduleCount = 0; //矩阵大小
          this.dataCache = null; //数据缓存
          this.rsBlocks = null; //版本数据信息
          this.totalDataCount = -1; //可使用的数据量
          this.data = data;
          this.utf8bytes = getUTF8Bytes(data);
          this.make();
        }

        QRCodeAlg.prototype = {
          constructor: QRCodeAlg,
          /**
           * 获取二维码矩阵大小
           * @return {num} 矩阵大小
           */
          getModuleCount: function() {
            return this.moduleCount;
          },
          /**
           * 编码
           */
          make: function() {
            this.getRightType();
            this.dataCache = this.createData();
            this.createQrcode();
          },
          /**
           * 设置二位矩阵功能图形
           * @param  {bool} test 表示是否在寻找最好掩膜阶段
           * @param  {num} maskPattern 掩膜的版本
           */
          makeImpl: function(maskPattern) {

            this.moduleCount = this.typeNumber * 4 + 17;
            this.modules = new Array(this.moduleCount);

            for (var row = 0; row < this.moduleCount; row++) {

              this.modules[row] = new Array(this.moduleCount);

            }
            this.setupPositionProbePattern(0, 0);
            this.setupPositionProbePattern(this.moduleCount - 7, 0);
            this.setupPositionProbePattern(0, this.moduleCount - 7);
            this.setupPositionAdjustPattern();
            this.setupTimingPattern();
            this.setupTypeInfo(true, maskPattern);

            if (this.typeNumber >= 7) {
              this.setupTypeNumber(true);
            }
            this.mapData(this.dataCache, maskPattern);
          },
          /**
           * 设置二维码的位置探测图形
           * @param  {num} row 探测图形的中心横坐标
           * @param  {num} col 探测图形的中心纵坐标
           */
          setupPositionProbePattern: function(row, col) {

            for (var r = -1; r <= 7; r++) {

              if (row + r <= -1 || this.moduleCount <= row + r) continue;

              for (var c = -1; c <= 7; c++) {

                if (col + c <= -1 || this.moduleCount <= col + c) continue;

                if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c &&
                  c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <=
                  c && c <= 4)) {
                  this.modules[row + r][col + c] = true;
                } else {
                  this.modules[row + r][col + c] = false;
                }
              }
            }
          },
          /**
           * 创建二维码
           * @return {[type]} [description]
           */
          createQrcode: function() {

            var minLostPoint = 0;
            var pattern = 0;
            var bestModules = null;

            for (var i = 0; i < 8; i++) {

              this.makeImpl(i);

              var lostPoint = QRUtil.getLostPoint(this);
              if (i == 0 || minLostPoint > lostPoint) {
                minLostPoint = lostPoint;
                pattern = i;
                bestModules = this.modules;
              }
            }
            this.modules = bestModules;
            this.setupTypeInfo(false, pattern);

            if (this.typeNumber >= 7) {
              this.setupTypeNumber(false);
            }

          },
          /**
           * 设置定位图形
           * @return {[type]} [description]
           */
          setupTimingPattern: function() {

            for (var r = 8; r < this.moduleCount - 8; r++) {
              if (this.modules[r][6] != null) {
                continue;
              }
              this.modules[r][6] = (r % 2 == 0);

              if (this.modules[6][r] != null) {
                continue;
              }
              this.modules[6][r] = (r % 2 == 0);
            }
          },
          /**
           * 设置矫正图形
           * @return {[type]} [description]
           */
          setupPositionAdjustPattern: function() {

            var pos = QRUtil.getPatternPosition(this.typeNumber);

            for (var i = 0; i < pos.length; i++) {

              for (var j = 0; j < pos.length; j++) {

                var row = pos[i];
                var col = pos[j];

                if (this.modules[row][col] != null) {
                  continue;
                }

                for (var r = -2; r <= 2; r++) {

                  for (var c = -2; c <= 2; c++) {

                    if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 &&
                      c == 0)) {
                      this.modules[row + r][col + c] = true;
                    } else {
                      this.modules[row + r][col + c] = false;
                    }
                  }
                }
              }
            }
          },
          /**
           * 设置版本信息（7以上版本才有）
           * @param  {bool} test 是否处于判断最佳掩膜阶段
           * @return {[type]}      [description]
           */
          setupTypeNumber: function(test) {

            var bits = QRUtil.getBCHTypeNumber(this.typeNumber);

            for (var i = 0; i < 18; i++) {
              var mod = (!test && ((bits >> i) & 1) == 1);
              this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 -
                3
              ] = mod;
              this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i /
                3)] = mod;
            }
          },
          /**
           * 设置格式信息（纠错等级和掩膜版本）
           * @param  {bool} test
           * @param  {num} maskPattern 掩膜版本
           * @return {}
           */
          setupTypeInfo: function(test, maskPattern) {

            var data = (QRErrorCorrectLevel[this.errorCorrectLevel] << 3) |
              maskPattern;
            var bits = QRUtil.getBCHTypeInfo(data);

            // vertical
            for (var i = 0; i < 15; i++) {

              var mod = (!test && ((bits >> i) & 1) == 1);

              if (i < 6) {
                this.modules[i][8] = mod;
              } else if (i < 8) {
                this.modules[i + 1][8] = mod;
              } else {
                this.modules[this.moduleCount - 15 + i][8] = mod;
              }

              // horizontal
              var mod = (!test && ((bits >> i) & 1) == 1);

              if (i < 8) {
                this.modules[8][this.moduleCount - i - 1] = mod;
              } else if (i < 9) {
                this.modules[8][15 - i - 1 + 1] = mod;
              } else {
                this.modules[8][15 - i - 1] = mod;
              }
            }

            // fixed module
            this.modules[this.moduleCount - 8][8] = (!test);

          },
          /**
           * 数据编码
           * @return {[type]} [description]
           */
          createData: function() {
            var buffer = new QRBitBuffer();
            var lengthBits = this.typeNumber > 9 ? 16 : 8;
            buffer.put(4, 4); //添加模式
            buffer.put(this.utf8bytes.length, lengthBits);
            for (var i = 0, l = this.utf8bytes.length; i < l; i++) {
              buffer.put(this.utf8bytes[i], 8);
            }
            if (buffer.length + 4 <= this.totalDataCount * 8) {
              buffer.put(0, 4);
            }

            // padding
            while (buffer.length % 8 != 0) {
              buffer.putBit(false);
            }

            // padding
            while (true) {

              if (buffer.length >= this.totalDataCount * 8) {
                break;
              }
              buffer.put(QRCodeAlg.PAD0, 8);

              if (buffer.length >= this.totalDataCount * 8) {
                break;
              }
              buffer.put(QRCodeAlg.PAD1, 8);
            }
            return this.createBytes(buffer);
          },
          /**
           * 纠错码编码
           * @param  {buffer} buffer 数据编码
           * @return {[type]}
           */
          createBytes: function(buffer) {

            var offset = 0;

            var maxDcCount = 0;
            var maxEcCount = 0;

            var length = this.rsBlock.length / 3;

            var rsBlocks = new Array();

            for (var i = 0; i < length; i++) {

              var count = this.rsBlock[i * 3 + 0];
              var totalCount = this.rsBlock[i * 3 + 1];
              var dataCount = this.rsBlock[i * 3 + 2];

              for (var j = 0; j < count; j++) {
                rsBlocks.push([dataCount, totalCount]);
              }
            }

            var dcdata = new Array(rsBlocks.length);
            var ecdata = new Array(rsBlocks.length);

            for (var r = 0; r < rsBlocks.length; r++) {

              var dcCount = rsBlocks[r][0];
              var ecCount = rsBlocks[r][1] - dcCount;

              maxDcCount = Math.max(maxDcCount, dcCount);
              maxEcCount = Math.max(maxEcCount, ecCount);

              dcdata[r] = new Array(dcCount);

              for (var i = 0; i < dcdata[r].length; i++) {
                dcdata[r][i] = 0xff & buffer.buffer[i + offset];
              }
              offset += dcCount;

              var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
              var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() -
                1);

              var modPoly = rawPoly.mod(rsPoly);
              ecdata[r] = new Array(rsPoly.getLength() - 1);
              for (var i = 0; i < ecdata[r].length; i++) {
                var modIndex = i + modPoly.getLength() - ecdata[r].length;
                ecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;
              }
            }

            var data = new Array(this.totalDataCount);
            var index = 0;

            for (var i = 0; i < maxDcCount; i++) {
              for (var r = 0; r < rsBlocks.length; r++) {
                if (i < dcdata[r].length) {
                  data[index++] = dcdata[r][i];
                }
              }
            }

            for (var i = 0; i < maxEcCount; i++) {
              for (var r = 0; r < rsBlocks.length; r++) {
                if (i < ecdata[r].length) {
                  data[index++] = ecdata[r][i];
                }
              }
            }

            return data;

          },
          /**
           * 布置模块，构建最终信息
           * @param  {} data
           * @param  {} maskPattern
           * @return {}
           */
          mapData: function(data, maskPattern) {

            var inc = -1;
            var row = this.moduleCount - 1;
            var bitIndex = 7;
            var byteIndex = 0;

            for (var col = this.moduleCount - 1; col > 0; col -= 2) {

              if (col == 6) col--;

              while (true) {

                for (var c = 0; c < 2; c++) {

                  if (this.modules[row][col - c] == null) {

                    var dark = false;

                    if (byteIndex < data.length) {
                      dark = (((data[byteIndex] >>> bitIndex) & 1) == 1);
                    }

                    var mask = QRUtil.getMask(maskPattern, row, col - c);

                    if (mask) {
                      dark = !dark;
                    }

                    this.modules[row][col - c] = dark;
                    bitIndex--;

                    if (bitIndex == -1) {
                      byteIndex++;
                      bitIndex = 7;
                    }
                  }
                }

                row += inc;

                if (row < 0 || this.moduleCount <= row) {
                  row -= inc;
                  inc = -inc;
                  break;
                }
              }
            }
          }

        };
        /**
         * 填充字段
         */
        QRCodeAlg.PAD0 = 0xEC;
        QRCodeAlg.PAD1 = 0x11;


        //---------------------------------------------------------------------
        // 纠错等级对应的编码
        //---------------------------------------------------------------------

        var QRErrorCorrectLevel = [1, 0, 3, 2];

        //---------------------------------------------------------------------
        // 掩膜版本
        //---------------------------------------------------------------------

        var QRMaskPattern = {
          PATTERN000: 0,
          PATTERN001: 1,
          PATTERN010: 2,
          PATTERN011: 3,
          PATTERN100: 4,
          PATTERN101: 5,
          PATTERN110: 6,
          PATTERN111: 7
        };

        //---------------------------------------------------------------------
        // 工具类
        //---------------------------------------------------------------------

        var QRUtil = {

          /*
   每个版本矫正图形的位置
   */
          PATTERN_POSITION_TABLE: [
            [],
            [6, 18],
            [6, 22],
            [6, 26],
            [6, 30],
            [6, 34],
            [6, 22, 38],
            [6, 24, 42],
            [6, 26, 46],
            [6, 28, 50],
            [6, 30, 54],
            [6, 32, 58],
            [6, 34, 62],
            [6, 26, 46, 66],
            [6, 26, 48, 70],
            [6, 26, 50, 74],
            [6, 30, 54, 78],
            [6, 30, 56, 82],
            [6, 30, 58, 86],
            [6, 34, 62, 90],
            [6, 28, 50, 72, 94],
            [6, 26, 50, 74, 98],
            [6, 30, 54, 78, 102],
            [6, 28, 54, 80, 106],
            [6, 32, 58, 84, 110],
            [6, 30, 58, 86, 114],
            [6, 34, 62, 90, 118],
            [6, 26, 50, 74, 98, 122],
            [6, 30, 54, 78, 102, 126],
            [6, 26, 52, 78, 104, 130],
            [6, 30, 56, 82, 108, 134],
            [6, 34, 60, 86, 112, 138],
            [6, 30, 58, 86, 114, 142],
            [6, 34, 62, 90, 118, 146],
            [6, 30, 54, 78, 102, 126, 150],
            [6, 24, 50, 76, 102, 128, 154],
            [6, 28, 54, 80, 106, 132, 158],
            [6, 32, 58, 84, 110, 136, 162],
            [6, 26, 54, 82, 110, 138, 166],
            [6, 30, 58, 86, 114, 142, 170]
          ],

          G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 <<
            1) | (1 << 0),
          G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) |
            (1 << 5) | (1 << 2) | (1 << 0),
          G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 <<
            1),

          /*
   BCH编码格式信息
   */
          getBCHTypeInfo: function(data) {
            var d = data << 10;
            while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >=
              0) {
              d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(
                QRUtil.G15)));
            }
            return ((data << 10) | d) ^ QRUtil.G15_MASK;
          },
          /*
   BCH编码版本信息
   */
          getBCHTypeNumber: function(data) {
            var d = data << 12;
            while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >=
              0) {
              d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(
                QRUtil.G18)));
            }
            return (data << 12) | d;
          },
          /*
   获取BCH位信息
   */
          getBCHDigit: function(data) {

            var digit = 0;

            while (data != 0) {
              digit++;
              data >>>= 1;
            }

            return digit;
          },
          /*
   获取版本对应的矫正图形位置
   */
          getPatternPosition: function(typeNumber) {
            return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];
          },
          /*
   掩膜算法
   */
          getMask: function(maskPattern, i, j) {

            switch (maskPattern) {

              case QRMaskPattern.PATTERN000:
                return (i + j) % 2 == 0;
              case QRMaskPattern.PATTERN001:
                return i % 2 == 0;
              case QRMaskPattern.PATTERN010:
                return j % 3 == 0;
              case QRMaskPattern.PATTERN011:
                return (i + j) % 3 == 0;
              case QRMaskPattern.PATTERN100:
                return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;
              case QRMaskPattern.PATTERN101:
                return (i * j) % 2 + (i * j) % 3 == 0;
              case QRMaskPattern.PATTERN110:
                return ((i * j) % 2 + (i * j) % 3) % 2 == 0;
              case QRMaskPattern.PATTERN111:
                return ((i * j) % 3 + (i + j) % 2) % 2 == 0;

              default:
                throw new Error("bad maskPattern:" + maskPattern);
            }
          },
          /*
   获取RS的纠错多项式
   */
          getErrorCorrectPolynomial: function(errorCorrectLength) {

            var a = new QRPolynomial([1], 0);

            for (var i = 0; i < errorCorrectLength; i++) {
              a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));
            }

            return a;
          },
          /*
   获取评价
   */
          getLostPoint: function(qrCode) {

            var moduleCount = qrCode.getModuleCount(),
              lostPoint = 0,
              darkCount = 0;

            for (var row = 0; row < moduleCount; row++) {

              var sameCount = 0;
              var head = qrCode.modules[row][0];

              for (var col = 0; col < moduleCount; col++) {

                var current = qrCode.modules[row][col];

                //level 3 评价
                if (col < moduleCount - 6) {
                  if (current && !qrCode.modules[row][col + 1] && qrCode.modules[
                      row][col + 2] && qrCode.modules[row][col + 3] &&
                    qrCode.modules[row][col + 4] && !qrCode.modules[row][
                      col + 5
                    ] && qrCode.modules[row][col + 6]) {
                    if (col < moduleCount - 10) {
                      if (qrCode.modules[row][col + 7] && qrCode.modules[
                          row][col + 8] && qrCode.modules[row][col + 9] &&
                        qrCode.modules[row][col + 10]) {
                        lostPoint += 40;
                      }
                    } else if (col > 3) {
                      if (qrCode.modules[row][col - 1] && qrCode.modules[
                          row][col - 2] && qrCode.modules[row][col - 3] &&
                        qrCode.modules[row][col - 4]) {
                        lostPoint += 40;
                      }
                    }

                  }
                }

                //level 2 评价
                if ((row < moduleCount - 1) && (col < moduleCount - 1)) {
                  var count = 0;
                  if (current) count++;
                  if (qrCode.modules[row + 1][col]) count++;
                  if (qrCode.modules[row][col + 1]) count++;
                  if (qrCode.modules[row + 1][col + 1]) count++;
                  if (count == 0 || count == 4) {
                    lostPoint += 3;
                  }
                }

                //level 1 评价
                if (head ^ current) {
                  sameCount++;
                } else {
                  head = current;
                  if (sameCount >= 5) {
                    lostPoint += (3 + sameCount - 5);
                  }
                  sameCount = 1;
                }

                //level 4 评价
                if (current) {
                  darkCount++;
                }

              }
            }

            for (var col = 0; col < moduleCount; col++) {

              var sameCount = 0;
              var head = qrCode.modules[0][col];

              for (var row = 0; row < moduleCount; row++) {

                var current = qrCode.modules[row][col];

                //level 3 评价
                if (row < moduleCount - 6) {
                  if (current && !qrCode.modules[row + 1][col] && qrCode.modules[
                      row + 2][col] && qrCode.modules[row + 3][col] &&
                    qrCode.modules[row + 4][col] && !qrCode.modules[row +
                      5][col] && qrCode.modules[row + 6][col]) {
                    if (row < moduleCount - 10) {
                      if (qrCode.modules[row + 7][col] && qrCode.modules[
                          row + 8][col] && qrCode.modules[row + 9][col] &&
                        qrCode.modules[row + 10][col]) {
                        lostPoint += 40;
                      }
                    } else if (row > 3) {
                      if (qrCode.modules[row - 1][col] && qrCode.modules[
                          row - 2][col] && qrCode.modules[row - 3][col] &&
                        qrCode.modules[row - 4][col]) {
                        lostPoint += 40;
                      }
                    }
                  }
                }

                //level 1 评价
                if (head ^ current) {
                  sameCount++;
                } else {
                  head = current;
                  if (sameCount >= 5) {
                    lostPoint += (3 + sameCount - 5);
                  }
                  sameCount = 1;
                }

              }
            }

            // LEVEL4

            var ratio = Math.abs(100 * darkCount / moduleCount /
              moduleCount - 50) / 5;
            lostPoint += ratio * 10;

            return lostPoint;
          }

        };


        //---------------------------------------------------------------------
        // QRMath使用的数学工具
        //---------------------------------------------------------------------

        var QRMath = {
          /*
   将n转化为a^m
   */
          glog: function(n) {

            if (n < 1) {
              throw new Error("glog(" + n + ")");
            }

            return QRMath.LOG_TABLE[n];
          },
          /*
   将a^m转化为n
   */
          gexp: function(n) {

            while (n < 0) {
              n += 255;
            }

            while (n >= 256) {
              n -= 255;
            }

            return QRMath.EXP_TABLE[n];
          },

          EXP_TABLE: new Array(256),

          LOG_TABLE: new Array(256)

        };

        for (var i = 0; i < 8; i++) {
          QRMath.EXP_TABLE[i] = 1 << i;
        }
        for (var i = 8; i < 256; i++) {
          QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[
            i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];
        }
        for (var i = 0; i < 255; i++) {
          QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;
        }

        //---------------------------------------------------------------------
        // QRPolynomial 多项式
        //---------------------------------------------------------------------
        /**
         * 多项式类
         * @param {Array} num   系数
         * @param {num} shift a^shift
         */
        function QRPolynomial(num, shift) {

          if (num.length == undefined) {
            throw new Error(num.length + "/" + shift);
          }

          var offset = 0;

          while (offset < num.length && num[offset] == 0) {
            offset++;
          }

          this.num = new Array(num.length - offset + shift);
          for (var i = 0; i < num.length - offset; i++) {
            this.num[i] = num[i + offset];
          }
        }

        QRPolynomial.prototype = {

          get: function(index) {
            return this.num[index];
          },

          getLength: function() {
            return this.num.length;
          },
          /**
           * 多项式乘法
           * @param  {QRPolynomial} e 被乘多项式
           * @return {[type]}   [description]
           */
          multiply: function(e) {

            var num = new Array(this.getLength() + e.getLength() - 1);

            for (var i = 0; i < this.getLength(); i++) {
              for (var j = 0; j < e.getLength(); j++) {
                num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath
                  .glog(e.get(j)));
              }
            }

            return new QRPolynomial(num, 0);
          },
          /**
           * 多项式模运算
           * @param  {QRPolynomial} e 模多项式
           * @return {}
           */
          mod: function(e) {
            var tl = this.getLength(),
              el = e.getLength();
            if (tl - el < 0) {
              return this;
            }
            var num = new Array(tl);
            for (var i = 0; i < tl; i++) {
              num[i] = this.get(i);
            }
            while (num.length >= el) {
              var ratio = QRMath.glog(num[0]) - QRMath.glog(e.get(0));

              for (var i = 0; i < e.getLength(); i++) {
                num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);
              }
              while (num[0] == 0) {
                num.shift();
              }
            }
            return new QRPolynomial(num, 0);
          }
        };

        //---------------------------------------------------------------------
        // RS_BLOCK_TABLE
        //---------------------------------------------------------------------
        /*
 二维码各个版本信息[块数, 每块中的数据块数, 每块中的信息块数]
 */
        var RS_BLOCK_TABLE = [

          // L
          // M
          // Q
          // H

          // 1
          [1, 26, 19],
          [1, 26, 16],
          [1, 26, 13],
          [1, 26, 9],

          // 2
          [1, 44, 34],
          [1, 44, 28],
          [1, 44, 22],
          [1, 44, 16],

          // 3
          [1, 70, 55],
          [1, 70, 44],
          [2, 35, 17],
          [2, 35, 13],

          // 4
          [1, 100, 80],
          [2, 50, 32],
          [2, 50, 24],
          [4, 25, 9],

          // 5
          [1, 134, 108],
          [2, 67, 43],
          [2, 33, 15, 2, 34, 16],
          [2, 33, 11, 2, 34, 12],

          // 6
          [2, 86, 68],
          [4, 43, 27],
          [4, 43, 19],
          [4, 43, 15],

          // 7
          [2, 98, 78],
          [4, 49, 31],
          [2, 32, 14, 4, 33, 15],
          [4, 39, 13, 1, 40, 14],

          // 8
          [2, 121, 97],
          [2, 60, 38, 2, 61, 39],
          [4, 40, 18, 2, 41, 19],
          [4, 40, 14, 2, 41, 15],

          // 9
          [2, 146, 116],
          [3, 58, 36, 2, 59, 37],
          [4, 36, 16, 4, 37, 17],
          [4, 36, 12, 4, 37, 13],

          // 10
          [2, 86, 68, 2, 87, 69],
          [4, 69, 43, 1, 70, 44],
          [6, 43, 19, 2, 44, 20],
          [6, 43, 15, 2, 44, 16],

          // 11
          [4, 101, 81],
          [1, 80, 50, 4, 81, 51],
          [4, 50, 22, 4, 51, 23],
          [3, 36, 12, 8, 37, 13],

          // 12
          [2, 116, 92, 2, 117, 93],
          [6, 58, 36, 2, 59, 37],
          [4, 46, 20, 6, 47, 21],
          [7, 42, 14, 4, 43, 15],

          // 13
          [4, 133, 107],
          [8, 59, 37, 1, 60, 38],
          [8, 44, 20, 4, 45, 21],
          [12, 33, 11, 4, 34, 12],

          // 14
          [3, 145, 115, 1, 146, 116],
          [4, 64, 40, 5, 65, 41],
          [11, 36, 16, 5, 37, 17],
          [11, 36, 12, 5, 37, 13],

          // 15
          [5, 109, 87, 1, 110, 88],
          [5, 65, 41, 5, 66, 42],
          [5, 54, 24, 7, 55, 25],
          [11, 36, 12],

          // 16
          [5, 122, 98, 1, 123, 99],
          [7, 73, 45, 3, 74, 46],
          [15, 43, 19, 2, 44, 20],
          [3, 45, 15, 13, 46, 16],

          // 17
          [1, 135, 107, 5, 136, 108],
          [10, 74, 46, 1, 75, 47],
          [1, 50, 22, 15, 51, 23],
          [2, 42, 14, 17, 43, 15],

          // 18
          [5, 150, 120, 1, 151, 121],
          [9, 69, 43, 4, 70, 44],
          [17, 50, 22, 1, 51, 23],
          [2, 42, 14, 19, 43, 15],

          // 19
          [3, 141, 113, 4, 142, 114],
          [3, 70, 44, 11, 71, 45],
          [17, 47, 21, 4, 48, 22],
          [9, 39, 13, 16, 40, 14],

          // 20
          [3, 135, 107, 5, 136, 108],
          [3, 67, 41, 13, 68, 42],
          [15, 54, 24, 5, 55, 25],
          [15, 43, 15, 10, 44, 16],

          // 21
          [4, 144, 116, 4, 145, 117],
          [17, 68, 42],
          [17, 50, 22, 6, 51, 23],
          [19, 46, 16, 6, 47, 17],

          // 22
          [2, 139, 111, 7, 140, 112],
          [17, 74, 46],
          [7, 54, 24, 16, 55, 25],
          [34, 37, 13],

          // 23
          [4, 151, 121, 5, 152, 122],
          [4, 75, 47, 14, 76, 48],
          [11, 54, 24, 14, 55, 25],
          [16, 45, 15, 14, 46, 16],

          // 24
          [6, 147, 117, 4, 148, 118],
          [6, 73, 45, 14, 74, 46],
          [11, 54, 24, 16, 55, 25],
          [30, 46, 16, 2, 47, 17],

          // 25
          [8, 132, 106, 4, 133, 107],
          [8, 75, 47, 13, 76, 48],
          [7, 54, 24, 22, 55, 25],
          [22, 45, 15, 13, 46, 16],

          // 26
          [10, 142, 114, 2, 143, 115],
          [19, 74, 46, 4, 75, 47],
          [28, 50, 22, 6, 51, 23],
          [33, 46, 16, 4, 47, 17],

          // 27
          [8, 152, 122, 4, 153, 123],
          [22, 73, 45, 3, 74, 46],
          [8, 53, 23, 26, 54, 24],
          [12, 45, 15, 28, 46, 16],

          // 28
          [3, 147, 117, 10, 148, 118],
          [3, 73, 45, 23, 74, 46],
          [4, 54, 24, 31, 55, 25],
          [11, 45, 15, 31, 46, 16],

          // 29
          [7, 146, 116, 7, 147, 117],
          [21, 73, 45, 7, 74, 46],
          [1, 53, 23, 37, 54, 24],
          [19, 45, 15, 26, 46, 16],

          // 30
          [5, 145, 115, 10, 146, 116],
          [19, 75, 47, 10, 76, 48],
          [15, 54, 24, 25, 55, 25],
          [23, 45, 15, 25, 46, 16],

          // 31
          [13, 145, 115, 3, 146, 116],
          [2, 74, 46, 29, 75, 47],
          [42, 54, 24, 1, 55, 25],
          [23, 45, 15, 28, 46, 16],

          // 32
          [17, 145, 115],
          [10, 74, 46, 23, 75, 47],
          [10, 54, 24, 35, 55, 25],
          [19, 45, 15, 35, 46, 16],

          // 33
          [17, 145, 115, 1, 146, 116],
          [14, 74, 46, 21, 75, 47],
          [29, 54, 24, 19, 55, 25],
          [11, 45, 15, 46, 46, 16],

          // 34
          [13, 145, 115, 6, 146, 116],
          [14, 74, 46, 23, 75, 47],
          [44, 54, 24, 7, 55, 25],
          [59, 46, 16, 1, 47, 17],

          // 35
          [12, 151, 121, 7, 152, 122],
          [12, 75, 47, 26, 76, 48],
          [39, 54, 24, 14, 55, 25],
          [22, 45, 15, 41, 46, 16],

          // 36
          [6, 151, 121, 14, 152, 122],
          [6, 75, 47, 34, 76, 48],
          [46, 54, 24, 10, 55, 25],
          [2, 45, 15, 64, 46, 16],

          // 37
          [17, 152, 122, 4, 153, 123],
          [29, 74, 46, 14, 75, 47],
          [49, 54, 24, 10, 55, 25],
          [24, 45, 15, 46, 46, 16],

          // 38
          [4, 152, 122, 18, 153, 123],
          [13, 74, 46, 32, 75, 47],
          [48, 54, 24, 14, 55, 25],
          [42, 45, 15, 32, 46, 16],

          // 39
          [20, 147, 117, 4, 148, 118],
          [40, 75, 47, 7, 76, 48],
          [43, 54, 24, 22, 55, 25],
          [10, 45, 15, 67, 46, 16],

          // 40
          [19, 148, 118, 6, 149, 119],
          [18, 75, 47, 31, 76, 48],
          [34, 54, 24, 34, 55, 25],
          [20, 45, 15, 61, 46, 16]
        ];

        /**
         * 根据数据获取对应版本
         * @return {[type]} [description]
         */
        QRCodeAlg.prototype.getRightType = function() {
          for (var typeNumber = 1; typeNumber < 41; typeNumber++) {
            var rsBlock = RS_BLOCK_TABLE[(typeNumber - 1) * 4 + this.errorCorrectLevel];
            if (rsBlock == undefined) {
              throw new Error("bad rs block @ typeNumber:" + typeNumber +
                "/errorCorrectLevel:" + this.errorCorrectLevel);
            }
            var length = rsBlock.length / 3;
            var totalDataCount = 0;
            for (var i = 0; i < length; i++) {
              var count = rsBlock[i * 3 + 0];
              var dataCount = rsBlock[i * 3 + 2];
              totalDataCount += dataCount * count;
            }

            var lengthBytes = typeNumber > 9 ? 2 : 1;
            if (this.utf8bytes.length + lengthBytes < totalDataCount ||
              typeNumber == 40) {
              this.typeNumber = typeNumber;
              this.rsBlock = rsBlock;
              this.totalDataCount = totalDataCount;
              break;
            }
          }
        };

        //---------------------------------------------------------------------
        // QRBitBuffer
        //---------------------------------------------------------------------

        function QRBitBuffer() {
          this.buffer = new Array();
          this.length = 0;
        }

        QRBitBuffer.prototype = {

          get: function(index) {
            var bufIndex = Math.floor(index / 8);
            return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1);
          },

          put: function(num, length) {
            for (var i = 0; i < length; i++) {
              this.putBit(((num >>> (length - i - 1)) & 1));
            }
          },

          putBit: function(bit) {

            var bufIndex = Math.floor(this.length / 8);
            if (this.buffer.length <= bufIndex) {
              this.buffer.push(0);
            }

            if (bit) {
              this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));
            }

            this.length++;
          }
        };
        /**
         * 获取单个字符的utf8编码
         * unicode BMP平面约65535个字符
         * @param {num} code
         * return {array}
         */
        function unicodeFormat8(code) {
          // 1 byte
          if (code < 128) {
            return [code];
            // 2 bytes
          } else if (code < 2048) {
            c0 = 192 + (code >> 6);
            c1 = 128 + (code & 63);
            return [c0, c1];
            // 3 bytes
          } else {
            c0 = 224 + (code >> 12);
            c1 = 128 + (code >> 6 & 63);
            c2 = 128 + (code & 63);
            return [c0, c1, c2];
          }
        }

        /**
         * 获取字符串的utf8编码字节串
         * @param {string} string
         * @return {array}
         */
        function getUTF8Bytes(string) {
          var utf8codes = [];
          for (var i = 0; i < string.length; i++) {
            var code = string.charCodeAt(i);
            var utf8 = unicodeFormat8(code);
            for (var j = 0; j < utf8.length; j++) {
              utf8codes.push(utf8[j]);
            }
          }
          return utf8codes;
        }

        /**
         * 二维码算法实现
         * @param {string} data              要编码的信息字符串
         * @param {num} errorCorrectLevel 纠错等级
         */
        function QRCodeAlg(data, errorCorrectLevel) {
          this.typeNumber = -1; //版本
          this.errorCorrectLevel = errorCorrectLevel;
          this.modules = null; //二维矩阵，存放最终结果
          this.moduleCount = 0; //矩阵大小
          this.dataCache = null; //数据缓存
          this.rsBlocks = null; //版本数据信息
          this.totalDataCount = -1; //可使用的数据量
          this.data = data;
          this.utf8bytes = getUTF8Bytes(data);
          this.make();
        }

        QRCodeAlg.prototype = {
          constructor: QRCodeAlg,
          /**
           * 获取二维码矩阵大小
           * @return {num} 矩阵大小
           */
          getModuleCount: function() {
            return this.moduleCount;
          },
          /**
           * 编码
           */
          make: function() {
            this.getRightType();
            this.dataCache = this.createData();
            this.createQrcode();
          },
          /**
           * 设置二位矩阵功能图形
           * @param  {bool} test 表示是否在寻找最好掩膜阶段
           * @param  {num} maskPattern 掩膜的版本
           */
          makeImpl: function(maskPattern) {

            this.moduleCount = this.typeNumber * 4 + 17;
            this.modules = new Array(this.moduleCount);

            for (var row = 0; row < this.moduleCount; row++) {

              this.modules[row] = new Array(this.moduleCount);

            }
            this.setupPositionProbePattern(0, 0);
            this.setupPositionProbePattern(this.moduleCount - 7, 0);
            this.setupPositionProbePattern(0, this.moduleCount - 7);
            this.setupPositionAdjustPattern();
            this.setupTimingPattern();
            this.setupTypeInfo(true, maskPattern);

            if (this.typeNumber >= 7) {
              this.setupTypeNumber(true);
            }
            this.mapData(this.dataCache, maskPattern);
          },
          /**
           * 设置二维码的位置探测图形
           * @param  {num} row 探测图形的中心横坐标
           * @param  {num} col 探测图形的中心纵坐标
           */
          setupPositionProbePattern: function(row, col) {

            for (var r = -1; r <= 7; r++) {

              if (row + r <= -1 || this.moduleCount <= row + r) continue;

              for (var c = -1; c <= 7; c++) {

                if (col + c <= -1 || this.moduleCount <= col + c) continue;

                if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c &&
                  c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <=
                  c && c <= 4)) {
                  this.modules[row + r][col + c] = true;
                } else {
                  this.modules[row + r][col + c] = false;
                }
              }
            }
          },
          /**
           * 创建二维码
           * @return {[type]} [description]
           */
          createQrcode: function() {

            var minLostPoint = 0;
            var pattern = 0;
            var bestModules = null;

            for (var i = 0; i < 8; i++) {

              this.makeImpl(i);

              var lostPoint = QRUtil.getLostPoint(this);
              if (i == 0 || minLostPoint > lostPoint) {
                minLostPoint = lostPoint;
                pattern = i;
                bestModules = this.modules;
              }
            }
            this.modules = bestModules;
            this.setupTypeInfo(false, pattern);

            if (this.typeNumber >= 7) {
              this.setupTypeNumber(false);
            }

          },
          /**
           * 设置定位图形
           * @return {[type]} [description]
           */
          setupTimingPattern: function() {

            for (var r = 8; r < this.moduleCount - 8; r++) {
              if (this.modules[r][6] != null) {
                continue;
              }
              this.modules[r][6] = (r % 2 == 0);

              if (this.modules[6][r] != null) {
                continue;
              }
              this.modules[6][r] = (r % 2 == 0);
            }
          },
          /**
           * 设置矫正图形
           * @return {[type]} [description]
           */
          setupPositionAdjustPattern: function() {

            var pos = QRUtil.getPatternPosition(this.typeNumber);

            for (var i = 0; i < pos.length; i++) {

              for (var j = 0; j < pos.length; j++) {

                var row = pos[i];
                var col = pos[j];

                if (this.modules[row][col] != null) {
                  continue;
                }

                for (var r = -2; r <= 2; r++) {

                  for (var c = -2; c <= 2; c++) {

                    if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 &&
                      c == 0)) {
                      this.modules[row + r][col + c] = true;
                    } else {
                      this.modules[row + r][col + c] = false;
                    }
                  }
                }
              }
            }
          },
          /**
           * 设置版本信息（7以上版本才有）
           * @param  {bool} test 是否处于判断最佳掩膜阶段
           * @return {[type]}      [description]
           */
          setupTypeNumber: function(test) {

            var bits = QRUtil.getBCHTypeNumber(this.typeNumber);

            for (var i = 0; i < 18; i++) {
              var mod = (!test && ((bits >> i) & 1) == 1);
              this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 -
                3
              ] = mod;
              this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i /
                3)] = mod;
            }
          },
          /**
           * 设置格式信息（纠错等级和掩膜版本）
           * @param  {bool} test
           * @param  {num} maskPattern 掩膜版本
           * @return {}
           */
          setupTypeInfo: function(test, maskPattern) {

            var data = (QRErrorCorrectLevel[this.errorCorrectLevel] << 3) |
              maskPattern;
            var bits = QRUtil.getBCHTypeInfo(data);

            // vertical
            for (var i = 0; i < 15; i++) {

              var mod = (!test && ((bits >> i) & 1) == 1);

              if (i < 6) {
                this.modules[i][8] = mod;
              } else if (i < 8) {
                this.modules[i + 1][8] = mod;
              } else {
                this.modules[this.moduleCount - 15 + i][8] = mod;
              }

              // horizontal
              var mod = (!test && ((bits >> i) & 1) == 1);

              if (i < 8) {
                this.modules[8][this.moduleCount - i - 1] = mod;
              } else if (i < 9) {
                this.modules[8][15 - i - 1 + 1] = mod;
              } else {
                this.modules[8][15 - i - 1] = mod;
              }
            }

            // fixed module
            this.modules[this.moduleCount - 8][8] = (!test);

          },
          /**
           * 数据编码
           * @return {[type]} [description]
           */
          createData: function() {
            var buffer = new QRBitBuffer();
            var lengthBits = this.typeNumber > 9 ? 16 : 8;
            buffer.put(4, 4); //添加模式
            buffer.put(this.utf8bytes.length, lengthBits);
            for (var i = 0, l = this.utf8bytes.length; i < l; i++) {
              buffer.put(this.utf8bytes[i], 8);
            }
            if (buffer.length + 4 <= this.totalDataCount * 8) {
              buffer.put(0, 4);
            }

            // padding
            while (buffer.length % 8 != 0) {
              buffer.putBit(false);
            }

            // padding
            while (true) {

              if (buffer.length >= this.totalDataCount * 8) {
                break;
              }
              buffer.put(QRCodeAlg.PAD0, 8);

              if (buffer.length >= this.totalDataCount * 8) {
                break;
              }
              buffer.put(QRCodeAlg.PAD1, 8);
            }
            return this.createBytes(buffer);
          },
          /**
           * 纠错码编码
           * @param  {buffer} buffer 数据编码
           * @return {[type]}
           */
          createBytes: function(buffer) {

            var offset = 0;

            var maxDcCount = 0;
            var maxEcCount = 0;

            var length = this.rsBlock.length / 3;

            var rsBlocks = new Array();

            for (var i = 0; i < length; i++) {

              var count = this.rsBlock[i * 3 + 0];
              var totalCount = this.rsBlock[i * 3 + 1];
              var dataCount = this.rsBlock[i * 3 + 2];

              for (var j = 0; j < count; j++) {
                rsBlocks.push([dataCount, totalCount]);
              }
            }

            var dcdata = new Array(rsBlocks.length);
            var ecdata = new Array(rsBlocks.length);

            for (var r = 0; r < rsBlocks.length; r++) {

              var dcCount = rsBlocks[r][0];
              var ecCount = rsBlocks[r][1] - dcCount;

              maxDcCount = Math.max(maxDcCount, dcCount);
              maxEcCount = Math.max(maxEcCount, ecCount);

              dcdata[r] = new Array(dcCount);

              for (var i = 0; i < dcdata[r].length; i++) {
                dcdata[r][i] = 0xff & buffer.buffer[i + offset];
              }
              offset += dcCount;

              var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
              var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() -
                1);

              var modPoly = rawPoly.mod(rsPoly);
              ecdata[r] = new Array(rsPoly.getLength() - 1);
              for (var i = 0; i < ecdata[r].length; i++) {
                var modIndex = i + modPoly.getLength() - ecdata[r].length;
                ecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;
              }
            }

            var data = new Array(this.totalDataCount);
            var index = 0;

            for (var i = 0; i < maxDcCount; i++) {
              for (var r = 0; r < rsBlocks.length; r++) {
                if (i < dcdata[r].length) {
                  data[index++] = dcdata[r][i];
                }
              }
            }

            for (var i = 0; i < maxEcCount; i++) {
              for (var r = 0; r < rsBlocks.length; r++) {
                if (i < ecdata[r].length) {
                  data[index++] = ecdata[r][i];
                }
              }
            }

            return data;

          },
          /**
           * 布置模块，构建最终信息
           * @param  {} data
           * @param  {} maskPattern
           * @return {}
           */
          mapData: function(data, maskPattern) {

            var inc = -1;
            var row = this.moduleCount - 1;
            var bitIndex = 7;
            var byteIndex = 0;

            for (var col = this.moduleCount - 1; col > 0; col -= 2) {

              if (col == 6) col--;

              while (true) {

                for (var c = 0; c < 2; c++) {

                  if (this.modules[row][col - c] == null) {

                    var dark = false;

                    if (byteIndex < data.length) {
                      dark = (((data[byteIndex] >>> bitIndex) & 1) == 1);
                    }

                    var mask = QRUtil.getMask(maskPattern, row, col - c);

                    if (mask) {
                      dark = !dark;
                    }

                    this.modules[row][col - c] = dark;
                    bitIndex--;

                    if (bitIndex == -1) {
                      byteIndex++;
                      bitIndex = 7;
                    }
                  }
                }

                row += inc;

                if (row < 0 || this.moduleCount <= row) {
                  row -= inc;
                  inc = -inc;
                  break;
                }
              }
            }
          }

        };
        /**
         * 填充字段
         */
        QRCodeAlg.PAD0 = 0xEC;
        QRCodeAlg.PAD1 = 0x11;


        //---------------------------------------------------------------------
        // 纠错等级对应的编码
        //---------------------------------------------------------------------

        var QRErrorCorrectLevel = [1, 0, 3, 2];

        //---------------------------------------------------------------------
        // 掩膜版本
        //---------------------------------------------------------------------

        var QRMaskPattern = {
          PATTERN000: 0,
          PATTERN001: 1,
          PATTERN010: 2,
          PATTERN011: 3,
          PATTERN100: 4,
          PATTERN101: 5,
          PATTERN110: 6,
          PATTERN111: 7
        };

        //---------------------------------------------------------------------
        // 工具类
        //---------------------------------------------------------------------

        var QRUtil = {

          /*
   每个版本矫正图形的位置
   */
          PATTERN_POSITION_TABLE: [
            [],
            [6, 18],
            [6, 22],
            [6, 26],
            [6, 30],
            [6, 34],
            [6, 22, 38],
            [6, 24, 42],
            [6, 26, 46],
            [6, 28, 50],
            [6, 30, 54],
            [6, 32, 58],
            [6, 34, 62],
            [6, 26, 46, 66],
            [6, 26, 48, 70],
            [6, 26, 50, 74],
            [6, 30, 54, 78],
            [6, 30, 56, 82],
            [6, 30, 58, 86],
            [6, 34, 62, 90],
            [6, 28, 50, 72, 94],
            [6, 26, 50, 74, 98],
            [6, 30, 54, 78, 102],
            [6, 28, 54, 80, 106],
            [6, 32, 58, 84, 110],
            [6, 30, 58, 86, 114],
            [6, 34, 62, 90, 118],
            [6, 26, 50, 74, 98, 122],
            [6, 30, 54, 78, 102, 126],
            [6, 26, 52, 78, 104, 130],
            [6, 30, 56, 82, 108, 134],
            [6, 34, 60, 86, 112, 138],
            [6, 30, 58, 86, 114, 142],
            [6, 34, 62, 90, 118, 146],
            [6, 30, 54, 78, 102, 126, 150],
            [6, 24, 50, 76, 102, 128, 154],
            [6, 28, 54, 80, 106, 132, 158],
            [6, 32, 58, 84, 110, 136, 162],
            [6, 26, 54, 82, 110, 138, 166],
            [6, 30, 58, 86, 114, 142, 170]
          ],

          G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 <<
            1) | (1 << 0),
          G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) |
            (1 << 5) | (1 << 2) | (1 << 0),
          G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 <<
            1),

          /*
   BCH编码格式信息
   */
          getBCHTypeInfo: function(data) {
            var d = data << 10;
            while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >=
              0) {
              d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(
                QRUtil.G15)));
            }
            return ((data << 10) | d) ^ QRUtil.G15_MASK;
          },
          /*
   BCH编码版本信息
   */
          getBCHTypeNumber: function(data) {
            var d = data << 12;
            while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >=
              0) {
              d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(
                QRUtil.G18)));
            }
            return (data << 12) | d;
          },
          /*
   获取BCH位信息
   */
          getBCHDigit: function(data) {

            var digit = 0;

            while (data != 0) {
              digit++;
              data >>>= 1;
            }

            return digit;
          },
          /*
   获取版本对应的矫正图形位置
   */
          getPatternPosition: function(typeNumber) {
            return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];
          },
          /*
   掩膜算法
   */
          getMask: function(maskPattern, i, j) {

            switch (maskPattern) {

              case QRMaskPattern.PATTERN000:
                return (i + j) % 2 == 0;
              case QRMaskPattern.PATTERN001:
                return i % 2 == 0;
              case QRMaskPattern.PATTERN010:
                return j % 3 == 0;
              case QRMaskPattern.PATTERN011:
                return (i + j) % 3 == 0;
              case QRMaskPattern.PATTERN100:
                return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;
              case QRMaskPattern.PATTERN101:
                return (i * j) % 2 + (i * j) % 3 == 0;
              case QRMaskPattern.PATTERN110:
                return ((i * j) % 2 + (i * j) % 3) % 2 == 0;
              case QRMaskPattern.PATTERN111:
                return ((i * j) % 3 + (i + j) % 2) % 2 == 0;

              default:
                throw new Error("bad maskPattern:" + maskPattern);
            }
          },
          /*
   获取RS的纠错多项式
   */
          getErrorCorrectPolynomial: function(errorCorrectLength) {

            var a = new QRPolynomial([1], 0);

            for (var i = 0; i < errorCorrectLength; i++) {
              a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));
            }

            return a;
          },
          /*
   获取评价
   */
          getLostPoint: function(qrCode) {

            var moduleCount = qrCode.getModuleCount(),
              lostPoint = 0,
              darkCount = 0;

            for (var row = 0; row < moduleCount; row++) {

              var sameCount = 0;
              var head = qrCode.modules[row][0];

              for (var col = 0; col < moduleCount; col++) {

                var current = qrCode.modules[row][col];

                //level 3 评价
                if (col < moduleCount - 6) {
                  if (current && !qrCode.modules[row][col + 1] && qrCode.modules[
                      row][col + 2] && qrCode.modules[row][col + 3] &&
                    qrCode.modules[row][col + 4] && !qrCode.modules[row][
                      col + 5
                    ] && qrCode.modules[row][col + 6]) {
                    if (col < moduleCount - 10) {
                      if (qrCode.modules[row][col + 7] && qrCode.modules[
                          row][col + 8] && qrCode.modules[row][col + 9] &&
                        qrCode.modules[row][col + 10]) {
                        lostPoint += 40;
                      }
                    } else if (col > 3) {
                      if (qrCode.modules[row][col - 1] && qrCode.modules[
                          row][col - 2] && qrCode.modules[row][col - 3] &&
                        qrCode.modules[row][col - 4]) {
                        lostPoint += 40;
                      }
                    }

                  }
                }

                //level 2 评价
                if ((row < moduleCount - 1) && (col < moduleCount - 1)) {
                  var count = 0;
                  if (current) count++;
                  if (qrCode.modules[row + 1][col]) count++;
                  if (qrCode.modules[row][col + 1]) count++;
                  if (qrCode.modules[row + 1][col + 1]) count++;
                  if (count == 0 || count == 4) {
                    lostPoint += 3;
                  }
                }

                //level 1 评价
                if (head ^ current) {
                  sameCount++;
                } else {
                  head = current;
                  if (sameCount >= 5) {
                    lostPoint += (3 + sameCount - 5);
                  }
                  sameCount = 1;
                }

                //level 4 评价
                if (current) {
                  darkCount++;
                }

              }
            }

            for (var col = 0; col < moduleCount; col++) {

              var sameCount = 0;
              var head = qrCode.modules[0][col];

              for (var row = 0; row < moduleCount; row++) {

                var current = qrCode.modules[row][col];

                //level 3 评价
                if (row < moduleCount - 6) {
                  if (current && !qrCode.modules[row + 1][col] && qrCode.modules[
                      row + 2][col] && qrCode.modules[row + 3][col] &&
                    qrCode.modules[row + 4][col] && !qrCode.modules[row +
                      5][col] && qrCode.modules[row + 6][col]) {
                    if (row < moduleCount - 10) {
                      if (qrCode.modules[row + 7][col] && qrCode.modules[
                          row + 8][col] && qrCode.modules[row + 9][col] &&
                        qrCode.modules[row + 10][col]) {
                        lostPoint += 40;
                      }
                    } else if (row > 3) {
                      if (qrCode.modules[row - 1][col] && qrCode.modules[
                          row - 2][col] && qrCode.modules[row - 3][col] &&
                        qrCode.modules[row - 4][col]) {
                        lostPoint += 40;
                      }
                    }
                  }
                }

                //level 1 评价
                if (head ^ current) {
                  sameCount++;
                } else {
                  head = current;
                  if (sameCount >= 5) {
                    lostPoint += (3 + sameCount - 5);
                  }
                  sameCount = 1;
                }

              }
            }

            // LEVEL4

            var ratio = Math.abs(100 * darkCount / moduleCount /
              moduleCount - 50) / 5;
            lostPoint += ratio * 10;

            return lostPoint;
          }

        };


        //---------------------------------------------------------------------
        // QRMath使用的数学工具
        //---------------------------------------------------------------------

        var QRMath = {
          /*
   将n转化为a^m
   */
          glog: function(n) {

            if (n < 1) {
              throw new Error("glog(" + n + ")");
            }

            return QRMath.LOG_TABLE[n];
          },
          /*
   将a^m转化为n
   */
          gexp: function(n) {

            while (n < 0) {
              n += 255;
            }

            while (n >= 256) {
              n -= 255;
            }

            return QRMath.EXP_TABLE[n];
          },

          EXP_TABLE: new Array(256),

          LOG_TABLE: new Array(256)

        };

        for (var i = 0; i < 8; i++) {
          QRMath.EXP_TABLE[i] = 1 << i;
        }
        for (var i = 8; i < 256; i++) {
          QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[
            i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];
        }
        for (var i = 0; i < 255; i++) {
          QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;
        }

        //---------------------------------------------------------------------
        // QRPolynomial 多项式
        //---------------------------------------------------------------------
        /**
         * 多项式类
         * @param {Array} num   系数
         * @param {num} shift a^shift
         */
        function QRPolynomial(num, shift) {

          if (num.length == undefined) {
            throw new Error(num.length + "/" + shift);
          }

          var offset = 0;

          while (offset < num.length && num[offset] == 0) {
            offset++;
          }

          this.num = new Array(num.length - offset + shift);
          for (var i = 0; i < num.length - offset; i++) {
            this.num[i] = num[i + offset];
          }
        }

        QRPolynomial.prototype = {

          get: function(index) {
            return this.num[index];
          },

          getLength: function() {
            return this.num.length;
          },
          /**
           * 多项式乘法
           * @param  {QRPolynomial} e 被乘多项式
           * @return {[type]}   [description]
           */
          multiply: function(e) {

            var num = new Array(this.getLength() + e.getLength() - 1);

            for (var i = 0; i < this.getLength(); i++) {
              for (var j = 0; j < e.getLength(); j++) {
                num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath
                  .glog(e.get(j)));
              }
            }

            return new QRPolynomial(num, 0);
          },
          /**
           * 多项式模运算
           * @param  {QRPolynomial} e 模多项式
           * @return {}
           */
          mod: function(e) {
            var tl = this.getLength(),
              el = e.getLength();
            if (tl - el < 0) {
              return this;
            }
            var num = new Array(tl);
            for (var i = 0; i < tl; i++) {
              num[i] = this.get(i);
            }
            while (num.length >= el) {
              var ratio = QRMath.glog(num[0]) - QRMath.glog(e.get(0));

              for (var i = 0; i < e.getLength(); i++) {
                num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);
              }
              while (num[0] == 0) {
                num.shift();
              }
            }
            return new QRPolynomial(num, 0);
          }
        };

        //---------------------------------------------------------------------
        // RS_BLOCK_TABLE
        //---------------------------------------------------------------------
        /*
 二维码各个版本信息[块数, 每块中的数据块数, 每块中的信息块数]
 */
        RS_BLOCK_TABLE = [

          // L
          // M
          // Q
          // H

          // 1
          [1, 26, 19],
          [1, 26, 16],
          [1, 26, 13],
          [1, 26, 9],

          // 2
          [1, 44, 34],
          [1, 44, 28],
          [1, 44, 22],
          [1, 44, 16],

          // 3
          [1, 70, 55],
          [1, 70, 44],
          [2, 35, 17],
          [2, 35, 13],

          // 4
          [1, 100, 80],
          [2, 50, 32],
          [2, 50, 24],
          [4, 25, 9],

          // 5
          [1, 134, 108],
          [2, 67, 43],
          [2, 33, 15, 2, 34, 16],
          [2, 33, 11, 2, 34, 12],

          // 6
          [2, 86, 68],
          [4, 43, 27],
          [4, 43, 19],
          [4, 43, 15],

          // 7
          [2, 98, 78],
          [4, 49, 31],
          [2, 32, 14, 4, 33, 15],
          [4, 39, 13, 1, 40, 14],

          // 8
          [2, 121, 97],
          [2, 60, 38, 2, 61, 39],
          [4, 40, 18, 2, 41, 19],
          [4, 40, 14, 2, 41, 15],

          // 9
          [2, 146, 116],
          [3, 58, 36, 2, 59, 37],
          [4, 36, 16, 4, 37, 17],
          [4, 36, 12, 4, 37, 13],

          // 10
          [2, 86, 68, 2, 87, 69],
          [4, 69, 43, 1, 70, 44],
          [6, 43, 19, 2, 44, 20],
          [6, 43, 15, 2, 44, 16],

          // 11
          [4, 101, 81],
          [1, 80, 50, 4, 81, 51],
          [4, 50, 22, 4, 51, 23],
          [3, 36, 12, 8, 37, 13],

          // 12
          [2, 116, 92, 2, 117, 93],
          [6, 58, 36, 2, 59, 37],
          [4, 46, 20, 6, 47, 21],
          [7, 42, 14, 4, 43, 15],

          // 13
          [4, 133, 107],
          [8, 59, 37, 1, 60, 38],
          [8, 44, 20, 4, 45, 21],
          [12, 33, 11, 4, 34, 12],

          // 14
          [3, 145, 115, 1, 146, 116],
          [4, 64, 40, 5, 65, 41],
          [11, 36, 16, 5, 37, 17],
          [11, 36, 12, 5, 37, 13],

          // 15
          [5, 109, 87, 1, 110, 88],
          [5, 65, 41, 5, 66, 42],
          [5, 54, 24, 7, 55, 25],
          [11, 36, 12],

          // 16
          [5, 122, 98, 1, 123, 99],
          [7, 73, 45, 3, 74, 46],
          [15, 43, 19, 2, 44, 20],
          [3, 45, 15, 13, 46, 16],

          // 17
          [1, 135, 107, 5, 136, 108],
          [10, 74, 46, 1, 75, 47],
          [1, 50, 22, 15, 51, 23],
          [2, 42, 14, 17, 43, 15],

          // 18
          [5, 150, 120, 1, 151, 121],
          [9, 69, 43, 4, 70, 44],
          [17, 50, 22, 1, 51, 23],
          [2, 42, 14, 19, 43, 15],

          // 19
          [3, 141, 113, 4, 142, 114],
          [3, 70, 44, 11, 71, 45],
          [17, 47, 21, 4, 48, 22],
          [9, 39, 13, 16, 40, 14],

          // 20
          [3, 135, 107, 5, 136, 108],
          [3, 67, 41, 13, 68, 42],
          [15, 54, 24, 5, 55, 25],
          [15, 43, 15, 10, 44, 16],

          // 21
          [4, 144, 116, 4, 145, 117],
          [17, 68, 42],
          [17, 50, 22, 6, 51, 23],
          [19, 46, 16, 6, 47, 17],

          // 22
          [2, 139, 111, 7, 140, 112],
          [17, 74, 46],
          [7, 54, 24, 16, 55, 25],
          [34, 37, 13],

          // 23
          [4, 151, 121, 5, 152, 122],
          [4, 75, 47, 14, 76, 48],
          [11, 54, 24, 14, 55, 25],
          [16, 45, 15, 14, 46, 16],

          // 24
          [6, 147, 117, 4, 148, 118],
          [6, 73, 45, 14, 74, 46],
          [11, 54, 24, 16, 55, 25],
          [30, 46, 16, 2, 47, 17],

          // 25
          [8, 132, 106, 4, 133, 107],
          [8, 75, 47, 13, 76, 48],
          [7, 54, 24, 22, 55, 25],
          [22, 45, 15, 13, 46, 16],

          // 26
          [10, 142, 114, 2, 143, 115],
          [19, 74, 46, 4, 75, 47],
          [28, 50, 22, 6, 51, 23],
          [33, 46, 16, 4, 47, 17],

          // 27
          [8, 152, 122, 4, 153, 123],
          [22, 73, 45, 3, 74, 46],
          [8, 53, 23, 26, 54, 24],
          [12, 45, 15, 28, 46, 16],

          // 28
          [3, 147, 117, 10, 148, 118],
          [3, 73, 45, 23, 74, 46],
          [4, 54, 24, 31, 55, 25],
          [11, 45, 15, 31, 46, 16],

          // 29
          [7, 146, 116, 7, 147, 117],
          [21, 73, 45, 7, 74, 46],
          [1, 53, 23, 37, 54, 24],
          [19, 45, 15, 26, 46, 16],

          // 30
          [5, 145, 115, 10, 146, 116],
          [19, 75, 47, 10, 76, 48],
          [15, 54, 24, 25, 55, 25],
          [23, 45, 15, 25, 46, 16],

          // 31
          [13, 145, 115, 3, 146, 116],
          [2, 74, 46, 29, 75, 47],
          [42, 54, 24, 1, 55, 25],
          [23, 45, 15, 28, 46, 16],

          // 32
          [17, 145, 115],
          [10, 74, 46, 23, 75, 47],
          [10, 54, 24, 35, 55, 25],
          [19, 45, 15, 35, 46, 16],

          // 33
          [17, 145, 115, 1, 146, 116],
          [14, 74, 46, 21, 75, 47],
          [29, 54, 24, 19, 55, 25],
          [11, 45, 15, 46, 46, 16],

          // 34
          [13, 145, 115, 6, 146, 116],
          [14, 74, 46, 23, 75, 47],
          [44, 54, 24, 7, 55, 25],
          [59, 46, 16, 1, 47, 17],

          // 35
          [12, 151, 121, 7, 152, 122],
          [12, 75, 47, 26, 76, 48],
          [39, 54, 24, 14, 55, 25],
          [22, 45, 15, 41, 46, 16],

          // 36
          [6, 151, 121, 14, 152, 122],
          [6, 75, 47, 34, 76, 48],
          [46, 54, 24, 10, 55, 25],
          [2, 45, 15, 64, 46, 16],

          // 37
          [17, 152, 122, 4, 153, 123],
          [29, 74, 46, 14, 75, 47],
          [49, 54, 24, 10, 55, 25],
          [24, 45, 15, 46, 46, 16],

          // 38
          [4, 152, 122, 18, 153, 123],
          [13, 74, 46, 32, 75, 47],
          [48, 54, 24, 14, 55, 25],
          [42, 45, 15, 32, 46, 16],

          // 39
          [20, 147, 117, 4, 148, 118],
          [40, 75, 47, 7, 76, 48],
          [43, 54, 24, 22, 55, 25],
          [10, 45, 15, 67, 46, 16],

          // 40
          [19, 148, 118, 6, 149, 119],
          [18, 75, 47, 31, 76, 48],
          [34, 54, 24, 34, 55, 25],
          [20, 45, 15, 61, 46, 16]
        ];

        /**
         * 根据数据获取对应版本
         * @return {[type]} [description]
         */
        QRCodeAlg.prototype.getRightType = function() {
          for (var typeNumber = 1; typeNumber < 41; typeNumber++) {
            var rsBlock = RS_BLOCK_TABLE[(typeNumber - 1) * 4 + this.errorCorrectLevel];
            if (rsBlock == undefined) {
              throw new Error("bad rs block @ typeNumber:" + typeNumber +
                "/errorCorrectLevel:" + this.errorCorrectLevel);
            }
            var length = rsBlock.length / 3;
            var totalDataCount = 0;
            for (var i = 0; i < length; i++) {
              var count = rsBlock[i * 3 + 0];
              var dataCount = rsBlock[i * 3 + 2];
              totalDataCount += dataCount * count;
            }

            var lengthBytes = typeNumber > 9 ? 2 : 1;
            if (this.utf8bytes.length + lengthBytes < totalDataCount ||
              typeNumber == 40) {
              this.typeNumber = typeNumber;
              this.rsBlock = rsBlock;
              this.totalDataCount = totalDataCount;
              break;
            }
          }
        };

        //---------------------------------------------------------------------
        // QRBitBuffer
        //---------------------------------------------------------------------

        function QRBitBuffer() {
          this.buffer = new Array();
          this.length = 0;
        }

        QRBitBuffer.prototype = {

          get: function(index) {
            var bufIndex = Math.floor(index / 8);
            return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1);
          },

          put: function(num, length) {
            for (var i = 0; i < length; i++) {
              this.putBit(((num >>> (length - i - 1)) & 1));
            }
          },

          putBit: function(bit) {

            var bufIndex = Math.floor(this.length / 8);
            if (this.buffer.length <= bufIndex) {
              this.buffer.push(0);
            }

            if (bit) {
              this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));
            }

            this.length++;
          }
        };

        $.AMUI.qrcode = qrcode;

        module.exports = qrcode;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  53: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');

        /**
         * store.js
         * @via https://github.com/marcuswestin/store.js
         * @license https://github.com/marcuswestin/store.js/blob/master/LICENSE
         */

        var store = {};
        var win = window;
        var localStorageName = 'localStorage';
        var storage;

        store.disabled = false;

        store.version = '1.3.17';

        store.set = function(key, value) {};

        store.get = function(key, defaultVal) {};

        store.has = function(key) {
          return store.get(key) !== undefined;
        };

        store.remove = function(key) {};

        store.clear = function() {};

        store.transact = function(key, defaultVal, transactionFn) {
          if (transactionFn == null) {
            transactionFn = defaultVal;
            defaultVal = null;
          }

          if (defaultVal == null) {
            defaultVal = {};
          }

          var val = store.get(key, defaultVal);
          transactionFn(val);
          store.set(key, val);
        };

        store.getAll = function() {};

        store.forEach = function() {};

        store.serialize = function(value) {
          return JSON.stringify(value);
        };

        store.deserialize = function(value) {
          if (typeof value != 'string') {
            return undefined;
          }

          try {
            return JSON.parse(value);
          } catch (e) {
            return value || undefined;
          }
        };

        // Functions to encapsulate questionable FireFox 3.6.13 behavior
        // when about.config::dom.storage.enabled === false
        // See https://github.com/marcuswestin/store.js/issues#issue/13
        function isLocalStorageNameSupported() {
          try {
            return (localStorageName in win && win[localStorageName]);
          } catch (err) {
            return false;
          }
        }

        if (isLocalStorageNameSupported()) {
          storage = win[localStorageName];
          store.set = function(key, val) {
            if (val === undefined) {
              return store.remove(key);
            }
            storage.setItem(key, store.serialize(val));
            return val;
          };

          store.get = function(key, defaultVal) {
            var val = store.deserialize(storage.getItem(key));
            return (val === undefined ? defaultVal : val);
          };

          store.remove = function(key) {
            storage.removeItem(key);
          };

          store.clear = function() {
            storage.clear();
          };

          store.getAll = function() {
            var ret = {};
            store.forEach(function(key, val) {
              ret[key] = val;
            });
            return ret;
          };

          store.forEach = function(callback) {
            for (var i = 0; i < storage.length; i++) {
              var key = storage.key(i);
              callback(key, store.get(key));
            }
          };
        }

        try {
          var testKey = '__storeJs__';
          store.set(testKey, testKey);
          if (store.get(testKey) != testKey) {
            store.disabled = true;
          }
          store.remove(testKey);
        } catch (e) {
          store.disabled = true;
        }

        store.enabled = !store.disabled;

        $.AMUI = $.AMUI || {};

        $.AMUI.store = store;

        module.exports = store;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ],
  54: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        var isWeChat = window.navigator.userAgent.indexOf('MicroMessenger') >
          -1;

        function appendWeChatSDK(callback) {
          var $weChatSDK = $('<script/>', {
            id: 'wechat-sdk'
          });

          $('body').append($weChatSDK);

          $weChatSDK.on('load', function() {
            callback && callback();
          }).attr('src', 'http://res.wx.qq.com/open/js/jweixin-1.0.0.js');
        }

        function payHandler() {
          var $paymentBtn = $('[data-am-widget="wechatpay"]');

          if (!isWeChat) {
            $paymentBtn.hide();
            return false;
          }

          $paymentBtn.on('click', '.am-wechatpay-btn', function(e) {
            e.preventDefault();
            var options = UI.utils.parseOptions($(this).parent().data(
              'wechatPay'));
            // console.log(options);
            // alert('pay button clicked');
            if (!window.wx) {
              alert('没有微信 JS SDK');
              return;
            }

            wx.checkJsApi({
              jsApiList: ['chooseWXPay'],
              success: function(res) {
                if (res.checkResult.chooseWXPay) {
                  wx.chooseWXPay(options);
                } else {
                  alert('微信版本不支持支付接口或没有开启！');
                }
              },
              fail: function() {
                alert('调用 checkJsApi 接口时发生错误!');
              }
            });
          });
        }

        var payInit = payHandler;

        $(document).on('ready', payInit);

        module.exports = $.AMUI.pay = {
          VERSION: '1.0.0',
          init: payInit
        };

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 4
    }
  ]
}, {}, [2]);
/*! Amaze UI v2.3.0 ~ Old IE Fucker | by Amaze UI Team | (c) 2015 AllMobilize, Inc. | Licensed under MIT | 2015-04-08T06:04:29 UTC */

(function e(t, n, r) {
  function s(o, u) {
    if (!n[o]) {
      if (!t[o]) {
        var a = typeof require == "function" && require;
        if (!u && a) return a(o, !0);
        if (i) return i(o, !0);
        var f = new Error("Cannot find module '" + o + "'");
        throw f.code = "MODULE_NOT_FOUND", f
      }
      var l = n[o] = {
        exports: {}
      };
      t[o][0].call(l.exports, function(e) {
        var n = t[o][1][e];
        return s(n ? n : e)
      }, l, l.exports, e, t, n, r)
    }
    return n[o].exports
  }
  var i = typeof require == "function" && require;
  for (var o = 0; o < r.length; o++) s(r[o]);
  return s
})({
  1: [
    function(require, module, exports) {
      (function(global) {
        // Amaze UI JavaScript for IE8

        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);

        require('./core');
        require('./ui.alert');
        require('./ui.button');
        require('./ui.collapse');
        require('./ui.dimmer');
        require('./ui.dropdown');
        require('./ui.flexslider');
        require('./ui.modal');
        require('./ui.offcanvas');
        require('./ui.popover');
        require('./ui.progress');
        require('./ui.scrollspynav');
        require('./ui.sticky');
        require('./util.cookie');

        module.exports = $.AMUI;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2,
      "./ui.alert": 3,
      "./ui.button": 4,
      "./ui.collapse": 5,
      "./ui.dimmer": 6,
      "./ui.dropdown": 7,
      "./ui.flexslider": 8,
      "./ui.modal": 9,
      "./ui.offcanvas": 10,
      "./ui.popover": 11,
      "./ui.progress": 12,
      "./ui.scrollspynav": 13,
      "./ui.sticky": 15,
      "./util.cookie": 16
    }
  ],
  2: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        /* jshint -W040 */

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);

        if (typeof $ === 'undefined') {
          throw new Error('Amaze UI 2.x requires jQuery :-(\n' +
            '\u7231\u4e0a\u4e00\u5339\u91ce\u9a6c\uff0c\u53ef\u4f60' +
            '\u7684\u5bb6\u91cc\u6ca1\u6709\u8349\u539f\u2026');
        }

        var UI = $.AMUI || {};
        var $win = $(window);
        var doc = window.document;
        var $html = $('html');

        UI.VERSION = '2.3.0';

        UI.support = {};

        UI.support.transition = (function() {
          var transitionEnd = (function() {
            // https://developer.mozilla.org/en-US/docs/Web/Events/transitionend#Browser_compatibility
            var element = doc.body || doc.documentElement;
            var transEndEventNames = {
              WebkitTransition: 'webkitTransitionEnd',
              MozTransition: 'transitionend',
              OTransition: 'oTransitionEnd otransitionend',
              transition: 'transitionend'
            };

            for (var name in transEndEventNames) {
              if (element.style[name] !== undefined) {
                return transEndEventNames[name];
              }
            }
          })();

          return transitionEnd && {
            end: transitionEnd
          };
        })();

        UI.support.animation = (function() {
          var animationEnd = (function() {
            var element = doc.body || doc.documentElement;
            var animEndEventNames = {
              WebkitAnimation: 'webkitAnimationEnd',
              MozAnimation: 'animationend',
              OAnimation: 'oAnimationEnd oanimationend',
              animation: 'animationend'
            };

            for (var name in animEndEventNames) {
              if (element.style[name] !== undefined) {
                return animEndEventNames[name];
              }
            }
          })();

          return animationEnd && {
            end: animationEnd
          };
        })();

        /* jshint -W069 */
        UI.support.touch = (
          ('ontouchstart' in window &&
            navigator.userAgent.toLowerCase().match(/mobile|tablet/)) ||
          (window.DocumentTouch && document instanceof window.DocumentTouch) ||
          (window.navigator['msPointerEnabled'] &&
            window.navigator['msMaxTouchPoints'] > 0) || //IE 10
          (window.navigator['pointerEnabled'] &&
            window.navigator['maxTouchPoints'] > 0) || //IE >=11
          false);

        // https://developer.mozilla.org/zh-CN/docs/DOM/MutationObserver
        UI.support.mutationobserver = (window.MutationObserver ||
          window.WebKitMutationObserver || null);

        // https://github.com/Modernizr/Modernizr/blob/924c7611c170ef2dc502582e5079507aff61e388/feature-detects/forms/validation.js#L20
        UI.support.formValidation = (typeof document.createElement('form').checkValidity ===
          'function');

        UI.utils = {};

        /**
         * Debounce function
         * @param {function} func  Function to be debounced
         * @param {number} wait Function execution threshold in milliseconds
         * @param {bool} immediate  Whether the function should be called at
         *                          the beginning of the delay instead of the
         *                          end. Default is false.
         * @desc Executes a function when it stops being invoked for n seconds
         * @via  _.debounce() http://underscorejs.org
         */
        UI.utils.debounce = function(func, wait, immediate) {
          var timeout;
          return function() {
            var context = this;
            var args = arguments;
            var later = function() {
              timeout = null;
              if (!immediate) {
                func.apply(context, args);
              }
            };
            var callNow = immediate && !timeout;

            clearTimeout(timeout);
            timeout = setTimeout(later, wait);

            if (callNow) {
              func.apply(context, args);
            }
          };
        };

        UI.utils.isInView = function(element, options) {
          var $element = $(element);
          var visible = !!($element.width() || $element.height()) &&
            $element.css('display') !== 'none';

          if (!visible) {
            return false;
          }

          var windowLeft = $win.scrollLeft();
          var windowTop = $win.scrollTop();
          var offset = $element.offset();
          var left = offset.left;
          var top = offset.top;

          options = $.extend({
            topOffset: 0,
            leftOffset: 0
          }, options);

          return (top + $element.height() >= windowTop &&
            top - options.topOffset <= windowTop + $win.height() &&
            left + $element.width() >= windowLeft &&
            left - options.leftOffset <= windowLeft + $win.width());
        };

        /* jshint -W054 */
        UI.utils.parseOptions = UI.utils.options = function(string) {
          if ($.isPlainObject(string)) {
            return string;
          }

          var start = (string ? string.indexOf('{') : -1);
          var options = {};

          if (start != -1) {
            try {
              options = (new Function('',
                'var json = ' + string.substr(start) +
                '; return JSON.parse(JSON.stringify(json));'))();
            } catch (e) {}
          }

          return options;
        };

        /* jshint +W054 */

        UI.utils.generateGUID = function(namespace) {
          var uid = namespace + '-' || 'am-';

          do {
            uid += Math.random().toString(36).substring(2, 7);
          } while (document.getElementById(uid));

          return uid;
        };

        // http://blog.alexmaccaw.com/css-transitions
        $.fn.emulateTransitionEnd = function(duration) {
          var called = false;
          var $el = this;

          $(this).one(UI.support.transition.end, function() {
            called = true;
          });

          var callback = function() {
            if (!called) {
              $($el).trigger(UI.support.transition.end);
            }
            $el.transitionEndTimmer = undefined;
          };
          this.transitionEndTimmer = setTimeout(callback, duration);
          return this;
        };

        $.fn.redraw = function() {
          $(this).each(function() {
            /* jshint unused:false */
            var redraw = this.offsetHeight;
          });
          return this;
        };

        /* jshint unused:true */

        $.fn.transitionEnd = function(callback) {
          var endEvent = UI.support.transition.end;
          var dom = this;

          function fireCallBack(e) {
            callback.call(this, e);
            endEvent && dom.off(endEvent, fireCallBack);
          }

          if (callback && endEvent) {
            dom.on(endEvent, fireCallBack);
          }

          return this;
        };

        $.fn.removeClassRegEx = function() {
          return this.each(function(regex) {
            var classes = $(this).attr('class');

            if (!classes || !regex) {
              return false;
            }

            var classArray = [];
            classes = classes.split(' ');

            for (var i = 0, len = classes.length; i < len; i++) {
              if (!classes[i].match(regex)) {
                classArray.push(classes[i]);
              }
            }

            $(this).attr('class', classArray.join(' '));
          });
        };

        //
        $.fn.alterClass = function(removals, additions) {
          var self = this;

          if (removals.indexOf('*') === -1) {
            // Use native jQuery methods if there is no wildcard matching
            self.removeClass(removals);
            return !additions ? self : self.addClass(additions);
          }

          var classPattern = new RegExp('\\s' +
            removals.replace(/\*/g, '[A-Za-z0-9-_]+').split(' ').join(
              '\\s|\\s') +
            '\\s', 'g');

          self.each(function(i, it) {
            var cn = ' ' + it.className + ' ';
            while (classPattern.test(cn)) {
              cn = cn.replace(classPattern, ' ');
            }
            it.className = $.trim(cn);
          });

          return !additions ? self : self.addClass(additions);
        };

        // handle multiple browsers for requestAnimationFrame()
        // http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
        // https://github.com/gnarf/jquery-requestAnimationFrame
        UI.utils.rAF = (function() {
          return window.requestAnimationFrame ||
            window.webkitRequestAnimationFrame ||
            window.mozRequestAnimationFrame ||
            window.oRequestAnimationFrame ||
            // if all else fails, use setTimeout
            function(callback) {
              return window.setTimeout(callback, 1000 / 60); // shoot for 60 fps
            };
        })();

        // handle multiple browsers for cancelAnimationFrame()
        UI.utils.cancelAF = (function() {
          return window.cancelAnimationFrame ||
            window.webkitCancelAnimationFrame ||
            window.mozCancelAnimationFrame ||
            window.oCancelAnimationFrame ||
            function(id) {
              window.clearTimeout(id);
            };
        })();

        // via http://davidwalsh.name/detect-scrollbar-width
        UI.utils.measureScrollbar = function() {
          if (document.body.clientWidth >= window.innerWidth) {
            return 0;
          }

          // if ($html.width() >= window.innerWidth) return;
          // var scrollbarWidth = window.innerWidth - $html.width();
          var $measure = $('<div ' +
            'style="width: 100px;height: 100px;overflow: scroll;' +
            'position: absolute;top: -9999px;"></div>');

          $(document.body).append($measure);

          var scrollbarWidth = $measure[0].offsetWidth - $measure[0].clientWidth;

          $measure.remove();

          return scrollbarWidth;
        };

        UI.utils.imageLoader = function($image, callback) {
          function loaded() {
            callback($image[0]);
          }

          function bindLoad() {
            this.one('load', loaded);
            if (/MSIE (\d+\.\d+);/.test(navigator.userAgent)) {
              var src = this.attr('src');
              var param = src.match(/\?/) ? '&' : '?';

              param += 'random=' + (new Date()).getTime();
              this.attr('src', src + param);
            }
          }

          if (!$image.attr('src')) {
            loaded();
            return;
          }

          if ($image[0].complete || $image[0].readyState === 4) {
            loaded();
          } else {
            bindLoad.call($image);
          }
        };

        /**
         * https://github.com/cho45/micro-template.js
         * (c) cho45 http://cho45.github.com/mit-license
         */
        /* jshint -W109 */
        UI.template = function(id, data) {
          var me = UI.template;

          if (!me.cache[id]) {
            me.cache[id] = (function() {
              var name = id;
              var string = /^[\w\-]+$/.test(id) ?
                me.get(id) : (name = 'template(string)', id); // no warnings

              var line = 1;
              var body = ('try { ' + (me.variable ?
                  'var ' + me.variable + ' = this.stash;' :
                  'with (this.stash) { ') +
                "this.ret += '" +
                string.replace(/<%/g, '\x11').replace(/%>/g, '\x13'). // if you want other tag, just edit this line
                replace(/'(?![^\x11\x13]+?\x13)/g, '\\x27').replace(
                  /^\s*|\s*$/g, '').replace(/\n/g, function() {
                  return "';\nthis.line = " + (++line) +
                    "; this.ret += '\\n";
                }).replace(/\x11-(.+?)\x13/g, "' + ($1) + '").replace(
                  /\x11=(.+?)\x13/g, "' + this.escapeHTML($1) + '").replace(
                  /\x11(.+?)\x13/g, "'; $1; this.ret += '") +
                "'; " + (me.variable ? "" : "}") + "return this.ret;" +
                "} catch (e) { throw 'TemplateError: ' + e + ' (on " +
                name +
                "' + ' line ' + this.line + ')'; } " +
                "//@ sourceURL=" + name + "\n" // source map
              ).replace(/this\.ret \+= '';/g, '');
              /* jshint -W054 */
              var func = new Function(body);
              var map = {
                '&': '&amp;',
                '<': '&lt;',
                '>': '&gt;',
                '\x22': '&#x22;',
                '\x27': '&#x27;'
              };
              var escapeHTML = function(string) {
                return ('' + string).replace(/[&<>\'\"]/g, function(_) {
                  return map[_];
                });
              };

              return function(stash) {
                return func.call(me.context = {
                  escapeHTML: escapeHTML,
                  line: 1,
                  ret: '',
                  stash: stash
                });
              };
            })();
          }

          return data ? me.cache[id](data) : me.cache[id];
        };
        /* jshint +W109 */
        /* jshint +W054 */

        UI.template.cache = {};

        UI.template.get = function(id) {
          if (id) {
            var element = document.getElementById(id);
            return element && element.innerHTML || '';
          }
        };

        // Dom mutation watchers
        UI.DOMWatchers = [];
        UI.DOMReady = false;
        UI.ready = function(callback) {
          UI.DOMWatchers.push(callback);
          if (UI.DOMReady) {
            // console.log('Ready call');
            callback(document);
          }
        };

        UI.DOMObserve = function(elements, options, callback) {
          var Observer = UI.support.mutationobserver;
          if (!Observer) {
            return;
          }

          options = $.isPlainObject(options) ?
            options : {
              childList: true,
              subtree: true
          };

          callback = typeof callback === 'function' && callback || function() {};

          $(elements).each(function() {
            var element = this;
            var $element = $(element);

            if ($element.data('am.observer')) {
              return;
            }

            try {
              var observer = new Observer(UI.utils.debounce(
                function(mutations, instance) {
                  callback.call(element, mutations, instance);
                  // trigger this event manually if MutationObserver not supported
                  $element.trigger('changed.dom.amui');
                }, 50));

              observer.observe(element, options);

              $element.data('am.observer', observer);
            } catch (e) {}
          });
        };

        $.fn.DOMObserve = function(options, callback) {
          return this.each(function() {
            UI.DOMObserve(this, options, callback);
          });
        };

        // Attach FastClick on touch devices
        if (UI.support.touch) {
          $html.addClass('am-touch');

          $(function() {
            var FastClick = UI.FastClick;
            if (FastClick) {
              // Fixes contenteditable elements don't editable on touch devices
              $('[contenteditable]').addClass('needsclick');

              FastClick.attach(document.body);
            }
          });
        }

        $(document).on('changed.dom.amui', function(e) {
          var element = e.target;

          // TODO: just call changed element's watcher
          //       every watcher callback should have a key
          //       use like this: <div data-am-observe='key1, key2'>
          //       get keys via $(element).data('amObserve')
          //       call functions store with these keys
          $.each(UI.DOMWatchers, function(i, watcher) {
            watcher(element);
          });
        });

        $(function() {
          var $body = $('body');

          UI.DOMReady = true;

          // Run default init
          $.each(UI.DOMWatchers, function(i, watcher) {
            watcher(document);
          });

          // watches DOM
          UI.DOMObserve('[data-am-observe]');

          $html.removeClass('no-js').addClass('js');

          UI.support.animation && $html.addClass('cssanimations');

          // iOS standalone mode
          if (window.navigator.standalone) {
            $html.addClass('am-standalone');
          }

          $('.am-topbar-fixed-top').length &&
            $body.addClass('am-with-topbar-fixed-top');

          $('.am-topbar-fixed-bottom').length &&
            $body.addClass('am-with-topbar-fixed-bottom');

          // Remove responsive classes in .am-layout
          var $layout = $('.am-layout');
          $layout.find('[class*="md-block-grid"]').alterClass(
            'md-block-grid-*');
          $layout.find('[class*="lg-block-grid"]').alterClass(
            'lg-block-grid');

          // widgets not in .am-layout
          $('[data-am-widget]').each(function() {
            var $widget = $(this);
            // console.log($widget.parents('.am-layout').length)
            if ($widget.parents('.am-layout').length === 0) {
              $widget.addClass('am-no-layout');
            }
          });
        });

        $.AMUI = UI;

        module.exports = UI;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {}
  ],
  3: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        /**
         * @via https://github.com/Minwe/bootstrap/blob/master/js/alert.js
         * @copyright Copyright 2013 Twitter, Inc.
         * @license Apache 2.0
         */

        // Alert Class
        // NOTE: removeElement option is unavailable now
        var Alert = function(element, options) {
          var _this = this;
          this.options = $.extend({}, Alert.DEFAULTS, options);
          this.$element = $(element);

          this.$element.
          addClass('am-fade am-in').
          on('click.alert.amui', '.am-close', function() {
            _this.close.call(this);
          });
        };

        Alert.DEFAULTS = {
          removeElement: true
        };

        Alert.prototype.close = function() {
          var $this = $(this);
          var $target = $this.hasClass('am-alert') ?
            $this :
            $this.parent('.am-alert');

          $target.trigger('close.alert.amui');

          $target.removeClass('am-in');

          function processAlert() {
            $target.trigger('closed.alert.amui').remove();
          }

          UI.support.transition && $target.hasClass('am-fade') ?
            $target.
          one(UI.support.transition.end, processAlert).
          emulateTransitionEnd(200) : processAlert();
        };

        // Alert Plugin
        $.fn.alert = function(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.alert');
            var options = typeof option == 'object' && option;

            if (!data) {
              $this.data('amui.alert', (data = new Alert(this, options || {})));
            }

            if (typeof option == 'string') {
              data[option].call($this);
            }
          });
        };

        // Init code
        $(document).on('click.alert.amui.data-api', '[data-am-alert]',
          function(e) {
            var $target = $(e.target);
            $(this).addClass('am-fade am-in');
            $target.is('.am-close') && $(this).alert('close');
          });

        $.AMUI.alert = Alert;

        module.exports = Alert;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2
    }
  ],
  4: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        /**
         * @via https://github.com/twbs/bootstrap/blob/master/js/button.js
         * @copyright (c) 2011-2014 Twitter, Inc
         * @license The MIT License
         */

        var Button = function(element, options) {
          this.$element = $(element);
          this.options = $.extend({}, Button.DEFAULTS, options);
          this.isLoading = false;
          this.hasSpinner = false;
        };

        Button.DEFAULTS = {
          loadingText: 'loading...',
          className: {
            loading: 'am-btn-loading',
            disabled: 'am-disabled'
          },
          spinner: undefined
        };

        Button.prototype.setState = function(state) {
          var disabled = 'disabled';
          var $element = this.$element;
          var options = this.options;
          var val = $element.is('input') ? 'val' : 'html';
          var loadingClassName = options.className.disabled + ' ' +
            options.className.loading;

          state = state + 'Text';

          if (!options.resetText) {
            options.resetText = $element[val]();
          }

          // add spinner for element with html()
          if (UI.support.animation && options.spinner &&
            val === 'html' && !this.hasSpinner) {
            options.loadingText = '<span class="am-icon-' +
              options.spinner +
              ' am-icon-spin"></span>' + options.loadingText;

            this.hasSpinner = true;
          }

          $element[val](options[state]);

          // push to event loop to allow forms to submit
          setTimeout($.proxy(function() {
            if (state == 'loadingText') {
              $element.addClass(loadingClassName).attr(disabled,
                disabled);
              this.isLoading = true;
            } else if (this.isLoading) {
              $element.removeClass(loadingClassName).removeAttr(
                disabled);
              this.isLoading = false;
            }
          }, this), 0);
        };

        Button.prototype.toggle = function() {
          var changed = true;
          var $element = this.$element;
          var $parent = this.$element.parent('.am-btn-group');

          if ($parent.length) {
            var $input = this.$element.find('input');

            if ($input.prop('type') == 'radio') {
              if ($input.prop('checked') && $element.hasClass('am-active')) {
                changed = false;
              } else {
                $parent.find('.am-active').removeClass('am-active');
              }
            }

            if (changed) {
              $input.prop('checked', !$element.hasClass('am-active')).trigger(
                'change');
            }
          }

          if (changed) {
            $element.toggleClass('am-active');
            if (!$element.hasClass('am-active')) {
              $element.blur();
            }
          }
        };

        // Button plugin
        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.button');
            var options = typeof option == 'object' && option || {};

            if (!data) {
              $this.data('amui.button', (data = new Button(this,
                options)));
            }

            if (option == 'toggle') {
              data.toggle();
            } else if (typeof option == 'string') {
              data.setState(option);
            }
          });
        }

        $.fn.button = Plugin;

        // Init code
        $(document).on('click.button.amui.data-api', '[data-am-button]',
          function(e) {
            var $btn = $(e.target);

            if (!$btn.hasClass('am-btn')) {
              $btn = $btn.closest('.am-btn');
            }

            Plugin.call($btn, 'toggle');
            e.preventDefault();
          });

        UI.ready(function(context) {
          $('[data-am-loading]', context).each(function() {
            $(this).button(UI.utils.parseOptions($(this).data(
              'amLoading')));
          });
        });

        $.AMUI.button = Button;

        module.exports = Button;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2
    }
  ],
  5: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        /**
         * @via https://github.com/twbs/bootstrap/blob/master/js/collapse.js
         * @copyright (c) 2011-2014 Twitter, Inc
         * @license The MIT License
         */

        var Collapse = function(element, options) {
          this.$element = $(element);
          this.options = $.extend({}, Collapse.DEFAULTS, options);
          this.transitioning = null;

          if (this.options.parent) {
            this.$parent = $(this.options.parent);
          }

          if (this.options.toggle) {
            this.toggle();
          }
        };

        Collapse.DEFAULTS = {
          toggle: true
        };

        Collapse.prototype.open = function() {
          if (this.transitioning || this.$element.hasClass('am-in')) {
            return;
          }

          var startEvent = $.Event('open.collapse.amui');
          this.$element.trigger(startEvent);

          if (startEvent.isDefaultPrevented()) {
            return;
          }

          var actives = this.$parent && this.$parent.find(
            '> .am-panel > .am-in');

          if (actives && actives.length) {
            var hasData = actives.data('amui.collapse');

            if (hasData && hasData.transitioning) {
              return;
            }

            Plugin.call(actives, 'close');

            hasData || actives.data('amui.collapse', null);
          }

          this.$element
            .removeClass('am-collapse')
            .addClass('am-collapsing').height(0);

          this.transitioning = 1;

          var complete = function() {
            this.$element.
            removeClass('am-collapsing').
            addClass('am-collapse am-in').
            height('');
            this.transitioning = 0;
            this.$element.trigger('opened.collapse.amui');
          };

          if (!UI.support.transition) {
            return complete.call(this);
          }

          var scrollHeight = this.$element[0].scrollHeight;

          this.$element
            .one(UI.support.transition.end, $.proxy(complete, this))
            .emulateTransitionEnd(300).
          css({
            height: scrollHeight
          }); // 当折叠的容器有 padding 时，如果用 height() 只能设置内容的宽度
        };

        Collapse.prototype.close = function() {
          if (this.transitioning || !this.$element.hasClass('am-in')) {
            return;
          }

          var startEvent = $.Event('close.collapse.amui');
          this.$element.trigger(startEvent);

          if (startEvent.isDefaultPrevented()) {
            return;
          }

          this.$element.height(this.$element.height()).redraw();

          this.$element.addClass('am-collapsing').
          removeClass('am-collapse am-in');

          this.transitioning = 1;

          var complete = function() {
            this.transitioning = 0;
            this.$element.trigger('closed.collapse.amui').
            removeClass('am-collapsing').
            addClass('am-collapse');
            // css({height: '0'});
          };

          if (!UI.support.transition) {
            return complete.call(this);
          }

          this.$element.height(0)
            .one(UI.support.transition.end, $.proxy(complete, this))
            .emulateTransitionEnd(300);
        };

        Collapse.prototype.toggle = function() {
          this[this.$element.hasClass('am-in') ? 'close' : 'open']();
        };

        // Collapse Plugin
        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.collapse');
            var options = $.extend({}, Collapse.DEFAULTS,
              UI.utils.options($this.attr('data-am-collapse')),
              typeof option == 'object' && option);

            if (!data && options.toggle && option == 'open') {
              option = !option;
            }
            if (!data) {
              $this.data('amui.collapse', (data = new Collapse(this,
                options)));
            }
            if (typeof option == 'string') {
              data[option]();
            }
          });
        }

        $.fn.collapse = Plugin;

        // Init code
        $(document).on('click.collapse.amui.data-api', '[data-am-collapse]',
          function(e) {
            var href;
            var $this = $(this);
            var options = UI.utils.options($this.attr('data-am-collapse'));
            var target = options.target ||
              e.preventDefault() ||
              (href = $this.attr('href')) &&
              href.replace(/.*(?=#[^\s]+$)/, '');
            var $target = $(target);
            var data = $target.data('amui.collapse');
            var option = data ? 'toggle' : options;
            var parent = options.parent;
            var $parent = parent && $(parent);

            if (!data || !data.transitioning) {
              if ($parent) {
                // '[data-am-collapse*="{parent: \'' + parent + '"]
                $parent.find('[data-am-collapse]').not($this).addClass(
                  'am-collapsed');
              }

              $this[$target.hasClass('am-in') ? 'addClass' :
                'removeClass']('am-collapsed');
            }

            Plugin.call($target, option);
          });

        $.AMUI.collapse = Collapse;

        module.exports = Collapse;

        // TODO: 更好的 target 选择方式
        //       折叠的容器必须没有 border/padding 才能正常处理，否则动画会有一些小问题
        //       寻找更好的未知高度 transition 动画解决方案，max-height 之类的就算了

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2
    }
  ],
  6: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var $doc = $(document);
        var transition = UI.support.transition;

        var Dimmer = function() {
          this.id = UI.utils.generateGUID('am-dimmer');
          this.$element = $(Dimmer.DEFAULTS.tpl, {
            id: this.id
          });

          this.inited = false;
          this.scrollbarWidth = 0;
          this.$used = $([]);
        };

        Dimmer.DEFAULTS = {
          tpl: '<div class="am-dimmer" data-am-dimmer></div>'
        };

        Dimmer.prototype.init = function() {
          if (!this.inited) {
            $(document.body).append(this.$element);
            this.inited = true;
            $doc.trigger('init.dimmer.amui');
          }

          return this;
        };

        Dimmer.prototype.open = function(relatedElement) {
          if (!this.inited) {
            this.init();
          }

          var $element = this.$element;

          // 用于多重调用
          if (relatedElement) {
            this.$used = this.$used.add($(relatedElement));
          }

          this.checkScrollbar().setScrollbar();

          $element.off(transition.end).show().trigger('open.dimmer.amui');

          setTimeout(function() {
            $element.addClass('am-active');
          }, 0);

          return this;
        };

        Dimmer.prototype.close = function(relatedElement, force) {
          this.$used = this.$used.not($(relatedElement));

          if (!force && this.$used.length) {
            return this;
          }

          var $element = this.$element;

          $element.removeClass('am-active').trigger('close.dimmer.amui');

          function complete() {
            $element.hide();
            this.resetScrollbar();
          }

          // transition ? $element.one(transition.end, $.proxy(complete, this)) :
          complete.call(this);

          return this;
        };

        Dimmer.prototype.checkScrollbar = function() {
          this.scrollbarWidth = UI.utils.measureScrollbar();

          return this;
        };

        Dimmer.prototype.setScrollbar = function() {
          var $body = $(document.body);
          var bodyPaddingRight = parseInt(($body.css('padding-right') || 0),
            10);

          if (this.scrollbarWidth) {
            $body.css('padding-right', bodyPaddingRight + this.scrollbarWidth);
          }

          $body.addClass('am-dimmer-active');

          return this;
        };

        Dimmer.prototype.resetScrollbar = function() {
          $(document.body).css('padding-right', '').removeClass(
            'am-dimmer-active');

          return this;
        };

        var dimmer = new Dimmer();

        $.AMUI.dimmer = dimmer;

        module.exports = dimmer;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2
    }
  ],
  7: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var animation = UI.support.animation;

        /**
         * @via https://github.com/Minwe/bootstrap/blob/master/js/dropdown.js
         * @copyright (c) 2011-2014 Twitter, Inc
         * @license The MIT License
         */

        // var toggle = '[data-am-dropdown] > .am-dropdown-toggle';

        var Dropdown = function(element, options) {
          this.options = $.extend({}, Dropdown.DEFAULTS, options);

          options = this.options;

          this.$element = $(element);
          this.$toggle = this.$element.find(options.selector.toggle);
          this.$dropdown = this.$element.find(options.selector.dropdown);
          this.$boundary = (options.boundary === window) ? $(window) :
            this.$element.closest(options.boundary);
          this.$justify = (options.justify && $(options.justify).length &&
            $(options.justify)) || undefined;

          !this.$boundary.length && (this.$boundary = $(window));

          this.active = this.$element.hasClass('am-active') ? true :
            false;
          this.animating = null;

          this.events();
        };

        Dropdown.DEFAULTS = {
          animation: 'am-animation-slide-top-fixed',
          boundary: window,
          justify: undefined,
          selector: {
            dropdown: '.am-dropdown-content',
            toggle: '.am-dropdown-toggle'
          },
          trigger: 'click'
        };

        Dropdown.prototype.toggle = function() {
          this.clear();

          if (this.animating) {
            return;
          }

          this[this.active ? 'close' : 'open']();
        };

        Dropdown.prototype.open = function(e) {
          var $toggle = this.$toggle;
          var $element = this.$element;
          var $dropdown = this.$dropdown;

          if ($toggle.is('.am-disabled, :disabled')) {
            return;
          }

          if (this.active) {
            return;
          }

          $element.trigger('open.dropdown.amui').addClass('am-active');

          $toggle.trigger('focus');

          this.checkDimensions();

          var complete = $.proxy(function() {
            $element.trigger('opened.dropdown.amui');
            this.active = true;
            this.animating = 0;
          }, this);

          if (animation) {
            this.animating = 1;
            $dropdown.addClass(this.options.animation).
            on(animation.end + '.open.dropdown.amui', $.proxy(function() {
              complete();
              $dropdown.removeClass(this.options.animation);
            }, this));
          } else {
            complete();
          }
        };

        Dropdown.prototype.close = function() {
          if (!this.active) {
            return;
          }

          // fix #165
          // var animationName = this.options.animation + ' am-animation-reverse';
          var animationName = 'am-dropdown-animation';
          var $element = this.$element;
          var $dropdown = this.$dropdown;

          $element.trigger('close.dropdown.amui');

          var complete = $.proxy(function complete() {
            $element.
            removeClass('am-active').
            trigger('closed.dropdown.amui');
            this.active = false;
            this.animating = 0;
            this.$toggle.blur();
          }, this);

          if (animation) {
            $dropdown.removeClass(this.options.animation);
            $dropdown.addClass(animationName);
            this.animating = 1;
            // animation
            $dropdown.one(animation.end + '.close.dropdown.amui', function() {
              $dropdown.removeClass(animationName);
              complete();
            });
          } else {
            complete();
          }
        };

        Dropdown.prototype.checkDimensions = function() {
          if (!this.$dropdown.length) {
            return;
          }

          var $dropdown = this.$dropdown;
          var offset = $dropdown.offset();
          var width = $dropdown.outerWidth();
          var boundaryWidth = this.$boundary.width();
          var boundaryOffset = $.isWindow(this.boundary) && this.$boundary.offset() ?
            this.$boundary.offset().left : 0;

          if (this.$justify) {
            // jQuery.fn.width() is really...
            $dropdown.css({
              'min-width': this.$justify.css('width')
            });
          }

          if ((width + (offset.left - boundaryOffset)) > boundaryWidth) {
            this.$element.addClass('am-dropdown-flip');
          }
        };

        Dropdown.prototype.clear = function() {
          $('[data-am-dropdown]').not(this.$element).each(function() {
            var data = $(this).data('amui.dropdown');
            data && data.close();
          });
        };

        Dropdown.prototype.events = function() {
          var eventNS = 'dropdown.amui';
          // triggers = this.options.trigger.split(' '),
          var $toggle = this.$toggle;

          $toggle.on('click.' + eventNS, $.proxy(function(e) {
            e.preventDefault();
            this.toggle();
          }, this));

          /*for (var i = triggers.length; i--;) {
   var trigger = triggers[i];

   if (trigger === 'click') {
   $toggle.on('click.' + eventNS, $.proxy(this.toggle, this))
   }

   if (trigger === 'focus' || trigger === 'hover') {
   var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin';
   var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout';

   this.$element.on(eventIn + '.' + eventNS, $.proxy(this.open, this))
   .on(eventOut + '.' + eventNS, $.proxy(this.close, this));
   }
   }*/

          $(document).on('keydown.dropdown.amui', $.proxy(function(e) {
            e.keyCode === 27 && this.active && this.close();
          }, this)).on('click.outer.dropdown.amui', $.proxy(function(e) {
            // var $target = $(e.target);

            if (this.active &&
              (this.$element[0] === e.target || !this.$element.find(e.target)
                .length)) {
              this.close();
            }
          }, this));
        };

        // Dropdown Plugin
        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.dropdown');
            var options = $.extend({},
              UI.utils.parseOptions($this.attr('data-am-dropdown')),
              typeof option == 'object' && option);

            if (!data) {
              $this.data('amui.dropdown', (data = new Dropdown(this,
                options)));
            }

            if (typeof option == 'string') {
              data[option]();
            }
          });
        }

        $.fn.dropdown = Plugin;

        // Init code
        UI.ready(function(context) {
          $('[data-am-dropdown]', context).dropdown();
        });

        $(document).on('click.dropdown.amui.data-api', '.am-dropdown form',
          function(e) {
            e.stopPropagation();
          });

        $.AMUI.dropdown = Dropdown;

        module.exports = Dropdown;

        // TODO: 1. 处理链接 focus
        //       2. 增加 mouseenter / mouseleave 选项
        //       3. 宽度适应

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2
    }
  ],
  8: [
    function(require, module, exports) {
      (function(global) {
        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        // MODIFIED:
        // - LINE 226: add `<i></i>`
        // - namespace
        // - Init code
        // TODO: start after x ms when pause on actions

        /*
         * jQuery FlexSlider v2.2.2
         * Copyright 2012 WooThemes
         * Contributing Author: Tyler Smith
         */

        // FlexSlider: Object Instance
        $.flexslider = function(el, options) {
          var slider = $(el);

          // making variables public
          slider.vars = $.extend({}, $.flexslider.defaults, options);

          var namespace = slider.vars.namespace,
            msGesture = window.navigator && window.navigator.msPointerEnabled &&
            window.MSGesture,
            touch = (("ontouchstart" in window) || msGesture || window.DocumentTouch &&
              document instanceof DocumentTouch) && slider.vars.touch,
            // depricating this idea, as devices are being released with both of these events
            //eventType = (touch) ? "touchend" : "click",
            eventType = "click touchend MSPointerUp keyup",
            watchedEvent = "",
            watchedEventClearTimer,
            vertical = slider.vars.direction === "vertical",
            reverse = slider.vars.reverse,
            carousel = (slider.vars.itemWidth > 0),
            fade = slider.vars.animation === "fade",
            asNav = slider.vars.asNavFor !== "",
            methods = {},
            focused = true;

          // Store a reference to the slider object
          $.data(el, 'flexslider', slider);

          // Private slider methods
          methods = {
            init: function() {
              slider.animating = false;
              // Get current slide and make sure it is a number
              slider.currentSlide = parseInt((slider.vars.startAt ? slider.vars
                .startAt : 0), 10);
              if (isNaN(slider.currentSlide)) {
                slider.currentSlide = 0;
              }
              slider.animatingTo = slider.currentSlide;
              slider.atEnd = (slider.currentSlide === 0 || slider.currentSlide ===
                slider.last);
              slider.containerSelector = slider.vars.selector.substr(0,
                slider.vars.selector.search(' '));
              slider.slides = $(slider.vars.selector, slider);
              slider.container = $(slider.containerSelector, slider);
              slider.count = slider.slides.length;
              // SYNC:
              slider.syncExists = $(slider.vars.sync).length > 0;
              // SLIDE:
              if (slider.vars.animation === "slide") slider.vars.animation =
                "swing";
              slider.prop = (vertical) ? "top" : "marginLeft";
              slider.args = {};
              // SLIDESHOW:
              slider.manualPause = false;
              slider.stopped = false;
              //PAUSE WHEN INVISIBLE
              slider.started = false;
              slider.startTimeout = null;
              // TOUCH/USECSS:
              slider.transitions = !slider.vars.video && !fade && slider.vars
                .useCSS && (function() {
                  var obj = document.createElement('div'),
                    props = ['perspectiveProperty', 'WebkitPerspective',
                      'MozPerspective', 'OPerspective', 'msPerspective'
                    ];
                  for (var i in props) {
                    if (obj.style[props[i]] !== undefined) {
                      slider.pfx = props[i].replace('Perspective', '').toLowerCase();
                      slider.prop = "-" + slider.pfx + "-transform";
                      return true;
                    }
                  }
                  return false;
                }());
              slider.ensureAnimationEnd = '';
              // CONTROLSCONTAINER:
              if (slider.vars.controlsContainer !== "") slider.controlsContainer =
                $(slider.vars.controlsContainer).length > 0 && $(slider.vars
                  .controlsContainer);
              // MANUAL:
              if (slider.vars.manualControls !== "") slider.manualControls =
                $(slider.vars.manualControls).length > 0 && $(slider.vars.manualControls);

              // RANDOMIZE:
              if (slider.vars.randomize) {
                slider.slides.sort(function() {
                  return (Math.round(Math.random()) - 0.5);
                });
                slider.container.empty().append(slider.slides);
              }

              slider.doMath();

              // INIT
              slider.setup("init");

              // CONTROLNAV:
              if (slider.vars.controlNav) methods.controlNav.setup();

              // DIRECTIONNAV:
              if (slider.vars.directionNav) methods.directionNav.setup();

              // KEYBOARD:
              if (slider.vars.keyboard && ($(slider.containerSelector).length ===
                1 || slider.vars.multipleKeyboard)) {
                $(document).bind('keyup', function(event) {
                  var keycode = event.keyCode;
                  if (!slider.animating && (keycode === 39 || keycode ===
                    37)) {
                    var target = (keycode === 39) ? slider.getTarget(
                        'next') :
                      (keycode === 37) ? slider.getTarget('prev') : false;
                    slider.flexAnimate(target, slider.vars.pauseOnAction);
                  }
                });
              }
              // MOUSEWHEEL:
              if (slider.vars.mousewheel) {
                slider.bind('mousewheel', function(event, delta, deltaX,
                  deltaY) {
                  event.preventDefault();
                  var target = (delta < 0) ? slider.getTarget('next') :
                    slider.getTarget('prev');
                  slider.flexAnimate(target, slider.vars.pauseOnAction);
                });
              }

              // PAUSEPLAY
              if (slider.vars.pausePlay) methods.pausePlay.setup();

              //PAUSE WHEN INVISIBLE
              if (slider.vars.slideshow && slider.vars.pauseInvisible)
                methods.pauseInvisible.init();

              // SLIDSESHOW
              if (slider.vars.slideshow) {
                if (slider.vars.pauseOnHover) {
                  slider.hover(function() {
                    if (!slider.manualPlay && !slider.manualPause) slider
                      .pause();
                  }, function() {
                    if (!slider.manualPause && !slider.manualPlay && !
                      slider.stopped) slider.play();
                  });
                }
                // initialize animation
                //If we're visible, or we don't use PageVisibility API
                if (!slider.vars.pauseInvisible || !methods.pauseInvisible.isHidden()) {
                  (slider.vars.initDelay > 0) ? slider.startTimeout =
                    setTimeout(slider.play, slider.vars.initDelay) : slider
                    .play();
                }
              }

              // ASNAV:
              if (asNav) methods.asNav.setup();

              // TOUCH
              if (touch && slider.vars.touch) methods.touch();

              // FADE&&SMOOTHHEIGHT || SLIDE:
              if (!fade || (fade && slider.vars.smoothHeight)) $(window).bind(
                "resize orientationchange focus", methods.resize);

              slider.find("img").attr("draggable", "false");

              // API: start() Callback
              setTimeout(function() {
                slider.vars.start(slider);
              }, 200);
            },
            asNav: {
              setup: function() {
                slider.asNav = true;
                slider.animatingTo = Math.floor(slider.currentSlide /
                  slider.move);
                slider.currentItem = slider.currentSlide;
                slider.slides.removeClass(namespace + "active-slide").eq(
                  slider.currentItem).addClass(namespace + "active-slide");
                if (!msGesture) {
                  slider.slides.on(eventType, function(e) {
                    e.preventDefault();
                    var $slide = $(this),
                      target = $slide.index();
                    var posFromLeft = $slide.offset().left - $(slider).scrollLeft(); // Find position of slide relative to left of slider container
                    if (posFromLeft <= 0 && $slide.hasClass(namespace +
                      'active-slide')) {
                      slider.flexAnimate(slider.getTarget("prev"), true);
                    } else if (!$(slider.vars.asNavFor).data('flexslider')
                      .animating && !$slide.hasClass(namespace +
                        "active-slide")) {
                      slider.direction = (slider.currentItem < target) ?
                        "next" : "prev";
                      slider.flexAnimate(target, slider.vars.pauseOnAction,
                        false, true, true);
                    }
                  });
                } else {
                  el._slider = slider;
                  slider.slides.each(function() {
                    var that = this;
                    that._gesture = new MSGesture();
                    that._gesture.target = that;
                    that.addEventListener("MSPointerDown", function(e) {
                      e.preventDefault();
                      if (e.currentTarget._gesture)
                        e.currentTarget._gesture.addPointer(e.pointerId);
                    }, false);
                    that.addEventListener("MSGestureTap", function(e) {
                      e.preventDefault();
                      var $slide = $(this),
                        target = $slide.index();
                      if (!$(slider.vars.asNavFor).data('flexslider').animating &&
                        !$slide.hasClass('active')) {
                        slider.direction = (slider.currentItem < target) ?
                          "next" : "prev";
                        slider.flexAnimate(target, slider.vars.pauseOnAction,
                          false, true, true);
                      }
                    });
                  });
                }
              }
            },
            controlNav: {
              setup: function() {
                if (!slider.manualControls) {
                  methods.controlNav.setupPaging();
                } else { // MANUALCONTROLS:
                  methods.controlNav.setupManual();
                }
              },
              setupPaging: function() {
                var type = (slider.vars.controlNav === "thumbnails") ?
                  'control-thumbs' : 'control-paging',
                  j = 1,
                  item,
                  slide;

                slider.controlNavScaffold = $('<ol class="' + namespace +
                  'control-nav ' + namespace + type + '"></ol>');

                if (slider.pagingCount > 1) {
                  for (var i = 0; i < slider.pagingCount; i++) {
                    slide = slider.slides.eq(i);
                    item = (slider.vars.controlNav === "thumbnails") ?
                      '<img src="' + slide.attr('data-thumb') + '"/>' :
                      '<a>' + j + '</a>';
                    if ('thumbnails' === slider.vars.controlNav && true ===
                      slider.vars.thumbCaptions) {
                      var captn = slide.attr('data-thumbcaption');
                      if ('' != captn && undefined != captn) item +=
                        '<span class="' + namespace + 'caption">' + captn +
                        '</span>';
                    }
                    // slider.controlNavScaffold.append('<li>' + item + '</li>');
                    slider.controlNavScaffold.append('<li>' + item +
                      '<i></i></li>');
                    j++;
                  }
                }

                // CONTROLSCONTAINER:
                (slider.controlsContainer) ? $(slider.controlsContainer).append(
                  slider.controlNavScaffold) : slider.append(slider.controlNavScaffold);
                methods.controlNav.set();

                methods.controlNav.active();

                slider.controlNavScaffold.delegate('a, img', eventType,
                  function(event) {
                    event.preventDefault();

                    if (watchedEvent === "" || watchedEvent === event.type) {
                      var $this = $(this),
                        target = slider.controlNav.index($this);

                      if (!$this.hasClass(namespace + 'active')) {
                        slider.direction = (target > slider.currentSlide) ?
                          "next" : "prev";
                        slider.flexAnimate(target, slider.vars.pauseOnAction);
                      }
                    }

                    // setup flags to prevent event duplication
                    if (watchedEvent === "") {
                      watchedEvent = event.type;
                    }
                    methods.setToClearWatchedEvent();

                  });
              },
              setupManual: function() {
                slider.controlNav = slider.manualControls;
                methods.controlNav.active();

                slider.controlNav.bind(eventType, function(event) {
                  event.preventDefault();

                  if (watchedEvent === "" || watchedEvent === event.type) {
                    var $this = $(this),
                      target = slider.controlNav.index($this);

                    if (!$this.hasClass(namespace + 'active')) {
                      (target > slider.currentSlide) ? slider.direction =
                        "next" : slider.direction = "prev";
                      slider.flexAnimate(target, slider.vars.pauseOnAction);
                    }
                  }

                  // setup flags to prevent event duplication
                  if (watchedEvent === "") {
                    watchedEvent = event.type;
                  }
                  methods.setToClearWatchedEvent();
                });
              },
              set: function() {
                var selector = (slider.vars.controlNav === "thumbnails") ?
                  'img' : 'a';
                slider.controlNav = $('.' + namespace + 'control-nav li ' +
                  selector, (slider.controlsContainer) ? slider.controlsContainer :
                  slider);
              },
              active: function() {
                slider.controlNav.removeClass(namespace + "active").eq(
                  slider.animatingTo).addClass(namespace + "active");
              },
              update: function(action, pos) {
                if (slider.pagingCount > 1 && action === "add") {
                  slider.controlNavScaffold.append($('<li><a>' + slider.count +
                    '</a></li>'));
                } else if (slider.pagingCount === 1) {
                  slider.controlNavScaffold.find('li').remove();
                } else {
                  slider.controlNav.eq(pos).closest('li').remove();
                }
                methods.controlNav.set();
                (slider.pagingCount > 1 && slider.pagingCount !== slider.controlNav
                  .length) ? slider.update(pos, action) : methods.controlNav
                  .active();
              }
            },
            directionNav: {
              setup: function() {
                var directionNavScaffold = $('<ul class="' + namespace +
                  'direction-nav"><li><a class="' + namespace +
                  'prev" href="#">' + slider.vars.prevText +
                  '</a></li><li><a class="' + namespace +
                  'next" href="#">' + slider.vars.nextText +
                  '</a></li></ul>');

                // CONTROLSCONTAINER:
                if (slider.controlsContainer) {
                  $(slider.controlsContainer).append(directionNavScaffold);
                  slider.directionNav = $('.' + namespace +
                    'direction-nav li a', slider.controlsContainer);
                } else {
                  slider.append(directionNavScaffold);
                  slider.directionNav = $('.' + namespace +
                    'direction-nav li a', slider);
                }

                methods.directionNav.update();

                slider.directionNav.bind(eventType, function(event) {
                  event.preventDefault();
                  var target;

                  if (watchedEvent === "" || watchedEvent === event.type) {
                    target = ($(this).hasClass(namespace + 'next')) ?
                      slider.getTarget('next') : slider.getTarget('prev');
                    slider.flexAnimate(target, slider.vars.pauseOnAction);
                  }

                  // setup flags to prevent event duplication
                  if (watchedEvent === "") {
                    watchedEvent = event.type;
                  }
                  methods.setToClearWatchedEvent();
                });
              },
              update: function() {
                var disabledClass = namespace + 'disabled';
                if (slider.pagingCount === 1) {
                  slider.directionNav.addClass(disabledClass).attr(
                    'tabindex', '-1');
                } else if (!slider.vars.animationLoop) {
                  if (slider.animatingTo === 0) {
                    slider.directionNav.removeClass(disabledClass).filter(
                      '.' + namespace + "prev").addClass(disabledClass).attr(
                      'tabindex', '-1');
                  } else if (slider.animatingTo === slider.last) {
                    slider.directionNav.removeClass(disabledClass).filter(
                      '.' + namespace + "next").addClass(disabledClass).attr(
                      'tabindex', '-1');
                  } else {
                    slider.directionNav.removeClass(disabledClass).removeAttr(
                      'tabindex');
                  }
                } else {
                  slider.directionNav.removeClass(disabledClass).removeAttr(
                    'tabindex');
                }
              }
            },
            pausePlay: {
              setup: function() {
                var pausePlayScaffold = $('<div class="' + namespace +
                  'pauseplay"><a></a></div>');

                // CONTROLSCONTAINER:
                if (slider.controlsContainer) {
                  slider.controlsContainer.append(pausePlayScaffold);
                  slider.pausePlay = $('.' + namespace + 'pauseplay a',
                    slider.controlsContainer);
                } else {
                  slider.append(pausePlayScaffold);
                  slider.pausePlay = $('.' + namespace + 'pauseplay a',
                    slider);
                }

                methods.pausePlay.update((slider.vars.slideshow) ?
                  namespace + 'pause' : namespace + 'play');

                slider.pausePlay.bind(eventType, function(event) {
                  event.preventDefault();

                  if (watchedEvent === "" || watchedEvent === event.type) {
                    if ($(this).hasClass(namespace + 'pause')) {
                      slider.manualPause = true;
                      slider.manualPlay = false;
                      slider.pause();
                    } else {
                      slider.manualPause = false;
                      slider.manualPlay = true;
                      slider.play();
                    }
                  }

                  // setup flags to prevent event duplication
                  if (watchedEvent === "") {
                    watchedEvent = event.type;
                  }
                  methods.setToClearWatchedEvent();
                });
              },
              update: function(state) {
                (state === "play") ? slider.pausePlay.removeClass(namespace +
                  'pause').addClass(namespace + 'play').html(slider.vars.playText) :
                  slider.pausePlay.removeClass(namespace + 'play').addClass(
                    namespace + 'pause').html(slider.vars.pauseText);
              }
            },
            touch: function() {
              var startX,
                startY,
                offset,
                cwidth,
                dx,
                startT,
                scrolling = false,
                localX = 0,
                localY = 0,
                accDx = 0;

              if (!msGesture) {
                el.addEventListener('touchstart', onTouchStart, false);

                function onTouchStart(e) {
                  if (slider.animating) {
                    e.preventDefault();
                  } else if ((window.navigator.msPointerEnabled) || e.touches
                    .length === 1) {
                    slider.pause();
                    // CAROUSEL:
                    cwidth = (vertical) ? slider.h : slider.w;
                    startT = Number(new Date());
                    // CAROUSEL:

                    // Local vars for X and Y points.
                    localX = e.touches[0].pageX;
                    localY = e.touches[0].pageY;

                    offset = (carousel && reverse && slider.animatingTo ===
                      slider.last) ? 0 :
                      (carousel && reverse) ? slider.limit - (((slider.itemW +
                      slider.vars.itemMargin) * slider.move) * slider.animatingTo) :
                      (carousel && slider.currentSlide === slider.last) ?
                      slider.limit :
                      (carousel) ? ((slider.itemW + slider.vars.itemMargin) *
                        slider.move) * slider.currentSlide :
                      (reverse) ? (slider.last - slider.currentSlide +
                        slider.cloneOffset) * cwidth : (slider.currentSlide +
                        slider.cloneOffset) * cwidth;
                    startX = (vertical) ? localY : localX;
                    startY = (vertical) ? localX : localY;

                    el.addEventListener('touchmove', onTouchMove, false);
                    el.addEventListener('touchend', onTouchEnd, false);
                  }
                }

                function onTouchMove(e) {
                  // Local vars for X and Y points.

                  localX = e.touches[0].pageX;
                  localY = e.touches[0].pageY;

                  dx = (vertical) ? startX - localY : startX - localX;
                  scrolling = (vertical) ? (Math.abs(dx) < Math.abs(localX -
                    startY)) : (Math.abs(dx) < Math.abs(localY - startY));

                  var fxms = 500;

                  if (!scrolling || Number(new Date()) - startT > fxms) {
                    e.preventDefault();
                    if (!fade && slider.transitions) {
                      if (!slider.vars.animationLoop) {
                        dx = dx / ((slider.currentSlide === 0 && dx < 0 ||
                            slider.currentSlide === slider.last && dx > 0) ?
                          (Math.abs(dx) / cwidth + 2) : 1);
                      }
                      slider.setProps(offset + dx, "setTouch");
                    }
                  }
                }

                function onTouchEnd(e) {
                  // finish the touch by undoing the touch session
                  el.removeEventListener('touchmove', onTouchMove, false);

                  if (slider.animatingTo === slider.currentSlide && !
                    scrolling && !(dx === null)) {
                    var updateDx = (reverse) ? -dx : dx,
                      target = (updateDx > 0) ? slider.getTarget('next') :
                      slider.getTarget('prev');

                    if (slider.canAdvance(target) && (Number(new Date()) -
                      startT < 550 && Math.abs(updateDx) > 50 || Math.abs(
                        updateDx) > cwidth / 2)) {
                      slider.flexAnimate(target, slider.vars.pauseOnAction);
                    } else {
                      if (!fade) slider.flexAnimate(slider.currentSlide,
                        slider.vars.pauseOnAction, true);
                    }
                  }
                  el.removeEventListener('touchend', onTouchEnd, false);

                  startX = null;
                  startY = null;
                  dx = null;
                  offset = null;
                }
              } else {
                el.style.msTouchAction = "none";
                el._gesture = new MSGesture();
                el._gesture.target = el;
                el.addEventListener("MSPointerDown", onMSPointerDown, false);
                el._slider = slider;
                el.addEventListener("MSGestureChange", onMSGestureChange,
                  false);
                el.addEventListener("MSGestureEnd", onMSGestureEnd, false);

                function onMSPointerDown(e) {
                  e.stopPropagation();
                  if (slider.animating) {
                    e.preventDefault();
                  } else {
                    slider.pause();
                    el._gesture.addPointer(e.pointerId);
                    accDx = 0;
                    cwidth = (vertical) ? slider.h : slider.w;
                    startT = Number(new Date());
                    // CAROUSEL:

                    offset = (carousel && reverse && slider.animatingTo ===
                      slider.last) ? 0 :
                      (carousel && reverse) ? slider.limit - (((slider.itemW +
                      slider.vars.itemMargin) * slider.move) * slider.animatingTo) :
                      (carousel && slider.currentSlide === slider.last) ?
                      slider.limit :
                      (carousel) ? ((slider.itemW + slider.vars.itemMargin) *
                        slider.move) * slider.currentSlide :
                      (reverse) ? (slider.last - slider.currentSlide +
                        slider.cloneOffset) * cwidth : (slider.currentSlide +
                        slider.cloneOffset) * cwidth;
                  }
                }

                function onMSGestureChange(e) {
                  e.stopPropagation();
                  var slider = e.target._slider;
                  if (!slider) {
                    return;
                  }
                  var transX = -e.translationX,
                    transY = -e.translationY;

                  //Accumulate translations.
                  accDx = accDx + ((vertical) ? transY : transX);
                  dx = accDx;
                  scrolling = (vertical) ? (Math.abs(accDx) < Math.abs(-
                    transX)) : (Math.abs(accDx) < Math.abs(-transY));

                  if (e.detail === e.MSGESTURE_FLAG_INERTIA) {
                    setImmediate(function() {
                      el._gesture.stop();
                    });

                    return;
                  }

                  if (!scrolling || Number(new Date()) - startT > 500) {
                    e.preventDefault();
                    if (!fade && slider.transitions) {
                      if (!slider.vars.animationLoop) {
                        dx = accDx / ((slider.currentSlide === 0 && accDx <
                          0 || slider.currentSlide === slider.last &&
                          accDx > 0) ? (Math.abs(accDx) / cwidth + 2) : 1);
                      }
                      slider.setProps(offset + dx, "setTouch");
                    }
                  }
                }

                function onMSGestureEnd(e) {
                  e.stopPropagation();
                  var slider = e.target._slider;
                  if (!slider) {
                    return;
                  }
                  if (slider.animatingTo === slider.currentSlide && !
                    scrolling && !(dx === null)) {
                    var updateDx = (reverse) ? -dx : dx,
                      target = (updateDx > 0) ? slider.getTarget('next') :
                      slider.getTarget('prev');

                    if (slider.canAdvance(target) && (Number(new Date()) -
                      startT < 550 && Math.abs(updateDx) > 50 || Math.abs(
                        updateDx) > cwidth / 2)) {
                      slider.flexAnimate(target, slider.vars.pauseOnAction);
                    } else {
                      if (!fade) slider.flexAnimate(slider.currentSlide,
                        slider.vars.pauseOnAction, true);
                    }
                  }

                  startX = null;
                  startY = null;
                  dx = null;
                  offset = null;
                  accDx = 0;
                }
              }
            },
            resize: function() {
              if (!slider.animating && slider.is(':visible')) {
                if (!carousel) slider.doMath();

                if (fade) {
                  // SMOOTH HEIGHT:
                  methods.smoothHeight();
                } else if (carousel) { //CAROUSEL:
                  slider.slides.width(slider.computedW);
                  slider.update(slider.pagingCount);
                  slider.setProps();
                } else if (vertical) { //VERTICAL:
                  slider.viewport.height(slider.h);
                  slider.setProps(slider.h, "setTotal");
                } else {
                  // SMOOTH HEIGHT:
                  if (slider.vars.smoothHeight) methods.smoothHeight();
                  slider.newSlides.width(slider.computedW);
                  slider.setProps(slider.computedW, "setTotal");
                }
              }
            },
            smoothHeight: function(dur) {
              if (!vertical || fade) {
                var $obj = (fade) ? slider : slider.viewport;
                (dur) ? $obj.animate({
                  "height": slider.slides.eq(slider.animatingTo).height()
                }, dur) : $obj.height(slider.slides.eq(slider.animatingTo).height());
              }
            },
            sync: function(action) {
              var $obj = $(slider.vars.sync).data("flexslider"),
                target = slider.animatingTo;

              switch (action) {
                case "animate":
                  $obj.flexAnimate(target, slider.vars.pauseOnAction, false,
                    true);
                  break;
                case "play":
                  if (!$obj.playing && !$obj.asNav) {
                    $obj.play();
                  }
                  break;
                case "pause":
                  $obj.pause();
                  break;
              }
            },
            uniqueID: function($clone) {
              // Append _clone to current level and children elements with id attributes
              $clone.filter('[id]').add($clone.find('[id]')).each(function() {
                var $this = $(this);
                $this.attr('id', $this.attr('id') + '_clone');
              });
              return $clone;
            },
            pauseInvisible: {
              visProp: null,
              init: function() {
                var prefixes = ['webkit', 'moz', 'ms', 'o'];

                if ('hidden' in document) return 'hidden';
                for (var i = 0; i < prefixes.length; i++) {
                  if ((prefixes[i] + 'Hidden') in document)
                    methods.pauseInvisible.visProp = prefixes[i] + 'Hidden';
                }
                if (methods.pauseInvisible.visProp) {
                  var evtname = methods.pauseInvisible.visProp.replace(
                    /[H|h]idden/, '') + 'visibilitychange';
                  document.addEventListener(evtname, function() {
                    if (methods.pauseInvisible.isHidden()) {
                      if (slider.startTimeout) clearTimeout(slider.startTimeout); //If clock is ticking, stop timer and prevent from starting while invisible
                      else slider.pause(); //Or just pause
                    } else {
                      if (slider.started) slider.play(); //Initiated before, just play
                      else(slider.vars.initDelay > 0) ? setTimeout(slider
                        .play, slider.vars.initDelay) : slider.play(); //Didn't init before: simply init or wait for it
                    }
                  });
                }
              },
              isHidden: function() {
                return document[methods.pauseInvisible.visProp] || false;
              }
            },
            setToClearWatchedEvent: function() {
              clearTimeout(watchedEventClearTimer);
              watchedEventClearTimer = setTimeout(function() {
                watchedEvent = "";
              }, 3000);
            }
          };

          // public methods
          slider.flexAnimate = function(target, pause, override, withSync,
            fromNav) {
            if (!slider.vars.animationLoop && target !== slider.currentSlide) {
              slider.direction = (target > slider.currentSlide) ? "next" :
                "prev";
            }

            if (asNav && slider.pagingCount === 1) slider.direction = (
              slider.currentItem < target) ? "next" : "prev";

            if (!slider.animating && (slider.canAdvance(target, fromNav) ||
              override) && slider.is(":visible")) {
              if (asNav && withSync) {
                var master = $(slider.vars.asNavFor).data('flexslider');
                slider.atEnd = target === 0 || target === slider.count - 1;
                master.flexAnimate(target, true, false, true, fromNav);
                slider.direction = (slider.currentItem < target) ? "next" :
                  "prev";
                master.direction = slider.direction;

                if (Math.ceil((target + 1) / slider.visible) - 1 !== slider
                  .currentSlide && target !== 0) {
                  slider.currentItem = target;
                  slider.slides.removeClass(namespace + "active-slide").eq(
                    target).addClass(namespace + "active-slide");
                  target = Math.floor(target / slider.visible);
                } else {
                  slider.currentItem = target;
                  slider.slides.removeClass(namespace + "active-slide").eq(
                    target).addClass(namespace + "active-slide");
                  return false;
                }
              }

              slider.animating = true;
              slider.animatingTo = target;

              // SLIDESHOW:
              if (pause) slider.pause();

              // API: before() animation Callback
              slider.vars.before(slider);

              // SYNC:
              if (slider.syncExists && !fromNav) methods.sync("animate");

              // CONTROLNAV
              if (slider.vars.controlNav) methods.controlNav.active();

              // !CAROUSEL:
              // CANDIDATE: slide active class (for add/remove slide)
              if (!carousel) slider.slides.removeClass(namespace +
                'active-slide').eq(target).addClass(namespace +
                'active-slide');

              // INFINITE LOOP:
              // CANDIDATE: atEnd
              slider.atEnd = target === 0 || target === slider.last;

              // DIRECTIONNAV:
              if (slider.vars.directionNav) methods.directionNav.update();

              if (target === slider.last) {
                // API: end() of cycle Callback
                slider.vars.end(slider);
                // SLIDESHOW && !INFINITE LOOP:
                if (!slider.vars.animationLoop) slider.pause();
              }

              // SLIDE:
              if (!fade) {
                var dimension = (vertical) ? slider.slides.filter(':first')
                  .height() : slider.computedW,
                  margin, slideString, calcNext;

                // INFINITE LOOP / REVERSE:
                if (carousel) {
                  //margin = (slider.vars.itemWidth > slider.w) ? slider.vars.itemMargin * 2 : slider.vars.itemMargin;
                  margin = slider.vars.itemMargin;
                  calcNext = ((slider.itemW + margin) * slider.move) *
                    slider.animatingTo;
                  slideString = (calcNext > slider.limit && slider.visible !==
                    1) ? slider.limit : calcNext;
                } else if (slider.currentSlide === 0 && target === slider.count -
                  1 && slider.vars.animationLoop && slider.direction !==
                  "next") {
                  slideString = (reverse) ? (slider.count + slider.cloneOffset) *
                    dimension : 0;
                } else if (slider.currentSlide === slider.last && target ===
                  0 && slider.vars.animationLoop && slider.direction !==
                  "prev") {
                  slideString = (reverse) ? 0 : (slider.count + 1) *
                    dimension;
                } else {
                  slideString = (reverse) ? ((slider.count - 1) - target +
                    slider.cloneOffset) * dimension : (target + slider.cloneOffset) *
                    dimension;
                }
                slider.setProps(slideString, "", slider.vars.animationSpeed);
                if (slider.transitions) {
                  if (!slider.vars.animationLoop || !slider.atEnd) {
                    slider.animating = false;
                    slider.currentSlide = slider.animatingTo;
                  }

                  // Unbind previous transitionEnd events and re-bind new transitionEnd event
                  slider.container.unbind(
                    "webkitTransitionEnd transitionend");
                  slider.container.bind("webkitTransitionEnd transitionend",
                    function() {
                      clearTimeout(slider.ensureAnimationEnd);
                      slider.wrapup(dimension);
                    });

                  // Insurance for the ever-so-fickle transitionEnd event
                  clearTimeout(slider.ensureAnimationEnd);
                  slider.ensureAnimationEnd = setTimeout(function() {
                    slider.wrapup(dimension);
                  }, slider.vars.animationSpeed + 100);

                } else {
                  slider.container.animate(slider.args, slider.vars.animationSpeed,
                    slider.vars.easing, function() {
                      slider.wrapup(dimension);
                    });
                }
              } else { // FADE:
                if (!touch) {
                  //slider.slides.eq(slider.currentSlide).fadeOut(slider.vars.animationSpeed, slider.vars.easing);
                  //slider.slides.eq(target).fadeIn(slider.vars.animationSpeed, slider.vars.easing, slider.wrapup);

                  slider.slides.eq(slider.currentSlide).css({
                    "zIndex": 1
                  }).animate({
                    "opacity": 0
                  }, slider.vars.animationSpeed, slider.vars.easing);
                  slider.slides.eq(target).css({
                    "zIndex": 2
                  }).animate({
                      "opacity": 1
                    }, slider.vars.animationSpeed, slider.vars.easing,
                    slider.wrapup);

                } else {
                  slider.slides.eq(slider.currentSlide).css({
                    "opacity": 0,
                    "zIndex": 1
                  });
                  slider.slides.eq(target).css({
                    "opacity": 1,
                    "zIndex": 2
                  });
                  slider.wrapup(dimension);
                }
              }
              // SMOOTH HEIGHT:
              if (slider.vars.smoothHeight) methods.smoothHeight(slider.vars
                .animationSpeed);
            }
          };
          slider.wrapup = function(dimension) {
            // SLIDE:
            if (!fade && !carousel) {
              if (slider.currentSlide === 0 && slider.animatingTo ===
                slider.last && slider.vars.animationLoop) {
                slider.setProps(dimension, "jumpEnd");
              } else if (slider.currentSlide === slider.last && slider.animatingTo ===
                0 && slider.vars.animationLoop) {
                slider.setProps(dimension, "jumpStart");
              }
            }
            slider.animating = false;
            slider.currentSlide = slider.animatingTo;
            // API: after() animation Callback
            slider.vars.after(slider);
          };

          // SLIDESHOW:
          slider.animateSlides = function() {
            if (!slider.animating && focused) slider.flexAnimate(slider.getTarget(
              "next"));
          };
          // SLIDESHOW:
          slider.pause = function() {
            clearInterval(slider.animatedSlides);
            slider.animatedSlides = null;
            slider.playing = false;
            // PAUSEPLAY:
            if (slider.vars.pausePlay) methods.pausePlay.update("play");
            // SYNC:
            if (slider.syncExists) methods.sync("pause");
          };
          // SLIDESHOW:
          slider.play = function() {
            if (slider.playing) clearInterval(slider.animatedSlides);
            slider.animatedSlides = slider.animatedSlides || setInterval(
              slider.animateSlides, slider.vars.slideshowSpeed);
            slider.started = slider.playing = true;
            // PAUSEPLAY:
            if (slider.vars.pausePlay) methods.pausePlay.update("pause");
            // SYNC:
            if (slider.syncExists) methods.sync("play");
          };
          // STOP:
          slider.stop = function() {
            slider.pause();
            slider.stopped = true;
          };
          slider.canAdvance = function(target, fromNav) {
            // ASNAV:
            var last = (asNav) ? slider.pagingCount - 1 : slider.last;
            return (fromNav) ? true :
              (asNav && slider.currentItem === slider.count - 1 && target ===
                0 && slider.direction === "prev") ? true :
              (asNav && slider.currentItem === 0 && target === slider.pagingCount -
                1 && slider.direction !== "next") ? false :
              (target === slider.currentSlide && !asNav) ? false :
              (slider.vars.animationLoop) ? true :
              (slider.atEnd && slider.currentSlide === 0 && target === last &&
                slider.direction !== "next") ? false :
              (slider.atEnd && slider.currentSlide === last && target === 0 &&
                slider.direction === "next") ? false :
              true;
          };
          slider.getTarget = function(dir) {
            slider.direction = dir;
            if (dir === "next") {
              return (slider.currentSlide === slider.last) ? 0 : slider.currentSlide +
                1;
            } else {
              return (slider.currentSlide === 0) ? slider.last : slider.currentSlide -
                1;
            }
          };

          // SLIDE:
          slider.setProps = function(pos, special, dur) {
            var target = (function() {
              var posCheck = (pos) ? pos : ((slider.itemW + slider.vars
                  .itemMargin) * slider.move) * slider.animatingTo,
                posCalc = (function() {
                  if (carousel) {
                    return (special === "setTouch") ? pos :
                      (reverse && slider.animatingTo === slider.last) ?
                      0 :
                      (reverse) ? slider.limit - (((slider.itemW +
                          slider.vars.itemMargin) * slider.move) *
                        slider.animatingTo) :
                      (slider.animatingTo === slider.last) ? slider.limit :
                      posCheck;
                  } else {
                    switch (special) {
                      case "setTotal":
                        return (reverse) ? ((slider.count - 1) -
                            slider.currentSlide + slider.cloneOffset) *
                          pos : (slider.currentSlide + slider.cloneOffset) *
                          pos;
                      case "setTouch":
                        return (reverse) ? pos : pos;
                      case "jumpEnd":
                        return (reverse) ? pos : slider.count * pos;
                      case "jumpStart":
                        return (reverse) ? slider.count * pos : pos;
                      default:
                        return pos;
                    }
                  }
                }());

              return (posCalc * -1) + "px";
            }());

            if (slider.transitions) {
              target = (vertical) ? "translate3d(0," + target + ",0)" :
                "translate3d(" + target + ",0,0)";
              dur = (dur !== undefined) ? (dur / 1000) + "s" : "0s";
              slider.container.css("-" + slider.pfx +
                "-transition-duration", dur);
              slider.container.css("transition-duration", dur);
            }

            slider.args[slider.prop] = target;
            if (slider.transitions || dur === undefined) slider.container.css(
              slider.args);

            slider.container.css('transform', target);
          };

          slider.setup = function(type) {
            // SLIDE:
            if (!fade) {
              var sliderOffset, arr;

              if (type === "init") {
                slider.viewport = $('<div class="' + namespace +
                  'viewport"></div>').css({
                  "overflow": "hidden",
                  "position": "relative"
                }).appendTo(slider).append(slider.container);
                // INFINITE LOOP:
                slider.cloneCount = 0;
                slider.cloneOffset = 0;
                // REVERSE:
                if (reverse) {
                  arr = $.makeArray(slider.slides).reverse();
                  slider.slides = $(arr);
                  slider.container.empty().append(slider.slides);
                }
              }
              // INFINITE LOOP && !CAROUSEL:
              if (slider.vars.animationLoop && !carousel) {
                slider.cloneCount = 2;
                slider.cloneOffset = 1;
                // clear out old clones
                if (type !== "init") slider.container.find('.clone').remove();
                slider.container.append(methods.uniqueID(slider.slides.first()
                  .clone().addClass('clone')).attr('aria-hidden', 'true'))
                  .prepend(methods.uniqueID(slider.slides.last().clone().addClass(
                    'clone')).attr('aria-hidden', 'true'));
              }
              slider.newSlides = $(slider.vars.selector, slider);

              sliderOffset = (reverse) ? slider.count - 1 - slider.currentSlide +
                slider.cloneOffset : slider.currentSlide + slider.cloneOffset;
              // VERTICAL:
              if (vertical && !carousel) {
                slider.container.height((slider.count + slider.cloneCount) *
                  200 + "%").css("position", "absolute").width("100%");
                setTimeout(function() {
                  slider.newSlides.css({
                    "display": "block"
                  });
                  slider.doMath();
                  slider.viewport.height(slider.h);
                  slider.setProps(sliderOffset * slider.h, "init");
                }, (type === "init") ? 100 : 0);
              } else {
                slider.container.width((slider.count + slider.cloneCount) *
                  200 + "%");
                slider.setProps(sliderOffset * slider.computedW, "init");
                setTimeout(function() {
                  slider.doMath();
                  slider.newSlides.css({
                    "width": slider.computedW,
                    "float": "left",
                    "display": "block"
                  });
                  // SMOOTH HEIGHT:
                  if (slider.vars.smoothHeight) methods.smoothHeight();
                }, (type === "init") ? 100 : 0);
              }
            } else { // FADE:
              slider.slides.css({
                "width": "100%",
                "float": "left",
                "marginRight": "-100%",
                "position": "relative"
              });
              if (type === "init") {
                if (!touch) {
                  //slider.slides.eq(slider.currentSlide).fadeIn(slider.vars.animationSpeed, slider.vars.easing);
                  if (slider.vars.fadeFirstSlide == false) {
                    slider.slides.css({
                      "opacity": 0,
                      "display": "block",
                      "zIndex": 1
                    }).eq(slider.currentSlide).css({
                      "zIndex": 2
                    }).css({
                      "opacity": 1
                    });
                  } else {
                    slider.slides.css({
                      "opacity": 0,
                      "display": "block",
                      "zIndex": 1
                    }).eq(slider.currentSlide).css({
                      "zIndex": 2
                    }).animate({
                      "opacity": 1
                    }, slider.vars.animationSpeed, slider.vars.easing);
                  }
                } else {
                  slider.slides.css({
                    "opacity": 0,
                    "display": "block",
                    "webkitTransition": "opacity " + slider.vars.animationSpeed /
                      1000 + "s ease",
                    "zIndex": 1
                  }).eq(slider.currentSlide).css({
                    "opacity": 1,
                    "zIndex": 2
                  });
                }
              }
              // SMOOTH HEIGHT:
              if (slider.vars.smoothHeight) methods.smoothHeight();
            }
            // !CAROUSEL:
            // CANDIDATE: active slide
            if (!carousel) slider.slides.removeClass(namespace +
              "active-slide").eq(slider.currentSlide).addClass(namespace +
              "active-slide");

            //FlexSlider: init() Callback
            slider.vars.init(slider);
          };

          slider.doMath = function() {
            var slide = slider.slides.first(),
              slideMargin = slider.vars.itemMargin,
              minItems = slider.vars.minItems,
              maxItems = slider.vars.maxItems;

            slider.w = (slider.viewport === undefined) ? slider.width() :
              slider.viewport.width();
            slider.h = slide.height();
            slider.boxPadding = slide.outerWidth() - slide.width();

            // CAROUSEL:
            if (carousel) {
              slider.itemT = slider.vars.itemWidth + slideMargin;
              slider.minW = (minItems) ? minItems * slider.itemT : slider.w;
              slider.maxW = (maxItems) ? (maxItems * slider.itemT) -
                slideMargin : slider.w;
              slider.itemW = (slider.minW > slider.w) ? (slider.w - (
                slideMargin * (minItems - 1))) / minItems :
                (slider.maxW < slider.w) ? (slider.w - (slideMargin * (
                maxItems - 1))) / maxItems :
                (slider.vars.itemWidth > slider.w) ? slider.w : slider.vars
                .itemWidth;

              slider.visible = Math.floor(slider.w / (slider.itemW));
              slider.move = (slider.vars.move > 0 && slider.vars.move <
                slider.visible) ? slider.vars.move : slider.visible;
              slider.pagingCount = Math.ceil(((slider.count - slider.visible) /
                slider.move) + 1);
              slider.last = slider.pagingCount - 1;
              slider.limit = (slider.pagingCount === 1) ? 0 :
                (slider.vars.itemWidth > slider.w) ? (slider.itemW * (
                slider.count - 1)) + (slideMargin * (slider.count - 1)) : (
                (slider.itemW + slideMargin) * slider.count) - slider.w -
                slideMargin;
            } else {
              slider.itemW = slider.w;
              slider.pagingCount = slider.count;
              slider.last = slider.count - 1;
            }
            slider.computedW = slider.itemW - slider.boxPadding;
          };

          slider.update = function(pos, action) {
            slider.doMath();

            // update currentSlide and slider.animatingTo if necessary
            if (!carousel) {
              if (pos < slider.currentSlide) {
                slider.currentSlide += 1;
              } else if (pos <= slider.currentSlide && pos !== 0) {
                slider.currentSlide -= 1;
              }
              slider.animatingTo = slider.currentSlide;
            }

            // update controlNav
            if (slider.vars.controlNav && !slider.manualControls) {
              if ((action === "add" && !carousel) || slider.pagingCount >
                slider.controlNav.length) {
                methods.controlNav.update("add");
              } else if ((action === "remove" && !carousel) || slider.pagingCount <
                slider.controlNav.length) {
                if (carousel && slider.currentSlide > slider.last) {
                  slider.currentSlide -= 1;
                  slider.animatingTo -= 1;
                }
                methods.controlNav.update("remove", slider.last);
              }
            }
            // update directionNav
            if (slider.vars.directionNav) methods.directionNav.update();

          };

          slider.addSlide = function(obj, pos) {
            var $obj = $(obj);

            slider.count += 1;
            slider.last = slider.count - 1;

            // append new slide
            if (vertical && reverse) {
              (pos !== undefined) ? slider.slides.eq(slider.count - pos).after(
                $obj) : slider.container.prepend($obj);
            } else {
              (pos !== undefined) ? slider.slides.eq(pos).before($obj) :
                slider.container.append($obj);
            }

            // update currentSlide, animatingTo, controlNav, and directionNav
            slider.update(pos, "add");

            // update slider.slides
            slider.slides = $(slider.vars.selector + ':not(.clone)', slider);
            // re-setup the slider to accomdate new slide
            slider.setup();

            //FlexSlider: added() Callback
            slider.vars.added(slider);
          };
          slider.removeSlide = function(obj) {
            var pos = (isNaN(obj)) ? slider.slides.index($(obj)) : obj;

            // update count
            slider.count -= 1;
            slider.last = slider.count - 1;

            // remove slide
            if (isNaN(obj)) {
              $(obj, slider.slides).remove();
            } else {
              (vertical && reverse) ? slider.slides.eq(slider.last).remove() :
                slider.slides.eq(obj).remove();
            }

            // update currentSlide, animatingTo, controlNav, and directionNav
            slider.doMath();
            slider.update(pos, "remove");

            // update slider.slides
            slider.slides = $(slider.vars.selector + ':not(.clone)', slider);
            // re-setup the slider to accomdate new slide
            slider.setup();

            // FlexSlider: removed() Callback
            slider.vars.removed(slider);
          };

          //FlexSlider: Initialize
          methods.init();
        };

        // Ensure the slider isn't focussed if the window loses focus.
        $(window).blur(function(e) {
          focused = false;
        }).focus(function(e) {
          focused = true;
        });

        // FlexSlider: Default Settings
        $.flexslider.defaults = {
          namespace: "am-", //{NEW} String: Prefix string attached to the class of every element generated by the plugin
          selector: ".am-slides > li", //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril
          animation: "slide", //String: Select your animation type, "fade" or "slide"
          easing: "swing", //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!
          direction: "horizontal", //String: Select the sliding direction, "horizontal" or "vertical"
          reverse: false, //{NEW} Boolean: Reverse the animation direction
          animationLoop: true, //Boolean: Should the animation loop? If false, directionNav will received "disable" classes at either end
          smoothHeight: false, //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode
          startAt: 0, //Integer: The slide that the slider should start on. Array notation (0 = first slide)
          slideshow: true, //Boolean: Animate slider automatically
          slideshowSpeed: 5000, //Integer: Set the speed of the slideshow cycling, in milliseconds
          animationSpeed: 600, //Integer: Set the speed of animations, in milliseconds
          initDelay: 0, //{NEW} Integer: Set an initialization delay, in milliseconds
          randomize: false, //Boolean: Randomize slide order
          fadeFirstSlide: true, //Boolean: Fade in the first slide when animation type is "fade"
          thumbCaptions: false, //Boolean: Whether or not to put captions on thumbnails when using the "thumbnails" controlNav.

          // Usability features
          pauseOnAction: true, //Boolean: Pause the slideshow when interacting with control elements, highly recommended.
          pauseOnHover: false, //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering
          pauseInvisible: true, //{NEW} Boolean: Pause the slideshow when tab is invisible, resume when visible. Provides better UX, lower CPU usage.
          useCSS: true, //{NEW} Boolean: Slider will use CSS3 transitions if available
          touch: true, //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices
          video: false, //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches

          // Primary Controls
          controlNav: true, //Boolean: Create navigation for paging control of each slide? Note: Leave true for manualControls usage
          directionNav: true, //Boolean: Create navigation for previous/next navigation? (true/false)
          prevText: "Previous", //String: Set the text for the "previous" directionNav item
          nextText: "Next", //String: Set the text for the "next" directionNav item

          // Secondary Navigation
          keyboard: true, //Boolean: Allow slider navigating via keyboard left/right keys
          multipleKeyboard: false, //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.
          mousewheel: false, //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel
          pausePlay: false, //Boolean: Create pause/play dynamic element
          pauseText: "Pause", //String: Set the text for the "pause" pausePlay item
          playText: "Play", //String: Set the text for the "play" pausePlay item

          // Special properties
          controlsContainer: "", //{UPDATED} jQuery Object/Selector: Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be $(".flexslider-container"). Property is ignored if given element is not found.
          manualControls: "", //{UPDATED} jQuery Object/Selector: Declare custom control navigation. Examples would be $(".flex-control-nav li") or "#tabs-nav li img", etc. The number of elements in your controlNav should match the number of slides/tabs.
          sync: "", //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.
          asNavFor: "", //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider

          // Carousel Options
          itemWidth: 0, //{NEW} Integer: Box-model width of individual carousel items, including horizontal borders and padding.
          itemMargin: 0, //{NEW} Integer: Margin between carousel items.
          minItems: 1, //{NEW} Integer: Minimum number of carousel items that should be visible. Items will resize fluidly when below this.
          maxItems: 0, //{NEW} Integer: Maxmimum number of carousel items that should be visible. Items will resize fluidly when above this limit.
          move: 0, //{NEW} Integer: Number of carousel items that should move on animation. If 0, slider will move all visible items.
          allowOneSlide: true, //{NEW} Boolean: Whether or not to allow a slider comprised of a single slide

          // Callback API
          start: function() {}, //Callback: function(slider) - Fires when the slider loads the first slide
          before: function() {}, //Callback: function(slider) - Fires asynchronously with each slider animation
          after: function() {}, //Callback: function(slider) - Fires after each slider animation completes
          end: function() {}, //Callback: function(slider) - Fires when the slider reaches the last slide (asynchronous)
          added: function() {}, //{NEW} Callback: function(slider) - Fires after a slide is added
          removed: function() {}, //{NEW} Callback: function(slider) - Fires after a slide is removed
          init: function() {} //{NEW} Callback: function(slider) - Fires after the slider is initially setup
        };

        // FlexSlider: Plugin Function
        $.fn.flexslider = function(options) {
          if (options === undefined) options = {};

          if (typeof options === "object") {
            return this.each(function() {
              var $this = $(this),
                selector = (options.selector) ? options.selector :
                ".am-slides > li",
                $slides = $this.find(selector);

              if (($slides.length === 1 && options.allowOneSlide ===
                true) || $slides.length === 0) {
                $slides.fadeIn(400);
                if (options.start) options.start($this);
              } else if ($this.data('flexslider') === undefined) {
                new $.flexslider(this, options);
              }
            });
          } else {
            // Helper strings to quickly pecdrform functions on the slider
            var $slider = $(this).data('flexslider');
            switch (options) {
              case 'play':
                $slider.play();
                break;
              case 'pause':
                $slider.pause();
                break;
              case 'stop':
                $slider.stop();
                break;
              case 'next':
                $slider.flexAnimate($slider.getTarget('next'), true);
                break;
              case 'prev':
              case 'previous':
                $slider.flexAnimate($slider.getTarget('prev'), true);
                break;
              default:
                if (typeof options === 'number') {
                  $slider.flexAnimate(options, true);
                }
            }
          }
        };

        // Init code
        UI.ready(function(context) {
          $('[data-am-flexslider]', context).each(function(i, item) {
            var $slider = $(item);
            var options = UI.utils.parseOptions($slider.data(
              'amFlexslider'));

            options.before = function(slider) {
              if (slider._pausedTimer) {
                window.clearTimeout(slider._pausedTimer);
                slider._pausedTimer = null;
              }
            };

            options.after = function(slider) {
              var pauseTime = slider.vars.playAfterPaused;
              if (pauseTime && !isNaN(pauseTime) && !slider.playing) {
                if (!slider.manualPause && !slider.manualPlay && !
                  slider.stopped) {
                  slider._pausedTimer = window.setTimeout(function() {
                    slider.play();
                  }, pauseTime);
                }
              }
            };

            $slider.flexslider(options);
          });
        });

        // if (!slider.manualPause && !slider.manualPlay && !slider.stopped) slider.play();

        module.exports = $.flexslider;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2
    }
  ],
  9: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var dimmer = require('./ui.dimmer');
        var $doc = $(document);
        var supportTransition = UI.support.transition;

        /**
         * @reference https://github.com/nolimits4web/Framework7/blob/master/src/js/modals.js
         * @license https://github.com/nolimits4web/Framework7/blob/master/LICENSE
         */

        var Modal = function(element, options) {
          this.options = $.extend({}, Modal.DEFAULTS, options || {});
          this.$element = $(element);
          this.$dialog = this.$element.find('.am-modal-dialog');

          if (!this.$element.attr('id')) {
            this.$element.attr('id', UI.utils.generateGUID('am-modal'));
          }

          this.isPopup = this.$element.hasClass('am-popup');
          this.isActions = this.$element.hasClass('am-modal-actions');
          this.isPrompt = this.$element.hasClass('am-modal-prompt');
          this.isLoading = this.$element.hasClass('am-modal-loading');
          this.active = this.transitioning = this.relatedTarget = null;

          this.events();
        };

        Modal.DEFAULTS = {
          className: {
            active: 'am-modal-active',
            out: 'am-modal-out'
          },
          selector: {
            modal: '.am-modal',
            active: '.am-modal-active'
          },
          closeViaDimmer: true,
          cancelable: true,
          onConfirm: function() {},
          onCancel: function() {},
          height: undefined,
          width: undefined,
          duration: 300, // must equal the CSS transition duration
          transitionEnd: supportTransition && supportTransition.end +
            '.modal.amui'
        };

        Modal.prototype.toggle = function(relatedTarget) {
          return this.active ? this.close() : this.open(relatedTarget);
        };

        Modal.prototype.open = function(relatedTarget) {
          var $element = this.$element;
          var options = this.options;
          var isPopup = this.isPopup;
          var width = options.width;
          var height = options.height;
          var style = {};

          if (this.active) {
            return;
          }

          if (!this.$element.length) {
            return;
          }

          // callback hook
          relatedTarget && (this.relatedTarget = relatedTarget);

          // 判断如果还在动画，就先触发之前的closed事件
          if (this.transitioning) {
            clearTimeout($element.transitionEndTimmer);
            $element.transitionEndTimmer = null;
            $element.trigger(options.transitionEnd).off(options.transitionEnd);
          }

          isPopup && this.$element.show();

          this.active = true;

          $element.trigger($.Event('open.modal.amui', {
            relatedTarget: relatedTarget
          }));

          dimmer.open($element);

          $element.show().redraw();

          // apply Modal width/height if set
          if (!isPopup && !this.isActions) {
            if (width) {
              width = parseInt(width, 10);
              style.width = width + 'px';
              style.marginLeft = -parseInt(width / 2) + 'px';
            }

            if (height) {
              height = parseInt(height, 10);
              // style.height = height + 'px';
              style.marginTop = -parseInt(height / 2) + 'px';

              // the background color is styled to $dialog
              // so the height should set to $dialog
              this.$dialog.css({
                height: height + 'px'
              });
            } else {
              style.marginTop = -parseInt($element.height() / 2, 10) + 'px';
            }

            $element.css(style);
          }

          $element.
          removeClass(options.className.out).
          addClass(options.className.active);

          this.transitioning = 1;

          var complete = function() {
            $element.trigger($.Event('opened.modal.amui', {
              relatedTarget: relatedTarget
            }));
            this.transitioning = 0;

            // Prompt auto focus
            if (this.isPrompt) {
              this.$dialog.find('input').eq(0).focus();
            }
          };

          if (!supportTransition) {
            return complete.call(this);
          }

          $element.
          one(options.transitionEnd, $.proxy(complete, this)).
          emulateTransitionEnd(options.duration);
        };

        Modal.prototype.close = function(relatedTarget) {
          if (!this.active) {
            return;
          }

          var $element = this.$element;
          var options = this.options;
          var isPopup = this.isPopup;

          // 判断如果还在动画，就先触发之前的opened事件
          if (this.transitioning) {
            clearTimeout($element.transitionEndTimmer);
            $element.transitionEndTimmer = null;
            $element.trigger(options.transitionEnd).off(options.transitionEnd);
            dimmer.close($element, true);
          }

          this.$element.trigger($.Event('close.modal.amui', {
            relatedTarget: relatedTarget
          }));

          this.transitioning = 1;

          var complete = function() {
            $element.trigger('closed.modal.amui');
            isPopup && $element.removeClass(options.className.out);
            $element.hide();
            this.transitioning = 0;
            // 不强制关闭 Dimmer，以便多个 Modal 可以共享 Dimmer
            dimmer.close($element, false);
            this.active = false;
          };

          $element.removeClass(options.className.active).
          addClass(options.className.out);

          if (!supportTransition) {
            return complete.call(this);
          }

          $element.one(options.transitionEnd, $.proxy(complete, this)).
          emulateTransitionEnd(options.duration);
        };

        Modal.prototype.events = function() {
          var that = this;
          var $element = this.$element;
          var $ipt = $element.find('.am-modal-prompt-input');
          var getData = function() {
            var data = [];
            $ipt.each(function() {
              data.push($(this).val());
            });

            return (data.length === 0) ? undefined :
              ((data.length === 1) ? data[0] : data);
          };

          // close via Esc key
          if (this.options.cancelable) {
            $element.on('keyup.modal.amui', function(e) {
              if (that.active && e.which === 27) {
                $element.trigger('cancel.modal.amui');
                that.close();
              }
            });
          }

          // Close Modal when dimmer clicked
          if (this.options.closeViaDimmer && !this.isLoading) {
            dimmer.$element.on('click.dimmer.modal.amui', function(e) {
              that.close();
            });
          }

          // Close Modal when button clicked
          $element.find('[data-am-modal-close], .am-modal-btn').
          on('click.close.modal.amui', function(e) {
            e.preventDefault();
            that.close();
          });

          $element.find('[data-am-modal-confirm]').on(
            'click.confirm.modal.amui',
            function() {
              $element.trigger($.Event('confirm.modal.amui', {
                trigger: this
              }));
            });

          $element.find('[data-am-modal-cancel]').
          on('click.cancel.modal.amui', function() {
            $element.trigger($.Event('cancel.modal.amui', {
              trigger: this
            }));
          });

          $element.on('confirm.modal.amui', function(e) {
            e.data = getData();
            that.options.onConfirm.call(that, e);
          }).on('cancel.modal.amui', function(e) {
            e.data = getData();
            that.options.onCancel.call(that, e);
          });
        };

        function Plugin(option, relatedTarget) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.modal');
            var options = $.extend({},
              Modal.DEFAULTS, typeof option == 'object' && option);

            if (!data) {
              $this.data('amui.modal', (data = new Modal(this, options)));
            }

            if (typeof option == 'string') {
              data[option] && data[option](relatedTarget);
            } else {
              data.toggle(option && option.relatedTarget || undefined);
            }
          });
        }

        $.fn.modal = Plugin;

        // Init
        $doc.on('click.modal.amui.data-api', '[data-am-modal]', function() {
          var $this = $(this);
          var options = UI.utils.parseOptions($this.attr('data-am-modal'));
          var $target = $(options.target ||
            (this.href && this.href.replace(/.*(?=#[^\s]+$)/, '')));
          var option = $target.data('amui.modal') ? 'toggle' : options;

          Plugin.call($target, option, this);
        });

        $.AMUI.modal = Modal;

        module.exports = Modal;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2,
      "./ui.dimmer": 6
    }
  ],
  10: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var Hammer = require('./util.hammer');
        var $win = $(window);
        var $doc = $(document);
        var scrollPos;

        /**
         * @via https://github.com/uikit/uikit/blob/master/src/js/offcanvas.js
         * @license https://github.com/uikit/uikit/blob/master/LICENSE.md
         */

        var OffCanvas = function(element, options) {
          this.$element = $(element);
          this.options = $.extend({}, OffCanvas.DEFAULTS, options);
          this.active = null;
          this.bindEvents();
        };

        OffCanvas.DEFAULTS = {
          duration: 300,
          effect: 'overlay' // {push|overlay}, push is too expensive
        };

        OffCanvas.prototype.open = function(relatedElement) {
          var _this = this;
          var $element = this.$element;

          if (!$element.length || $element.hasClass('am-active')) {
            return;
          }

          var effect = this.options.effect;
          var $html = $('html');
          var $body = $('body');
          var $bar = $element.find('.am-offcanvas-bar').first();
          var dir = $bar.hasClass('am-offcanvas-bar-flip') ? -1 : 1;

          $bar.addClass('am-offcanvas-bar-' + effect);

          scrollPos = {
            x: window.scrollX,
            y: window.scrollY
          };

          $element.addClass('am-active');

          $body.css({
            width: window.innerWidth,
            height: $win.height()
          }).addClass('am-offcanvas-page');

          if (effect !== 'overlay') {
            $body.css({
              'margin-left': $bar.outerWidth() * dir
            }).width(); // force redraw
          }

          $html.css('margin-top', scrollPos.y * -1);

          setTimeout(function() {
            $bar.addClass('am-offcanvas-bar-active').width();
          }, 0);

          $element.trigger('open.offcanvas.amui');

          this.active = 1;

          // Close OffCanvas when none content area clicked
          $element.on('click.offcanvas.amui', function(e) {
            var $target = $(e.target);

            if ($target.hasClass('am-offcanvas-bar')) {
              return;
            }

            if ($target.parents('.am-offcanvas-bar').first().length) {
              return;
            }

            // https://developer.mozilla.org/zh-CN/docs/DOM/event.stopImmediatePropagation
            e.stopImmediatePropagation();

            _this.close();
          });

          $html.on('keydown.offcanvas.amui', function(e) {
            (e.keyCode === 27) && _this.close();
          });
        };

        OffCanvas.prototype.close = function(relatedElement) {
          var _this = this;
          var $html = $('html');
          var $body = $('body');
          var $element = this.$element;
          var $bar = $element.find('.am-offcanvas-bar').first();

          if (!$element.length || !this.active || !$element.hasClass(
            'am-active')) {
            return;
          }

          $element.trigger('close.offcanvas.amui');

          function complete() {
            $body.removeClass('am-offcanvas-page').
            css({
              width: '',
              height: '',
              'margin-left': '',
              'margin-right': ''
            });
            $element.removeClass('am-active');
            $bar.removeClass('am-offcanvas-bar-active');
            $html.css('margin-top', '');
            window.scrollTo(scrollPos.x, scrollPos.y);
            $element.trigger('closed.offcanvas.amui');
            _this.active = 0;
          }

          if (UI.support.transition) {
            setTimeout(function() {
              $bar.removeClass('am-offcanvas-bar-active');
            }, 0);

            $body.css('margin-left', '').one(UI.support.transition.end,
              function() {
                complete();
              }).emulateTransitionEnd(this.options.duration);
          } else {
            complete();
          }

          $element.off('click.offcanvas.amui');
          $html.off('.offcanvas.amui');
        };

        OffCanvas.prototype.bindEvents = function() {
          var _this = this;
          $doc.on('click.offcanvas.amui', '[data-am-dismiss="offcanvas"]',
            function(e) {
              e.preventDefault();
              _this.close();
            });

          $win.on('resize.offcanvas.amui orientationchange.offcanvas.amui',
            function() {
              _this.active && _this.close();
            });

          this.$element.hammer().on('swipeleft swipeleft', function(e) {
            e.preventDefault();
            _this.close();
          });

          return this;
        };

        function Plugin(option, relatedElement) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.offcanvas');
            var options = $.extend({}, typeof option == 'object' &&
              option);

            if (!data) {
              $this.data('amui.offcanvas', (data = new OffCanvas(this,
                options)));
              (!option || typeof option == 'object') && data.open(
                relatedElement);
            }

            if (typeof option == 'string') {
              data[option] && data[option](relatedElement);
            }
          });
        }

        $.fn.offCanvas = Plugin;

        // Init code
        $doc.on('click.offcanvas.amui', '[data-am-offcanvas]', function(e) {
          e.preventDefault();
          var $this = $(this);
          var options = UI.utils.parseOptions($this.data('amOffcanvas'));
          var $target = $(options.target ||
            (this.href && this.href.replace(/.*(?=#[^\s]+$)/, '')));
          var option = $target.data('amui.offcanvas') ? 'open' : options;

          Plugin.call($target, option, this);
        });

        $.AMUI.offcanvas = OffCanvas;

        module.exports = OffCanvas;

        // TODO: 优化动画效果
        // http://dbushell.github.io/Responsive-Off-Canvas-Menu/step4.html

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2,
      "./util.hammer": 17
    }
  ],
  11: [
    function(require, module, exports) {
      (function(global) {
        'use strict';
        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var $w = $(window);

        /**
         * @reference https://github.com/nolimits4web/Framework7/blob/master/src/js/modals.js
         * @license https://github.com/nolimits4web/Framework7/blob/master/LICENSE
         */

        var Popover = function(element, options) {
          this.options = $.extend({}, Popover.DEFAULTS, options || {});
          this.$element = $(element);
          this.active = null;
          this.$popover = (this.options.target && $(this.options.target)) ||
            null;

          this.init();
          this.events();
        };

        Popover.DEFAULTS = {
          theme: undefined,
          trigger: 'click',
          content: '',
          open: false,
          target: undefined,
          tpl: '<div class="am-popover">' +
            '<div class="am-popover-inner"></div>' +
            '<div class="am-popover-caret"></div></div>'
        };

        Popover.prototype.init = function() {
          var me = this;
          var $element = this.$element;
          var $popover;

          if (!this.options.target) {
            this.$popover = this.getPopover();
            this.setContent();
          }

          $popover = this.$popover;

          $popover.appendTo($('body'));

          this.sizePopover();

          function sizePopover() {
            me.sizePopover();
          }

          // TODO: 监听页面内容变化，重新调整位置

          $element.on('open.popover.amui', function() {
            $(window).on('resize.popover.amui', UI.utils.debounce(
              sizePopover, 50));
          });

          $element.on('close.popover.amui', function() {
            $(window).off('resize.popover.amui', sizePopover);
          });

          this.options.open && this.open();
        };

        Popover.prototype.sizePopover = function sizePopover() {
          var $element = this.$element;
          var $popover = this.$popover;

          if (!$popover || !$popover.length) {
            return;
          }

          var popWidth = $popover.outerWidth();
          var popHeight = $popover.outerHeight();
          var $popCaret = $popover.find('.am-popover-caret');
          var popCaretSize = ($popCaret.outerWidth() / 2) || 8;
          // 取不到 $popCaret.outerHeight() 的值，所以直接加 8
          var popTotalHeight = popHeight + 8; // $popCaret.outerHeight();

          var triggerWidth = $element.outerWidth();
          var triggerHeight = $element.outerHeight();
          var triggerOffset = $element.offset();
          var triggerRect = $element[0].getBoundingClientRect();

          var winHeight = $w.height();
          var winWidth = $w.width();
          var popTop = 0;
          var popLeft = 0;
          var diff = 0;
          var spacing = 2;
          var popPosition = 'top';

          $popover.css({
            left: '',
            top: ''
          }).removeClass('am-popover-left ' +
            'am-popover-right am-popover-top am-popover-bottom');

          $popCaret.css({
            left: '',
            top: ''
          });

          if (popTotalHeight - spacing < triggerRect.top + spacing) {
            // Popover on the top of trigger
            popTop = triggerOffset.top - popTotalHeight - spacing;
          } else if (popTotalHeight <
            winHeight - triggerRect.top - triggerRect.height) {
            // On bottom
            popPosition = 'bottom';
            popTop = triggerOffset.top + triggerHeight + popCaretSize +
              spacing;
          } else { // On middle
            popPosition = 'middle';
            popTop = triggerHeight / 2 + triggerOffset.top - popHeight / 2;
          }

          // Horizontal Position
          if (popPosition === 'top' || popPosition === 'bottom') {
            popLeft = triggerWidth / 2 + triggerOffset.left - popWidth / 2;

            diff = popLeft;

            if (popLeft < 5) {
              popLeft = 5;
            }

            if (popLeft + popWidth > winWidth) {
              popLeft = (winWidth - popWidth - 20);
              // console.log('left %d, win %d, popw %d', popLeft, winWidth, popWidth);
            }

            if (popPosition === 'top') {
              // This is the Popover position, NOT caret position
              // Popover on the Top of trigger, caret on the bottom of Popover
              $popover.addClass('am-popover-top');
            }

            if (popPosition === 'bottom') {
              $popover.addClass('am-popover-bottom');
            }

            diff = diff - popLeft;
            $popCaret.css({
              left: (popWidth / 2 - popCaretSize + diff) + 'px'
            });

          } else if (popPosition === 'middle') {
            popLeft = triggerOffset.left - popWidth - popCaretSize;
            $popover.addClass('am-popover-left');
            if (popLeft < 5) {
              popLeft = triggerOffset.left + triggerWidth + popCaretSize;
              $popover.removeClass('am-popover-left').addClass(
                'am-popover-right');
            }

            if (popLeft + popWidth > winWidth) {
              popLeft = winWidth - popWidth - 5;
              $popover.removeClass('am-popover-left').addClass(
                'am-popover-right');
            }
            $popCaret.css({
              top: (popHeight / 2 - popCaretSize / 2) + 'px'
            });
          }

          // Apply position style
          $popover.css({
            top: popTop + 'px',
            left: popLeft + 'px'
          });
        };

        Popover.prototype.toggle = function() {
          return this[this.active ? 'close' : 'open']();
        };

        Popover.prototype.open = function() {
          var $popover = this.$popover;

          this.$element.trigger('open.popover.amui');
          this.sizePopover();
          $popover.show().addClass('am-active');
          this.active = true;
        };

        Popover.prototype.close = function() {
          var $popover = this.$popover;

          this.$element.trigger('close.popover.amui');

          $popover.
          removeClass('am-active').
          trigger('closed.popover.amui').
          hide();

          this.active = false;
        };

        Popover.prototype.getPopover = function() {
          var uid = UI.utils.generateGUID('am-popover');
          var theme = [];

          if (this.options.theme) {
            $.each(this.options.theme.split(','), function(i, item) {
              theme.push('am-popover-' + $.trim(item));
            });
          }
          return $(this.options.tpl).attr('id', uid).addClass(theme.join(
            ' '));
        };

        Popover.prototype.setContent = function(content) {
          content = content || this.options.content;
          this.$popover && this.$popover.find('.am-popover-inner').empty().
          html(content);
        };

        Popover.prototype.events = function() {
          var eventNS = 'popover.amui';
          var triggers = this.options.trigger.split(' ');

          for (var i = triggers.length; i--;) {
            var trigger = triggers[i];

            if (trigger === 'click') {
              this.$element.on('click.' + eventNS, $.proxy(this.toggle,
                this));
            } else { // hover or focus
              var eventIn = trigger == 'hover' ? 'mouseenter' : 'focusin';
              var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout';

              this.$element.on(eventIn + '.' + eventNS, $.proxy(this.open,
                this));
              this.$element.on(eventOut + '.' + eventNS, $.proxy(this.close,
                this));
            }
          }
        };

        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.popover');
            var options = $.extend({},
              UI.utils.parseOptions($this.attr('data-am-popover')),
              typeof option == 'object' && option);

            if (!data) {
              $this.data('amui.popover', (data = new Popover(this,
                options)));
            }

            if (typeof option == 'string') {
              data[option] && data[option]();
            }
          });
        }

        $.fn.popover = Plugin;

        // Init code
        UI.ready(function(context) {
          $('[data-am-popover]', context).popover();
        });

        $.AMUI.popover = Popover;

        module.exports = Popover;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2
    }
  ],
  12: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        var Progress = (function() {
          /**
           * NProgress (c) 2013, Rico Sta. Cruz
           * @via http://ricostacruz.com/nprogress
           */

          var NProgress = {};
          var $html = $('html');

          NProgress.version = '0.1.6';

          var Settings = NProgress.settings = {
            minimum: 0.08,
            easing: 'ease',
            positionUsing: '',
            speed: 200,
            trickle: true,
            trickleRate: 0.02,
            trickleSpeed: 800,
            showSpinner: true,
            parent: 'body',
            barSelector: '[role="nprogress-bar"]',
            spinnerSelector: '[role="nprogress-spinner"]',
            template: '<div class="nprogress-bar" role="nprogress-bar">' +
              '<div class="nprogress-peg"></div></div>' +
              '<div class="nprogress-spinner" role="nprogress-spinner">' +
              '<div class="nprogress-spinner-icon"></div></div>'
          };

          /**
           * Updates configuration.
           *
           *     NProgress.configure({
           *       minimum: 0.1
           *     });
           */
          NProgress.configure = function(options) {
            var key, value;
            for (key in options) {
              value = options[key];
              if (value !== undefined && options.hasOwnProperty(key))
                Settings[key] = value;
            }

            return this;
          };

          /**
           * Last number.
           */

          NProgress.status = null;

          /**
           * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.
           *
           *     NProgress.set(0.4);
           *     NProgress.set(1.0);
           */

          NProgress.set = function(n) {
            var started = NProgress.isStarted();

            n = clamp(n, Settings.minimum, 1);
            NProgress.status = (n === 1 ? null : n);

            var progress = NProgress.render(!started),
              bar = progress.querySelector(Settings.barSelector),
              speed = Settings.speed,
              ease = Settings.easing;

            progress.offsetWidth;
            /* Repaint */

            queue(function(next) {
              // Set positionUsing if it hasn't already been set
              if (Settings.positionUsing === '') Settings.positionUsing =
                NProgress.getPositioningCSS();

              // Add transition
              css(bar, barPositionCSS(n, speed, ease));

              if (n === 1) {
                // Fade out
                css(progress, {
                  transition: 'none',
                  opacity: 1
                });
                progress.offsetWidth;
                /* Repaint */

                setTimeout(function() {
                  css(progress, {
                    transition: 'all ' + speed + 'ms linear',
                    opacity: 0
                  });
                  setTimeout(function() {
                    NProgress.remove();
                    next();
                  }, speed);
                }, speed);
              } else {
                setTimeout(next, speed);
              }
            });

            return this;
          };

          NProgress.isStarted = function() {
            return typeof NProgress.status === 'number';
          };

          /**
           * Shows the progress bar.
           * This is the same as setting the status to 0%, except that it doesn't go backwards.
           *
           *     NProgress.start();
           *
           */
          NProgress.start = function() {
            if (!NProgress.status) NProgress.set(0);

            var work = function() {
              setTimeout(function() {
                if (!NProgress.status) return;
                NProgress.trickle();
                work();
              }, Settings.trickleSpeed);
            };

            if (Settings.trickle) work();

            return this;
          };

          /**
           * Hides the progress bar.
           * This is the *sort of* the same as setting the status to 100%, with the
           * difference being `done()` makes some placebo effect of some realistic motion.
           *
           *     NProgress.done();
           *
           * If `true` is passed, it will show the progress bar even if its hidden.
           *
           *     NProgress.done(true);
           */

          NProgress.done = function(force) {
            if (!force && !NProgress.status) return this;

            return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);
          };

          /**
           * Increments by a random amount.
           */

          NProgress.inc = function(amount) {
            var n = NProgress.status;

            if (!n) {
              return NProgress.start();
            } else {
              if (typeof amount !== 'number') {
                amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);
              }

              n = clamp(n + amount, 0, 0.994);
              return NProgress.set(n);
            }
          };

          NProgress.trickle = function() {
            return NProgress.inc(Math.random() * Settings.trickleRate);
          };


          /**
           * (Internal) renders the progress bar markup based on the `template`
           * setting.
           */

          NProgress.render = function(fromStart) {
            if (NProgress.isRendered()) return document.getElementById(
              'nprogress');

            $html.addClass('nprogress-busy');

            var progress = document.createElement('div');
            progress.id = 'nprogress';
            progress.innerHTML = Settings.template;

            var bar = progress.querySelector(Settings.barSelector),
              perc = fromStart ? '-100' : toBarPerc(NProgress.status ||
                0),
              parent = document.querySelector(Settings.parent),
              spinner;

            css(bar, {
              transition: 'all 0 linear',
              transform: 'translate3d(' + perc + '%,0,0)'
            });

            if (!Settings.showSpinner) {
              spinner = progress.querySelector(Settings.spinnerSelector);
              spinner && $(spinner).remove();
            }

            if (parent != document.body) {
              $(parent).addClass('nprogress-custom-parent');
            }

            parent.appendChild(progress);
            return progress;
          };

          /**
           * Removes the element. Opposite of render().
           */

          NProgress.remove = function() {
            $html.removeClass('nprogress-busy');
            $(Settings.parent).removeClass('nprogress-custom-parent');

            var progress = document.getElementById('nprogress');
            progress && $(progress).remove();
          };

          /**
           * Checks if the progress bar is rendered.
           */

          NProgress.isRendered = function() {
            return !!document.getElementById('nprogress');
          };

          /**
           * Determine which positioning CSS rule to use.
           */

          NProgress.getPositioningCSS = function() {
            // Sniff on document.body.style
            var bodyStyle = document.body.style;

            // Sniff prefixes
            var vendorPrefix = ('WebkitTransform' in bodyStyle) ?
              'Webkit' :
              ('MozTransform' in bodyStyle) ? 'Moz' :
              ('msTransform' in bodyStyle) ? 'ms' :
              ('OTransform' in bodyStyle) ? 'O' : '';

            if (vendorPrefix + 'Perspective' in bodyStyle) {
              // Modern browsers with 3D support, e.g. Webkit, IE10
              return 'translate3d';
            } else if (vendorPrefix + 'Transform' in bodyStyle) {
              // Browsers without 3D support, e.g. IE9
              return 'translate';
            } else {
              // Browsers without translate() support, e.g. IE7-8
              return 'margin';
            }
          };

          /**
           * Helpers
           */

          function clamp(n, min, max) {
            if (n < min) return min;
            if (n > max) return max;
            return n;
          }

          /**
           * (Internal) converts a percentage (`0..1`) to a bar translateX
           * percentage (`-100%..0%`).
           */

          function toBarPerc(n) {
            return (-1 + n) * 100;
          }


          /**
           * (Internal) returns the correct CSS for changing the bar's
           * position given an n percentage, and speed and ease from Settings
           */

          function barPositionCSS(n, speed, ease) {
            var barCSS;

            if (Settings.positionUsing === 'translate3d') {
              barCSS = {
                transform: 'translate3d(' + toBarPerc(n) + '%,0,0)'
              };
            } else if (Settings.positionUsing === 'translate') {
              barCSS = {
                transform: 'translate(' + toBarPerc(n) + '%,0)'
              };
            } else {
              barCSS = {
                'margin-left': toBarPerc(n) + '%'
              };
            }

            barCSS.transition = 'all ' + speed + 'ms ' + ease;

            return barCSS;
          }


          /**
           * (Internal) Queues a function to be executed.
           */

          var queue = (function() {
            var pending = [];

            function next() {
              var fn = pending.shift();
              if (fn) {
                fn(next);
              }
            }

            return function(fn) {
              pending.push(fn);
              if (pending.length == 1) next();
            };
          })();


          /**
           * (Internal) Applies css properties to an element, similar to the jQuery
           * css method.
           *
           * While this helper does assist with vendor prefixed property names, it
           * does not perform any manipulation of values prior to setting styles.
           */

          var css = (function() {
            var cssPrefixes = ['Webkit', 'O', 'Moz', 'ms'],
              cssProps = {};

            function camelCase(string) {
              return string.replace(/^-ms-/, 'ms-').replace(
                /-([\da-z])/gi, function(match, letter) {
                  return letter.toUpperCase();
                });
            }

            function getVendorProp(name) {
              var style = document.body.style;
              if (name in style) return name;

              var i = cssPrefixes.length,
                capName = name.charAt(0).toUpperCase() + name.slice(
                  1),
                vendorName;
              while (i--) {
                vendorName = cssPrefixes[i] + capName;
                if (vendorName in style) return vendorName;
              }

              return name;
            }

            function getStyleProp(name) {
              name = camelCase(name);
              return cssProps[name] || (cssProps[name] =
                getVendorProp(name));
            }

            function applyCss(element, prop, value) {
              prop = getStyleProp(prop);
              element.style[prop] = value;
            }

            return function(element, properties) {
              var args = arguments,
                prop,
                value;

              if (args.length == 2) {
                for (prop in properties) {
                  value = properties[prop];
                  if (value !== undefined && properties.hasOwnProperty(
                    prop)) applyCss(element, prop, value);
                }
              } else {
                applyCss(element, args[1], args[2]);
              }
            }
          })();

          return NProgress;
        })();

        $.AMUI.progress = Progress;

        module.exports = Progress;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2
    }
  ],
  13: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        require('./ui.smooth-scroll');

        /**
         * @via https://github.com/uikit/uikit/
         * @license https://github.com/uikit/uikit/blob/master/LICENSE.md
         */

        // ScrollSpyNav Class
        var ScrollSpyNav = function(element, options) {
          this.options = $.extend({}, ScrollSpyNav.DEFAULTS, options);
          this.$element = $(element);
          this.anchors = [];

          this.$links = this.$element.find('a[href^="#"]').each(function(
            i, link) {
            this.anchors.push($(link).attr('href'));
          }.bind(this));

          this.$targets = $(this.anchors.join(', '));

          var processRAF = function() {
            UI.utils.rAF.call(window, $.proxy(this.process, this));
          }.bind(this);

          this.$window = $(window).on('scroll.scrollspynav.amui',
            processRAF)
            .on(
              'resize.scrollspynav.amui orientationchange.scrollspynav.amui',
              UI.utils.debounce(processRAF, 50));

          processRAF();
          this.scrollProcess();
        };

        ScrollSpyNav.DEFAULTS = {
          className: {
            active: 'am-active'
          },
          closest: false,
          smooth: true,
          offsetTop: 0
        };

        ScrollSpyNav.prototype.process = function() {
          var scrollTop = this.$window.scrollTop();
          var options = this.options;
          var inViews = [];
          var $links = this.$links;

          var $targets = this.$targets;

          $targets.each(function(i, target) {
            if (UI.utils.isInView(target, options)) {
              inViews.push(target);
            }
          });

          // console.log(inViews.length);

          if (inViews.length) {
            var $target;

            $.each(inViews, function(i, item) {
              if ($(item).offset().top >= scrollTop) {
                $target = $(item);
                return false; // break
              }
            });

            if (!$target) {
              return;
            }

            if (options.closest) {
              $links.closest(options.closest).removeClass(options.className
                .active);
              $links.filter('a[href="#' + $target.attr('id') + '"]').
              closest(options.closest).addClass(options.className.active);
            } else {
              $links.removeClass(options.className.active).
              filter('a[href="#' + $target.attr('id') + '"]').
              addClass(options.className.active);
            }
          }
        };

        ScrollSpyNav.prototype.scrollProcess = function() {
          var $links = this.$links;
          var options = this.options;

          // smoothScroll
          if (options.smooth) {
            $links.on('click', function(e) {
              e.preventDefault();

              var $this = $(this);
              var $target = $($this.attr('href'));

              if (!$target) {
                return;
              }

              var offsetTop = options.offsetTop &&
                !isNaN(parseInt(options.offsetTop)) && parseInt(options.offsetTop) ||
                0;

              $(window).smoothScroll({
                position: $target.offset().top - offsetTop
              });
            });
          }
        };

        // ScrollSpyNav Plugin
        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.scrollspynav');
            var options = typeof option == 'object' && option;

            if (!data) {
              $this.data('amui.scrollspynav', (data = new ScrollSpyNav(
                this, options)));
            }

            if (typeof option == 'string') {
              data[option]();
            }
          });
        }

        $.fn.scrollspynav = Plugin;

        // Init code
        UI.ready(function(context) {
          $('[data-am-scrollspy-nav]', context).each(function() {
            var $this = $(this);
            var options = UI.utils.options($this.data('amScrollspyNav'));

            Plugin.call($this, options);
          });
        });

        $.AMUI.scrollspynav = ScrollSpyNav;

        module.exports = ScrollSpyNav;

        // TODO: 1. 算法改进
        //       2. 多级菜单支持
        //       3. smooth scroll pushState

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2,
      "./ui.smooth-scroll": 14
    }
  ],
  14: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');
        var rAF = UI.utils.rAF;
        var cAF = UI.utils.cancelAF;

        /**
         * Smooth Scroll
         * @param position
         * @via http://mir.aculo.us/2014/01/19/scrolling-dom-elements-to-the-top-a-zepto-plugin/
         */

        // Usage: $(window).smoothScroll([options])

        // only allow one scroll to top operation to be in progress at a time,
        // which is probably what you want
        var smoothScrollInProgress = false;

        var SmoothScroll = function(element, options) {
          options = options || {};

          var $this = $(element);
          var targetY = parseInt(options.position) || SmoothScroll.DEFAULTS
            .position;
          var initialY = $this.scrollTop();
          var lastY = initialY;
          var delta = targetY - initialY;
          // duration in ms, make it a bit shorter for short distances
          // this is not scientific and you might want to adjust this for
          // your preferences
          var speed = options.speed ||
            Math.min(750, Math.min(1500, Math.abs(initialY - targetY)));
          // temp variables (t will be a position between 0 and 1, y is the calculated scrollTop)
          var start;
          var t;
          var y;
          var cancelScroll = function() {
            abort();
          };

          // abort if already in progress or nothing to scroll
          if (smoothScrollInProgress) {
            return;
          }

          if (delta === 0) {
            return;
          }

          // quint ease-in-out smoothing, from
          // https://github.com/madrobby/scripty2/blob/master/src/effects/transitions/penner.js#L127-L136
          function smooth(pos) {
            if ((pos /= 0.5) < 1) {
              return 0.5 * Math.pow(pos, 5);
            }

            return 0.5 * (Math.pow((pos - 2), 5) + 2);
          }

          function abort() {
            $this.off('touchstart.smoothscroll.amui', cancelScroll);
            smoothScrollInProgress = false;
          }

          // when there's a touch detected while scrolling is in progress, abort
          // the scrolling (emulates native scrolling behavior)
          $this.on('touchstart.smoothscroll.amui', cancelScroll);
          smoothScrollInProgress = true;

          // start rendering away! note the function given to frame
          // is named "render" so we can reference it again further down
          function render(now) {
            if (!smoothScrollInProgress) {
              return;
            }
            if (!start) {
              start = now;
            }

            // calculate t, position of animation in [0..1]
            t = Math.min(1, Math.max((now - start) / speed, 0));
            // calculate the new scrollTop position (don't forget to smooth)
            y = Math.round(initialY + delta * smooth(t));
            // bracket scrollTop so we're never over-scrolling
            if (delta > 0 && y > targetY) {
              y = targetY;
            }
            if (delta < 0 && y < targetY) {
              y = targetY;
            }

            // only actually set scrollTop if there was a change fromt he last frame
            if (lastY != y) {
              $this.scrollTop(y);
            }

            lastY = y;
            // if we're not done yet, queue up an other frame to render,
            // or clean up
            if (y !== targetY) {
              cAF(scrollRAF);
              scrollRAF = rAF(render);
            } else {
              cAF(scrollRAF);
              abort();
            }
          }

          var scrollRAF = rAF(render);
        };

        SmoothScroll.DEFAULTS = {
          position: 0
        };

        $.fn.smoothScroll = function(option) {
          return this.each(function() {
            new SmoothScroll(this, option);
          });
        };

        // Init code
        $(document).on('click.smoothScroll.amui.data-api',
          '[data-am-smooth-scroll]',
          function(e) {
            e.preventDefault();
            var options = UI.utils.parseOptions($(this).data(
              'amSmoothScroll'));

            $(window).smoothScroll(options);
          });

        module.exports = SmoothScroll;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2
    }
  ],
  15: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        /**
         * @via https://github.com/uikit/uikit/blob/master/src/js/addons/sticky.js
         * @license https://github.com/uikit/uikit/blob/master/LICENSE.md
         */

        // Sticky Class
        var Sticky = function(element, options) {
          var me = this;

          this.options = $.extend({}, Sticky.DEFAULTS, options);
          this.$element = $(element);
          this.sticked = null;
          this.inited = null;
          this.$holder = undefined;

          this.$window = $(window).
          on('scroll.sticky.amui',
            UI.utils.debounce($.proxy(this.checkPosition, this), 10)).
          on('resize.sticky.amui orientationchange.sticky.amui',
            UI.utils.debounce(function() {
              me.reset(true, function() {
                me.checkPosition();
              });
            }, 50)).
          on('load.sticky.amui', $.proxy(this.checkPosition, this));

          // the `.offset()` is diff between jQuery & Zepto.js
          // jQuery: return `top` and `left`
          // Zepto.js: return `top`, `left`, `width`, `height`
          this.offset = this.$element.offset();

          this.init();
        };

        Sticky.DEFAULTS = {
          top: 0,
          bottom: 0,
          animation: '',
          className: {
            sticky: 'am-sticky',
            resetting: 'am-sticky-resetting',
            stickyBtm: 'am-sticky-bottom',
            animationRev: 'am-animation-reverse'
          }
        };

        Sticky.prototype.init = function() {
          var result = this.check();

          if (!result) {
            return false;
          }

          var $element = this.$element;
          var $elementMargin = '';

          $.each($element.css(
              ['marginTop', 'marginRight', 'marginBottom', 'marginLeft']),
            function(name, value) {
              return $elementMargin += ' ' + value;
            });

          var $holder = $('<div class="am-sticky-placeholder"></div>').css({
            height: $element.css('position') != 'absolute' ?
              $element.outerHeight() : '',
            float: $element.css('float') != 'none' ? $element.css(
              'float') : '',
            margin: $elementMargin
          });

          this.$holder = $element.css('margin', 0).wrap($holder).parent();
          this.inited = 1;

          return true;
        };

        Sticky.prototype.reset = function(force, cb) {
          var options = this.options;
          var $element = this.$element;
          var animation = (options.animation) ?
            ' am-animation-' + options.animation : '';
          var complete = function() {
            $element.css({
              position: '',
              top: '',
              width: '',
              left: '',
              margin: 0
            });
            $element.removeClass([
              animation,
              options.className.animationRev,
              options.className.sticky,
              options.className.resetting
            ].join(' '));

            this.animating = false;
            this.sticked = false;
            this.offset = $element.offset();
            cb && cb();
          }.bind(this);

          $element.addClass(options.className.resetting);

          if (!force && options.animation && UI.support.animation) {

            this.animating = true;

            $element.removeClass(animation).one(UI.support.animation.end,
              function() {
                complete();
              }).width(); // force redraw

            $element.addClass(animation + ' ' + options.className.animationRev);
          } else {
            complete();
          }
        };

        Sticky.prototype.check = function() {
          if (!this.$element.is(':visible')) {
            return false;
          }

          var media = this.options.media;

          if (media) {
            switch (typeof(media)) {
              case 'number':
                if (window.innerWidth < media) {
                  return false;
                }
                break;

              case 'string':
                if (window.matchMedia && !window.matchMedia(media).matches) {
                  return false;
                }
                break;
            }
          }

          return true;
        };

        Sticky.prototype.checkPosition = function() {
          if (!this.inited) {
            var initialized = this.init();
            if (!initialized) {
              return;
            }
          }

          var options = this.options;
          var scrollTop = this.$window.scrollTop();
          var offsetTop = options.top;
          var offsetBottom = options.bottom;
          var $element = this.$element;
          var animation = (options.animation) ?
            ' am-animation-' + options.animation : '';
          var className = [options.className.sticky, animation].join(' ');

          if (typeof offsetBottom == 'function') {
            offsetBottom = offsetBottom(this.$element);
          }

          var checkResult = (scrollTop > this.$holder.offset().top);

          if (!this.sticked && checkResult) {
            $element.addClass(className);
          } else if (this.sticked && !checkResult) {
            this.reset();
          }

          this.$holder.height($element.is(':visible') ? $element.height() :
            0);

          if (checkResult) {
            $element.css({
              top: offsetTop,
              left: this.$holder.offset().left,
              width: this.$holder.width()
            });

            /*
     if (offsetBottom) {
     // （底部边距 + 元素高度 > 窗口高度） 时定位到底部
     if ((offsetBottom + this.offset.height > $(window).height()) &&
     (scrollTop + $(window).height() >= scrollHeight - offsetBottom)) {
     $element.addClass(options.className.stickyBtm).
     css({top: $(window).height() - offsetBottom - this.offset.height});
     } else {
     $element.removeClass(options.className.stickyBtm).css({top: offsetTop});
     }
     }
     */
          }

          this.sticked = checkResult;
        };

        // Sticky Plugin
        function Plugin(option) {
          return this.each(function() {
            var $this = $(this);
            var data = $this.data('amui.sticky');
            var options = typeof option == 'object' && option;

            if (!data) {
              $this.data('amui.sticky', (data = new Sticky(this,
                options)));
            }

            if (typeof option == 'string') {
              data[option]();
            }
          });
        }

        $.fn.sticky = Plugin;

        // Init code
        $(window).on('load', function() {
          $('[data-am-sticky]').each(function() {
            var $this = $(this);
            var options = UI.utils.options($this.attr('data-am-sticky'));

            Plugin.call($this, options);
          });
        });

        $.AMUI.sticky = Sticky;

        module.exports = Sticky;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2
    }
  ],
  16: [
    function(require, module, exports) {
      (function(global) {
        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        require('./core');

        var cookie = {
          get: function(name) {
            var cookieName = encodeURIComponent(name) + '=';
            var cookieStart = document.cookie.indexOf(cookieName);
            var cookieValue = null;
            var cookieEnd;

            if (cookieStart > -1) {
              cookieEnd = document.cookie.indexOf(';', cookieStart);
              if (cookieEnd == -1) {
                cookieEnd = document.cookie.length;
              }
              cookieValue = decodeURIComponent(document.cookie.substring(
                cookieStart +
                cookieName.length, cookieEnd));
            }

            return cookieValue;
          },

          set: function(name, value, expires, path, domain, secure) {
            var cookieText = encodeURIComponent(name) + '=' +
              encodeURIComponent(value);

            if (expires instanceof Date) {
              cookieText += '; expires=' + expires.toGMTString();
            }

            if (path) {
              cookieText += '; path=' + path;
            }

            if (domain) {
              cookieText += '; domain=' + domain;
            }

            if (secure) {
              cookieText += '; secure';
            }

            document.cookie = cookieText;
          },

          unset: function(name, path, domain, secure) {
            this.set(name, '', new Date(0), path, domain, secure);
          }
        };

        $.AMUI.utils.cookie = cookie;

        module.exports = cookie;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2
    }
  ],
  17: [
    function(require, module, exports) {
      (function(global) {
        /*! Hammer.JS - v2.0.4 - 2014-09-28
         * http://hammerjs.github.io/
         *
         * Copyright (c) 2014 Jorik Tangelder;
         * Licensed under the MIT license */

        'use strict';

        var $ = (typeof window !== "undefined" ? window.jQuery : typeof global !==
          "undefined" ? global.jQuery : null);
        var UI = require('./core');

        var VENDOR_PREFIXES = ['', 'webkit', 'moz', 'MS', 'ms', 'o'];
        var TEST_ELEMENT = document.createElement('div');

        var TYPE_FUNCTION = 'function';

        var round = Math.round;
        var abs = Math.abs;
        var now = Date.now;

        /**
         * set a timeout with a given scope
         * @param {Function} fn
         * @param {Number} timeout
         * @param {Object} context
         * @returns {number}
         */
        function setTimeoutContext(fn, timeout, context) {
          return setTimeout(bindFn(fn, context), timeout);
        }

        /**
         * if the argument is an array, we want to execute the fn on each entry
         * if it aint an array we don't want to do a thing.
         * this is used by all the methods that accept a single and array argument.
         * @param {*|Array} arg
         * @param {String} fn
         * @param {Object} [context]
         * @returns {Boolean}
         */
        function invokeArrayArg(arg, fn, context) {
          if (Array.isArray(arg)) {
            each(arg, context[fn], context);
            return true;
          }
          return false;
        }

        /**
         * walk objects and arrays
         * @param {Object} obj
         * @param {Function} iterator
         * @param {Object} context
         */
        function each(obj, iterator, context) {
          var i;

          if (!obj) {
            return;
          }

          if (obj.forEach) {
            obj.forEach(iterator, context);
          } else if (obj.length !== undefined) {
            i = 0;
            while (i < obj.length) {
              iterator.call(context, obj[i], i, obj);
              i++;
            }
          } else {
            for (i in obj) {
              obj.hasOwnProperty(i) && iterator.call(context, obj[i], i,
                obj);
            }
          }
        }

        /**
         * extend object.
         * means that properties in dest will be overwritten by the ones in src.
         * @param {Object} dest
         * @param {Object} src
         * @param {Boolean} [merge]
         * @returns {Object} dest
         */
        function extend(dest, src, merge) {
          var keys = Object.keys(src);
          var i = 0;
          while (i < keys.length) {
            if (!merge || (merge && dest[keys[i]] === undefined)) {
              dest[keys[i]] = src[keys[i]];
            }
            i++;
          }
          return dest;
        }

        /**
         * merge the values from src in the dest.
         * means that properties that exist in dest will not be overwritten by src
         * @param {Object} dest
         * @param {Object} src
         * @returns {Object} dest
         */
        function merge(dest, src) {
          return extend(dest, src, true);
        }

        /**
         * simple class inheritance
         * @param {Function} child
         * @param {Function} base
         * @param {Object} [properties]
         */
        function inherit(child, base, properties) {
          var baseP = base.prototype,
            childP;

          childP = child.prototype = Object.create(baseP);
          childP.constructor = child;
          childP._super = baseP;

          if (properties) {
            extend(childP, properties);
          }
        }

        /**
         * simple function bind
         * @param {Function} fn
         * @param {Object} context
         * @returns {Function}
         */
        function bindFn(fn, context) {
          return function boundFn() {
            return fn.apply(context, arguments);
          };
        }

        /**
         * let a boolean value also be a function that must return a boolean
         * this first item in args will be used as the context
         * @param {Boolean|Function} val
         * @param {Array} [args]
         * @returns {Boolean}
         */
        function boolOrFn(val, args) {
          if (typeof val == TYPE_FUNCTION) {
            return val.apply(args ? args[0] || undefined : undefined, args);
          }
          return val;
        }

        /**
         * use the val2 when val1 is undefined
         * @param {*} val1
         * @param {*} val2
         * @returns {*}
         */
        function ifUndefined(val1, val2) {
          return (val1 === undefined) ? val2 : val1;
        }

        /**
         * addEventListener with multiple events at once
         * @param {EventTarget} target
         * @param {String} types
         * @param {Function} handler
         */
        function addEventListeners(target, types, handler) {
          each(splitStr(types), function(type) {
            target.addEventListener(type, handler, false);
          });
        }

        /**
         * removeEventListener with multiple events at once
         * @param {EventTarget} target
         * @param {String} types
         * @param {Function} handler
         */
        function removeEventListeners(target, types, handler) {
          each(splitStr(types), function(type) {
            target.removeEventListener(type, handler, false);
          });
        }

        /**
         * find if a node is in the given parent
         * @method hasParent
         * @param {HTMLElement} node
         * @param {HTMLElement} parent
         * @return {Boolean} found
         */
        function hasParent(node, parent) {
          while (node) {
            if (node == parent) {
              return true;
            }
            node = node.parentNode;
          }
          return false;
        }

        /**
         * small indexOf wrapper
         * @param {String} str
         * @param {String} find
         * @returns {Boolean} found
         */
        function inStr(str, find) {
          return str.indexOf(find) > -1;
        }

        /**
         * split string on whitespace
         * @param {String} str
         * @returns {Array} words
         */
        function splitStr(str) {
          return str.trim().split(/\s+/g);
        }

        /**
         * find if a array contains the object using indexOf or a simple polyFill
         * @param {Array} src
         * @param {String} find
         * @param {String} [findByKey]
         * @return {Boolean|Number} false when not found, or the index
         */
        function inArray(src, find, findByKey) {
          if (src.indexOf && !findByKey) {
            return src.indexOf(find);
          } else {
            var i = 0;
            while (i < src.length) {
              if ((findByKey && src[i][findByKey] == find) || (!findByKey &&
                src[i] === find)) {
                return i;
              }
              i++;
            }
            return -1;
          }
        }

        /**
         * convert array-like objects to real arrays
         * @param {Object} obj
         * @returns {Array}
         */
        function toArray(obj) {
          return Array.prototype.slice.call(obj, 0);
        }

        /**
         * unique array with objects based on a key (like 'id') or just by the array's value
         * @param {Array} src [{id:1},{id:2},{id:1}]
         * @param {String} [key]
         * @param {Boolean} [sort=False]
         * @returns {Array} [{id:1},{id:2}]
         */
        function uniqueArray(src, key, sort) {
          var results = [];
          var values = [];
          var i = 0;

          while (i < src.length) {
            var val = key ? src[i][key] : src[i];
            if (inArray(values, val) < 0) {
              results.push(src[i]);
            }
            values[i] = val;
            i++;
          }

          if (sort) {
            if (!key) {
              results = results.sort();
            } else {
              results = results.sort(function sortUniqueArray(a, b) {
                return a[key] > b[key];
              });
            }
          }

          return results;
        }

        /**
         * get the prefixed property
         * @param {Object} obj
         * @param {String} property
         * @returns {String|Undefined} prefixed
         */
        function prefixed(obj, property) {
          var prefix, prop;
          var camelProp = property[0].toUpperCase() + property.slice(1);

          var i = 0;
          while (i < VENDOR_PREFIXES.length) {
            prefix = VENDOR_PREFIXES[i];
            prop = (prefix) ? prefix + camelProp : property;

            if (prop in obj) {
              return prop;
            }
            i++;
          }
          return undefined;
        }

        /**
         * get a unique id
         * @returns {number} uniqueId
         */
        var _uniqueId = 1;

        function uniqueId() {
          return _uniqueId++;
        }

        /**
         * get the window object of an element
         * @param {HTMLElement} element
         * @returns {DocumentView|Window}
         */
        function getWindowForElement(element) {
          var doc = element.ownerDocument;
          return (doc.defaultView || doc.parentWindow);
        }

        var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;

        var SUPPORT_TOUCH = ('ontouchstart' in window);
        var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !==
          undefined;
        var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(
          navigator.userAgent);

        var INPUT_TYPE_TOUCH = 'touch';
        var INPUT_TYPE_PEN = 'pen';
        var INPUT_TYPE_MOUSE = 'mouse';
        var INPUT_TYPE_KINECT = 'kinect';

        var COMPUTE_INTERVAL = 25;

        var INPUT_START = 1;
        var INPUT_MOVE = 2;
        var INPUT_END = 4;
        var INPUT_CANCEL = 8;

        var DIRECTION_NONE = 1;
        var DIRECTION_LEFT = 2;
        var DIRECTION_RIGHT = 4;
        var DIRECTION_UP = 8;
        var DIRECTION_DOWN = 16;

        var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;
        var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;
        var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;

        var PROPS_XY = ['x', 'y'];
        var PROPS_CLIENT_XY = ['clientX', 'clientY'];

        /**
         * create new input type manager
         * @param {Manager} manager
         * @param {Function} callback
         * @returns {Input}
         * @constructor
         */
        function Input(manager, callback) {
          var self = this;
          this.manager = manager;
          this.callback = callback;
          this.element = manager.element;
          this.target = manager.options.inputTarget;

          // smaller wrapper around the handler, for the scope and the enabled state of the manager,
          // so when disabled the input events are completely bypassed.
          this.domHandler = function(ev) {
            if (boolOrFn(manager.options.enable, [manager])) {
              self.handler(ev);
            }
          };

          this.init();

        }

        Input.prototype = {
          /**
           * should handle the inputEvent data and trigger the callback
           * @virtual
           */
          handler: function() {},

          /**
           * bind the events
           */
          init: function() {
            this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);
            this.evTarget && addEventListeners(this.target, this.evTarget,
              this.domHandler);
            this.evWin && addEventListeners(getWindowForElement(this.element),
              this.evWin, this.domHandler);
          },

          /**
           * unbind the events
           */
          destroy: function() {
            this.evEl && removeEventListeners(this.element, this.evEl, this
              .domHandler);
            this.evTarget && removeEventListeners(this.target, this.evTarget,
              this.domHandler);
            this.evWin && removeEventListeners(getWindowForElement(this.element),
              this.evWin, this.domHandler);
          }
        };

        /**
         * create new input type manager
         * called by the Manager constructor
         * @param {Hammer} manager
         * @returns {Input}
         */
        function createInputInstance(manager) {
          var Type;
          var inputClass = manager.options.inputClass;

          if (inputClass) {
            Type = inputClass;
          } else if (SUPPORT_POINTER_EVENTS) {
            Type = PointerEventInput;
          } else if (SUPPORT_ONLY_TOUCH) {
            Type = TouchInput;
          } else if (!SUPPORT_TOUCH) {
            Type = MouseInput;
          } else {
            Type = TouchMouseInput;
          }
          return new(Type)(manager, inputHandler);
        }

        /**
         * handle input events
         * @param {Manager} manager
         * @param {String} eventType
         * @param {Object} input
         */
        function inputHandler(manager, eventType, input) {
          var pointersLen = input.pointers.length;
          var changedPointersLen = input.changedPointers.length;
          var isFirst = (eventType & INPUT_START && (pointersLen -
            changedPointersLen === 0));
          var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (
            pointersLen - changedPointersLen === 0));

          input.isFirst = !!isFirst;
          input.isFinal = !!isFinal;

          if (isFirst) {
            manager.session = {};
          }

          // source event is the normalized value of the domEvents
          // like 'touchstart, mouseup, pointerdown'
          input.eventType = eventType;

          // compute scale, rotation etc
          computeInputData(manager, input);

          // emit secret event
          manager.emit('hammer.input', input);

          manager.recognize(input);
          manager.session.prevInput = input;
        }

        /**
         * extend the data with some usable properties like scale, rotate, velocity etc
         * @param {Object} manager
         * @param {Object} input
         */
        function computeInputData(manager, input) {
          var session = manager.session;
          var pointers = input.pointers;
          var pointersLength = pointers.length;

          // store the first input to calculate the distance and direction
          if (!session.firstInput) {
            session.firstInput = simpleCloneInputData(input);
          }

          // to compute scale and rotation we need to store the multiple touches
          if (pointersLength > 1 && !session.firstMultiple) {
            session.firstMultiple = simpleCloneInputData(input);
          } else if (pointersLength === 1) {
            session.firstMultiple = false;
          }

          var firstInput = session.firstInput;
          var firstMultiple = session.firstMultiple;
          var offsetCenter = firstMultiple ? firstMultiple.center :
            firstInput.center;

          var center = input.center = getCenter(pointers);
          input.timeStamp = now();
          input.deltaTime = input.timeStamp - firstInput.timeStamp;

          input.angle = getAngle(offsetCenter, center);
          input.distance = getDistance(offsetCenter, center);

          computeDeltaXY(session, input);
          input.offsetDirection = getDirection(input.deltaX, input.deltaY);

          input.scale = firstMultiple ? getScale(firstMultiple.pointers,
            pointers) : 1;
          input.rotation = firstMultiple ? getRotation(firstMultiple.pointers,
            pointers) : 0;

          computeIntervalInputData(session, input);

          // find the correct target
          var target = manager.element;
          if (hasParent(input.srcEvent.target, target)) {
            target = input.srcEvent.target;
          }
          input.target = target;
        }

        function computeDeltaXY(session, input) {
          var center = input.center;
          var offset = session.offsetDelta || {};
          var prevDelta = session.prevDelta || {};
          var prevInput = session.prevInput || {};

          if (input.eventType === INPUT_START || prevInput.eventType ===
            INPUT_END) {
            prevDelta = session.prevDelta = {
              x: prevInput.deltaX || 0,
              y: prevInput.deltaY || 0
            };

            offset = session.offsetDelta = {
              x: center.x,
              y: center.y
            };
          }

          input.deltaX = prevDelta.x + (center.x - offset.x);
          input.deltaY = prevDelta.y + (center.y - offset.y);
        }

        /**
         * velocity is calculated every x ms
         * @param {Object} session
         * @param {Object} input
         */
        function computeIntervalInputData(session, input) {
          var last = session.lastInterval || input,
            deltaTime = input.timeStamp - last.timeStamp,
            velocity, velocityX, velocityY, direction;

          if (input.eventType != INPUT_CANCEL && (deltaTime >
            COMPUTE_INTERVAL || last.velocity === undefined)) {
            var deltaX = last.deltaX - input.deltaX;
            var deltaY = last.deltaY - input.deltaY;

            var v = getVelocity(deltaTime, deltaX, deltaY);
            velocityX = v.x;
            velocityY = v.y;
            velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;
            direction = getDirection(deltaX, deltaY);

            session.lastInterval = input;
          } else {
            // use latest velocity info if it doesn't overtake a minimum period
            velocity = last.velocity;
            velocityX = last.velocityX;
            velocityY = last.velocityY;
            direction = last.direction;
          }

          input.velocity = velocity;
          input.velocityX = velocityX;
          input.velocityY = velocityY;
          input.direction = direction;
        }

        /**
         * create a simple clone from the input used for storage of firstInput and firstMultiple
         * @param {Object} input
         * @returns {Object} clonedInputData
         */
        function simpleCloneInputData(input) {
          // make a simple copy of the pointers because we will get a reference if we don't
          // we only need clientXY for the calculations
          var pointers = [];
          var i = 0;
          while (i < input.pointers.length) {
            pointers[i] = {
              clientX: round(input.pointers[i].clientX),
              clientY: round(input.pointers[i].clientY)
            };
            i++;
          }

          return {
            timeStamp: now(),
            pointers: pointers,
            center: getCenter(pointers),
            deltaX: input.deltaX,
            deltaY: input.deltaY
          };
        }

        /**
         * get the center of all the pointers
         * @param {Array} pointers
         * @return {Object} center contains `x` and `y` properties
         */
        function getCenter(pointers) {
          var pointersLength = pointers.length;

          // no need to loop when only one touch
          if (pointersLength === 1) {
            return {
              x: round(pointers[0].clientX),
              y: round(pointers[0].clientY)
            };
          }

          var x = 0,
            y = 0,
            i = 0;
          while (i < pointersLength) {
            x += pointers[i].clientX;
            y += pointers[i].clientY;
            i++;
          }

          return {
            x: round(x / pointersLength),
            y: round(y / pointersLength)
          };
        }

        /**
         * calculate the velocity between two points. unit is in px per ms.
         * @param {Number} deltaTime
         * @param {Number} x
         * @param {Number} y
         * @return {Object} velocity `x` and `y`
         */
        function getVelocity(deltaTime, x, y) {
          return {
            x: x / deltaTime || 0,
            y: y / deltaTime || 0
          };
        }

        /**
         * get the direction between two points
         * @param {Number} x
         * @param {Number} y
         * @return {Number} direction
         */
        function getDirection(x, y) {
          if (x === y) {
            return DIRECTION_NONE;
          }

          if (abs(x) >= abs(y)) {
            return x > 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
          }
          return y > 0 ? DIRECTION_UP : DIRECTION_DOWN;
        }

        /**
         * calculate the absolute distance between two points
         * @param {Object} p1 {x, y}
         * @param {Object} p2 {x, y}
         * @param {Array} [props] containing x and y keys
         * @return {Number} distance
         */
        function getDistance(p1, p2, props) {
          if (!props) {
            props = PROPS_XY;
          }
          var x = p2[props[0]] - p1[props[0]],
            y = p2[props[1]] - p1[props[1]];

          return Math.sqrt((x * x) + (y * y));
        }

        /**
         * calculate the angle between two coordinates
         * @param {Object} p1
         * @param {Object} p2
         * @param {Array} [props] containing x and y keys
         * @return {Number} angle
         */
        function getAngle(p1, p2, props) {
          if (!props) {
            props = PROPS_XY;
          }
          var x = p2[props[0]] - p1[props[0]],
            y = p2[props[1]] - p1[props[1]];
          return Math.atan2(y, x) * 180 / Math.PI;
        }

        /**
         * calculate the rotation degrees between two pointersets
         * @param {Array} start array of pointers
         * @param {Array} end array of pointers
         * @return {Number} rotation
         */
        function getRotation(start, end) {
          return getAngle(end[1], end[0], PROPS_CLIENT_XY) - getAngle(start[
            1], start[0], PROPS_CLIENT_XY);
        }

        /**
         * calculate the scale factor between two pointersets
         * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
         * @param {Array} start array of pointers
         * @param {Array} end array of pointers
         * @return {Number} scale
         */
        function getScale(start, end) {
          return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(
            start[0], start[1], PROPS_CLIENT_XY);
        }

        var MOUSE_INPUT_MAP = {
          mousedown: INPUT_START,
          mousemove: INPUT_MOVE,
          mouseup: INPUT_END
        };

        var MOUSE_ELEMENT_EVENTS = 'mousedown';
        var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';

        /**
         * Mouse events input
         * @constructor
         * @extends Input
         */
        function MouseInput() {
          this.evEl = MOUSE_ELEMENT_EVENTS;
          this.evWin = MOUSE_WINDOW_EVENTS;

          this.allow = true; // used by Input.TouchMouse to disable mouse events
          this.pressed = false; // mousedown state

          Input.apply(this, arguments);
        }

        inherit(MouseInput, Input, {
          /**
           * handle mouse events
           * @param {Object} ev
           */
          handler: function MEhandler(ev) {
            var eventType = MOUSE_INPUT_MAP[ev.type];

            // on start we want to have the left mouse button down
            if (eventType & INPUT_START && ev.button === 0) {
              this.pressed = true;
            }

            if (eventType & INPUT_MOVE && ev.which !== 1) {
              eventType = INPUT_END;
            }

            // mouse must be down, and mouse events are allowed (see the TouchMouse input)
            if (!this.pressed || !this.allow) {
              return;
            }

            if (eventType & INPUT_END) {
              this.pressed = false;
            }

            this.callback(this.manager, eventType, {
              pointers: [ev],
              changedPointers: [ev],
              pointerType: INPUT_TYPE_MOUSE,
              srcEvent: ev
            });
          }
        });

        var POINTER_INPUT_MAP = {
          pointerdown: INPUT_START,
          pointermove: INPUT_MOVE,
          pointerup: INPUT_END,
          pointercancel: INPUT_CANCEL,
          pointerout: INPUT_CANCEL
        };

        // in IE10 the pointer types is defined as an enum
        var IE10_POINTER_TYPE_ENUM = {
          2: INPUT_TYPE_TOUCH,
          3: INPUT_TYPE_PEN,
          4: INPUT_TYPE_MOUSE,
          5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816
        };

        var POINTER_ELEMENT_EVENTS = 'pointerdown';
        var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';

        // IE10 has prefixed support, and case-sensitive
        if (window.MSPointerEvent) {
          POINTER_ELEMENT_EVENTS = 'MSPointerDown';
          POINTER_WINDOW_EVENTS =
            'MSPointerMove MSPointerUp MSPointerCancel';
        }

        /**
         * Pointer events input
         * @constructor
         * @extends Input
         */
        function PointerEventInput() {
          this.evEl = POINTER_ELEMENT_EVENTS;
          this.evWin = POINTER_WINDOW_EVENTS;

          Input.apply(this, arguments);

          this.store = (this.manager.session.pointerEvents = []);
        }

        inherit(PointerEventInput, Input, {
          /**
           * handle mouse events
           * @param {Object} ev
           */
          handler: function PEhandler(ev) {
            var store = this.store;
            var removePointer = false;

            var eventTypeNormalized = ev.type.toLowerCase().replace('ms',
              '');
            var eventType = POINTER_INPUT_MAP[eventTypeNormalized];
            var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] ||
              ev.pointerType;

            var isTouch = (pointerType == INPUT_TYPE_TOUCH);

            // get index of the event in the store
            var storeIndex = inArray(store, ev.pointerId, 'pointerId');

            // start and mouse must be down
            if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {
              if (storeIndex < 0) {
                store.push(ev);
                storeIndex = store.length - 1;
              }
            } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
              removePointer = true;
            }

            // it not found, so the pointer hasn't been down (so it's probably a hover)
            if (storeIndex < 0) {
              return;
            }

            // update the event in the store
            store[storeIndex] = ev;

            this.callback(this.manager, eventType, {
              pointers: store,
              changedPointers: [ev],
              pointerType: pointerType,
              srcEvent: ev
            });

            if (removePointer) {
              // remove from the store
              store.splice(storeIndex, 1);
            }
          }
        });

        var SINGLE_TOUCH_INPUT_MAP = {
          touchstart: INPUT_START,
          touchmove: INPUT_MOVE,
          touchend: INPUT_END,
          touchcancel: INPUT_CANCEL
        };

        var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';
        var SINGLE_TOUCH_WINDOW_EVENTS =
          'touchstart touchmove touchend touchcancel';

        /**
         * Touch events input
         * @constructor
         * @extends Input
         */
        function SingleTouchInput() {
          this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;
          this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;
          this.started = false;

          Input.apply(this, arguments);
        }

        inherit(SingleTouchInput, Input, {
          handler: function TEhandler(ev) {
            var type = SINGLE_TOUCH_INPUT_MAP[ev.type];

            // should we handle the touch events?
            if (type === INPUT_START) {
              this.started = true;
            }

            if (!this.started) {
              return;
            }

            var touches = normalizeSingleTouches.call(this, ev, type);

            // when done, reset the started state
            if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length -
              touches[1].length === 0) {
              this.started = false;
            }

            this.callback(this.manager, type, {
              pointers: touches[0],
              changedPointers: touches[1],
              pointerType: INPUT_TYPE_TOUCH,
              srcEvent: ev
            });
          }
        });

        /**
         * @this {TouchInput}
         * @param {Object} ev
         * @param {Number} type flag
         * @returns {undefined|Array} [all, changed]
         */
        function normalizeSingleTouches(ev, type) {
          var all = toArray(ev.touches);
          var changed = toArray(ev.changedTouches);

          if (type & (INPUT_END | INPUT_CANCEL)) {
            all = uniqueArray(all.concat(changed), 'identifier', true);
          }

          return [all, changed];
        }

        var TOUCH_INPUT_MAP = {
          touchstart: INPUT_START,
          touchmove: INPUT_MOVE,
          touchend: INPUT_END,
          touchcancel: INPUT_CANCEL
        };

        var TOUCH_TARGET_EVENTS =
          'touchstart touchmove touchend touchcancel';

        /**
         * Multi-user touch events input
         * @constructor
         * @extends Input
         */
        function TouchInput() {
          this.evTarget = TOUCH_TARGET_EVENTS;
          this.targetIds = {};

          Input.apply(this, arguments);
        }

        inherit(TouchInput, Input, {
          handler: function MTEhandler(ev) {
            var type = TOUCH_INPUT_MAP[ev.type];
            var touches = getTouches.call(this, ev, type);
            if (!touches) {
              return;
            }

            this.callback(this.manager, type, {
              pointers: touches[0],
              changedPointers: touches[1],
              pointerType: INPUT_TYPE_TOUCH,
              srcEvent: ev
            });
          }
        });

        /**
         * @this {TouchInput}
         * @param {Object} ev
         * @param {Number} type flag
         * @returns {undefined|Array} [all, changed]
         */
        function getTouches(ev, type) {
          var allTouches = toArray(ev.touches);
          var targetIds = this.targetIds;

          // when there is only one touch, the process can be simplified
          if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {
            targetIds[allTouches[0].identifier] = true;
            return [allTouches, allTouches];
          }

          var i,
            targetTouches,
            changedTouches = toArray(ev.changedTouches),
            changedTargetTouches = [],
            target = this.target;

          // get target touches from touches
          targetTouches = allTouches.filter(function(touch) {
            return hasParent(touch.target, target);
          });

          // collect touches
          if (type === INPUT_START) {
            i = 0;
            while (i < targetTouches.length) {
              targetIds[targetTouches[i].identifier] = true;
              i++;
            }
          }

          // filter changed touches to only contain touches that exist in the collected target ids
          i = 0;
          while (i < changedTouches.length) {
            if (targetIds[changedTouches[i].identifier]) {
              changedTargetTouches.push(changedTouches[i]);
            }

            // cleanup removed touches
            if (type & (INPUT_END | INPUT_CANCEL)) {
              delete targetIds[changedTouches[i].identifier];
            }
            i++;
          }

          if (!changedTargetTouches.length) {
            return;
          }

          return [
            // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
            uniqueArray(targetTouches.concat(changedTargetTouches),
              'identifier', true),
            changedTargetTouches
          ];
        }

        /**
         * Combined touch and mouse input
         *
         * Touch has a higher priority then mouse, and while touching no mouse events are allowed.
         * This because touch devices also emit mouse events while doing a touch.
         *
         * @constructor
         * @extends Input
         */
        function TouchMouseInput() {
          Input.apply(this, arguments);

          var handler = bindFn(this.handler, this);
          this.touch = new TouchInput(this.manager, handler);
          this.mouse = new MouseInput(this.manager, handler);
        }

        inherit(TouchMouseInput, Input, {
          /**
           * handle mouse and touch events
           * @param {Hammer} manager
           * @param {String} inputEvent
           * @param {Object} inputData
           */
          handler: function TMEhandler(manager, inputEvent, inputData) {
            var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),
              isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);

            // when we're in a touch event, so  block all upcoming mouse events
            // most mobile browser also emit mouseevents, right after touchstart
            if (isTouch) {
              this.mouse.allow = false;
            } else if (isMouse && !this.mouse.allow) {
              return;
            }

            // reset the allowMouse when we're done
            if (inputEvent & (INPUT_END | INPUT_CANCEL)) {
              this.mouse.allow = true;
            }

            this.callback(manager, inputEvent, inputData);
          },

          /**
           * remove the event listeners
           */
          destroy: function destroy() {
            this.touch.destroy();
            this.mouse.destroy();
          }
        });

        var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style,
          'touchAction');
        var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;

        // magical touchAction value
        var TOUCH_ACTION_COMPUTE = 'compute';
        var TOUCH_ACTION_AUTO = 'auto';
        var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented
        var TOUCH_ACTION_NONE = 'none';
        var TOUCH_ACTION_PAN_X = 'pan-x';
        var TOUCH_ACTION_PAN_Y = 'pan-y';

        /**
         * Touch Action
         * sets the touchAction property or uses the js alternative
         * @param {Manager} manager
         * @param {String} value
         * @constructor
         */
        function TouchAction(manager, value) {
          this.manager = manager;
          this.set(value);
        }

        TouchAction.prototype = {
          /**
           * set the touchAction value on the element or enable the polyfill
           * @param {String} value
           */
          set: function(value) {
            // find out the touch-action by the event handlers
            if (value == TOUCH_ACTION_COMPUTE) {
              value = this.compute();
            }

            if (NATIVE_TOUCH_ACTION) {
              this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;
            }
            this.actions = value.toLowerCase().trim();
          },

          /**
           * just re-set the touchAction value
           */
          update: function() {
            this.set(this.manager.options.touchAction);
          },

          /**
           * compute the value for the touchAction property based on the recognizer's settings
           * @returns {String} value
           */
          compute: function() {
            var actions = [];
            each(this.manager.recognizers, function(recognizer) {
              if (boolOrFn(recognizer.options.enable, [recognizer])) {
                actions = actions.concat(recognizer.getTouchAction());
              }
            });
            return cleanTouchActions(actions.join(' '));
          },

          /**
           * this method is called on each input cycle and provides the preventing of the browser behavior
           * @param {Object} input
           */
          preventDefaults: function(input) {
            // not needed with native support for the touchAction property
            if (NATIVE_TOUCH_ACTION) {
              return;
            }

            var srcEvent = input.srcEvent;
            var direction = input.offsetDirection;

            // if the touch action did prevented once this session
            if (this.manager.session.prevented) {
              srcEvent.preventDefault();
              return;
            }

            var actions = this.actions;
            var hasNone = inStr(actions, TOUCH_ACTION_NONE);
            var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);
            var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);

            if (hasNone ||
              (hasPanY && direction & DIRECTION_HORIZONTAL) ||
              (hasPanX && direction & DIRECTION_VERTICAL)) {
              return this.preventSrc(srcEvent);
            }
          },

          /**
           * call preventDefault to prevent the browser's default behavior (scrolling in most cases)
           * @param {Object} srcEvent
           */
          preventSrc: function(srcEvent) {
            this.manager.session.prevented = true;
            srcEvent.preventDefault();
          }
        };

        /**
         * when the touchActions are collected they are not a valid value, so we need to clean things up. *
         * @param {String} actions
         * @returns {*}
         */
        function cleanTouchActions(actions) {
          // none
          if (inStr(actions, TOUCH_ACTION_NONE)) {
            return TOUCH_ACTION_NONE;
          }

          var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
          var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);

          // pan-x and pan-y can be combined
          if (hasPanX && hasPanY) {
            return TOUCH_ACTION_PAN_X + ' ' + TOUCH_ACTION_PAN_Y;
          }

          // pan-x OR pan-y
          if (hasPanX || hasPanY) {
            return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;
          }

          // manipulation
          if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {
            return TOUCH_ACTION_MANIPULATION;
          }

          return TOUCH_ACTION_AUTO;
        }

        /**
         * Recognizer flow explained; *
         * All recognizers have the initial state of POSSIBLE when a input session starts.
         * The definition of a input session is from the first input until the last input, with all it's movement in it. *
         * Example session for mouse-input: mousedown -> mousemove -> mouseup
         *
         * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed
         * which determines with state it should be.
         *
         * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to
         * POSSIBLE to give it another change on the next cycle.
         *
         *               Possible
         *                  |
         *            +-----+---------------+
         *            |                     |
         *      +-----+-----+               |
         *      |           |               |
         *   Failed      Cancelled          |
         *                          +-------+------+
         *                          |              |
         *                      Recognized       Began
         *                                         |
         *                                      Changed
         *                                         |
         *                                  Ended/Recognized
         */
        var STATE_POSSIBLE = 1;
        var STATE_BEGAN = 2;
        var STATE_CHANGED = 4;
        var STATE_ENDED = 8;
        var STATE_RECOGNIZED = STATE_ENDED;
        var STATE_CANCELLED = 16;
        var STATE_FAILED = 32;

        /**
         * Recognizer
         * Every recognizer needs to extend from this class.
         * @constructor
         * @param {Object} options
         */
        function Recognizer(options) {
          this.id = uniqueId();

          this.manager = null;
          this.options = merge(options || {}, this.defaults);

          // default is enable true
          this.options.enable = ifUndefined(this.options.enable, true);

          this.state = STATE_POSSIBLE;

          this.simultaneous = {};
          this.requireFail = [];
        }

        Recognizer.prototype = {
          /**
           * @virtual
           * @type {Object}
           */
          defaults: {},

          /**
           * set options
           * @param {Object} options
           * @return {Recognizer}
           */
          set: function(options) {
            extend(this.options, options);

            // also update the touchAction, in case something changed about the directions/enabled state
            this.manager && this.manager.touchAction.update();
            return this;
          },

          /**
           * recognize simultaneous with an other recognizer.
           * @param {Recognizer} otherRecognizer
           * @returns {Recognizer} this
           */
          recognizeWith: function(otherRecognizer) {
            if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {
              return this;
            }

            var simultaneous = this.simultaneous;
            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer,
              this);
            if (!simultaneous[otherRecognizer.id]) {
              simultaneous[otherRecognizer.id] = otherRecognizer;
              otherRecognizer.recognizeWith(this);
            }
            return this;
          },

          /**
           * drop the simultaneous link. it doesnt remove the link on the other recognizer.
           * @param {Recognizer} otherRecognizer
           * @returns {Recognizer} this
           */
          dropRecognizeWith: function(otherRecognizer) {
            if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {
              return this;
            }

            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer,
              this);
            delete this.simultaneous[otherRecognizer.id];
            return this;
          },

          /**
           * recognizer can only run when an other is failing
           * @param {Recognizer} otherRecognizer
           * @returns {Recognizer} this
           */
          requireFailure: function(otherRecognizer) {
            if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {
              return this;
            }

            var requireFail = this.requireFail;
            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer,
              this);
            if (inArray(requireFail, otherRecognizer) === -1) {
              requireFail.push(otherRecognizer);
              otherRecognizer.requireFailure(this);
            }
            return this;
          },

          /**
           * drop the requireFailure link. it does not remove the link on the other recognizer.
           * @param {Recognizer} otherRecognizer
           * @returns {Recognizer} this
           */
          dropRequireFailure: function(otherRecognizer) {
            if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {
              return this;
            }

            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer,
              this);
            var index = inArray(this.requireFail, otherRecognizer);
            if (index > -1) {
              this.requireFail.splice(index, 1);
            }
            return this;
          },

          /**
           * has require failures boolean
           * @returns {boolean}
           */
          hasRequireFailures: function() {
            return this.requireFail.length > 0;
          },

          /**
           * if the recognizer can recognize simultaneous with an other recognizer
           * @param {Recognizer} otherRecognizer
           * @returns {Boolean}
           */
          canRecognizeWith: function(otherRecognizer) {
            return !!this.simultaneous[otherRecognizer.id];
          },

          /**
           * You should use `tryEmit` instead of `emit` directly to check
           * that all the needed recognizers has failed before emitting.
           * @param {Object} input
           */
          emit: function(input) {
            var self = this;
            var state = this.state;

            function emit(withState) {
              self.manager.emit(self.options.event + (withState ? stateStr(
                state) : ''), input);
            }

            // 'panstart' and 'panmove'
            if (state < STATE_ENDED) {
              emit(true);
            }

            emit(); // simple 'eventName' events

            // panend and pancancel
            if (state >= STATE_ENDED) {
              emit(true);
            }
          },

          /**
           * Check that all the require failure recognizers has failed,
           * if true, it emits a gesture event,
           * otherwise, setup the state to FAILED.
           * @param {Object} input
           */
          tryEmit: function(input) {
            if (this.canEmit()) {
              return this.emit(input);
            }
            // it's failing anyway
            this.state = STATE_FAILED;
          },

          /**
           * can we emit?
           * @returns {boolean}
           */
          canEmit: function() {
            var i = 0;
            while (i < this.requireFail.length) {
              if (!(this.requireFail[i].state & (STATE_FAILED |
                STATE_POSSIBLE))) {
                return false;
              }
              i++;
            }
            return true;
          },

          /**
           * update the recognizer
           * @param {Object} inputData
           */
          recognize: function(inputData) {
            // make a new copy of the inputData
            // so we can change the inputData without messing up the other recognizers
            var inputDataClone = extend({}, inputData);

            // is is enabled and allow recognizing?
            if (!boolOrFn(this.options.enable, [this, inputDataClone])) {
              this.reset();
              this.state = STATE_FAILED;
              return;
            }

            // reset when we've reached the end
            if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED |
              STATE_FAILED)) {
              this.state = STATE_POSSIBLE;
            }

            this.state = this.process(inputDataClone);

            // the recognizer has recognized a gesture
            // so trigger an event
            if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED |
              STATE_CANCELLED)) {
              this.tryEmit(inputDataClone);
            }
          },

          /**
           * return the state of the recognizer
           * the actual recognizing happens in this method
           * @virtual
           * @param {Object} inputData
           * @returns {Const} STATE
           */
          process: function(inputData) {}, // jshint ignore:line

          /**
           * return the preferred touch-action
           * @virtual
           * @returns {Array}
           */
          getTouchAction: function() {},

          /**
           * called when the gesture isn't allowed to recognize
           * like when another is being recognized or it is disabled
           * @virtual
           */
          reset: function() {}
        };

        /**
         * get a usable string, used as event postfix
         * @param {Const} state
         * @returns {String} state
         */
        function stateStr(state) {
          if (state & STATE_CANCELLED) {
            return 'cancel';
          } else if (state & STATE_ENDED) {
            return 'end';
          } else if (state & STATE_CHANGED) {
            return 'move';
          } else if (state & STATE_BEGAN) {
            return 'start';
          }
          return '';
        }

        /**
         * direction cons to string
         * @param {Const} direction
         * @returns {String}
         */
        function directionStr(direction) {
          if (direction == DIRECTION_DOWN) {
            return 'down';
          } else if (direction == DIRECTION_UP) {
            return 'up';
          } else if (direction == DIRECTION_LEFT) {
            return 'left';
          } else if (direction == DIRECTION_RIGHT) {
            return 'right';
          }
          return '';
        }

        /**
         * get a recognizer by name if it is bound to a manager
         * @param {Recognizer|String} otherRecognizer
         * @param {Recognizer} recognizer
         * @returns {Recognizer}
         */
        function getRecognizerByNameIfManager(otherRecognizer, recognizer) {
          var manager = recognizer.manager;
          if (manager) {
            return manager.get(otherRecognizer);
          }
          return otherRecognizer;
        }

        /**
         * This recognizer is just used as a base for the simple attribute recognizers.
         * @constructor
         * @extends Recognizer
         */
        function AttrRecognizer() {
          Recognizer.apply(this, arguments);
        }

        inherit(AttrRecognizer, Recognizer, {
          /**
           * @namespace
           * @memberof AttrRecognizer
           */
          defaults: {
            /**
             * @type {Number}
             * @default 1
             */
            pointers: 1
          },

          /**
           * Used to check if it the recognizer receives valid input, like input.distance > 10.
           * @memberof AttrRecognizer
           * @param {Object} input
           * @returns {Boolean} recognized
           */
          attrTest: function(input) {
            var optionPointers = this.options.pointers;
            return optionPointers === 0 || input.pointers.length ===
              optionPointers;
          },

          /**
           * Process the input and return the state for the recognizer
           * @memberof AttrRecognizer
           * @param {Object} input
           * @returns {*} State
           */
          process: function(input) {
            var state = this.state;
            var eventType = input.eventType;

            var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);
            var isValid = this.attrTest(input);

            // on cancel input and we've recognized before, return STATE_CANCELLED
            if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {
              return state | STATE_CANCELLED;
            } else if (isRecognized || isValid) {
              if (eventType & INPUT_END) {
                return state | STATE_ENDED;
              } else if (!(state & STATE_BEGAN)) {
                return STATE_BEGAN;
              }
              return state | STATE_CHANGED;
            }
            return STATE_FAILED;
          }
        });

        /**
         * Pan
         * Recognized when the pointer is down and moved in the allowed direction.
         * @constructor
         * @extends AttrRecognizer
         */
        function PanRecognizer() {
          AttrRecognizer.apply(this, arguments);

          this.pX = null;
          this.pY = null;
        }

        inherit(PanRecognizer, AttrRecognizer, {
          /**
           * @namespace
           * @memberof PanRecognizer
           */
          defaults: {
            event: 'pan',
            threshold: 10,
            pointers: 1,
            direction: DIRECTION_ALL
          },

          getTouchAction: function() {
            var direction = this.options.direction;
            var actions = [];
            if (direction & DIRECTION_HORIZONTAL) {
              actions.push(TOUCH_ACTION_PAN_Y);
            }
            if (direction & DIRECTION_VERTICAL) {
              actions.push(TOUCH_ACTION_PAN_X);
            }
            return actions;
          },

          directionTest: function(input) {
            var options = this.options;
            var hasMoved = true;
            var distance = input.distance;
            var direction = input.direction;
            var x = input.deltaX;
            var y = input.deltaY;

            // lock to axis?
            if (!(direction & options.direction)) {
              if (options.direction & DIRECTION_HORIZONTAL) {
                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ?
                  DIRECTION_LEFT : DIRECTION_RIGHT;
                hasMoved = x != this.pX;
                distance = Math.abs(input.deltaX);
              } else {
                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ?
                  DIRECTION_UP : DIRECTION_DOWN;
                hasMoved = y != this.pY;
                distance = Math.abs(input.deltaY);
              }
            }
            input.direction = direction;
            return hasMoved && distance > options.threshold && direction &
              options.direction;
          },

          attrTest: function(input) {
            return AttrRecognizer.prototype.attrTest.call(this, input) &&
              (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) &&
                this.directionTest(input)));
          },

          emit: function(input) {
            this.pX = input.deltaX;
            this.pY = input.deltaY;

            var direction = directionStr(input.direction);
            if (direction) {
              this.manager.emit(this.options.event + direction, input);
            }

            this._super.emit.call(this, input);
          }
        });

        /**
         * Pinch
         * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).
         * @constructor
         * @extends AttrRecognizer
         */
        function PinchRecognizer() {
          AttrRecognizer.apply(this, arguments);
        }

        inherit(PinchRecognizer, AttrRecognizer, {
          /**
           * @namespace
           * @memberof PinchRecognizer
           */
          defaults: {
            event: 'pinch',
            threshold: 0,
            pointers: 2
          },

          getTouchAction: function() {
            return [TOUCH_ACTION_NONE];
          },

          attrTest: function(input) {
            return this._super.attrTest.call(this, input) &&
              (Math.abs(input.scale - 1) > this.options.threshold || this
                .state & STATE_BEGAN);
          },

          emit: function(input) {
            this._super.emit.call(this, input);
            if (input.scale !== 1) {
              var inOut = input.scale < 1 ? 'in' : 'out';
              this.manager.emit(this.options.event + inOut, input);
            }
          }
        });

        /**
         * Press
         * Recognized when the pointer is down for x ms without any movement.
         * @constructor
         * @extends Recognizer
         */
        function PressRecognizer() {
          Recognizer.apply(this, arguments);

          this._timer = null;
          this._input = null;
        }

        inherit(PressRecognizer, Recognizer, {
          /**
           * @namespace
           * @memberof PressRecognizer
           */
          defaults: {
            event: 'press',
            pointers: 1,
            time: 500, // minimal time of the pointer to be pressed
            threshold: 5 // a minimal movement is ok, but keep it low
          },

          getTouchAction: function() {
            return [TOUCH_ACTION_AUTO];
          },

          process: function(input) {
            var options = this.options;
            var validPointers = input.pointers.length === options.pointers;
            var validMovement = input.distance < options.threshold;
            var validTime = input.deltaTime > options.time;

            this._input = input;

            // we only allow little movement
            // and we've reached an end event, so a tap is possible
            if (!validMovement || !validPointers || (input.eventType & (
              INPUT_END | INPUT_CANCEL) && !validTime)) {
              this.reset();
            } else if (input.eventType & INPUT_START) {
              this.reset();
              this._timer = setTimeoutContext(function() {
                this.state = STATE_RECOGNIZED;
                this.tryEmit();
              }, options.time, this);
            } else if (input.eventType & INPUT_END) {
              return STATE_RECOGNIZED;
            }
            return STATE_FAILED;
          },

          reset: function() {
            clearTimeout(this._timer);
          },

          emit: function(input) {
            if (this.state !== STATE_RECOGNIZED) {
              return;
            }

            if (input && (input.eventType & INPUT_END)) {
              this.manager.emit(this.options.event + 'up', input);
            } else {
              this._input.timeStamp = now();
              this.manager.emit(this.options.event, this._input);
            }
          }
        });

        /**
         * Rotate
         * Recognized when two or more pointer are moving in a circular motion.
         * @constructor
         * @extends AttrRecognizer
         */
        function RotateRecognizer() {
          AttrRecognizer.apply(this, arguments);
        }

        inherit(RotateRecognizer, AttrRecognizer, {
          /**
           * @namespace
           * @memberof RotateRecognizer
           */
          defaults: {
            event: 'rotate',
            threshold: 0,
            pointers: 2
          },

          getTouchAction: function() {
            return [TOUCH_ACTION_NONE];
          },

          attrTest: function(input) {
            return this._super.attrTest.call(this, input) &&
              (Math.abs(input.rotation) > this.options.threshold || this.state &
                STATE_BEGAN);
          }
        });

        /**
         * Swipe
         * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.
         * @constructor
         * @extends AttrRecognizer
         */
        function SwipeRecognizer() {
          AttrRecognizer.apply(this, arguments);
        }

        inherit(SwipeRecognizer, AttrRecognizer, {
          /**
           * @namespace
           * @memberof SwipeRecognizer
           */
          defaults: {
            event: 'swipe',
            threshold: 10,
            velocity: 0.65,
            direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,
            pointers: 1
          },

          getTouchAction: function() {
            return PanRecognizer.prototype.getTouchAction.call(this);
          },

          attrTest: function(input) {
            var direction = this.options.direction;
            var velocity;

            if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {
              velocity = input.velocity;
            } else if (direction & DIRECTION_HORIZONTAL) {
              velocity = input.velocityX;
            } else if (direction & DIRECTION_VERTICAL) {
              velocity = input.velocityY;
            }

            return this._super.attrTest.call(this, input) &&
              direction & input.direction &&
              input.distance > this.options.threshold &&
              abs(velocity) > this.options.velocity && input.eventType &
              INPUT_END;
          },

          emit: function(input) {
            var direction = directionStr(input.direction);
            if (direction) {
              this.manager.emit(this.options.event + direction, input);
            }

            this.manager.emit(this.options.event, input);
          }
        });

        /**
         * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur
         * between the given interval and position. The delay option can be used to recognize multi-taps without firing
         * a single tap.
         *
         * The eventData from the emitted event contains the property `tapCount`, which contains the amount of
         * multi-taps being recognized.
         * @constructor
         * @extends Recognizer
         */
        function TapRecognizer() {
          Recognizer.apply(this, arguments);

          // previous time and center,
          // used for tap counting
          this.pTime = false;
          this.pCenter = false;

          this._timer = null;
          this._input = null;
          this.count = 0;
        }

        inherit(TapRecognizer, Recognizer, {
          /**
           * @namespace
           * @memberof PinchRecognizer
           */
          defaults: {
            event: 'tap',
            pointers: 1,
            taps: 1,
            interval: 300, // max time between the multi-tap taps
            time: 250, // max time of the pointer to be down (like finger on the screen)
            threshold: 2, // a minimal movement is ok, but keep it low
            posThreshold: 10 // a multi-tap can be a bit off the initial position
          },

          getTouchAction: function() {
            return [TOUCH_ACTION_MANIPULATION];
          },

          process: function(input) {
            var options = this.options;

            var validPointers = input.pointers.length === options.pointers;
            var validMovement = input.distance < options.threshold;
            var validTouchTime = input.deltaTime < options.time;

            this.reset();

            if ((input.eventType & INPUT_START) && (this.count === 0)) {
              return this.failTimeout();
            }

            // we only allow little movement
            // and we've reached an end event, so a tap is possible
            if (validMovement && validTouchTime && validPointers) {
              if (input.eventType != INPUT_END) {
                return this.failTimeout();
              }

              var validInterval = this.pTime ? (input.timeStamp - this.pTime <
                options.interval) : true;
              var validMultiTap = !this.pCenter || getDistance(this.pCenter,
                input.center) < options.posThreshold;

              this.pTime = input.timeStamp;
              this.pCenter = input.center;

              if (!validMultiTap || !validInterval) {
                this.count = 1;
              } else {
                this.count += 1;
              }

              this._input = input;

              // if tap count matches we have recognized it,
              // else it has began recognizing...
              var tapCount = this.count % options.taps;
              if (tapCount === 0) {
                // no failing requirements, immediately trigger the tap event
                // or wait as long as the multitap interval to trigger
                if (!this.hasRequireFailures()) {
                  return STATE_RECOGNIZED;
                } else {
                  this._timer = setTimeoutContext(function() {
                    this.state = STATE_RECOGNIZED;
                    this.tryEmit();
                  }, options.interval, this);
                  return STATE_BEGAN;
                }
              }
            }
            return STATE_FAILED;
          },

          failTimeout: function() {
            this._timer = setTimeoutContext(function() {
              this.state = STATE_FAILED;
            }, this.options.interval, this);
            return STATE_FAILED;
          },

          reset: function() {
            clearTimeout(this._timer);
          },

          emit: function() {
            if (this.state == STATE_RECOGNIZED) {
              this._input.tapCount = this.count;
              this.manager.emit(this.options.event, this._input);
            }
          }
        });

        /**
         * Simple way to create an manager with a default set of recognizers.
         * @param {HTMLElement} element
         * @param {Object} [options]
         * @constructor
         */
        function Hammer(element, options) {
          options = options || {};
          options.recognizers = ifUndefined(options.recognizers, Hammer.defaults
            .preset);
          return new Manager(element, options);
        }

        /**
         * @const {string}
         */
        Hammer.VERSION = '2.0.4';

        /**
         * default settings
         * @namespace
         */
        Hammer.defaults = {
          /**
           * set if DOM events are being triggered.
           * But this is slower and unused by simple implementations, so disabled by default.
           * @type {Boolean}
           * @default false
           */
          domEvents: false,

          /**
           * The value for the touchAction property/fallback.
           * When set to `compute` it will magically set the correct value based on the added recognizers.
           * @type {String}
           * @default compute
           */
          touchAction: TOUCH_ACTION_COMPUTE,

          /**
           * @type {Boolean}
           * @default true
           */
          enable: true,

          /**
           * EXPERIMENTAL FEATURE -- can be removed/changed
           * Change the parent input target element.
           * If Null, then it is being set the to main element.
           * @type {Null|EventTarget}
           * @default null
           */
          inputTarget: null,

          /**
           * force an input class
           * @type {Null|Function}
           * @default null
           */
          inputClass: null,

          /**
           * Default recognizer setup when calling `Hammer()`
           * When creating a new Manager these will be skipped.
           * @type {Array}
           */
          preset: [
            // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]
            [RotateRecognizer, {
              enable: false
            }],
            [PinchRecognizer, {
                enable: false
              },
              ['rotate']
            ],
            [SwipeRecognizer, {
              direction: DIRECTION_HORIZONTAL
            }],
            [PanRecognizer, {
                direction: DIRECTION_HORIZONTAL
              },
              ['swipe']
            ],
            [TapRecognizer],
            [TapRecognizer, {
                event: 'doubletap',
                taps: 2
              },
              ['tap']
            ],
            [PressRecognizer]
          ],

          /**
           * Some CSS properties can be used to improve the working of Hammer.
           * Add them to this method and they will be set when creating a new Manager.
           * @namespace
           */
          cssProps: {
            /**
             * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
             * @type {String}
             * @default 'none'
             */
            userSelect: 'none',

            /**
             * Disable the Windows Phone grippers when pressing an element.
             * @type {String}
             * @default 'none'
             */
            touchSelect: 'none',

            /**
             * Disables the default callout shown when you touch and hold a touch target.
             * On iOS, when you touch and hold a touch target such as a link, Safari displays
             * a callout containing information about the link. This property allows you to disable that callout.
             * @type {String}
             * @default 'none'
             */
            touchCallout: 'none',

            /**
             * Specifies whether zooming is enabled. Used by IE10>
             * @type {String}
             * @default 'none'
             */
            contentZooming: 'none',

            /**
             * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
             * @type {String}
             * @default 'none'
             */
            userDrag: 'none',

            /**
             * Overrides the highlight color shown when the user taps a link or a JavaScript
             * clickable element in iOS. This property obeys the alpha value, if specified.
             * @type {String}
             * @default 'rgba(0,0,0,0)'
             */
            tapHighlightColor: 'rgba(0,0,0,0)'
          }
        };

        var STOP = 1;
        var FORCED_STOP = 2;

        /**
         * Manager
         * @param {HTMLElement} element
         * @param {Object} [options]
         * @constructor
         */
        function Manager(element, options) {
          options = options || {};

          this.options = merge(options, Hammer.defaults);
          this.options.inputTarget = this.options.inputTarget || element;

          this.handlers = {};
          this.session = {};
          this.recognizers = [];

          this.element = element;
          this.input = createInputInstance(this);
          this.touchAction = new TouchAction(this, this.options.touchAction);

          toggleCssProps(this, true);

          each(options.recognizers, function(item) {
            var recognizer = this.add(new(item[0])(item[1]));
            item[2] && recognizer.recognizeWith(item[2]);
            item[3] && recognizer.requireFailure(item[3]);
          }, this);
        }

        Manager.prototype = {
          /**
           * set options
           * @param {Object} options
           * @returns {Manager}
           */
          set: function(options) {
            extend(this.options, options);

            // Options that need a little more setup
            if (options.touchAction) {
              this.touchAction.update();
            }
            if (options.inputTarget) {
              // Clean up existing event listeners and reinitialize
              this.input.destroy();
              this.input.target = options.inputTarget;
              this.input.init();
            }
            return this;
          },

          /**
           * stop recognizing for this session.
           * This session will be discarded, when a new [input]start event is fired.
           * When forced, the recognizer cycle is stopped immediately.
           * @param {Boolean} [force]
           */
          stop: function(force) {
            this.session.stopped = force ? FORCED_STOP : STOP;
          },

          /**
           * run the recognizers!
           * called by the inputHandler function on every movement of the pointers (touches)
           * it walks through all the recognizers and tries to detect the gesture that is being made
           * @param {Object} inputData
           */
          recognize: function(inputData) {
            var session = this.session;
            if (session.stopped) {
              return;
            }

            // run the touch-action polyfill
            this.touchAction.preventDefaults(inputData);

            var recognizer;
            var recognizers = this.recognizers;

            // this holds the recognizer that is being recognized.
            // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED
            // if no recognizer is detecting a thing, it is set to `null`
            var curRecognizer = session.curRecognizer;

            // reset when the last recognizer is recognized
            // or when we're in a new session
            if (!curRecognizer || (curRecognizer && curRecognizer.state &
              STATE_RECOGNIZED)) {
              curRecognizer = session.curRecognizer = null;
            }

            var i = 0;
            while (i < recognizers.length) {
              recognizer = recognizers[i];

              // find out if we are allowed try to recognize the input for this one.
              // 1.   allow if the session is NOT forced stopped (see the .stop() method)
              // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one
              //      that is being recognized.
              // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.
              //      this can be setup with the `recognizeWith()` method on the recognizer.
              if (session.stopped !== FORCED_STOP && ( // 1
                !curRecognizer || recognizer == curRecognizer || // 2
                recognizer.canRecognizeWith(curRecognizer))) { // 3
                recognizer.recognize(inputData);
              } else {
                recognizer.reset();
              }

              // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the
              // current active recognizer. but only if we don't already have an active recognizer
              if (!curRecognizer && recognizer.state & (STATE_BEGAN |
                STATE_CHANGED | STATE_ENDED)) {
                curRecognizer = session.curRecognizer = recognizer;
              }
              i++;
            }
          },

          /**
           * get a recognizer by its event name.
           * @param {Recognizer|String} recognizer
           * @returns {Recognizer|Null}
           */
          get: function(recognizer) {
            if (recognizer instanceof Recognizer) {
              return recognizer;
            }

            var recognizers = this.recognizers;
            for (var i = 0; i < recognizers.length; i++) {
              if (recognizers[i].options.event == recognizer) {
                return recognizers[i];
              }
            }
            return null;
          },

          /**
           * add a recognizer to the manager
           * existing recognizers with the same event name will be removed
           * @param {Recognizer} recognizer
           * @returns {Recognizer|Manager}
           */
          add: function(recognizer) {
            if (invokeArrayArg(recognizer, 'add', this)) {
              return this;
            }

            // remove existing
            var existing = this.get(recognizer.options.event);
            if (existing) {
              this.remove(existing);
            }

            this.recognizers.push(recognizer);
            recognizer.manager = this;

            this.touchAction.update();
            return recognizer;
          },

          /**
           * remove a recognizer by name or instance
           * @param {Recognizer|String} recognizer
           * @returns {Manager}
           */
          remove: function(recognizer) {
            if (invokeArrayArg(recognizer, 'remove', this)) {
              return this;
            }

            var recognizers = this.recognizers;
            recognizer = this.get(recognizer);
            recognizers.splice(inArray(recognizers, recognizer), 1);

            this.touchAction.update();
            return this;
          },

          /**
           * bind event
           * @param {String} events
           * @param {Function} handler
           * @returns {EventEmitter} this
           */
          on: function(events, handler) {
            var handlers = this.handlers;
            each(splitStr(events), function(event) {
              handlers[event] = handlers[event] || [];
              handlers[event].push(handler);
            });
            return this;
          },

          /**
           * unbind event, leave emit blank to remove all handlers
           * @param {String} events
           * @param {Function} [handler]
           * @returns {EventEmitter} this
           */
          off: function(events, handler) {
            var handlers = this.handlers;
            each(splitStr(events), function(event) {
              if (!handler) {
                delete handlers[event];
              } else {
                handlers[event].splice(inArray(handlers[event], handler),
                  1);
              }
            });
            return this;
          },

          /**
           * emit event to the listeners
           * @param {String} event
           * @param {Object} data
           */
          emit: function(event, data) {
            // we also want to trigger dom events
            if (this.options.domEvents) {
              triggerDomEvent(event, data);
            }

            // no handlers, so skip it all
            var handlers = this.handlers[event] && this.handlers[event].slice();
            if (!handlers || !handlers.length) {
              return;
            }

            data.type = event;
            data.preventDefault = function() {
              data.srcEvent.preventDefault();
            };

            var i = 0;
            while (i < handlers.length) {
              handlers[i](data);
              i++;
            }
          },

          /**
           * destroy the manager and unbinds all events
           * it doesn't unbind dom events, that is the user own responsibility
           */
          destroy: function() {
            this.element && toggleCssProps(this, false);

            this.handlers = {};
            this.session = {};
            this.input.destroy();
            this.element = null;
          }
        };

        /**
         * add/remove the css properties as defined in manager.options.cssProps
         * @param {Manager} manager
         * @param {Boolean} add
         */
        function toggleCssProps(manager, add) {
          var element = manager.element;
          each(manager.options.cssProps, function(value, name) {
            element.style[prefixed(element.style, name)] = add ? value :
              '';
          });
        }

        /**
         * trigger dom event
         * @param {String} event
         * @param {Object} data
         */
        function triggerDomEvent(event, data) {
          var gestureEvent = document.createEvent('Event');
          gestureEvent.initEvent(event, true, true);
          gestureEvent.gesture = data;
          data.target.dispatchEvent(gestureEvent);
        }

        extend(Hammer, {
          INPUT_START: INPUT_START,
          INPUT_MOVE: INPUT_MOVE,
          INPUT_END: INPUT_END,
          INPUT_CANCEL: INPUT_CANCEL,

          STATE_POSSIBLE: STATE_POSSIBLE,
          STATE_BEGAN: STATE_BEGAN,
          STATE_CHANGED: STATE_CHANGED,
          STATE_ENDED: STATE_ENDED,
          STATE_RECOGNIZED: STATE_RECOGNIZED,
          STATE_CANCELLED: STATE_CANCELLED,
          STATE_FAILED: STATE_FAILED,

          DIRECTION_NONE: DIRECTION_NONE,
          DIRECTION_LEFT: DIRECTION_LEFT,
          DIRECTION_RIGHT: DIRECTION_RIGHT,
          DIRECTION_UP: DIRECTION_UP,
          DIRECTION_DOWN: DIRECTION_DOWN,
          DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,
          DIRECTION_VERTICAL: DIRECTION_VERTICAL,
          DIRECTION_ALL: DIRECTION_ALL,

          Manager: Manager,
          Input: Input,
          TouchAction: TouchAction,

          TouchInput: TouchInput,
          MouseInput: MouseInput,
          PointerEventInput: PointerEventInput,
          TouchMouseInput: TouchMouseInput,
          SingleTouchInput: SingleTouchInput,

          Recognizer: Recognizer,
          AttrRecognizer: AttrRecognizer,
          Tap: TapRecognizer,
          Pan: PanRecognizer,
          Swipe: SwipeRecognizer,
          Pinch: PinchRecognizer,
          Rotate: RotateRecognizer,
          Press: PressRecognizer,

          on: addEventListeners,
          off: removeEventListeners,
          each: each,
          merge: merge,
          extend: extend,
          inherit: inherit,
          bindFn: bindFn,
          prefixed: prefixed
        });

        // jquery.hammer.js
        // This jQuery plugin is just a small wrapper around the Hammer() class.
        // It also extends the Manager.emit method by triggering jQuery events.
        // $(element).hammer(options).bind("pan", myPanHandler);
        // The Hammer instance is stored at $element.data("hammer").
        // https://github.com/hammerjs/jquery.hammer.js

        (function($, Hammer) {
          function hammerify(el, options) {
            var $el = $(el);
            if (!$el.data('hammer')) {
              $el.data('hammer', new Hammer($el[0], options));
            }
          }

          $.fn.hammer = function(options) {
            return this.each(function() {
              hammerify(this, options);
            });
          };

          // extend the emit method to also trigger jQuery events
          Hammer.Manager.prototype.emit = (function(originalEmit) {
            return function(type, data) {
              originalEmit.call(this, type, data);
              $(this.element).trigger({
                type: type,
                gesture: data
              });
            };
          })(Hammer.Manager.prototype.emit);
        })($, Hammer);

        $.AMUI.Hammer = Hammer;

        module.exports = Hammer;

      }).call(this, typeof global !== "undefined" ? global : typeof self !==
        "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
      "./core": 2
    }
  ]
}, {}, [1]);
/*! Amaze UI v2.3.0 | by Amaze UI Team | (c) 2015 AllMobilize, Inc. | Licensed under MIT | 2015-04-08T06:04:29 UTC */
 
!function t(e,n,i){function o(s,r){if(!n[s]){if(!e[s]){var l="function"==typeof require&&require;if(!r&&l)return l(s,!0);if(a)return a(s,!0);var c=new Error("Cannot find module '"+s+"'");throw c.code="MODULE_NOT_FOUND",c}var u=n[s]={exports:{}};e[s][0].call(u.exports,function(t){var n=e[s][1][t];return o(n?n:t)},u,u.exports,t,e,n,i)}return n[s].exports}for(var a="function"==typeof require&&require,s=0;s<i.length;s++)o(i[s]);return o}({1:[function(t,e){(function(n){"use strict";var i="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null;t("./core"),t("./ui.alert"),t("./ui.button"),t("./ui.collapse"),t("./ui.dimmer"),t("./ui.dropdown"),t("./ui.flexslider"),t("./ui.modal"),t("./ui.offcanvas"),t("./ui.popover"),t("./ui.progress"),t("./ui.scrollspynav"),t("./ui.sticky"),t("./util.cookie"),e.exports=i.AMUI}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2,"./ui.alert":3,"./ui.button":4,"./ui.collapse":5,"./ui.dimmer":6,"./ui.dropdown":7,"./ui.flexslider":8,"./ui.modal":9,"./ui.offcanvas":10,"./ui.popover":11,"./ui.progress":12,"./ui.scrollspynav":13,"./ui.sticky":15,"./util.cookie":16}],2:[function(t,e){(function(t){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof t?t.jQuery:null;if("undefined"==typeof n)throw new Error("Amaze UI 2.x requires jQuery :-(\n爱上一匹野马，可你的家里没有草原…");var i=n.AMUI||{},o=n(window),a=window.document,s=n("html");i.VERSION="2.3.0",i.support={},i.support.transition=function(){var t=function(){var t=a.body||a.documentElement,e={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var n in e)if(void 0!==t.style[n])return e[n]}();return t&&{end:t}}(),i.support.animation=function(){var t=function(){var t=a.body||a.documentElement,e={WebkitAnimation:"webkitAnimationEnd",MozAnimation:"animationend",OAnimation:"oAnimationEnd oanimationend",animation:"animationend"};for(var n in e)if(void 0!==t.style[n])return e[n]}();return t&&{end:t}}(),i.support.touch="ontouchstart"in window&&navigator.userAgent.toLowerCase().match(/mobile|tablet/)||window.DocumentTouch&&document instanceof window.DocumentTouch||window.navigator.msPointerEnabled&&window.navigator.msMaxTouchPoints>0||window.navigator.pointerEnabled&&window.navigator.maxTouchPoints>0||!1,i.support.mutationobserver=window.MutationObserver||window.WebKitMutationObserver||null,i.support.formValidation="function"==typeof document.createElement("form").checkValidity,i.utils={},i.utils.debounce=function(t,e,n){var i;return function(){var o=this,a=arguments,s=function(){i=null,n||t.apply(o,a)},r=n&&!i;clearTimeout(i),i=setTimeout(s,e),r&&t.apply(o,a)}},i.utils.isInView=function(t,e){var i=n(t),a=!(!i.width()&&!i.height())&&"none"!==i.css("display");if(!a)return!1;var s=o.scrollLeft(),r=o.scrollTop(),l=i.offset(),c=l.left,u=l.top;return e=n.extend({topOffset:0,leftOffset:0},e),u+i.height()>=r&&u-e.topOffset<=r+o.height()&&c+i.width()>=s&&c-e.leftOffset<=s+o.width()},i.utils.parseOptions=i.utils.options=function(t){if(n.isPlainObject(t))return t;var e=t?t.indexOf("{"):-1,i={};if(-1!=e)try{i=new Function("","var json = "+t.substr(e)+"; return JSON.parse(JSON.stringify(json));")()}catch(o){}return i},i.utils.generateGUID=function(t){var e=t+"-"||"am-";do e+=Math.random().toString(36).substring(2,7);while(document.getElementById(e));return e},n.fn.emulateTransitionEnd=function(t){var e=!1,o=this;n(this).one(i.support.transition.end,function(){e=!0});var a=function(){e||n(o).trigger(i.support.transition.end),o.transitionEndTimmer=void 0};return this.transitionEndTimmer=setTimeout(a,t),this},n.fn.redraw=function(){return n(this).each(function(){this.offsetHeight}),this},n.fn.transitionEnd=function(t){function e(i){t.call(this,i),n&&o.off(n,e)}var n=i.support.transition.end,o=this;return t&&n&&o.on(n,e),this},n.fn.removeClassRegEx=function(){return this.each(function(t){var e=n(this).attr("class");if(!e||!t)return!1;var i=[];e=e.split(" ");for(var o=0,a=e.length;a>o;o++)e[o].match(t)||i.push(e[o]);n(this).attr("class",i.join(" "))})},n.fn.alterClass=function(t,e){var i=this;if(-1===t.indexOf("*"))return i.removeClass(t),e?i.addClass(e):i;var o=new RegExp("\\s"+t.replace(/\*/g,"[A-Za-z0-9-_]+").split(" ").join("\\s|\\s")+"\\s","g");return i.each(function(t,e){for(var i=" "+e.className+" ";o.test(i);)i=i.replace(o," ");e.className=n.trim(i)}),e?i.addClass(e):i},i.utils.rAF=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||function(t){return window.setTimeout(t,1e3/60)}}(),i.utils.cancelAF=function(){return window.cancelAnimationFrame||window.webkitCancelAnimationFrame||window.mozCancelAnimationFrame||window.oCancelAnimationFrame||function(t){window.clearTimeout(t)}}(),i.utils.measureScrollbar=function(){if(document.body.clientWidth>=window.innerWidth)return 0;var t=n('<div style="width: 100px;height: 100px;overflow: scroll;position: absolute;top: -9999px;"></div>');n(document.body).append(t);var e=t[0].offsetWidth-t[0].clientWidth;return t.remove(),e},i.utils.imageLoader=function(t,e){function n(){e(t[0])}function i(){if(this.one("load",n),/MSIE (\d+\.\d+);/.test(navigator.userAgent)){var t=this.attr("src"),e=t.match(/\?/)?"&":"?";e+="random="+(new Date).getTime(),this.attr("src",t+e)}}return t.attr("src")?void(t[0].complete||4===t[0].readyState?n():i.call(t)):void n()},i.template=function(t,e){var n=i.template;return n.cache[t]||(n.cache[t]=function(){var e=t,i=/^[\w\-]+$/.test(t)?n.get(t):(e="template(string)",t),o=1,a=("try { "+(n.variable?"var "+n.variable+" = this.stash;":"with (this.stash) { ")+"this.ret += '"+i.replace(/<%/g,"").replace(/%>/g,"").replace(/'(?![^\x11\x13]+?\x13)/g,"\\x27").replace(/^\s*|\s*$/g,"").replace(/\n/g,function(){return"';\nthis.line = "+ ++o+"; this.ret += '\\n"}).replace(/\x11-(.+?)\x13/g,"' + ($1) + '").replace(/\x11=(.+?)\x13/g,"' + this.escapeHTML($1) + '").replace(/\x11(.+?)\x13/g,"'; $1; this.ret += '")+"'; "+(n.variable?"":"}")+"return this.ret;} catch (e) { throw 'TemplateError: ' + e + ' (on "+e+"' + ' line ' + this.line + ')'; } //@ sourceURL="+e+"\n").replace(/this\.ret \+= '';/g,""),s=new Function(a),r={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#x22;","'":"&#x27;"},l=function(t){return(""+t).replace(/[&<>\'\"]/g,function(t){return r[t]})};return function(t){return s.call(n.context={escapeHTML:l,line:1,ret:"",stash:t})}}()),e?n.cache[t](e):n.cache[t]},i.template.cache={},i.template.get=function(t){if(t){var e=document.getElementById(t);return e&&e.innerHTML||""}},i.DOMWatchers=[],i.DOMReady=!1,i.ready=function(t){i.DOMWatchers.push(t),i.DOMReady&&t(document)},i.DOMObserve=function(t,e,o){var a=i.support.mutationobserver;a&&(e=n.isPlainObject(e)?e:{childList:!0,subtree:!0},o="function"==typeof o&&o||function(){},n(t).each(function(){var t=this,s=n(t);if(!s.data("am.observer"))try{var r=new a(i.utils.debounce(function(e,n){o.call(t,e,n),s.trigger("changed.dom.amui")},50));r.observe(t,e),s.data("am.observer",r)}catch(l){}}))},n.fn.DOMObserve=function(t,e){return this.each(function(){i.DOMObserve(this,t,e)})},i.support.touch&&(s.addClass("am-touch"),n(function(){var t=i.FastClick;t&&(n("[contenteditable]").addClass("needsclick"),t.attach(document.body))})),n(document).on("changed.dom.amui",function(t){var e=t.target;n.each(i.DOMWatchers,function(t,n){n(e)})}),n(function(){var t=n("body");i.DOMReady=!0,n.each(i.DOMWatchers,function(t,e){e(document)}),i.DOMObserve("[data-am-observe]"),s.removeClass("no-js").addClass("js"),i.support.animation&&s.addClass("cssanimations"),window.navigator.standalone&&s.addClass("am-standalone"),n(".am-topbar-fixed-top").length&&t.addClass("am-with-topbar-fixed-top"),n(".am-topbar-fixed-bottom").length&&t.addClass("am-with-topbar-fixed-bottom");var e=n(".am-layout");e.find('[class*="md-block-grid"]').alterClass("md-block-grid-*"),e.find('[class*="lg-block-grid"]').alterClass("lg-block-grid"),n("[data-am-widget]").each(function(){var t=n(this);0===t.parents(".am-layout").length&&t.addClass("am-no-layout")})}),n.AMUI=i,e.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],3:[function(t,e){(function(n){"use strict";var i="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,o=t("./core"),a=function(t,e){var n=this;this.options=i.extend({},a.DEFAULTS,e),this.$element=i(t),this.$element.addClass("am-fade am-in").on("click.alert.amui",".am-close",function(){n.close.call(this)})};a.DEFAULTS={removeElement:!0},a.prototype.close=function(){function t(){n.trigger("closed.alert.amui").remove()}var e=i(this),n=e.hasClass("am-alert")?e:e.parent(".am-alert");n.trigger("close.alert.amui"),n.removeClass("am-in"),o.support.transition&&n.hasClass("am-fade")?n.one(o.support.transition.end,t).emulateTransitionEnd(200):t()},i.fn.alert=function(t){return this.each(function(){var e=i(this),n=e.data("amui.alert"),o="object"==typeof t&&t;n||e.data("amui.alert",n=new a(this,o||{})),"string"==typeof t&&n[t].call(e)})},i(document).on("click.alert.amui.data-api","[data-am-alert]",function(t){var e=i(t.target);i(this).addClass("am-fade am-in"),e.is(".am-close")&&i(this).alert("close")}),i.AMUI.alert=a,e.exports=a}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2}],4:[function(t,e){(function(n){"use strict";function i(t){return this.each(function(){var e=o(this),n=e.data("amui.button"),i="object"==typeof t&&t||{};n||e.data("amui.button",n=new s(this,i)),"toggle"==t?n.toggle():"string"==typeof t&&n.setState(t)})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,a=t("./core"),s=function(t,e){this.$element=o(t),this.options=o.extend({},s.DEFAULTS,e),this.isLoading=!1,this.hasSpinner=!1};s.DEFAULTS={loadingText:"loading...",className:{loading:"am-btn-loading",disabled:"am-disabled"},spinner:void 0},s.prototype.setState=function(t){var e="disabled",n=this.$element,i=this.options,s=n.is("input")?"val":"html",r=i.className.disabled+" "+i.className.loading;t+="Text",i.resetText||(i.resetText=n[s]()),a.support.animation&&i.spinner&&"html"===s&&!this.hasSpinner&&(i.loadingText='<span class="am-icon-'+i.spinner+' am-icon-spin"></span>'+i.loadingText,this.hasSpinner=!0),n[s](i[t]),setTimeout(o.proxy(function(){"loadingText"==t?(n.addClass(r).attr(e,e),this.isLoading=!0):this.isLoading&&(n.removeClass(r).removeAttr(e),this.isLoading=!1)},this),0)},s.prototype.toggle=function(){var t=!0,e=this.$element,n=this.$element.parent(".am-btn-group");if(n.length){var i=this.$element.find("input");"radio"==i.prop("type")&&(i.prop("checked")&&e.hasClass("am-active")?t=!1:n.find(".am-active").removeClass("am-active")),t&&i.prop("checked",!e.hasClass("am-active")).trigger("change")}t&&(e.toggleClass("am-active"),e.hasClass("am-active")||e.blur())},o.fn.button=i,o(document).on("click.button.amui.data-api","[data-am-button]",function(t){var e=o(t.target);e.hasClass("am-btn")||(e=e.closest(".am-btn")),i.call(e,"toggle"),t.preventDefault()}),a.ready(function(t){o("[data-am-loading]",t).each(function(){o(this).button(a.utils.parseOptions(o(this).data("amLoading")))})}),o.AMUI.button=s,e.exports=s}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2}],5:[function(t,e){(function(n){"use strict";function i(t){return this.each(function(){var e=o(this),n=e.data("amui.collapse"),i=o.extend({},s.DEFAULTS,a.utils.options(e.attr("data-am-collapse")),"object"==typeof t&&t);!n&&i.toggle&&"open"==t&&(t=!t),n||e.data("amui.collapse",n=new s(this,i)),"string"==typeof t&&n[t]()})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,a=t("./core"),s=function(t,e){this.$element=o(t),this.options=o.extend({},s.DEFAULTS,e),this.transitioning=null,this.options.parent&&(this.$parent=o(this.options.parent)),this.options.toggle&&this.toggle()};s.DEFAULTS={toggle:!0},s.prototype.open=function(){if(!this.transitioning&&!this.$element.hasClass("am-in")){var t=o.Event("open.collapse.amui");if(this.$element.trigger(t),!t.isDefaultPrevented()){var e=this.$parent&&this.$parent.find("> .am-panel > .am-in");if(e&&e.length){var n=e.data("amui.collapse");if(n&&n.transitioning)return;i.call(e,"close"),n||e.data("amui.collapse",null)}this.$element.removeClass("am-collapse").addClass("am-collapsing").height(0),this.transitioning=1;var s=function(){this.$element.removeClass("am-collapsing").addClass("am-collapse am-in").height(""),this.transitioning=0,this.$element.trigger("opened.collapse.amui")};if(!a.support.transition)return s.call(this);var r=this.$element[0].scrollHeight;this.$element.one(a.support.transition.end,o.proxy(s,this)).emulateTransitionEnd(300).css({height:r})}}},s.prototype.close=function(){if(!this.transitioning&&this.$element.hasClass("am-in")){var t=o.Event("close.collapse.amui");if(this.$element.trigger(t),!t.isDefaultPrevented()){this.$element.height(this.$element.height()).redraw(),this.$element.addClass("am-collapsing").removeClass("am-collapse am-in"),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.trigger("closed.collapse.amui").removeClass("am-collapsing").addClass("am-collapse")};return a.support.transition?void this.$element.height(0).one(a.support.transition.end,o.proxy(e,this)).emulateTransitionEnd(300):e.call(this)}}},s.prototype.toggle=function(){this[this.$element.hasClass("am-in")?"close":"open"]()},o.fn.collapse=i,o(document).on("click.collapse.amui.data-api","[data-am-collapse]",function(t){var e,n=o(this),s=a.utils.options(n.attr("data-am-collapse")),r=s.target||t.preventDefault()||(e=n.attr("href"))&&e.replace(/.*(?=#[^\s]+$)/,""),l=o(r),c=l.data("amui.collapse"),u=c?"toggle":s,d=s.parent,p=d&&o(d);c&&c.transitioning||(p&&p.find("[data-am-collapse]").not(n).addClass("am-collapsed"),n[l.hasClass("am-in")?"addClass":"removeClass"]("am-collapsed")),i.call(l,u)}),o.AMUI.collapse=s,e.exports=s}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2}],6:[function(t,e){(function(n){"use strict";var i="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,o=t("./core"),a=i(document),s=o.support.transition,r=function(){this.id=o.utils.generateGUID("am-dimmer"),this.$element=i(r.DEFAULTS.tpl,{id:this.id}),this.inited=!1,this.scrollbarWidth=0,this.$used=i([])};r.DEFAULTS={tpl:'<div class="am-dimmer" data-am-dimmer></div>'},r.prototype.init=function(){return this.inited||(i(document.body).append(this.$element),this.inited=!0,a.trigger("init.dimmer.amui")),this},r.prototype.open=function(t){this.inited||this.init();var e=this.$element;return t&&(this.$used=this.$used.add(i(t))),this.checkScrollbar().setScrollbar(),e.off(s.end).show().trigger("open.dimmer.amui"),setTimeout(function(){e.addClass("am-active")},0),this},r.prototype.close=function(t,e){function n(){o.hide(),this.resetScrollbar()}if(this.$used=this.$used.not(i(t)),!e&&this.$used.length)return this;var o=this.$element;return o.removeClass("am-active").trigger("close.dimmer.amui"),n.call(this),this},r.prototype.checkScrollbar=function(){return this.scrollbarWidth=o.utils.measureScrollbar(),this},r.prototype.setScrollbar=function(){var t=i(document.body),e=parseInt(t.css("padding-right")||0,10);return this.scrollbarWidth&&t.css("padding-right",e+this.scrollbarWidth),t.addClass("am-dimmer-active"),this},r.prototype.resetScrollbar=function(){return i(document.body).css("padding-right","").removeClass("am-dimmer-active"),this};var l=new r;i.AMUI.dimmer=l,e.exports=l}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2}],7:[function(t,e){(function(n){"use strict";function i(t){return this.each(function(){var e=o(this),n=e.data("amui.dropdown"),i=o.extend({},a.utils.parseOptions(e.attr("data-am-dropdown")),"object"==typeof t&&t);n||e.data("amui.dropdown",n=new r(this,i)),"string"==typeof t&&n[t]()})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,a=t("./core"),s=a.support.animation,r=function(t,e){this.options=o.extend({},r.DEFAULTS,e),e=this.options,this.$element=o(t),this.$toggle=this.$element.find(e.selector.toggle),this.$dropdown=this.$element.find(e.selector.dropdown),this.$boundary=e.boundary===window?o(window):this.$element.closest(e.boundary),this.$justify=e.justify&&o(e.justify).length&&o(e.justify)||void 0,!this.$boundary.length&&(this.$boundary=o(window)),this.active=this.$element.hasClass("am-active")?!0:!1,this.animating=null,this.events()};r.DEFAULTS={animation:"am-animation-slide-top-fixed",boundary:window,justify:void 0,selector:{dropdown:".am-dropdown-content",toggle:".am-dropdown-toggle"},trigger:"click"},r.prototype.toggle=function(){this.clear(),this.animating||this[this.active?"close":"open"]()},r.prototype.open=function(){var t=this.$toggle,e=this.$element,n=this.$dropdown;if(!t.is(".am-disabled, :disabled")&&!this.active){e.trigger("open.dropdown.amui").addClass("am-active"),t.trigger("focus"),this.checkDimensions();var i=o.proxy(function(){e.trigger("opened.dropdown.amui"),this.active=!0,this.animating=0},this);s?(this.animating=1,n.addClass(this.options.animation).on(s.end+".open.dropdown.amui",o.proxy(function(){i(),n.removeClass(this.options.animation)},this))):i()}},r.prototype.close=function(){if(this.active){var t="am-dropdown-animation",e=this.$element,n=this.$dropdown;e.trigger("close.dropdown.amui");var i=o.proxy(function(){e.removeClass("am-active").trigger("closed.dropdown.amui"),this.active=!1,this.animating=0,this.$toggle.blur()},this);s?(n.removeClass(this.options.animation),n.addClass(t),this.animating=1,n.one(s.end+".close.dropdown.amui",function(){n.removeClass(t),i()})):i()}},r.prototype.checkDimensions=function(){if(this.$dropdown.length){var t=this.$dropdown,e=t.offset(),n=t.outerWidth(),i=this.$boundary.width(),a=o.isWindow(this.boundary)&&this.$boundary.offset()?this.$boundary.offset().left:0;this.$justify&&t.css({"min-width":this.$justify.css("width")}),n+(e.left-a)>i&&this.$element.addClass("am-dropdown-flip")}},r.prototype.clear=function(){o("[data-am-dropdown]").not(this.$element).each(function(){var t=o(this).data("amui.dropdown");t&&t.close()})},r.prototype.events=function(){var t="dropdown.amui",e=this.$toggle;e.on("click."+t,o.proxy(function(t){t.preventDefault(),this.toggle()},this)),o(document).on("keydown.dropdown.amui",o.proxy(function(t){27===t.keyCode&&this.active&&this.close()},this)).on("click.outer.dropdown.amui",o.proxy(function(t){!this.active||this.$element[0]!==t.target&&this.$element.find(t.target).length||this.close()},this))},o.fn.dropdown=i,a.ready(function(t){o("[data-am-dropdown]",t).dropdown()}),o(document).on("click.dropdown.amui.data-api",".am-dropdown form",function(t){t.stopPropagation()}),o.AMUI.dropdown=r,e.exports=r}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2}],8:[function(t,e){(function(n){var i="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,o=t("./core");i.flexslider=function(t,e){var n=i(t);n.vars=i.extend({},i.flexslider.defaults,e);var o,a=n.vars.namespace,s=window.navigator&&window.navigator.msPointerEnabled&&window.MSGesture,r=("ontouchstart"in window||s||window.DocumentTouch&&document instanceof DocumentTouch)&&n.vars.touch,l="click touchend MSPointerUp keyup",c="",u="vertical"===n.vars.direction,d=n.vars.reverse,p=n.vars.itemWidth>0,h="fade"===n.vars.animation,f=""!==n.vars.asNavFor,m={},v=!0;i.data(t,"flexslider",n),m={init:function(){n.animating=!1,n.currentSlide=parseInt(n.vars.startAt?n.vars.startAt:0,10),isNaN(n.currentSlide)&&(n.currentSlide=0),n.animatingTo=n.currentSlide,n.atEnd=0===n.currentSlide||n.currentSlide===n.last,n.containerSelector=n.vars.selector.substr(0,n.vars.selector.search(" ")),n.slides=i(n.vars.selector,n),n.container=i(n.containerSelector,n),n.count=n.slides.length,n.syncExists=i(n.vars.sync).length>0,"slide"===n.vars.animation&&(n.vars.animation="swing"),n.prop=u?"top":"marginLeft",n.args={},n.manualPause=!1,n.stopped=!1,n.started=!1,n.startTimeout=null,n.transitions=!n.vars.video&&!h&&n.vars.useCSS&&function(){var t=document.createElement("div"),e=["perspectiveProperty","WebkitPerspective","MozPerspective","OPerspective","msPerspective"];for(var i in e)if(void 0!==t.style[e[i]])return n.pfx=e[i].replace("Perspective","").toLowerCase(),n.prop="-"+n.pfx+"-transform",!0;return!1}(),n.ensureAnimationEnd="",""!==n.vars.controlsContainer&&(n.controlsContainer=i(n.vars.controlsContainer).length>0&&i(n.vars.controlsContainer)),""!==n.vars.manualControls&&(n.manualControls=i(n.vars.manualControls).length>0&&i(n.vars.manualControls)),n.vars.randomize&&(n.slides.sort(function(){return Math.round(Math.random())-.5}),n.container.empty().append(n.slides)),n.doMath(),n.setup("init"),n.vars.controlNav&&m.controlNav.setup(),n.vars.directionNav&&m.directionNav.setup(),n.vars.keyboard&&(1===i(n.containerSelector).length||n.vars.multipleKeyboard)&&i(document).bind("keyup",function(t){var e=t.keyCode;if(!n.animating&&(39===e||37===e)){var i=39===e?n.getTarget("next"):37===e?n.getTarget("prev"):!1;n.flexAnimate(i,n.vars.pauseOnAction)}}),n.vars.mousewheel&&n.bind("mousewheel",function(t,e){t.preventDefault();var i=n.getTarget(0>e?"next":"prev");n.flexAnimate(i,n.vars.pauseOnAction)}),n.vars.pausePlay&&m.pausePlay.setup(),n.vars.slideshow&&n.vars.pauseInvisible&&m.pauseInvisible.init(),n.vars.slideshow&&(n.vars.pauseOnHover&&n.hover(function(){n.manualPlay||n.manualPause||n.pause()},function(){n.manualPause||n.manualPlay||n.stopped||n.play()}),n.vars.pauseInvisible&&m.pauseInvisible.isHidden()||(n.vars.initDelay>0?n.startTimeout=setTimeout(n.play,n.vars.initDelay):n.play())),f&&m.asNav.setup(),r&&n.vars.touch&&m.touch(),(!h||h&&n.vars.smoothHeight)&&i(window).bind("resize orientationchange focus",m.resize),n.find("img").attr("draggable","false"),setTimeout(function(){n.vars.start(n)},200)},asNav:{setup:function(){n.asNav=!0,n.animatingTo=Math.floor(n.currentSlide/n.move),n.currentItem=n.currentSlide,n.slides.removeClass(a+"active-slide").eq(n.currentItem).addClass(a+"active-slide"),s?(t._slider=n,n.slides.each(function(){var t=this;t._gesture=new MSGesture,t._gesture.target=t,t.addEventListener("MSPointerDown",function(t){t.preventDefault(),t.currentTarget._gesture&&t.currentTarget._gesture.addPointer(t.pointerId)},!1),t.addEventListener("MSGestureTap",function(t){t.preventDefault();var e=i(this),o=e.index();i(n.vars.asNavFor).data("flexslider").animating||e.hasClass("active")||(n.direction=n.currentItem<o?"next":"prev",n.flexAnimate(o,n.vars.pauseOnAction,!1,!0,!0))})})):n.slides.on(l,function(t){t.preventDefault();var e=i(this),o=e.index(),s=e.offset().left-i(n).scrollLeft();0>=s&&e.hasClass(a+"active-slide")?n.flexAnimate(n.getTarget("prev"),!0):i(n.vars.asNavFor).data("flexslider").animating||e.hasClass(a+"active-slide")||(n.direction=n.currentItem<o?"next":"prev",n.flexAnimate(o,n.vars.pauseOnAction,!1,!0,!0))})}},controlNav:{setup:function(){n.manualControls?m.controlNav.setupManual():m.controlNav.setupPaging()},setupPaging:function(){var t,e,o="thumbnails"===n.vars.controlNav?"control-thumbs":"control-paging",s=1;if(n.controlNavScaffold=i('<ol class="'+a+"control-nav "+a+o+'"></ol>'),n.pagingCount>1)for(var r=0;r<n.pagingCount;r++){if(e=n.slides.eq(r),t="thumbnails"===n.vars.controlNav?'<img src="'+e.attr("data-thumb")+'"/>':"<a>"+s+"</a>","thumbnails"===n.vars.controlNav&&!0===n.vars.thumbCaptions){var u=e.attr("data-thumbcaption");""!=u&&void 0!=u&&(t+='<span class="'+a+'caption">'+u+"</span>")}n.controlNavScaffold.append("<li>"+t+"<i></i></li>"),s++}n.controlsContainer?i(n.controlsContainer).append(n.controlNavScaffold):n.append(n.controlNavScaffold),m.controlNav.set(),m.controlNav.active(),n.controlNavScaffold.delegate("a, img",l,function(t){if(t.preventDefault(),""===c||c===t.type){var e=i(this),o=n.controlNav.index(e);e.hasClass(a+"active")||(n.direction=o>n.currentSlide?"next":"prev",n.flexAnimate(o,n.vars.pauseOnAction))}""===c&&(c=t.type),m.setToClearWatchedEvent()})},setupManual:function(){n.controlNav=n.manualControls,m.controlNav.active(),n.controlNav.bind(l,function(t){if(t.preventDefault(),""===c||c===t.type){var e=i(this),o=n.controlNav.index(e);e.hasClass(a+"active")||(n.direction=o>n.currentSlide?"next":"prev",n.flexAnimate(o,n.vars.pauseOnAction))}""===c&&(c=t.type),m.setToClearWatchedEvent()})},set:function(){var t="thumbnails"===n.vars.controlNav?"img":"a";n.controlNav=i("."+a+"control-nav li "+t,n.controlsContainer?n.controlsContainer:n)},active:function(){n.controlNav.removeClass(a+"active").eq(n.animatingTo).addClass(a+"active")},update:function(t,e){n.pagingCount>1&&"add"===t?n.controlNavScaffold.append(i("<li><a>"+n.count+"</a></li>")):1===n.pagingCount?n.controlNavScaffold.find("li").remove():n.controlNav.eq(e).closest("li").remove(),m.controlNav.set(),n.pagingCount>1&&n.pagingCount!==n.controlNav.length?n.update(e,t):m.controlNav.active()}},directionNav:{setup:function(){var t=i('<ul class="'+a+'direction-nav"><li><a class="'+a+'prev" href="#">'+n.vars.prevText+'</a></li><li><a class="'+a+'next" href="#">'+n.vars.nextText+"</a></li></ul>");n.controlsContainer?(i(n.controlsContainer).append(t),n.directionNav=i("."+a+"direction-nav li a",n.controlsContainer)):(n.append(t),n.directionNav=i("."+a+"direction-nav li a",n)),m.directionNav.update(),n.directionNav.bind(l,function(t){t.preventDefault();var e;(""===c||c===t.type)&&(e=n.getTarget(i(this).hasClass(a+"next")?"next":"prev"),n.flexAnimate(e,n.vars.pauseOnAction)),""===c&&(c=t.type),m.setToClearWatchedEvent()})},update:function(){var t=a+"disabled";1===n.pagingCount?n.directionNav.addClass(t).attr("tabindex","-1"):n.vars.animationLoop?n.directionNav.removeClass(t).removeAttr("tabindex"):0===n.animatingTo?n.directionNav.removeClass(t).filter("."+a+"prev").addClass(t).attr("tabindex","-1"):n.animatingTo===n.last?n.directionNav.removeClass(t).filter("."+a+"next").addClass(t).attr("tabindex","-1"):n.directionNav.removeClass(t).removeAttr("tabindex")}},pausePlay:{setup:function(){var t=i('<div class="'+a+'pauseplay"><a></a></div>');n.controlsContainer?(n.controlsContainer.append(t),n.pausePlay=i("."+a+"pauseplay a",n.controlsContainer)):(n.append(t),n.pausePlay=i("."+a+"pauseplay a",n)),m.pausePlay.update(n.vars.slideshow?a+"pause":a+"play"),n.pausePlay.bind(l,function(t){t.preventDefault(),(""===c||c===t.type)&&(i(this).hasClass(a+"pause")?(n.manualPause=!0,n.manualPlay=!1,n.pause()):(n.manualPause=!1,n.manualPlay=!0,n.play())),""===c&&(c=t.type),m.setToClearWatchedEvent()})},update:function(t){"play"===t?n.pausePlay.removeClass(a+"pause").addClass(a+"play").html(n.vars.playText):n.pausePlay.removeClass(a+"play").addClass(a+"pause").html(n.vars.pauseText)}},touch:function(){function e(e){n.animating?e.preventDefault():(window.navigator.msPointerEnabled||1===e.touches.length)&&(n.pause(),v=u?n.h:n.w,y=Number(new Date),b=e.touches[0].pageX,T=e.touches[0].pageY,m=p&&d&&n.animatingTo===n.last?0:p&&d?n.limit-(n.itemW+n.vars.itemMargin)*n.move*n.animatingTo:p&&n.currentSlide===n.last?n.limit:p?(n.itemW+n.vars.itemMargin)*n.move*n.currentSlide:d?(n.last-n.currentSlide+n.cloneOffset)*v:(n.currentSlide+n.cloneOffset)*v,c=u?T:b,f=u?b:T,t.addEventListener("touchmove",i,!1),t.addEventListener("touchend",o,!1))}function i(t){b=t.touches[0].pageX,T=t.touches[0].pageY,g=u?c-T:c-b,w=u?Math.abs(g)<Math.abs(b-f):Math.abs(g)<Math.abs(T-f);var e=500;(!w||Number(new Date)-y>e)&&(t.preventDefault(),!h&&n.transitions&&(n.vars.animationLoop||(g/=0===n.currentSlide&&0>g||n.currentSlide===n.last&&g>0?Math.abs(g)/v+2:1),n.setProps(m+g,"setTouch")))}function o(){if(t.removeEventListener("touchmove",i,!1),n.animatingTo===n.currentSlide&&!w&&null!==g){var e=d?-g:g,a=n.getTarget(e>0?"next":"prev");n.canAdvance(a)&&(Number(new Date)-y<550&&Math.abs(e)>50||Math.abs(e)>v/2)?n.flexAnimate(a,n.vars.pauseOnAction):h||n.flexAnimate(n.currentSlide,n.vars.pauseOnAction,!0)}t.removeEventListener("touchend",o,!1),c=null,f=null,g=null,m=null}function a(e){e.stopPropagation(),n.animating?e.preventDefault():(n.pause(),t._gesture.addPointer(e.pointerId),C=0,v=u?n.h:n.w,y=Number(new Date),m=p&&d&&n.animatingTo===n.last?0:p&&d?n.limit-(n.itemW+n.vars.itemMargin)*n.move*n.animatingTo:p&&n.currentSlide===n.last?n.limit:p?(n.itemW+n.vars.itemMargin)*n.move*n.currentSlide:d?(n.last-n.currentSlide+n.cloneOffset)*v:(n.currentSlide+n.cloneOffset)*v)}function r(e){e.stopPropagation();var n=e.target._slider;if(n){var i=-e.translationX,o=-e.translationY;return C+=u?o:i,g=C,w=u?Math.abs(C)<Math.abs(-i):Math.abs(C)<Math.abs(-o),e.detail===e.MSGESTURE_FLAG_INERTIA?void setImmediate(function(){t._gesture.stop()}):void((!w||Number(new Date)-y>500)&&(e.preventDefault(),!h&&n.transitions&&(n.vars.animationLoop||(g=C/(0===n.currentSlide&&0>C||n.currentSlide===n.last&&C>0?Math.abs(C)/v+2:1)),n.setProps(m+g,"setTouch"))))}}function l(t){t.stopPropagation();var e=t.target._slider;if(e){if(e.animatingTo===e.currentSlide&&!w&&null!==g){var n=d?-g:g,i=e.getTarget(n>0?"next":"prev");e.canAdvance(i)&&(Number(new Date)-y<550&&Math.abs(n)>50||Math.abs(n)>v/2)?e.flexAnimate(i,e.vars.pauseOnAction):h||e.flexAnimate(e.currentSlide,e.vars.pauseOnAction,!0)}c=null,f=null,g=null,m=null,C=0}}var c,f,m,v,g,y,w=!1,b=0,T=0,C=0;s?(t.style.msTouchAction="none",t._gesture=new MSGesture,t._gesture.target=t,t.addEventListener("MSPointerDown",a,!1),t._slider=n,t.addEventListener("MSGestureChange",r,!1),t.addEventListener("MSGestureEnd",l,!1)):t.addEventListener("touchstart",e,!1)},resize:function(){!n.animating&&n.is(":visible")&&(p||n.doMath(),h?m.smoothHeight():p?(n.slides.width(n.computedW),n.update(n.pagingCount),n.setProps()):u?(n.viewport.height(n.h),n.setProps(n.h,"setTotal")):(n.vars.smoothHeight&&m.smoothHeight(),n.newSlides.width(n.computedW),n.setProps(n.computedW,"setTotal")))},smoothHeight:function(t){if(!u||h){var e=h?n:n.viewport;t?e.animate({height:n.slides.eq(n.animatingTo).height()},t):e.height(n.slides.eq(n.animatingTo).height())}},sync:function(t){var e=i(n.vars.sync).data("flexslider"),o=n.animatingTo;switch(t){case"animate":e.flexAnimate(o,n.vars.pauseOnAction,!1,!0);break;case"play":e.playing||e.asNav||e.play();break;case"pause":e.pause()}},uniqueID:function(t){return t.filter("[id]").add(t.find("[id]")).each(function(){var t=i(this);t.attr("id",t.attr("id")+"_clone")}),t},pauseInvisible:{visProp:null,init:function(){var t=["webkit","moz","ms","o"];if("hidden"in document)return"hidden";for(var e=0;e<t.length;e++)t[e]+"Hidden"in document&&(m.pauseInvisible.visProp=t[e]+"Hidden");if(m.pauseInvisible.visProp){var i=m.pauseInvisible.visProp.replace(/[H|h]idden/,"")+"visibilitychange";document.addEventListener(i,function(){m.pauseInvisible.isHidden()?n.startTimeout?clearTimeout(n.startTimeout):n.pause():n.started?n.play():n.vars.initDelay>0?setTimeout(n.play,n.vars.initDelay):n.play()})}},isHidden:function(){return document[m.pauseInvisible.visProp]||!1}},setToClearWatchedEvent:function(){clearTimeout(o),o=setTimeout(function(){c=""},3e3)}},n.flexAnimate=function(t,e,o,s,l){if(n.vars.animationLoop||t===n.currentSlide||(n.direction=t>n.currentSlide?"next":"prev"),f&&1===n.pagingCount&&(n.direction=n.currentItem<t?"next":"prev"),!n.animating&&(n.canAdvance(t,l)||o)&&n.is(":visible")){if(f&&s){var c=i(n.vars.asNavFor).data("flexslider");if(n.atEnd=0===t||t===n.count-1,c.flexAnimate(t,!0,!1,!0,l),n.direction=n.currentItem<t?"next":"prev",c.direction=n.direction,Math.ceil((t+1)/n.visible)-1===n.currentSlide||0===t)return n.currentItem=t,n.slides.removeClass(a+"active-slide").eq(t).addClass(a+"active-slide"),!1;n.currentItem=t,n.slides.removeClass(a+"active-slide").eq(t).addClass(a+"active-slide"),t=Math.floor(t/n.visible)
}if(n.animating=!0,n.animatingTo=t,e&&n.pause(),n.vars.before(n),n.syncExists&&!l&&m.sync("animate"),n.vars.controlNav&&m.controlNav.active(),p||n.slides.removeClass(a+"active-slide").eq(t).addClass(a+"active-slide"),n.atEnd=0===t||t===n.last,n.vars.directionNav&&m.directionNav.update(),t===n.last&&(n.vars.end(n),n.vars.animationLoop||n.pause()),h)r?(n.slides.eq(n.currentSlide).css({opacity:0,zIndex:1}),n.slides.eq(t).css({opacity:1,zIndex:2}),n.wrapup(w)):(n.slides.eq(n.currentSlide).css({zIndex:1}).animate({opacity:0},n.vars.animationSpeed,n.vars.easing),n.slides.eq(t).css({zIndex:2}).animate({opacity:1},n.vars.animationSpeed,n.vars.easing,n.wrapup));else{var v,g,y,w=u?n.slides.filter(":first").height():n.computedW;p?(v=n.vars.itemMargin,y=(n.itemW+v)*n.move*n.animatingTo,g=y>n.limit&&1!==n.visible?n.limit:y):g=0===n.currentSlide&&t===n.count-1&&n.vars.animationLoop&&"next"!==n.direction?d?(n.count+n.cloneOffset)*w:0:n.currentSlide===n.last&&0===t&&n.vars.animationLoop&&"prev"!==n.direction?d?0:(n.count+1)*w:d?(n.count-1-t+n.cloneOffset)*w:(t+n.cloneOffset)*w,n.setProps(g,"",n.vars.animationSpeed),n.transitions?(n.vars.animationLoop&&n.atEnd||(n.animating=!1,n.currentSlide=n.animatingTo),n.container.unbind("webkitTransitionEnd transitionend"),n.container.bind("webkitTransitionEnd transitionend",function(){clearTimeout(n.ensureAnimationEnd),n.wrapup(w)}),clearTimeout(n.ensureAnimationEnd),n.ensureAnimationEnd=setTimeout(function(){n.wrapup(w)},n.vars.animationSpeed+100)):n.container.animate(n.args,n.vars.animationSpeed,n.vars.easing,function(){n.wrapup(w)})}n.vars.smoothHeight&&m.smoothHeight(n.vars.animationSpeed)}},n.wrapup=function(t){h||p||(0===n.currentSlide&&n.animatingTo===n.last&&n.vars.animationLoop?n.setProps(t,"jumpEnd"):n.currentSlide===n.last&&0===n.animatingTo&&n.vars.animationLoop&&n.setProps(t,"jumpStart")),n.animating=!1,n.currentSlide=n.animatingTo,n.vars.after(n)},n.animateSlides=function(){!n.animating&&v&&n.flexAnimate(n.getTarget("next"))},n.pause=function(){clearInterval(n.animatedSlides),n.animatedSlides=null,n.playing=!1,n.vars.pausePlay&&m.pausePlay.update("play"),n.syncExists&&m.sync("pause")},n.play=function(){n.playing&&clearInterval(n.animatedSlides),n.animatedSlides=n.animatedSlides||setInterval(n.animateSlides,n.vars.slideshowSpeed),n.started=n.playing=!0,n.vars.pausePlay&&m.pausePlay.update("pause"),n.syncExists&&m.sync("play")},n.stop=function(){n.pause(),n.stopped=!0},n.canAdvance=function(t,e){var i=f?n.pagingCount-1:n.last;return e?!0:f&&n.currentItem===n.count-1&&0===t&&"prev"===n.direction?!0:f&&0===n.currentItem&&t===n.pagingCount-1&&"next"!==n.direction?!1:t!==n.currentSlide||f?n.vars.animationLoop?!0:n.atEnd&&0===n.currentSlide&&t===i&&"next"!==n.direction?!1:n.atEnd&&n.currentSlide===i&&0===t&&"next"===n.direction?!1:!0:!1},n.getTarget=function(t){return n.direction=t,"next"===t?n.currentSlide===n.last?0:n.currentSlide+1:0===n.currentSlide?n.last:n.currentSlide-1},n.setProps=function(t,e,i){var o=function(){var i=t?t:(n.itemW+n.vars.itemMargin)*n.move*n.animatingTo,o=function(){if(p)return"setTouch"===e?t:d&&n.animatingTo===n.last?0:d?n.limit-(n.itemW+n.vars.itemMargin)*n.move*n.animatingTo:n.animatingTo===n.last?n.limit:i;switch(e){case"setTotal":return d?(n.count-1-n.currentSlide+n.cloneOffset)*t:(n.currentSlide+n.cloneOffset)*t;case"setTouch":return d?t:t;case"jumpEnd":return d?t:n.count*t;case"jumpStart":return d?n.count*t:t;default:return t}}();return-1*o+"px"}();n.transitions&&(o=u?"translate3d(0,"+o+",0)":"translate3d("+o+",0,0)",i=void 0!==i?i/1e3+"s":"0s",n.container.css("-"+n.pfx+"-transition-duration",i),n.container.css("transition-duration",i)),n.args[n.prop]=o,(n.transitions||void 0===i)&&n.container.css(n.args),n.container.css("transform",o)},n.setup=function(t){if(h)n.slides.css({width:"100%","float":"left",marginRight:"-100%",position:"relative"}),"init"===t&&(r?n.slides.css({opacity:0,display:"block",webkitTransition:"opacity "+n.vars.animationSpeed/1e3+"s ease",zIndex:1}).eq(n.currentSlide).css({opacity:1,zIndex:2}):0==n.vars.fadeFirstSlide?n.slides.css({opacity:0,display:"block",zIndex:1}).eq(n.currentSlide).css({zIndex:2}).css({opacity:1}):n.slides.css({opacity:0,display:"block",zIndex:1}).eq(n.currentSlide).css({zIndex:2}).animate({opacity:1},n.vars.animationSpeed,n.vars.easing)),n.vars.smoothHeight&&m.smoothHeight();else{var e,o;"init"===t&&(n.viewport=i('<div class="'+a+'viewport"></div>').css({overflow:"hidden",position:"relative"}).appendTo(n).append(n.container),n.cloneCount=0,n.cloneOffset=0,d&&(o=i.makeArray(n.slides).reverse(),n.slides=i(o),n.container.empty().append(n.slides))),n.vars.animationLoop&&!p&&(n.cloneCount=2,n.cloneOffset=1,"init"!==t&&n.container.find(".clone").remove(),n.container.append(m.uniqueID(n.slides.first().clone().addClass("clone")).attr("aria-hidden","true")).prepend(m.uniqueID(n.slides.last().clone().addClass("clone")).attr("aria-hidden","true"))),n.newSlides=i(n.vars.selector,n),e=d?n.count-1-n.currentSlide+n.cloneOffset:n.currentSlide+n.cloneOffset,u&&!p?(n.container.height(200*(n.count+n.cloneCount)+"%").css("position","absolute").width("100%"),setTimeout(function(){n.newSlides.css({display:"block"}),n.doMath(),n.viewport.height(n.h),n.setProps(e*n.h,"init")},"init"===t?100:0)):(n.container.width(200*(n.count+n.cloneCount)+"%"),n.setProps(e*n.computedW,"init"),setTimeout(function(){n.doMath(),n.newSlides.css({width:n.computedW,"float":"left",display:"block"}),n.vars.smoothHeight&&m.smoothHeight()},"init"===t?100:0))}p||n.slides.removeClass(a+"active-slide").eq(n.currentSlide).addClass(a+"active-slide"),n.vars.init(n)},n.doMath=function(){var t=n.slides.first(),e=n.vars.itemMargin,i=n.vars.minItems,o=n.vars.maxItems;n.w=void 0===n.viewport?n.width():n.viewport.width(),n.h=t.height(),n.boxPadding=t.outerWidth()-t.width(),p?(n.itemT=n.vars.itemWidth+e,n.minW=i?i*n.itemT:n.w,n.maxW=o?o*n.itemT-e:n.w,n.itemW=n.minW>n.w?(n.w-e*(i-1))/i:n.maxW<n.w?(n.w-e*(o-1))/o:n.vars.itemWidth>n.w?n.w:n.vars.itemWidth,n.visible=Math.floor(n.w/n.itemW),n.move=n.vars.move>0&&n.vars.move<n.visible?n.vars.move:n.visible,n.pagingCount=Math.ceil((n.count-n.visible)/n.move+1),n.last=n.pagingCount-1,n.limit=1===n.pagingCount?0:n.vars.itemWidth>n.w?n.itemW*(n.count-1)+e*(n.count-1):(n.itemW+e)*n.count-n.w-e):(n.itemW=n.w,n.pagingCount=n.count,n.last=n.count-1),n.computedW=n.itemW-n.boxPadding},n.update=function(t,e){n.doMath(),p||(t<n.currentSlide?n.currentSlide+=1:t<=n.currentSlide&&0!==t&&(n.currentSlide-=1),n.animatingTo=n.currentSlide),n.vars.controlNav&&!n.manualControls&&("add"===e&&!p||n.pagingCount>n.controlNav.length?m.controlNav.update("add"):("remove"===e&&!p||n.pagingCount<n.controlNav.length)&&(p&&n.currentSlide>n.last&&(n.currentSlide-=1,n.animatingTo-=1),m.controlNav.update("remove",n.last))),n.vars.directionNav&&m.directionNav.update()},n.addSlide=function(t,e){var o=i(t);n.count+=1,n.last=n.count-1,u&&d?void 0!==e?n.slides.eq(n.count-e).after(o):n.container.prepend(o):void 0!==e?n.slides.eq(e).before(o):n.container.append(o),n.update(e,"add"),n.slides=i(n.vars.selector+":not(.clone)",n),n.setup(),n.vars.added(n)},n.removeSlide=function(t){var e=isNaN(t)?n.slides.index(i(t)):t;n.count-=1,n.last=n.count-1,isNaN(t)?i(t,n.slides).remove():u&&d?n.slides.eq(n.last).remove():n.slides.eq(t).remove(),n.doMath(),n.update(e,"remove"),n.slides=i(n.vars.selector+":not(.clone)",n),n.setup(),n.vars.removed(n)},m.init()},i(window).blur(function(){focused=!1}).focus(function(){focused=!0}),i.flexslider.defaults={namespace:"am-",selector:".am-slides > li",animation:"slide",easing:"swing",direction:"horizontal",reverse:!1,animationLoop:!0,smoothHeight:!1,startAt:0,slideshow:!0,slideshowSpeed:5e3,animationSpeed:600,initDelay:0,randomize:!1,fadeFirstSlide:!0,thumbCaptions:!1,pauseOnAction:!0,pauseOnHover:!1,pauseInvisible:!0,useCSS:!0,touch:!0,video:!1,controlNav:!0,directionNav:!0,prevText:"Previous",nextText:"Next",keyboard:!0,multipleKeyboard:!1,mousewheel:!1,pausePlay:!1,pauseText:"Pause",playText:"Play",controlsContainer:"",manualControls:"",sync:"",asNavFor:"",itemWidth:0,itemMargin:0,minItems:1,maxItems:0,move:0,allowOneSlide:!0,start:function(){},before:function(){},after:function(){},end:function(){},added:function(){},removed:function(){},init:function(){}},i.fn.flexslider=function(t){if(void 0===t&&(t={}),"object"==typeof t)return this.each(function(){var e=i(this),n=t.selector?t.selector:".am-slides > li",o=e.find(n);1===o.length&&t.allowOneSlide===!0||0===o.length?(o.fadeIn(400),t.start&&t.start(e)):void 0===e.data("flexslider")&&new i.flexslider(this,t)});var e=i(this).data("flexslider");switch(t){case"play":e.play();break;case"pause":e.pause();break;case"stop":e.stop();break;case"next":e.flexAnimate(e.getTarget("next"),!0);break;case"prev":case"previous":e.flexAnimate(e.getTarget("prev"),!0);break;default:"number"==typeof t&&e.flexAnimate(t,!0)}},o.ready(function(t){i("[data-am-flexslider]",t).each(function(t,e){var n=i(e),a=o.utils.parseOptions(n.data("amFlexslider"));a.before=function(t){t._pausedTimer&&(window.clearTimeout(t._pausedTimer),t._pausedTimer=null)},a.after=function(t){var e=t.vars.playAfterPaused;!e||isNaN(e)||t.playing||t.manualPause||t.manualPlay||t.stopped||(t._pausedTimer=window.setTimeout(function(){t.play()},e))},n.flexslider(a)})}),e.exports=i.flexslider}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2}],9:[function(t,e){(function(n){"use strict";function i(t,e){return this.each(function(){var n=o(this),i=n.data("amui.modal"),a=o.extend({},c.DEFAULTS,"object"==typeof t&&t);i||n.data("amui.modal",i=new c(this,a)),"string"==typeof t?i[t]&&i[t](e):i.toggle(t&&t.relatedTarget||void 0)})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,a=t("./core"),s=t("./ui.dimmer"),r=o(document),l=a.support.transition,c=function(t,e){this.options=o.extend({},c.DEFAULTS,e||{}),this.$element=o(t),this.$dialog=this.$element.find(".am-modal-dialog"),this.$element.attr("id")||this.$element.attr("id",a.utils.generateGUID("am-modal")),this.isPopup=this.$element.hasClass("am-popup"),this.isActions=this.$element.hasClass("am-modal-actions"),this.isPrompt=this.$element.hasClass("am-modal-prompt"),this.isLoading=this.$element.hasClass("am-modal-loading"),this.active=this.transitioning=this.relatedTarget=null,this.events()};c.DEFAULTS={className:{active:"am-modal-active",out:"am-modal-out"},selector:{modal:".am-modal",active:".am-modal-active"},closeViaDimmer:!0,cancelable:!0,onConfirm:function(){},onCancel:function(){},height:void 0,width:void 0,duration:300,transitionEnd:l&&l.end+".modal.amui"},c.prototype.toggle=function(t){return this.active?this.close():this.open(t)},c.prototype.open=function(t){var e=this.$element,n=this.options,i=this.isPopup,a=n.width,r=n.height,c={};if(!this.active&&this.$element.length){t&&(this.relatedTarget=t),this.transitioning&&(clearTimeout(e.transitionEndTimmer),e.transitionEndTimmer=null,e.trigger(n.transitionEnd).off(n.transitionEnd)),i&&this.$element.show(),this.active=!0,e.trigger(o.Event("open.modal.amui",{relatedTarget:t})),s.open(e),e.show().redraw(),i||this.isActions||(a&&(a=parseInt(a,10),c.width=a+"px",c.marginLeft=-parseInt(a/2)+"px"),r?(r=parseInt(r,10),c.marginTop=-parseInt(r/2)+"px",this.$dialog.css({height:r+"px"})):c.marginTop=-parseInt(e.height()/2,10)+"px",e.css(c)),e.removeClass(n.className.out).addClass(n.className.active),this.transitioning=1;var u=function(){e.trigger(o.Event("opened.modal.amui",{relatedTarget:t})),this.transitioning=0,this.isPrompt&&this.$dialog.find("input").eq(0).focus()};return l?void e.one(n.transitionEnd,o.proxy(u,this)).emulateTransitionEnd(n.duration):u.call(this)}},c.prototype.close=function(t){if(this.active){var e=this.$element,n=this.options,i=this.isPopup;this.transitioning&&(clearTimeout(e.transitionEndTimmer),e.transitionEndTimmer=null,e.trigger(n.transitionEnd).off(n.transitionEnd),s.close(e,!0)),this.$element.trigger(o.Event("close.modal.amui",{relatedTarget:t})),this.transitioning=1;var a=function(){e.trigger("closed.modal.amui"),i&&e.removeClass(n.className.out),e.hide(),this.transitioning=0,s.close(e,!1),this.active=!1};return e.removeClass(n.className.active).addClass(n.className.out),l?void e.one(n.transitionEnd,o.proxy(a,this)).emulateTransitionEnd(n.duration):a.call(this)}},c.prototype.events=function(){var t=this,e=this.$element,n=e.find(".am-modal-prompt-input"),i=function(){var t=[];return n.each(function(){t.push(o(this).val())}),0===t.length?void 0:1===t.length?t[0]:t};this.options.cancelable&&e.on("keyup.modal.amui",function(n){t.active&&27===n.which&&(e.trigger("cancel.modal.amui"),t.close())}),this.options.closeViaDimmer&&!this.isLoading&&s.$element.on("click.dimmer.modal.amui",function(){t.close()}),e.find("[data-am-modal-close], .am-modal-btn").on("click.close.modal.amui",function(e){e.preventDefault(),t.close()}),e.find("[data-am-modal-confirm]").on("click.confirm.modal.amui",function(){e.trigger(o.Event("confirm.modal.amui",{trigger:this}))}),e.find("[data-am-modal-cancel]").on("click.cancel.modal.amui",function(){e.trigger(o.Event("cancel.modal.amui",{trigger:this}))}),e.on("confirm.modal.amui",function(e){e.data=i(),t.options.onConfirm.call(t,e)}).on("cancel.modal.amui",function(e){e.data=i(),t.options.onCancel.call(t,e)})},o.fn.modal=i,r.on("click.modal.amui.data-api","[data-am-modal]",function(){var t=o(this),e=a.utils.parseOptions(t.attr("data-am-modal")),n=o(e.target||this.href&&this.href.replace(/.*(?=#[^\s]+$)/,"")),s=n.data("amui.modal")?"toggle":e;i.call(n,s,this)}),o.AMUI.modal=c,e.exports=c}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2,"./ui.dimmer":6}],10:[function(t,e){(function(n){"use strict";function i(t,e){return this.each(function(){var n=a(this),i=n.data("amui.offcanvas"),o=a.extend({},"object"==typeof t&&t);i||(n.data("amui.offcanvas",i=new c(this,o)),(!t||"object"==typeof t)&&i.open(e)),"string"==typeof t&&i[t]&&i[t](e)})}var o,a="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,s=t("./core"),r=(t("./util.hammer"),a(window)),l=a(document),c=function(t,e){this.$element=a(t),this.options=a.extend({},c.DEFAULTS,e),this.active=null,this.bindEvents()};c.DEFAULTS={duration:300,effect:"overlay"},c.prototype.open=function(){var t=this,e=this.$element;if(e.length&&!e.hasClass("am-active")){var n=this.options.effect,i=a("html"),s=a("body"),l=e.find(".am-offcanvas-bar").first(),c=l.hasClass("am-offcanvas-bar-flip")?-1:1;l.addClass("am-offcanvas-bar-"+n),o={x:window.scrollX,y:window.scrollY},e.addClass("am-active"),s.css({width:window.innerWidth,height:r.height()}).addClass("am-offcanvas-page"),"overlay"!==n&&s.css({"margin-left":l.outerWidth()*c}).width(),i.css("margin-top",-1*o.y),setTimeout(function(){l.addClass("am-offcanvas-bar-active").width()},0),e.trigger("open.offcanvas.amui"),this.active=1,e.on("click.offcanvas.amui",function(e){var n=a(e.target);n.hasClass("am-offcanvas-bar")||n.parents(".am-offcanvas-bar").first().length||(e.stopImmediatePropagation(),t.close())}),i.on("keydown.offcanvas.amui",function(e){27===e.keyCode&&t.close()})}},c.prototype.close=function(){function t(){i.removeClass("am-offcanvas-page").css({width:"",height:"","margin-left":"","margin-right":""}),r.removeClass("am-active"),l.removeClass("am-offcanvas-bar-active"),n.css("margin-top",""),window.scrollTo(o.x,o.y),r.trigger("closed.offcanvas.amui"),e.active=0}var e=this,n=a("html"),i=a("body"),r=this.$element,l=r.find(".am-offcanvas-bar").first();r.length&&this.active&&r.hasClass("am-active")&&(r.trigger("close.offcanvas.amui"),s.support.transition?(setTimeout(function(){l.removeClass("am-offcanvas-bar-active")},0),i.css("margin-left","").one(s.support.transition.end,function(){t()}).emulateTransitionEnd(this.options.duration)):t(),r.off("click.offcanvas.amui"),n.off(".offcanvas.amui"))},c.prototype.bindEvents=function(){var t=this;return l.on("click.offcanvas.amui",'[data-am-dismiss="offcanvas"]',function(e){e.preventDefault(),t.close()}),r.on("resize.offcanvas.amui orientationchange.offcanvas.amui",function(){t.active&&t.close()}),this.$element.hammer().on("swipeleft swipeleft",function(e){e.preventDefault(),t.close()}),this},a.fn.offCanvas=i,l.on("click.offcanvas.amui","[data-am-offcanvas]",function(t){t.preventDefault();var e=a(this),n=s.utils.parseOptions(e.data("amOffcanvas")),o=a(n.target||this.href&&this.href.replace(/.*(?=#[^\s]+$)/,"")),r=o.data("amui.offcanvas")?"open":n;i.call(o,r,this)}),a.AMUI.offcanvas=c,e.exports=c}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2,"./util.hammer":17}],11:[function(t,e){(function(n){"use strict";function i(t){return this.each(function(){var e=o(this),n=e.data("amui.popover"),i=o.extend({},a.utils.parseOptions(e.attr("data-am-popover")),"object"==typeof t&&t);n||e.data("amui.popover",n=new r(this,i)),"string"==typeof t&&n[t]&&n[t]()})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,a=t("./core"),s=o(window),r=function(t,e){this.options=o.extend({},r.DEFAULTS,e||{}),this.$element=o(t),this.active=null,this.$popover=this.options.target&&o(this.options.target)||null,this.init(),this.events()};r.DEFAULTS={theme:void 0,trigger:"click",content:"",open:!1,target:void 0,tpl:'<div class="am-popover"><div class="am-popover-inner"></div><div class="am-popover-caret"></div></div>'},r.prototype.init=function(){function t(){n.sizePopover()}var e,n=this,i=this.$element;this.options.target||(this.$popover=this.getPopover(),this.setContent()),e=this.$popover,e.appendTo(o("body")),this.sizePopover(),i.on("open.popover.amui",function(){o(window).on("resize.popover.amui",a.utils.debounce(t,50))}),i.on("close.popover.amui",function(){o(window).off("resize.popover.amui",t)}),this.options.open&&this.open()},r.prototype.sizePopover=function(){var t=this.$element,e=this.$popover;if(e&&e.length){var n=e.outerWidth(),i=e.outerHeight(),o=e.find(".am-popover-caret"),a=o.outerWidth()/2||8,r=i+8,l=t.outerWidth(),c=t.outerHeight(),u=t.offset(),d=t[0].getBoundingClientRect(),p=s.height(),h=s.width(),f=0,m=0,v=0,g=2,y="top";e.css({left:"",top:""}).removeClass("am-popover-left am-popover-right am-popover-top am-popover-bottom"),o.css({left:"",top:""}),r-g<d.top+g?f=u.top-r-g:r<p-d.top-d.height?(y="bottom",f=u.top+c+a+g):(y="middle",f=c/2+u.top-i/2),"top"===y||"bottom"===y?(m=l/2+u.left-n/2,v=m,5>m&&(m=5),m+n>h&&(m=h-n-20),"top"===y&&e.addClass("am-popover-top"),"bottom"===y&&e.addClass("am-popover-bottom"),v-=m,o.css({left:n/2-a+v+"px"})):"middle"===y&&(m=u.left-n-a,e.addClass("am-popover-left"),5>m&&(m=u.left+l+a,e.removeClass("am-popover-left").addClass("am-popover-right")),m+n>h&&(m=h-n-5,e.removeClass("am-popover-left").addClass("am-popover-right")),o.css({top:i/2-a/2+"px"})),e.css({top:f+"px",left:m+"px"})}},r.prototype.toggle=function(){return this[this.active?"close":"open"]()},r.prototype.open=function(){var t=this.$popover;this.$element.trigger("open.popover.amui"),this.sizePopover(),t.show().addClass("am-active"),this.active=!0},r.prototype.close=function(){var t=this.$popover;this.$element.trigger("close.popover.amui"),t.removeClass("am-active").trigger("closed.popover.amui").hide(),this.active=!1},r.prototype.getPopover=function(){var t=a.utils.generateGUID("am-popover"),e=[];return this.options.theme&&o.each(this.options.theme.split(","),function(t,n){e.push("am-popover-"+o.trim(n))}),o(this.options.tpl).attr("id",t).addClass(e.join(" "))},r.prototype.setContent=function(t){t=t||this.options.content,this.$popover&&this.$popover.find(".am-popover-inner").empty().html(t)},r.prototype.events=function(){for(var t="popover.amui",e=this.options.trigger.split(" "),n=e.length;n--;){var i=e[n];if("click"===i)this.$element.on("click."+t,o.proxy(this.toggle,this));else{var a="hover"==i?"mouseenter":"focusin",s="hover"==i?"mouseleave":"focusout";this.$element.on(a+"."+t,o.proxy(this.open,this)),this.$element.on(s+"."+t,o.proxy(this.close,this))}}},o.fn.popover=i,a.ready(function(t){o("[data-am-popover]",t).popover()}),o.AMUI.popover=r,e.exports=r}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2}],12:[function(t,e){(function(n){"use strict";var i="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,o=(t("./core"),function(){function t(t,e,n){return e>t?e:t>n?n:t}function e(t){return 100*(-1+t)}function n(t,n,i){var o;return o="translate3d"===s.positionUsing?{transform:"translate3d("+e(t)+"%,0,0)"}:"translate"===s.positionUsing?{transform:"translate("+e(t)+"%,0)"}:{"margin-left":e(t)+"%"},o.transition="all "+n+"ms "+i,o}var o={},a=i("html");o.version="0.1.6";var s=o.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,parent:"body",barSelector:'[role="nprogress-bar"]',spinnerSelector:'[role="nprogress-spinner"]',template:'<div class="nprogress-bar" role="nprogress-bar"><div class="nprogress-peg"></div></div><div class="nprogress-spinner" role="nprogress-spinner"><div class="nprogress-spinner-icon"></div></div>'};o.configure=function(t){var e,n;for(e in t)n=t[e],void 0!==n&&t.hasOwnProperty(e)&&(s[e]=n);return this},o.status=null,o.set=function(e){var i=o.isStarted();e=t(e,s.minimum,1),o.status=1===e?null:e;var a=o.render(!i),c=a.querySelector(s.barSelector),u=s.speed,d=s.easing;return a.offsetWidth,r(function(t){""===s.positionUsing&&(s.positionUsing=o.getPositioningCSS()),l(c,n(e,u,d)),1===e?(l(a,{transition:"none",opacity:1}),a.offsetWidth,setTimeout(function(){l(a,{transition:"all "+u+"ms linear",opacity:0}),setTimeout(function(){o.remove(),t()},u)},u)):setTimeout(t,u)}),this},o.isStarted=function(){return"number"==typeof o.status},o.start=function(){o.status||o.set(0);var t=function(){setTimeout(function(){o.status&&(o.trickle(),t())},s.trickleSpeed)};return s.trickle&&t(),this},o.done=function(t){return t||o.status?o.inc(.3+.5*Math.random()).set(1):this},o.inc=function(e){var n=o.status;return n?("number"!=typeof e&&(e=(1-n)*t(Math.random()*n,.1,.95)),n=t(n+e,0,.994),o.set(n)):o.start()},o.trickle=function(){return o.inc(Math.random()*s.trickleRate)},o.render=function(t){if(o.isRendered())return document.getElementById("nprogress");a.addClass("nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=s.template;var r,c=n.querySelector(s.barSelector),u=t?"-100":e(o.status||0),d=document.querySelector(s.parent);return l(c,{transition:"all 0 linear",transform:"translate3d("+u+"%,0,0)"}),s.showSpinner||(r=n.querySelector(s.spinnerSelector),r&&i(r).remove()),d!=document.body&&i(d).addClass("nprogress-custom-parent"),d.appendChild(n),n},o.remove=function(){a.removeClass("nprogress-busy"),i(s.parent).removeClass("nprogress-custom-parent");var t=document.getElementById("nprogress");t&&i(t).remove()},o.isRendered=function(){return!!document.getElementById("nprogress")},o.getPositioningCSS=function(){var t=document.body.style,e="WebkitTransform"in t?"Webkit":"MozTransform"in t?"Moz":"msTransform"in t?"ms":"OTransform"in t?"O":"";return e+"Perspective"in t?"translate3d":e+"Transform"in t?"translate":"margin"};var r=function(){function t(){var n=e.shift();n&&n(t)}var e=[];return function(n){e.push(n),1==e.length&&t()}}(),l=function(){function t(t){return t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(t,e){return e.toUpperCase()})}function e(t){var e=document.body.style;if(t in e)return t;for(var n,i=o.length,a=t.charAt(0).toUpperCase()+t.slice(1);i--;)if(n=o[i]+a,n in e)return n;return t}function n(n){return n=t(n),a[n]||(a[n]=e(n))}function i(t,e,i){e=n(e),t.style[e]=i}var o=["Webkit","O","Moz","ms"],a={};return function(t,e){var n,o,a=arguments;if(2==a.length)for(n in e)o=e[n],void 0!==o&&e.hasOwnProperty(n)&&i(t,n,o);else i(t,a[1],a[2])}}();return o}());i.AMUI.progress=o,e.exports=o}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2}],13:[function(t,e){(function(n){"use strict";function i(t){return this.each(function(){var e=o(this),n=e.data("amui.scrollspynav"),i="object"==typeof t&&t;n||e.data("amui.scrollspynav",n=new s(this,i)),"string"==typeof t&&n[t]()})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,a=t("./core");t("./ui.smooth-scroll");var s=function(t,e){this.options=o.extend({},s.DEFAULTS,e),this.$element=o(t),this.anchors=[],this.$links=this.$element.find('a[href^="#"]').each(function(t,e){this.anchors.push(o(e).attr("href"))}.bind(this)),this.$targets=o(this.anchors.join(", "));var n=function(){a.utils.rAF.call(window,o.proxy(this.process,this))}.bind(this);this.$window=o(window).on("scroll.scrollspynav.amui",n).on("resize.scrollspynav.amui orientationchange.scrollspynav.amui",a.utils.debounce(n,50)),n(),this.scrollProcess()};s.DEFAULTS={className:{active:"am-active"},closest:!1,smooth:!0,offsetTop:0},s.prototype.process=function(){var t=this.$window.scrollTop(),e=this.options,n=[],i=this.$links,s=this.$targets;if(s.each(function(t,i){a.utils.isInView(i,e)&&n.push(i)}),n.length){var r;if(o.each(n,function(e,n){return o(n).offset().top>=t?(r=o(n),!1):void 0}),!r)return;e.closest?(i.closest(e.closest).removeClass(e.className.active),i.filter('a[href="#'+r.attr("id")+'"]').closest(e.closest).addClass(e.className.active)):i.removeClass(e.className.active).filter('a[href="#'+r.attr("id")+'"]').addClass(e.className.active)}},s.prototype.scrollProcess=function(){var t=this.$links,e=this.options;e.smooth&&t.on("click",function(t){t.preventDefault();var n=o(this),i=o(n.attr("href"));if(i){var a=e.offsetTop&&!isNaN(parseInt(e.offsetTop))&&parseInt(e.offsetTop)||0;o(window).smoothScroll({position:i.offset().top-a})}})},o.fn.scrollspynav=i,a.ready(function(t){o("[data-am-scrollspy-nav]",t).each(function(){var t=o(this),e=a.utils.options(t.data("amScrollspyNav"));i.call(t,e)})}),o.AMUI.scrollspynav=s,e.exports=s}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2,"./ui.smooth-scroll":14}],14:[function(t,e){(function(n){"use strict";var i="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,o=t("./core"),a=o.utils.rAF,s=o.utils.cancelAF,r=!1,l=function(t,e){function n(t){return(t/=.5)<1?.5*Math.pow(t,5):.5*(Math.pow(t-2,5)+2)}function o(){h.off("touchstart.smoothscroll.amui",w),r=!1}function c(t){r&&(u||(u=t),d=Math.min(1,Math.max((t-u)/y,0)),p=Math.round(m+g*n(d)),g>0&&p>f&&(p=f),0>g&&f>p&&(p=f),v!=p&&h.scrollTop(p),v=p,p!==f?(s(b),b=a(c)):(s(b),o()))}e=e||{};var u,d,p,h=i(t),f=parseInt(e.position)||l.DEFAULTS.position,m=h.scrollTop(),v=m,g=f-m,y=e.speed||Math.min(750,Math.min(1500,Math.abs(m-f))),w=function(){o()};if(!r&&0!==g){h.on("touchstart.smoothscroll.amui",w),r=!0;var b=a(c)}};l.DEFAULTS={position:0},i.fn.smoothScroll=function(t){return this.each(function(){new l(this,t)})},i(document).on("click.smoothScroll.amui.data-api","[data-am-smooth-scroll]",function(t){t.preventDefault();var e=o.utils.parseOptions(i(this).data("amSmoothScroll"));i(window).smoothScroll(e)}),e.exports=l}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2}],15:[function(t,e){(function(n){"use strict";function i(t){return this.each(function(){var e=o(this),n=e.data("amui.sticky"),i="object"==typeof t&&t;n||e.data("amui.sticky",n=new s(this,i)),"string"==typeof t&&n[t]()})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,a=t("./core"),s=function(t,e){var n=this;this.options=o.extend({},s.DEFAULTS,e),this.$element=o(t),this.sticked=null,this.inited=null,this.$holder=void 0,this.$window=o(window).on("scroll.sticky.amui",a.utils.debounce(o.proxy(this.checkPosition,this),10)).on("resize.sticky.amui orientationchange.sticky.amui",a.utils.debounce(function(){n.reset(!0,function(){n.checkPosition()})},50)).on("load.sticky.amui",o.proxy(this.checkPosition,this)),this.offset=this.$element.offset(),this.init()};s.DEFAULTS={top:0,bottom:0,animation:"",className:{sticky:"am-sticky",resetting:"am-sticky-resetting",stickyBtm:"am-sticky-bottom",animationRev:"am-animation-reverse"}},s.prototype.init=function(){var t=this.check();if(!t)return!1;var e=this.$element,n="";o.each(e.css(["marginTop","marginRight","marginBottom","marginLeft"]),function(t,e){return n+=" "+e});var i=o('<div class="am-sticky-placeholder"></div>').css({height:"absolute"!=e.css("position")?e.outerHeight():"","float":"none"!=e.css("float")?e.css("float"):"",margin:n});return this.$holder=e.css("margin",0).wrap(i).parent(),this.inited=1,!0},s.prototype.reset=function(t,e){var n=this.options,i=this.$element,o=n.animation?" am-animation-"+n.animation:"",s=function(){i.css({position:"",top:"",width:"",left:"",margin:0}),i.removeClass([o,n.className.animationRev,n.className.sticky,n.className.resetting].join(" ")),this.animating=!1,this.sticked=!1,this.offset=i.offset(),e&&e()}.bind(this);i.addClass(n.className.resetting),!t&&n.animation&&a.support.animation?(this.animating=!0,i.removeClass(o).one(a.support.animation.end,function(){s()}).width(),i.addClass(o+" "+n.className.animationRev)):s()},s.prototype.check=function(){if(!this.$element.is(":visible"))return!1;var t=this.options.media;if(t)switch(typeof t){case"number":if(window.innerWidth<t)return!1;break;case"string":if(window.matchMedia&&!window.matchMedia(t).matches)return!1}return!0},s.prototype.checkPosition=function(){if(!this.inited){var t=this.init();if(!t)return}var e=this.options,n=this.$window.scrollTop(),i=e.top,o=e.bottom,a=this.$element,s=e.animation?" am-animation-"+e.animation:"",r=[e.className.sticky,s].join(" ");"function"==typeof o&&(o=o(this.$element));var l=n>this.$holder.offset().top;!this.sticked&&l?a.addClass(r):this.sticked&&!l&&this.reset(),this.$holder.height(a.is(":visible")?a.height():0),l&&a.css({top:i,left:this.$holder.offset().left,width:this.$holder.width()}),this.sticked=l},o.fn.sticky=i,o(window).on("load",function(){o("[data-am-sticky]").each(function(){var t=o(this),e=a.utils.options(t.attr("data-am-sticky"));i.call(t,e)})}),o.AMUI.sticky=s,e.exports=s}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2}],16:[function(t,e){(function(n){"use strict";var i="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null;t("./core");var o={get:function(t){var e,n=encodeURIComponent(t)+"=",i=document.cookie.indexOf(n),o=null;return i>-1&&(e=document.cookie.indexOf(";",i),-1==e&&(e=document.cookie.length),o=decodeURIComponent(document.cookie.substring(i+n.length,e))),o},set:function(t,e,n,i,o,a){var s=encodeURIComponent(t)+"="+encodeURIComponent(e);n instanceof Date&&(s+="; expires="+n.toGMTString()),i&&(s+="; path="+i),o&&(s+="; domain="+o),a&&(s+="; secure"),document.cookie=s},unset:function(t,e,n,i){this.set(t,"",new Date(0),e,n,i)}};i.AMUI.utils.cookie=o,e.exports=o}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2}],17:[function(t,e){(function(n){"use strict";function i(t,e,n){return setTimeout(c(t,n),e)}function o(t,e,n){return Array.isArray(t)?(a(t,n[e],n),!0):!1}function a(t,e,n){var i;if(t)if(t.forEach)t.forEach(e,n);else if(void 0!==t.length)for(i=0;i<t.length;)e.call(n,t[i],i,t),i++;else for(i in t)t.hasOwnProperty(i)&&e.call(n,t[i],i,t)}function s(t,e,n){for(var i=Object.keys(e),o=0;o<i.length;)(!n||n&&void 0===t[i[o]])&&(t[i[o]]=e[i[o]]),o++;return t}function r(t,e){return s(t,e,!0)}function l(t,e,n){var i,o=e.prototype;i=t.prototype=Object.create(o),i.constructor=t,i._super=o,n&&s(i,n)}function c(t,e){return function(){return t.apply(e,arguments)}}function u(t,e){return typeof t==ue?t.apply(e?e[0]||void 0:void 0,e):t
}function d(t,e){return void 0===t?e:t}function p(t,e,n){a(v(e),function(e){t.addEventListener(e,n,!1)})}function h(t,e,n){a(v(e),function(e){t.removeEventListener(e,n,!1)})}function f(t,e){for(;t;){if(t==e)return!0;t=t.parentNode}return!1}function m(t,e){return t.indexOf(e)>-1}function v(t){return t.trim().split(/\s+/g)}function g(t,e,n){if(t.indexOf&&!n)return t.indexOf(e);for(var i=0;i<t.length;){if(n&&t[i][n]==e||!n&&t[i]===e)return i;i++}return-1}function y(t){return Array.prototype.slice.call(t,0)}function w(t,e,n){for(var i=[],o=[],a=0;a<t.length;){var s=e?t[a][e]:t[a];g(o,s)<0&&i.push(t[a]),o[a]=s,a++}return n&&(i=e?i.sort(function(t,n){return t[e]>n[e]}):i.sort()),i}function b(t,e){for(var n,i,o=e[0].toUpperCase()+e.slice(1),a=0;a<le.length;){if(n=le[a],i=n?n+o:e,i in t)return i;a++}return void 0}function T(){return fe++}function C(t){var e=t.ownerDocument;return e.defaultView||e.parentWindow}function x(t,e){var n=this;this.manager=t,this.callback=e,this.element=t.element,this.target=t.options.inputTarget,this.domHandler=function(e){u(t.options.enable,[t])&&n.handler(e)},this.init()}function S(t){var e,n=t.options.inputClass;return new(e=n?n:ge?F:ye?_:ve?R:j)(t,E)}function E(t,e,n){var i=n.pointers.length,o=n.changedPointers.length,a=e&Se&&i-o===0,s=e&(Ae|Ie)&&i-o===0;n.isFirst=!!a,n.isFinal=!!s,a&&(t.session={}),n.eventType=e,A(t,n),t.emit("hammer.input",n),t.recognize(n),t.session.prevInput=n}function A(t,e){var n=t.session,i=e.pointers,o=i.length;n.firstInput||(n.firstInput=$(e)),o>1&&!n.firstMultiple?n.firstMultiple=$(e):1===o&&(n.firstMultiple=!1);var a=n.firstInput,s=n.firstMultiple,r=s?s.center:a.center,l=e.center=k(i);e.timeStamp=he(),e.deltaTime=e.timeStamp-a.timeStamp,e.angle=O(r,l),e.distance=P(r,l),I(n,e),e.offsetDirection=D(e.deltaX,e.deltaY),e.scale=s?W(s.pointers,i):1,e.rotation=s?L(s.pointers,i):0,N(n,e);var c=t.element;f(e.srcEvent.target,c)&&(c=e.srcEvent.target),e.target=c}function I(t,e){var n=e.center,i=t.offsetDelta||{},o=t.prevDelta||{},a=t.prevInput||{};(e.eventType===Se||a.eventType===Ae)&&(o=t.prevDelta={x:a.deltaX||0,y:a.deltaY||0},i=t.offsetDelta={x:n.x,y:n.y}),e.deltaX=o.x+(n.x-i.x),e.deltaY=o.y+(n.y-i.y)}function N(t,e){var n,i,o,a,s=t.lastInterval||e,r=e.timeStamp-s.timeStamp;if(e.eventType!=Ie&&(r>xe||void 0===s.velocity)){var l=s.deltaX-e.deltaX,c=s.deltaY-e.deltaY,u=M(r,l,c);i=u.x,o=u.y,n=pe(u.x)>pe(u.y)?u.x:u.y,a=D(l,c),t.lastInterval=e}else n=s.velocity,i=s.velocityX,o=s.velocityY,a=s.direction;e.velocity=n,e.velocityX=i,e.velocityY=o,e.direction=a}function $(t){for(var e=[],n=0;n<t.pointers.length;)e[n]={clientX:de(t.pointers[n].clientX),clientY:de(t.pointers[n].clientY)},n++;return{timeStamp:he(),pointers:e,center:k(e),deltaX:t.deltaX,deltaY:t.deltaY}}function k(t){var e=t.length;if(1===e)return{x:de(t[0].clientX),y:de(t[0].clientY)};for(var n=0,i=0,o=0;e>o;)n+=t[o].clientX,i+=t[o].clientY,o++;return{x:de(n/e),y:de(i/e)}}function M(t,e,n){return{x:e/t||0,y:n/t||0}}function D(t,e){return t===e?Ne:pe(t)>=pe(e)?t>0?$e:ke:e>0?Me:De}function P(t,e,n){n||(n=We);var i=e[n[0]]-t[n[0]],o=e[n[1]]-t[n[1]];return Math.sqrt(i*i+o*o)}function O(t,e,n){n||(n=We);var i=e[n[0]]-t[n[0]],o=e[n[1]]-t[n[1]];return 180*Math.atan2(o,i)/Math.PI}function L(t,e){return O(e[1],e[0],je)-O(t[1],t[0],je)}function W(t,e){return P(e[0],e[1],je)/P(t[0],t[1],je)}function j(){this.evEl=Ue,this.evWin=ze,this.allow=!0,this.pressed=!1,x.apply(this,arguments)}function F(){this.evEl=Re,this.evWin=He,x.apply(this,arguments),this.store=this.manager.session.pointerEvents=[]}function U(){this.evTarget=Xe,this.evWin=Ye,this.started=!1,x.apply(this,arguments)}function z(t,e){var n=y(t.touches),i=y(t.changedTouches);return e&(Ae|Ie)&&(n=w(n.concat(i),"identifier",!0)),[n,i]}function _(){this.evTarget=Ve,this.targetIds={},x.apply(this,arguments)}function q(t,e){var n=y(t.touches),i=this.targetIds;if(e&(Se|Ee)&&1===n.length)return i[n[0].identifier]=!0,[n,n];var o,a,s=y(t.changedTouches),r=[],l=this.target;if(a=n.filter(function(t){return f(t.target,l)}),e===Se)for(o=0;o<a.length;)i[a[o].identifier]=!0,o++;for(o=0;o<s.length;)i[s[o].identifier]&&r.push(s[o]),e&(Ae|Ie)&&delete i[s[o].identifier],o++;return r.length?[w(a.concat(r),"identifier",!0),r]:void 0}function R(){x.apply(this,arguments);var t=c(this.handler,this);this.touch=new _(this.manager,t),this.mouse=new j(this.manager,t)}function H(t,e){this.manager=t,this.set(e)}function Q(t){if(m(t,en))return en;var e=m(t,nn),n=m(t,on);return e&&n?nn+" "+on:e||n?e?nn:on:m(t,tn)?tn:Je}function X(t){this.id=T(),this.manager=null,this.options=r(t||{},this.defaults),this.options.enable=d(this.options.enable,!0),this.state=an,this.simultaneous={},this.requireFail=[]}function Y(t){return t&un?"cancel":t&ln?"end":t&rn?"move":t&sn?"start":""}function G(t){return t==De?"down":t==Me?"up":t==$e?"left":t==ke?"right":""}function V(t,e){var n=e.manager;return n?n.get(t):t}function B(){X.apply(this,arguments)}function Z(){B.apply(this,arguments),this.pX=null,this.pY=null}function K(){B.apply(this,arguments)}function J(){X.apply(this,arguments),this._timer=null,this._input=null}function te(){B.apply(this,arguments)}function ee(){B.apply(this,arguments)}function ne(){X.apply(this,arguments),this.pTime=!1,this.pCenter=!1,this._timer=null,this._input=null,this.count=0}function ie(t,e){return e=e||{},e.recognizers=d(e.recognizers,ie.defaults.preset),new oe(t,e)}function oe(t,e){e=e||{},this.options=r(e,ie.defaults),this.options.inputTarget=this.options.inputTarget||t,this.handlers={},this.session={},this.recognizers=[],this.element=t,this.input=S(this),this.touchAction=new H(this,this.options.touchAction),ae(this,!0),a(e.recognizers,function(t){var e=this.add(new t[0](t[1]));t[2]&&e.recognizeWith(t[2]),t[3]&&e.requireFailure(t[3])},this)}function ae(t,e){var n=t.element;a(t.options.cssProps,function(t,i){n.style[b(n.style,i)]=e?t:""})}function se(t,e){var n=document.createEvent("Event");n.initEvent(t,!0,!0),n.gesture=e,e.target.dispatchEvent(n)}var re="undefined"!=typeof window?window.jQuery:"undefined"!=typeof n?n.jQuery:null,le=(t("./core"),["","webkit","moz","MS","ms","o"]),ce=document.createElement("div"),ue="function",de=Math.round,pe=Math.abs,he=Date.now,fe=1,me=/mobile|tablet|ip(ad|hone|od)|android/i,ve="ontouchstart"in window,ge=void 0!==b(window,"PointerEvent"),ye=ve&&me.test(navigator.userAgent),we="touch",be="pen",Te="mouse",Ce="kinect",xe=25,Se=1,Ee=2,Ae=4,Ie=8,Ne=1,$e=2,ke=4,Me=8,De=16,Pe=$e|ke,Oe=Me|De,Le=Pe|Oe,We=["x","y"],je=["clientX","clientY"];x.prototype={handler:function(){},init:function(){this.evEl&&p(this.element,this.evEl,this.domHandler),this.evTarget&&p(this.target,this.evTarget,this.domHandler),this.evWin&&p(C(this.element),this.evWin,this.domHandler)},destroy:function(){this.evEl&&h(this.element,this.evEl,this.domHandler),this.evTarget&&h(this.target,this.evTarget,this.domHandler),this.evWin&&h(C(this.element),this.evWin,this.domHandler)}};var Fe={mousedown:Se,mousemove:Ee,mouseup:Ae},Ue="mousedown",ze="mousemove mouseup";l(j,x,{handler:function(t){var e=Fe[t.type];e&Se&&0===t.button&&(this.pressed=!0),e&Ee&&1!==t.which&&(e=Ae),this.pressed&&this.allow&&(e&Ae&&(this.pressed=!1),this.callback(this.manager,e,{pointers:[t],changedPointers:[t],pointerType:Te,srcEvent:t}))}});var _e={pointerdown:Se,pointermove:Ee,pointerup:Ae,pointercancel:Ie,pointerout:Ie},qe={2:we,3:be,4:Te,5:Ce},Re="pointerdown",He="pointermove pointerup pointercancel";window.MSPointerEvent&&(Re="MSPointerDown",He="MSPointerMove MSPointerUp MSPointerCancel"),l(F,x,{handler:function(t){var e=this.store,n=!1,i=t.type.toLowerCase().replace("ms",""),o=_e[i],a=qe[t.pointerType]||t.pointerType,s=a==we,r=g(e,t.pointerId,"pointerId");o&Se&&(0===t.button||s)?0>r&&(e.push(t),r=e.length-1):o&(Ae|Ie)&&(n=!0),0>r||(e[r]=t,this.callback(this.manager,o,{pointers:e,changedPointers:[t],pointerType:a,srcEvent:t}),n&&e.splice(r,1))}});var Qe={touchstart:Se,touchmove:Ee,touchend:Ae,touchcancel:Ie},Xe="touchstart",Ye="touchstart touchmove touchend touchcancel";l(U,x,{handler:function(t){var e=Qe[t.type];if(e===Se&&(this.started=!0),this.started){var n=z.call(this,t,e);e&(Ae|Ie)&&n[0].length-n[1].length===0&&(this.started=!1),this.callback(this.manager,e,{pointers:n[0],changedPointers:n[1],pointerType:we,srcEvent:t})}}});var Ge={touchstart:Se,touchmove:Ee,touchend:Ae,touchcancel:Ie},Ve="touchstart touchmove touchend touchcancel";l(_,x,{handler:function(t){var e=Ge[t.type],n=q.call(this,t,e);n&&this.callback(this.manager,e,{pointers:n[0],changedPointers:n[1],pointerType:we,srcEvent:t})}}),l(R,x,{handler:function(t,e,n){var i=n.pointerType==we,o=n.pointerType==Te;if(i)this.mouse.allow=!1;else if(o&&!this.mouse.allow)return;e&(Ae|Ie)&&(this.mouse.allow=!0),this.callback(t,e,n)},destroy:function(){this.touch.destroy(),this.mouse.destroy()}});var Be=b(ce.style,"touchAction"),Ze=void 0!==Be,Ke="compute",Je="auto",tn="manipulation",en="none",nn="pan-x",on="pan-y";H.prototype={set:function(t){t==Ke&&(t=this.compute()),Ze&&(this.manager.element.style[Be]=t),this.actions=t.toLowerCase().trim()},update:function(){this.set(this.manager.options.touchAction)},compute:function(){var t=[];return a(this.manager.recognizers,function(e){u(e.options.enable,[e])&&(t=t.concat(e.getTouchAction()))}),Q(t.join(" "))},preventDefaults:function(t){if(!Ze){var e=t.srcEvent,n=t.offsetDirection;if(this.manager.session.prevented)return void e.preventDefault();var i=this.actions,o=m(i,en),a=m(i,on),s=m(i,nn);return o||a&&n&Pe||s&&n&Oe?this.preventSrc(e):void 0}},preventSrc:function(t){this.manager.session.prevented=!0,t.preventDefault()}};var an=1,sn=2,rn=4,ln=8,cn=ln,un=16,dn=32;X.prototype={defaults:{},set:function(t){return s(this.options,t),this.manager&&this.manager.touchAction.update(),this},recognizeWith:function(t){if(o(t,"recognizeWith",this))return this;var e=this.simultaneous;return t=V(t,this),e[t.id]||(e[t.id]=t,t.recognizeWith(this)),this},dropRecognizeWith:function(t){return o(t,"dropRecognizeWith",this)?this:(t=V(t,this),delete this.simultaneous[t.id],this)},requireFailure:function(t){if(o(t,"requireFailure",this))return this;var e=this.requireFail;return t=V(t,this),-1===g(e,t)&&(e.push(t),t.requireFailure(this)),this},dropRequireFailure:function(t){if(o(t,"dropRequireFailure",this))return this;t=V(t,this);var e=g(this.requireFail,t);return e>-1&&this.requireFail.splice(e,1),this},hasRequireFailures:function(){return this.requireFail.length>0},canRecognizeWith:function(t){return!!this.simultaneous[t.id]},emit:function(t){function e(e){n.manager.emit(n.options.event+(e?Y(i):""),t)}var n=this,i=this.state;ln>i&&e(!0),e(),i>=ln&&e(!0)},tryEmit:function(t){return this.canEmit()?this.emit(t):void(this.state=dn)},canEmit:function(){for(var t=0;t<this.requireFail.length;){if(!(this.requireFail[t].state&(dn|an)))return!1;t++}return!0},recognize:function(t){var e=s({},t);return u(this.options.enable,[this,e])?(this.state&(cn|un|dn)&&(this.state=an),this.state=this.process(e),void(this.state&(sn|rn|ln|un)&&this.tryEmit(e))):(this.reset(),void(this.state=dn))},process:function(){},getTouchAction:function(){},reset:function(){}},l(B,X,{defaults:{pointers:1},attrTest:function(t){var e=this.options.pointers;return 0===e||t.pointers.length===e},process:function(t){var e=this.state,n=t.eventType,i=e&(sn|rn),o=this.attrTest(t);return i&&(n&Ie||!o)?e|un:i||o?n&Ae?e|ln:e&sn?e|rn:sn:dn}}),l(Z,B,{defaults:{event:"pan",threshold:10,pointers:1,direction:Le},getTouchAction:function(){var t=this.options.direction,e=[];return t&Pe&&e.push(on),t&Oe&&e.push(nn),e},directionTest:function(t){var e=this.options,n=!0,i=t.distance,o=t.direction,a=t.deltaX,s=t.deltaY;return o&e.direction||(e.direction&Pe?(o=0===a?Ne:0>a?$e:ke,n=a!=this.pX,i=Math.abs(t.deltaX)):(o=0===s?Ne:0>s?Me:De,n=s!=this.pY,i=Math.abs(t.deltaY))),t.direction=o,n&&i>e.threshold&&o&e.direction},attrTest:function(t){return B.prototype.attrTest.call(this,t)&&(this.state&sn||!(this.state&sn)&&this.directionTest(t))},emit:function(t){this.pX=t.deltaX,this.pY=t.deltaY;var e=G(t.direction);e&&this.manager.emit(this.options.event+e,t),this._super.emit.call(this,t)}}),l(K,B,{defaults:{event:"pinch",threshold:0,pointers:2},getTouchAction:function(){return[en]},attrTest:function(t){return this._super.attrTest.call(this,t)&&(Math.abs(t.scale-1)>this.options.threshold||this.state&sn)},emit:function(t){if(this._super.emit.call(this,t),1!==t.scale){var e=t.scale<1?"in":"out";this.manager.emit(this.options.event+e,t)}}}),l(J,X,{defaults:{event:"press",pointers:1,time:500,threshold:5},getTouchAction:function(){return[Je]},process:function(t){var e=this.options,n=t.pointers.length===e.pointers,o=t.distance<e.threshold,a=t.deltaTime>e.time;if(this._input=t,!o||!n||t.eventType&(Ae|Ie)&&!a)this.reset();else if(t.eventType&Se)this.reset(),this._timer=i(function(){this.state=cn,this.tryEmit()},e.time,this);else if(t.eventType&Ae)return cn;return dn},reset:function(){clearTimeout(this._timer)},emit:function(t){this.state===cn&&(t&&t.eventType&Ae?this.manager.emit(this.options.event+"up",t):(this._input.timeStamp=he(),this.manager.emit(this.options.event,this._input)))}}),l(te,B,{defaults:{event:"rotate",threshold:0,pointers:2},getTouchAction:function(){return[en]},attrTest:function(t){return this._super.attrTest.call(this,t)&&(Math.abs(t.rotation)>this.options.threshold||this.state&sn)}}),l(ee,B,{defaults:{event:"swipe",threshold:10,velocity:.65,direction:Pe|Oe,pointers:1},getTouchAction:function(){return Z.prototype.getTouchAction.call(this)},attrTest:function(t){var e,n=this.options.direction;return n&(Pe|Oe)?e=t.velocity:n&Pe?e=t.velocityX:n&Oe&&(e=t.velocityY),this._super.attrTest.call(this,t)&&n&t.direction&&t.distance>this.options.threshold&&pe(e)>this.options.velocity&&t.eventType&Ae},emit:function(t){var e=G(t.direction);e&&this.manager.emit(this.options.event+e,t),this.manager.emit(this.options.event,t)}}),l(ne,X,{defaults:{event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:2,posThreshold:10},getTouchAction:function(){return[tn]},process:function(t){var e=this.options,n=t.pointers.length===e.pointers,o=t.distance<e.threshold,a=t.deltaTime<e.time;if(this.reset(),t.eventType&Se&&0===this.count)return this.failTimeout();if(o&&a&&n){if(t.eventType!=Ae)return this.failTimeout();var s=this.pTime?t.timeStamp-this.pTime<e.interval:!0,r=!this.pCenter||P(this.pCenter,t.center)<e.posThreshold;this.pTime=t.timeStamp,this.pCenter=t.center,r&&s?this.count+=1:this.count=1,this._input=t;var l=this.count%e.taps;if(0===l)return this.hasRequireFailures()?(this._timer=i(function(){this.state=cn,this.tryEmit()},e.interval,this),sn):cn}return dn},failTimeout:function(){return this._timer=i(function(){this.state=dn},this.options.interval,this),dn},reset:function(){clearTimeout(this._timer)},emit:function(){this.state==cn&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))}}),ie.VERSION="2.0.4",ie.defaults={domEvents:!1,touchAction:Ke,enable:!0,inputTarget:null,inputClass:null,preset:[[te,{enable:!1}],[K,{enable:!1},["rotate"]],[ee,{direction:Pe}],[Z,{direction:Pe},["swipe"]],[ne],[ne,{event:"doubletap",taps:2},["tap"]],[J]],cssProps:{userSelect:"none",touchSelect:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}};var pn=1,hn=2;oe.prototype={set:function(t){return s(this.options,t),t.touchAction&&this.touchAction.update(),t.inputTarget&&(this.input.destroy(),this.input.target=t.inputTarget,this.input.init()),this},stop:function(t){this.session.stopped=t?hn:pn},recognize:function(t){var e=this.session;if(!e.stopped){this.touchAction.preventDefaults(t);var n,i=this.recognizers,o=e.curRecognizer;(!o||o&&o.state&cn)&&(o=e.curRecognizer=null);for(var a=0;a<i.length;)n=i[a],e.stopped===hn||o&&n!=o&&!n.canRecognizeWith(o)?n.reset():n.recognize(t),!o&&n.state&(sn|rn|ln)&&(o=e.curRecognizer=n),a++}},get:function(t){if(t instanceof X)return t;for(var e=this.recognizers,n=0;n<e.length;n++)if(e[n].options.event==t)return e[n];return null},add:function(t){if(o(t,"add",this))return this;var e=this.get(t.options.event);return e&&this.remove(e),this.recognizers.push(t),t.manager=this,this.touchAction.update(),t},remove:function(t){if(o(t,"remove",this))return this;var e=this.recognizers;return t=this.get(t),e.splice(g(e,t),1),this.touchAction.update(),this},on:function(t,e){var n=this.handlers;return a(v(t),function(t){n[t]=n[t]||[],n[t].push(e)}),this},off:function(t,e){var n=this.handlers;return a(v(t),function(t){e?n[t].splice(g(n[t],e),1):delete n[t]}),this},emit:function(t,e){this.options.domEvents&&se(t,e);var n=this.handlers[t]&&this.handlers[t].slice();if(n&&n.length){e.type=t,e.preventDefault=function(){e.srcEvent.preventDefault()};for(var i=0;i<n.length;)n[i](e),i++}},destroy:function(){this.element&&ae(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}},s(ie,{INPUT_START:Se,INPUT_MOVE:Ee,INPUT_END:Ae,INPUT_CANCEL:Ie,STATE_POSSIBLE:an,STATE_BEGAN:sn,STATE_CHANGED:rn,STATE_ENDED:ln,STATE_RECOGNIZED:cn,STATE_CANCELLED:un,STATE_FAILED:dn,DIRECTION_NONE:Ne,DIRECTION_LEFT:$e,DIRECTION_RIGHT:ke,DIRECTION_UP:Me,DIRECTION_DOWN:De,DIRECTION_HORIZONTAL:Pe,DIRECTION_VERTICAL:Oe,DIRECTION_ALL:Le,Manager:oe,Input:x,TouchAction:H,TouchInput:_,MouseInput:j,PointerEventInput:F,TouchMouseInput:R,SingleTouchInput:U,Recognizer:X,AttrRecognizer:B,Tap:ne,Pan:Z,Swipe:ee,Pinch:K,Rotate:te,Press:J,on:p,off:h,each:a,merge:r,extend:s,inherit:l,bindFn:c,prefixed:b}),function(t,e){function n(n,i){var o=t(n);o.data("hammer")||o.data("hammer",new e(o[0],i))}t.fn.hammer=function(t){return this.each(function(){n(this,t)})},e.Manager.prototype.emit=function(e){return function(n,i){e.call(this,n,i),t(this.element).trigger({type:n,gesture:i})}}(e.Manager.prototype.emit)}(re,ie),re.AMUI.Hammer=ie,e.exports=ie}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":2}]},{},[1]);
/*! Amaze UI v2.3.0 | by Amaze UI Team | (c) 2015 AllMobilize, Inc. | Licensed under MIT | 2015-04-08T06:04:29 UTC */
 
!function t(e,i,n){function o(a,r){if(!i[a]){if(!e[a]){var l="function"==typeof require&&require;if(!r&&l)return l(a,!0);if(s)return s(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var u=i[a]={exports:{}};e[a][0].call(u.exports,function(t){var i=e[a][1][t];return o(i?i:t)},u,u.exports,t,e,i,n)}return i[a].exports}for(var s="function"==typeof require&&require,a=0;a<n.length;a++)o(n[a]);return o}({1:[function(t,e){(function(i){"use strict";function n(){var t=o('[data-am-widget="accordion"]'),e={item:".am-accordion-item",title:".am-accordion-title",body:".am-accordion-bd",disabled:".am-disabled"};t.each(function(t,i){var n=s.utils.parseOptions(o(i).attr("data-am-accordion")),a=o(i).find(e.title);a.on("click.accordion.amui",function(){var t=o(this).next(e.body),s=o(this).parent(e.item),a=t.data("amui.collapse");s.is(e.disabled)||(s.toggleClass("am-active"),a?t.collapse("toggle"):t.collapse(),!n.multiple&&o(i).children(".am-active").not(s).not(e.disabled).removeClass("am-active").find(e.body+".am-in").collapse("close"))})})}t("./core"),t("./ui.collapse");var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=o.AMUI;o(function(){n()}),e.exports=o.AMUI.accordion={VERSION:"2.1.0",init:n}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.collapse":26}],2:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),t("./util.fastclick"),t("./util.hammer"),t("./amazeui"),t("./amazeui.legacy"),t("./ui.add2home"),t("./ui.alert"),t("./ui.button"),t("./ui.collapse"),t("./ui.datepicker"),t("./ui.dimmer"),t("./ui.dropdown"),t("./ui.flexslider"),t("./ui.iscroll-lite"),t("./ui.modal"),t("./ui.offcanvas"),t("./ui.pinchzoom"),t("./ui.popover"),t("./ui.progress"),t("./ui.pureview"),t("./ui.scrollspy"),t("./ui.scrollspynav"),t("./ui.selected"),t("./ui.share"),t("./ui.smooth-scroll"),t("./ui.sticky"),t("./ui.tabs"),t("./ui.ucheck"),t("./ui.validator"),t("./util.cookie"),t("./util.fullscreen"),t("./util.geolocation"),t("./util.qrcode"),t("./util.store"),t("./accordion"),t("./divider"),t("./duoshuo"),t("./figure"),t("./footer"),t("./gallery"),t("./gotop"),t("./header"),t("./intro"),t("./list_news"),t("./map"),t("./mechat"),t("./menu"),t("./navbar"),t("./pagination"),t("./paragraph"),t("./slider"),t("./tabs"),t("./titlebar"),t("./wechatpay"),e.exports=n.AMUI}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./accordion":1,"./amazeui":2,"./amazeui.legacy":3,"./core":4,"./divider":5,"./duoshuo":6,"./figure":7,"./footer":8,"./gallery":9,"./gotop":10,"./header":11,"./intro":12,"./list_news":13,"./map":14,"./mechat":15,"./menu":16,"./navbar":17,"./pagination":18,"./paragraph":19,"./slider":20,"./tabs":21,"./titlebar":22,"./ui.add2home":23,"./ui.alert":24,"./ui.button":25,"./ui.collapse":26,"./ui.datepicker":27,"./ui.dimmer":28,"./ui.dropdown":29,"./ui.flexslider":30,"./ui.iscroll-lite":31,"./ui.modal":32,"./ui.offcanvas":33,"./ui.pinchzoom":34,"./ui.popover":35,"./ui.progress":36,"./ui.pureview":37,"./ui.scrollspy":38,"./ui.scrollspynav":39,"./ui.selected":40,"./ui.share":41,"./ui.smooth-scroll":42,"./ui.sticky":43,"./ui.tabs":44,"./ui.ucheck":45,"./ui.validator":46,"./util.cookie":47,"./util.fastclick":48,"./util.fullscreen":49,"./util.geolocation":50,"./util.hammer":51,"./util.qrcode":52,"./util.store":53,"./wechatpay":54}],3:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),t("./ui.alert"),t("./ui.button"),t("./ui.collapse"),t("./ui.dimmer"),t("./ui.dropdown"),t("./ui.flexslider"),t("./ui.modal"),t("./ui.offcanvas"),t("./ui.popover"),t("./ui.progress"),t("./ui.scrollspynav"),t("./ui.sticky"),t("./util.cookie"),e.exports=n.AMUI}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.alert":24,"./ui.button":25,"./ui.collapse":26,"./ui.dimmer":28,"./ui.dropdown":29,"./ui.flexslider":30,"./ui.modal":32,"./ui.offcanvas":33,"./ui.popover":35,"./ui.progress":36,"./ui.scrollspynav":39,"./ui.sticky":43,"./util.cookie":47}],4:[function(t,e){(function(t){"use strict";var i="undefined"!=typeof window?window.jQuery:"undefined"!=typeof t?t.jQuery:null;if("undefined"==typeof i)throw new Error("Amaze UI 2.x requires jQuery :-(\n爱上一匹野马，可你的家里没有草原…");var n=i.AMUI||{},o=i(window),s=window.document,a=i("html");n.VERSION="2.3.0",n.support={},n.support.transition=function(){var t=function(){var t=s.body||s.documentElement,e={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var i in e)if(void 0!==t.style[i])return e[i]}();return t&&{end:t}}(),n.support.animation=function(){var t=function(){var t=s.body||s.documentElement,e={WebkitAnimation:"webkitAnimationEnd",MozAnimation:"animationend",OAnimation:"oAnimationEnd oanimationend",animation:"animationend"};for(var i in e)if(void 0!==t.style[i])return e[i]}();return t&&{end:t}}(),n.support.touch="ontouchstart"in window&&navigator.userAgent.toLowerCase().match(/mobile|tablet/)||window.DocumentTouch&&document instanceof window.DocumentTouch||window.navigator.msPointerEnabled&&window.navigator.msMaxTouchPoints>0||window.navigator.pointerEnabled&&window.navigator.maxTouchPoints>0||!1,n.support.mutationobserver=window.MutationObserver||window.WebKitMutationObserver||null,n.support.formValidation="function"==typeof document.createElement("form").checkValidity,n.utils={},n.utils.debounce=function(t,e,i){var n;return function(){var o=this,s=arguments,a=function(){n=null,i||t.apply(o,s)},r=i&&!n;clearTimeout(n),n=setTimeout(a,e),r&&t.apply(o,s)}},n.utils.isInView=function(t,e){var n=i(t),s=!(!n.width()&&!n.height())&&"none"!==n.css("display");if(!s)return!1;var a=o.scrollLeft(),r=o.scrollTop(),l=n.offset(),c=l.left,u=l.top;return e=i.extend({topOffset:0,leftOffset:0},e),u+n.height()>=r&&u-e.topOffset<=r+o.height()&&c+n.width()>=a&&c-e.leftOffset<=a+o.width()},n.utils.parseOptions=n.utils.options=function(t){if(i.isPlainObject(t))return t;var e=t?t.indexOf("{"):-1,n={};if(-1!=e)try{n=new Function("","var json = "+t.substr(e)+"; return JSON.parse(JSON.stringify(json));")()}catch(o){}return n},n.utils.generateGUID=function(t){var e=t+"-"||"am-";do e+=Math.random().toString(36).substring(2,7);while(document.getElementById(e));return e},i.fn.emulateTransitionEnd=function(t){var e=!1,o=this;i(this).one(n.support.transition.end,function(){e=!0});var s=function(){e||i(o).trigger(n.support.transition.end),o.transitionEndTimmer=void 0};return this.transitionEndTimmer=setTimeout(s,t),this},i.fn.redraw=function(){return i(this).each(function(){this.offsetHeight}),this},i.fn.transitionEnd=function(t){function e(n){t.call(this,n),i&&o.off(i,e)}var i=n.support.transition.end,o=this;return t&&i&&o.on(i,e),this},i.fn.removeClassRegEx=function(){return this.each(function(t){var e=i(this).attr("class");if(!e||!t)return!1;var n=[];e=e.split(" ");for(var o=0,s=e.length;s>o;o++)e[o].match(t)||n.push(e[o]);i(this).attr("class",n.join(" "))})},i.fn.alterClass=function(t,e){var n=this;if(-1===t.indexOf("*"))return n.removeClass(t),e?n.addClass(e):n;var o=new RegExp("\\s"+t.replace(/\*/g,"[A-Za-z0-9-_]+").split(" ").join("\\s|\\s")+"\\s","g");return n.each(function(t,e){for(var n=" "+e.className+" ";o.test(n);)n=n.replace(o," ");e.className=i.trim(n)}),e?n.addClass(e):n},n.utils.rAF=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||function(t){return window.setTimeout(t,1e3/60)}}(),n.utils.cancelAF=function(){return window.cancelAnimationFrame||window.webkitCancelAnimationFrame||window.mozCancelAnimationFrame||window.oCancelAnimationFrame||function(t){window.clearTimeout(t)}}(),n.utils.measureScrollbar=function(){if(document.body.clientWidth>=window.innerWidth)return 0;var t=i('<div style="width: 100px;height: 100px;overflow: scroll;position: absolute;top: -9999px;"></div>');i(document.body).append(t);var e=t[0].offsetWidth-t[0].clientWidth;return t.remove(),e},n.utils.imageLoader=function(t,e){function i(){e(t[0])}function n(){if(this.one("load",i),/MSIE (\d+\.\d+);/.test(navigator.userAgent)){var t=this.attr("src"),e=t.match(/\?/)?"&":"?";e+="random="+(new Date).getTime(),this.attr("src",t+e)}}return t.attr("src")?void(t[0].complete||4===t[0].readyState?i():n.call(t)):void i()},n.template=function(t,e){var i=n.template;return i.cache[t]||(i.cache[t]=function(){var e=t,n=/^[\w\-]+$/.test(t)?i.get(t):(e="template(string)",t),o=1,s=("try { "+(i.variable?"var "+i.variable+" = this.stash;":"with (this.stash) { ")+"this.ret += '"+n.replace(/<%/g,"").replace(/%>/g,"").replace(/'(?![^\x11\x13]+?\x13)/g,"\\x27").replace(/^\s*|\s*$/g,"").replace(/\n/g,function(){return"';\nthis.line = "+ ++o+"; this.ret += '\\n"}).replace(/\x11-(.+?)\x13/g,"' + ($1) + '").replace(/\x11=(.+?)\x13/g,"' + this.escapeHTML($1) + '").replace(/\x11(.+?)\x13/g,"'; $1; this.ret += '")+"'; "+(i.variable?"":"}")+"return this.ret;} catch (e) { throw 'TemplateError: ' + e + ' (on "+e+"' + ' line ' + this.line + ')'; } //@ sourceURL="+e+"\n").replace(/this\.ret \+= '';/g,""),a=new Function(s),r={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#x22;","'":"&#x27;"},l=function(t){return(""+t).replace(/[&<>\'\"]/g,function(t){return r[t]})};return function(t){return a.call(i.context={escapeHTML:l,line:1,ret:"",stash:t})}}()),e?i.cache[t](e):i.cache[t]},n.template.cache={},n.template.get=function(t){if(t){var e=document.getElementById(t);return e&&e.innerHTML||""}},n.DOMWatchers=[],n.DOMReady=!1,n.ready=function(t){n.DOMWatchers.push(t),n.DOMReady&&t(document)},n.DOMObserve=function(t,e,o){var s=n.support.mutationobserver;s&&(e=i.isPlainObject(e)?e:{childList:!0,subtree:!0},o="function"==typeof o&&o||function(){},i(t).each(function(){var t=this,a=i(t);if(!a.data("am.observer"))try{var r=new s(n.utils.debounce(function(e,i){o.call(t,e,i),a.trigger("changed.dom.amui")},50));r.observe(t,e),a.data("am.observer",r)}catch(l){}}))},i.fn.DOMObserve=function(t,e){return this.each(function(){n.DOMObserve(this,t,e)})},n.support.touch&&(a.addClass("am-touch"),i(function(){var t=n.FastClick;t&&(i("[contenteditable]").addClass("needsclick"),t.attach(document.body))})),i(document).on("changed.dom.amui",function(t){var e=t.target;i.each(n.DOMWatchers,function(t,i){i(e)})}),i(function(){var t=i("body");n.DOMReady=!0,i.each(n.DOMWatchers,function(t,e){e(document)}),n.DOMObserve("[data-am-observe]"),a.removeClass("no-js").addClass("js"),n.support.animation&&a.addClass("cssanimations"),window.navigator.standalone&&a.addClass("am-standalone"),i(".am-topbar-fixed-top").length&&t.addClass("am-with-topbar-fixed-top"),i(".am-topbar-fixed-bottom").length&&t.addClass("am-with-topbar-fixed-bottom");var e=i(".am-layout");e.find('[class*="md-block-grid"]').alterClass("md-block-grid-*"),e.find('[class*="lg-block-grid"]').alterClass("lg-block-grid"),i("[data-am-widget]").each(function(){var t=i(this);0===t.parents(".am-layout").length&&t.addClass("am-no-layout")})}),i.AMUI=n,e.exports=n}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],5:[function(t,e){"use strict";e.exports={VERSION:"2.0.1"}},{}],6:[function(t,e){(function(i){"use strict";function n(){var t=o(".ds-thread"),e=t.parent('[data-am-widget="duoshuo"]').attr("data-ds-short-name"),i=("https:"==document.location.protocol?"https:":"http:")+"//static.duoshuo.com/embed.js";if(t.length&&e&&(window.duoshuoQuery={short_name:e},!o('script[src="'+i+'"]').length)){var n=o("<script>",{async:!0,type:"text/javascript",src:i,charset:"utf-8"});o("body").append(n)}}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),o(window).on("load",n),e.exports=o.AMUI.duoshuo={VERSION:"2.0.1",init:n}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],7:[function(t,e){(function(i){"use strict";function n(){o(".am-figure").each(function(t,e){var i,n=s.utils.parseOptions(o(e).attr("data-am-figure")),a=o(e);if(n.pureview)if("auto"===n.pureview){var r=o.isImgZoomAble(a.find("img")[0]);r&&a.pureview()}else a.addClass("am-figure-zoomable").pureview();i=a.data("amui.pureview"),i&&a.on("click",":not(img)",function(){i.open(0)})})}t("./core"),t("./ui.pureview");var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=o.AMUI;o.isImgZoomAble=function(t){var e=new Image;e.src=t.src;var i=o(t).width()<e.width;return i&&o(t).closest(".am-figure").addClass("am-figure-zoomable"),i},o(window).on("load",function(){n()}),e.exports=o.AMUI.figure={VERSION:"2.0.3",init:n}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.pureview":37}],8:[function(t,e){(function(i){"use strict";function n(){o(".am-footer-ysp").on("click",function(){o("#am-footer-modal").modal()});var t=s.utils.parseOptions(o(".am-footer").data("amFooter"));t.addToHS&&a(),o('[data-rel="desktop"]').on("click",function(t){t.preventDefault(),window.AMPlatform?window.AMPlatform.util.goDesktop():(r.set("allmobilize","desktop","","/"),window.location=window.location)})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core");t("./ui.modal");var a=t("./ui.add2home"),r=t("./util.cookie");o(function(){n()}),e.exports=o.AMUI.footer={VERSION:"3.1.2",init:n}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.add2home":23,"./ui.modal":32,"./util.cookie":47}],9:[function(t,e){(function(i){"use strict";function n(){var t=o('[data-am-widget="gallery"]');t.each(function(){var t=s.utils.parseOptions(o(this).attr("data-am-gallery"));t.pureview&&("object"==typeof t.pureview?o(this).pureview(t.pureview):o(this).pureview())})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),t("./ui.pureview");var s=o.AMUI;o(function(){n()}),e.exports=o.AMUI.gallery={VERSION:"3.0.0",init:n}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.pureview":37}],10:[function(t,e){(function(i){"use strict";function n(){function t(){i[(n.scrollTop()>50?"add":"remove")+"Class"]("am-active")}var e=o('[data-am-widget="gotop"]'),i=e.filter(".am-gotop-fixed"),n=o(window);e.find("a").on("click",function(t){t.preventDefault(),n.smoothScroll()}),t(),n.on("scroll.gotop.amui",o.AMUI.utils.debounce(t,100))}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),t("./ui.smooth-scroll"),o(function(){n()}),e.exports=o.AMUI.gotop={VERSION:"4.0.2",init:n}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.smooth-scroll":42}],11:[function(t,e){(function(i){"use strict";function n(){o('[data-am-widget="header"]').each(function(){return o(this).hasClass("am-header-fixed")?(o("body").addClass("am-with-fixed-header"),!1):void 0})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),o(function(){n()}),e.exports=o.AMUI.header={VERSION:"2.0.0",init:n}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],12:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),e.exports=n.AMUI.intro={VERSION:"4.0.2"}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],13:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),e.exports=n.AMUI.listNews={VERSION:"4.0.0",init:function(){}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],14:[function(t,e){(function(i){function n(t){var e=s("<script />",{id:"am-map-api-0"});s("body").append(e),e.on("load",function(){console.log("load");var e=s("<script/>",{id:"am-map-api-1"});s("body").append(e),e.on("load",function(){var e=document.createElement("script");e.textContent="("+t.toString()+")();",s("body")[0].appendChild(e)}).attr("src","http://api.map.baidu.com/getscript?type=quick&file=feature&ak=WVAXZ05oyNRXS5egLImmentg&t=20140109092002")}).attr("src","http://api.map.baidu.com/getscript?type=quick&file=api&ak=WVAXZ05oyNRXS5egLImmentg&t=20140109092002")}function o(){var t=document.querySelector(".am-map"),e=116.331398,i=39.897445,n=t.getAttribute("data-name"),o=t.getAttribute("data-address"),s=t.getAttribute("data-longitude")||e,a=t.getAttribute("data-latitude")||i,r=t.getAttribute("data-setZoom")||17,l=t.getAttribute("data-icon"),c=new BMap.Map("bd-map"),u=new BMap.Point(s,a);c.centerAndZoom(u,r),t.getAttribute("data-zoomControl")&&c.addControl(new BMap.ZoomControl),t.getAttribute("data-scaleControl")&&c.addControl(new BMap.ScaleControl);var d=new BMap.Marker(u);l&&d.setIcon(new BMap.Icon(l,new BMap.Size(40,40)));var h={width:200,title:n},p=new BMap.InfoWindow("地址："+o,h),f=new BMap.Geocoder;s==e&&a==i?f.getPoint(o,function(t){t&&(c.centerAndZoom(t,r),d.setPosition(t),c.addOverlay(d),c.openInfoWindow(p,t))},""):f.getLocation(u,function(){c.centerAndZoom(u,r),d.setPosition(u),c.addOverlay(d),o?c.openInfoWindow(p,u):c.openInfoWindow(new BMap.InfoWindow(o,h),u)})}var s="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core");var a=function(){s(".am-map").length&&n(o)};s(document).on("ready",a),e.exports=s.AMUI.map={VERSION:"2.0.2",init:a}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],15:[function(t,e){(function(i){"use strict";function n(){if(o("#mechat").length){var t=o('[data-am-widget="mechat"]'),e=t.data("am-mechat-unitid"),i=o("<script>",{charset:"utf-8",src:"http://mechatim.com/js/unit/button.js?id="+e});o("body").append(i)}}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),o(window).on("load",n),e.exports=o.AMUI.mechat={VERSION:"2.0.1",init:n}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],16:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),t("./ui.offcanvas"),t("./ui.collapse");var o=t("./ui.iscroll-lite"),s=function(){var t=n('[data-am-widget="menu"]');t.find(".am-menu-nav .am-parent > a").on("click",function(t){t.preventDefault();var e=n(this),i=e.parent(),o=e.next(".am-menu-sub");i.toggleClass("am-open"),o.collapse("toggle"),i.siblings(".am-parent").removeClass("am-open").children(".am-menu-sub.am-in").collapse("close")}),t.filter("[data-am-menu-collapse]").find("> .am-menu-toggle").on("click",function(t){t.preventDefault();var e=n(this),i=e.next(".am-menu-nav");e.toggleClass("am-active"),i.collapse("toggle")}),t.filter("[data-am-menu-offcanvas]").find("> .am-menu-toggle").on("click",function(t){t.preventDefault();var e=n(this),i=e.next(".am-offcanvas");e.toggleClass("am-active"),i.offCanvas("open")});var e='.am-offcanvas[data-dismiss-on="click"]',i=n(e);i.find("a").not(".am-parent>a").on("click",function(){n(this).parents(e).offCanvas("close")}),t.filter(".am-menu-one").each(function(t){var e,i=n(this),s=n('<div class="am-menu-nav-sub-wrap"></div>'),a=0,r=i.find(".am-menu-nav"),l=r.children("li");l.filter(".am-parent").each(function(t){n(this).attr("data-rel","#am-menu-sub-"+t),n(this).find(".am-menu-sub").attr("id","am-menu-sub-"+t).appendTo(s)}),i.append(s),r.wrap('<div class="am-menu-nav-wrap" id="am-menu-'+t+'">'),l.each(function(){a+=parseFloat(n(this).css("width"))}),r.width(a);var c=new o("#am-menu-"+t,{eventPassthrough:!0,scrollX:!0,scrollY:!1,preventDefault:!1});l.on("click",function(){var t=n(this);t.addClass("am-active").siblings().removeClass("am-active"),s.find(".am-menu-sub.am-in").collapse("close"),t.is(".am-parent")?!t.hasClass(".am-open")&&s.find(t.attr("data-rel")).collapse("open"):t.siblings().removeClass("am-open"),void 0===e&&(e=n(this).index()?0:1);var o,a=n(this).index()>e,l=n(this)[a?"next":"prev"](),u=l.offset()||n(this).offset(),d=i.offset(),h=parseInt(i.css("padding-left"));(a?u.left+u.width>d.left+d.width:u.left<d.left)&&(o=r.offset(),c.scrollTo(a?d.width-u.left+o.left-u.width-h:o.left-u.left,0,400)),e=n(this).index()}),i.on("touchmove",function(t){t.preventDefault()})})};n(function(){s()}),e.exports=n.AMUI.menu={VERSION:"4.0.3",init:s}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.collapse":26,"./ui.iscroll-lite":31,"./ui.offcanvas":33}],17:[function(t,e){(function(i){"use strict";function n(){function t(){u.append(b),u.find("li").not(".am-navbar-more").slice(i()-1).appendTo(y),n.append(y)}function e(){return i()>=h?(b.hide(),void y.find("li").insertBefore(b)):(!n.find(".am-navbar-actions").length&&t(),b.show(),void(u.find("li").length<i()?y.find("li").slice(0,i()-u.find("li").length).insertBefore(b):u.find("li").length>i()&&(y.find("li").length?u.find("li").not(b).slice(i()-1).insertBefore(y.find("li").first()):u.find("li").not(b).slice(i()-1).appendTo(y))))}function i(){return Math.floor((l.width()-m)/f)}var n=o('[data-am-widget="navbar"]');if(n.length){var l=o(window),c=o("body"),u=n.find(".am-navbar-nav"),d=n.find("li"),h=d.length,p=u.attr("class")&&parseInt(u.attr("class").match(/am-avg-sm-(\d+)/)[1])||3,f=60,m=16,v=d.filter("[data-am-navbar-share]"),g=d.filter("[data-am-navbar-qrcode]"),w="am-active",y=o('<ul class="am-navbar-actions"></ul>',{id:r.utils.generateGUID("am-navbar-actions")}),b=o('<li class="am-navbar-labels am-navbar-more"><a href="javascript: void(0);"><span class="am-icon-angle-up"></span><span class="am-navbar-label">更多</span></a></li>');if("fixed"==n.css("position")&&c.addClass("am-with-fixed-navbar"),g.length){var T="am-navbar-qrcode";if(C=o("#"+T),!C.length){var x=g.attr("data-am-navbar-qrcode"),C=o('<div class="am-modal am-modal-no-btn" id=""><div class="am-modal-dialog"><div class="am-modal-bd"></div></div></div>',{id:T}),E=C.find(".am-modal-bd");if(x)E.html('<img src="'+x+'"/>');else{var k=new a({render:"canvas",correctLevel:0,text:window.location.href,width:200,height:200,background:"#fff",foreground:"#000"});E.html(k)}c.append(C)}g.on("click",function(t){t.preventDefault(),C.modal()})}h>p&&h>i()&&t(),n.on("click.navbar.amui",".am-navbar-more",function(t){t.preventDefault(),b[y.hasClass(w)?"removeClass":"addClass"](w),y.toggleClass(w)}),v.length&&v.on("click.navbar.amui",function(t){t.preventDefault(),s.toggle()}),l.on("resize.navbar.amui orientationchange.navbar.amui",r.utils.debounce(e,150))}}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),t("./ui.modal");var s=t("./ui.share"),a=t("./util.qrcode"),r=o.AMUI;o(function(){n()}),e.exports=o.AMUI.navbar={VERSION:"2.0.2",init:n}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.modal":32,"./ui.share":41,"./util.qrcode":52}],18:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),e.exports=n.AMUI.pagination={VERSION:"3.0.1"}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],19:[function(t,e){(function(i){"use strict";function n(){var t=o('[data-am-widget="paragraph"]');t.each(function(t){var e=o(this),i=a.utils.parseOptions(e.attr("data-am-paragraph")),n=t;i.pureview&&e.pureview(),i.tableScrollable&&e.find("table").each(function(t){o(this).width()>o(window).width()&&o(this).scrollTable(n+"-"+t)})})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),t("./ui.pureview");var s=t("./ui.iscroll-lite"),a=o.AMUI;o.fn.scrollTable=function(t){var e,i=o(this);i.wrap('<div class="am-paragraph-table-container" id="am-paragraph-table-'+t+'"><div class="am-paragraph-table-scroller"></div></div>'),e=i.parent(),e.width(i.width()),e.height(i.height()),new s("#am-paragraph-table-"+t,{eventPassthrough:!0,scrollX:!0,scrollY:!1,preventDefault:!1})},o(window).on("load",function(){n()}),e.exports=o.AMUI.paragraph={VERSION:"2.0.1",init:n}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.iscroll-lite":31,"./ui.pureview":37}],20:[function(t,e){(function(i){"use strict";function n(){var t=o('[data-am-widget="slider"]');t.not(".am-slider-manual").each(function(t,e){var i=s.utils.parseOptions(o(e).attr("data-am-slider"));o(e).flexslider(i)})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),t("./ui.flexslider");var s=o.AMUI;o(document).on("ready",n),e.exports=o.AMUI.slider={VERSION:"3.0.1",init:n}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.flexslider":30}],21:[function(t,e){(function(i){"use strict";function n(){o('[data-am-widget="tabs"]').each(function(){var t=o(this).data("amTabsNoswipe")?{noSwipe:1}:{};o(this).tabs(t)})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),t("./ui.tabs"),o(function(){n()}),e.exports=o.AMUI.tab={VERSION:"4.0.1",init:n}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.tabs":44}],22:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core"),e.exports=n.AMUI.titlebar={VERSION:"4.0.1"}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],23:[function(t,e){(function(i){"use strict";function n(){window.removeEventListener("load",n,!1),l=!0}function o(t){return c=c||new o.Class(t)}function s(t,e){for(var i in e)t[i]=e[i];return t}function a(){"#ath"==document.location.hash&&history.replaceState("",window.document.title,document.location.href.split("#")[0]),u.test(document.location.href)&&history.replaceState("",window.document.title,document.location.href.replace(u,"$1")),d.test(document.location.search)&&history.replaceState("",window.document.title,document.location.href.replace(d,"$2"))}var r="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core");var l=!1;"complete"===document.readyState?l=!0:window.addEventListener("load",n,!1);var c,u=/\/ath(\/)?$/,d=/([\?&]ath=[^&]*$|&ath=[^&]*(&))/;o.intl={en_us:{message:"To add this web app to the home screen: tap %icon and then <strong>%action</strong>.",action:{ios:"Add to Home Screen",android:"Add to homescreen",windows:"pin to start"}},zh_cn:{message:"如要把应用程式加至主屏幕,请点击%icon, 然后<strong>%action</strong>",action:{ios:"加至主屏幕",android:"加至主屏幕",windows:"按住启动"}},zh_tw:{message:"如要把應用程式加至主屏幕, 請點擊%icon, 然後<strong>%action</strong>.",action:{ios:"加至主屏幕",android:"加至主屏幕",windows:"按住啟動"}}};for(var h in o.intl)o.intl[h.substr(0,2)]=o.intl[h];o.defaults={appID:"org.cubiq.addtohome",fontSize:15,debug:!1,modal:!1,mandatory:!1,autostart:!0,skipFirstVisit:!1,startDelay:1,lifespan:15,displayPace:1440,maxDisplayCount:0,icon:!0,message:"",validLocation:[],onInit:null,onShow:null,onRemove:null,onAdd:null,onPrivate:null,detectHomescreen:!1};var p=window.navigator.userAgent,f=window.navigator;s(o,{hasToken:"#ath"==document.location.hash||u.test(document.location.href)||d.test(document.location.search),isRetina:window.devicePixelRatio&&window.devicePixelRatio>1,isIDevice:/iphone|ipod|ipad/i.test(p),isMobileChrome:p.indexOf("Android")>-1&&/Chrome\/[.0-9]*/.test(p),isMobileIE:p.indexOf("Windows Phone")>-1,language:f.language&&f.language.toLowerCase().replace("-","_")||""}),o.language=o.language&&o.language in o.intl?o.language:"en_us",o.isMobileSafari=o.isIDevice&&p.indexOf("Safari")>-1&&p.indexOf("CriOS")<0,o.OS=o.isIDevice?"ios":o.isMobileChrome?"android":o.isMobileIE?"windows":"unsupported",o.OSVersion=p.match(/(OS|Android) (\d+[_\.]\d+)/),o.OSVersion=o.OSVersion&&o.OSVersion[2]?+o.OSVersion[2].replace("_","."):0,o.isStandalone=window.navigator.standalone||o.isMobileChrome&&screen.height-document.documentElement.clientHeight<40,o.isTablet=o.isMobileSafari&&p.indexOf("iPad")>-1||o.isMobileChrome&&p.indexOf("Mobile")<0,o.isCompatible=o.isMobileSafari&&o.OSVersion>=6||o.isMobileChrome;var m={lastDisplayTime:0,returningVisitor:!1,displayCount:0,optedout:!1,added:!1};o.removeSession=function(t){try{localStorage.removeItem(t||o.defaults.appID)}catch(e){}},o.Class=function(t){if(this.options=s({},o.defaults),s(this.options,t),this.options.mandatory=this.options.mandatory&&("standalone"in window.navigator||this.options.debug),this.options.modal=this.options.modal||this.options.mandatory,this.options.mandatory&&(this.options.startDelay=-.5),this.options.detectHomescreen=this.options.detectHomescreen===!0?"hash":this.options.detectHomescreen,this.options.debug&&(o.isCompatible=!0,o.OS="string"==typeof this.options.debug?this.options.debug:"unsupported"==o.OS?"android":o.OS,o.OSVersion="ios"==o.OS?"8":"4"),this.container=document.documentElement,this.session=localStorage.getItem(this.options.appID),this.session=this.session?JSON.parse(this.session):void 0,!o.hasToken||o.isCompatible&&this.session||(o.hasToken=!1,a()),o.isCompatible){this.session=this.session||m;try{localStorage.setItem(this.options.appID,JSON.stringify(this.session)),o.hasLocalStorage=!0}catch(e){o.hasLocalStorage=!1,this.options.onPrivate&&this.options.onPrivate.call(this)}for(var i=!this.options.validLocation.length,n=this.options.validLocation.length;n--;)if(this.options.validLocation[n].test(document.location.href)){i=!0;break}if(localStorage.getItem("addToHome")&&this.optOut(),!this.session.optedout&&!this.session.added&&i){if(o.isStandalone)return void(this.session.added||(this.session.added=!0,this.updateSession(),this.options.onAdd&&o.hasLocalStorage&&this.options.onAdd.call(this)));if(this.options.detectHomescreen){if(o.hasToken)return a(),void(this.session.added||(this.session.added=!0,this.updateSession(),this.options.onAdd&&o.hasLocalStorage&&this.options.onAdd.call(this)));"hash"==this.options.detectHomescreen?history.replaceState("",window.document.title,document.location.href+"#ath"):"smartURL"==this.options.detectHomescreen?history.replaceState("",window.document.title,document.location.href.replace(/(\/)?$/,"/ath$1")):history.replaceState("",window.document.title,document.location.href+(document.location.search?"&":"?")+"ath=")}(this.session.returningVisitor||(this.session.returningVisitor=!0,this.updateSession(),!this.options.skipFirstVisit))&&o.hasLocalStorage&&(this.ready=!0,this.options.onInit&&this.options.onInit.call(this),this.options.autostart&&this.show())}}},o.Class.prototype={events:{load:"_delayedShow",error:"_delayedShow",orientationchange:"resize",resize:"resize",scroll:"resize",click:"remove",touchmove:"_preventDefault",transitionend:"_removeElements",webkitTransitionEnd:"_removeElements",MSTransitionEnd:"_removeElements"},handleEvent:function(t){var e=this.events[t.type];e&&this[e](t)},show:function(t){if(this.options.autostart&&!l)return void setTimeout(this.show.bind(this),50);if(!this.shown){var e=Date.now(),i=this.session.lastDisplayTime;if(t!==!0){if(!this.ready)return;
if(e-i<6e4*this.options.displayPace)return;if(this.options.maxDisplayCount&&this.session.displayCount>=this.options.maxDisplayCount)return}this.shown=!0,this.session.lastDisplayTime=e,this.session.displayCount++,this.updateSession(),this.applicationIcon||(this.applicationIcon=document.querySelector("ios"==o.OS?'head link[rel^=apple-touch-icon][sizes="152x152"],head link[rel^=apple-touch-icon][sizes="144x144"],head link[rel^=apple-touch-icon][sizes="120x120"],head link[rel^=apple-touch-icon][sizes="114x114"],head link[rel^=apple-touch-icon]':'head link[rel^="shortcut icon"][sizes="196x196"],head link[rel^=apple-touch-icon]'));var n="";n=this.options.message in o.intl?o.intl[this.options.message].message.replace("%action",o.intl[this.options.message].action[o.OS]):""!==this.options.message?this.options.message:o.intl[o.language].message.replace("%action",o.intl[o.language].action[o.OS]),n="<p>"+n.replace("%icon",'<span class="ath-action-icon">icon</span>')+"</p>",this.viewport=document.createElement("div"),this.viewport.className="ath-viewport",this.options.modal&&(this.viewport.className+=" ath-modal"),this.options.mandatory&&(this.viewport.className+=" ath-mandatory"),this.viewport.style.position="absolute",this.element=document.createElement("div"),this.element.className="ath-container ath-"+o.OS+" ath-"+o.OS+(o.OSVersion+"").substr(0,1)+" ath-"+(o.isTablet?"tablet":"phone"),this.element.style.cssText="-webkit-transition-property:-webkit-transform,opacity;-webkit-transition-duration:0;-webkit-transform:translate3d(0,0,0);transition-property:transform,opacity;transition-duration:0;transform:translate3d(0,0,0);-webkit-transition-timing-function:ease-out",this.element.style.webkitTransform="translate3d(0,-"+window.innerHeight+"px,0)",this.element.style.webkitTransitionDuration="0s",this.options.icon&&this.applicationIcon&&(this.element.className+=" ath-icon",this.img=document.createElement("img"),this.img.className="ath-application-icon",this.img.addEventListener("load",this,!1),this.img.addEventListener("error",this,!1),this.img.src=this.applicationIcon.href,this.element.appendChild(this.img)),this.element.innerHTML+=n,this.viewport.style.left="-99999em",this.viewport.appendChild(this.element),this.container.appendChild(this.viewport),this.img||this._delayedShow()}},_delayedShow:function(){setTimeout(this._show.bind(this),1e3*this.options.startDelay+500)},_show:function(){var t=this;this.updateViewport(),window.addEventListener("resize",this,!1),window.addEventListener("scroll",this,!1),window.addEventListener("orientationchange",this,!1),this.options.modal&&document.addEventListener("touchmove",this,!0),this.options.mandatory||setTimeout(function(){t.element.addEventListener("click",t,!0)},1e3),setTimeout(function(){t.element.style.webkitTransform="translate3d(0,0,0)",t.element.style.webkitTransitionDuration="1.2s"},0),this.options.lifespan&&(this.removeTimer=setTimeout(this.remove.bind(this),1e3*this.options.lifespan)),this.options.onShow&&this.options.onShow.call(this)},remove:function(){clearTimeout(this.removeTimer),this.img&&(this.img.removeEventListener("load",this,!1),this.img.removeEventListener("error",this,!1)),window.removeEventListener("resize",this,!1),window.removeEventListener("scroll",this,!1),window.removeEventListener("orientationchange",this,!1),document.removeEventListener("touchmove",this,!0),this.element.removeEventListener("click",this,!0),this.element.addEventListener("transitionend",this,!1),this.element.addEventListener("webkitTransitionEnd",this,!1),this.element.addEventListener("MSTransitionEnd",this,!1),this.element.style.webkitTransitionDuration="0.3s",this.element.style.opacity="0"},_removeElements:function(){this.element.removeEventListener("transitionend",this,!1),this.element.removeEventListener("webkitTransitionEnd",this,!1),this.element.removeEventListener("MSTransitionEnd",this,!1),this.container.removeChild(this.viewport),this.shown=!1,this.options.onRemove&&this.options.onRemove.call(this)},updateViewport:function(){if(this.shown){this.viewport.style.width=window.innerWidth+"px",this.viewport.style.height=window.innerHeight+"px",this.viewport.style.left=window.scrollX+"px",this.viewport.style.top=window.scrollY+"px";var t=document.documentElement.clientWidth;this.orientation=t>document.documentElement.clientHeight?"landscape":"portrait";var e="ios"==o.OS?"portrait"==this.orientation?screen.width:screen.height:screen.width;this.scale=screen.width>t?1:e/window.innerWidth,this.element.style.fontSize=this.options.fontSize/this.scale+"px"}},resize:function(){clearTimeout(this.resizeTimer),this.resizeTimer=setTimeout(this.updateViewport.bind(this),100)},updateSession:function(){o.hasLocalStorage!==!1&&localStorage.setItem(this.options.appID,JSON.stringify(this.session))},clearSession:function(){this.session=m,this.updateSession()},optOut:function(){this.session.optedout=!0,this.updateSession()},optIn:function(){this.session.optedout=!1,this.updateSession()},clearDisplayCount:function(){this.session.displayCount=0,this.updateSession()},_preventDefault:function(t){t.preventDefault(),t.stopPropagation()}},r.AMUI.addToHomescreen=o,e.exports=o}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],24:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,o=t("./core"),s=function(t,e){var i=this;this.options=n.extend({},s.DEFAULTS,e),this.$element=n(t),this.$element.addClass("am-fade am-in").on("click.alert.amui",".am-close",function(){i.close.call(this)})};s.DEFAULTS={removeElement:!0},s.prototype.close=function(){function t(){i.trigger("closed.alert.amui").remove()}var e=n(this),i=e.hasClass("am-alert")?e:e.parent(".am-alert");i.trigger("close.alert.amui"),i.removeClass("am-in"),o.support.transition&&i.hasClass("am-fade")?i.one(o.support.transition.end,t).emulateTransitionEnd(200):t()},n.fn.alert=function(t){return this.each(function(){var e=n(this),i=e.data("amui.alert"),o="object"==typeof t&&t;i||e.data("amui.alert",i=new s(this,o||{})),"string"==typeof t&&i[t].call(e)})},n(document).on("click.alert.amui.data-api","[data-am-alert]",function(t){var e=n(t.target);n(this).addClass("am-fade am-in"),e.is(".am-close")&&n(this).alert("close")}),n.AMUI.alert=s,e.exports=s}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],25:[function(t,e){(function(i){"use strict";function n(t){return this.each(function(){var e=o(this),i=e.data("amui.button"),n="object"==typeof t&&t||{};i||e.data("amui.button",i=new a(this,n)),"toggle"==t?i.toggle():"string"==typeof t&&i.setState(t)})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core"),a=function(t,e){this.$element=o(t),this.options=o.extend({},a.DEFAULTS,e),this.isLoading=!1,this.hasSpinner=!1};a.DEFAULTS={loadingText:"loading...",className:{loading:"am-btn-loading",disabled:"am-disabled"},spinner:void 0},a.prototype.setState=function(t){var e="disabled",i=this.$element,n=this.options,a=i.is("input")?"val":"html",r=n.className.disabled+" "+n.className.loading;t+="Text",n.resetText||(n.resetText=i[a]()),s.support.animation&&n.spinner&&"html"===a&&!this.hasSpinner&&(n.loadingText='<span class="am-icon-'+n.spinner+' am-icon-spin"></span>'+n.loadingText,this.hasSpinner=!0),i[a](n[t]),setTimeout(o.proxy(function(){"loadingText"==t?(i.addClass(r).attr(e,e),this.isLoading=!0):this.isLoading&&(i.removeClass(r).removeAttr(e),this.isLoading=!1)},this),0)},a.prototype.toggle=function(){var t=!0,e=this.$element,i=this.$element.parent(".am-btn-group");if(i.length){var n=this.$element.find("input");"radio"==n.prop("type")&&(n.prop("checked")&&e.hasClass("am-active")?t=!1:i.find(".am-active").removeClass("am-active")),t&&n.prop("checked",!e.hasClass("am-active")).trigger("change")}t&&(e.toggleClass("am-active"),e.hasClass("am-active")||e.blur())},o.fn.button=n,o(document).on("click.button.amui.data-api","[data-am-button]",function(t){var e=o(t.target);e.hasClass("am-btn")||(e=e.closest(".am-btn")),n.call(e,"toggle"),t.preventDefault()}),s.ready(function(t){o("[data-am-loading]",t).each(function(){o(this).button(s.utils.parseOptions(o(this).data("amLoading")))})}),o.AMUI.button=a,e.exports=a}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],26:[function(t,e){(function(i){"use strict";function n(t){return this.each(function(){var e=o(this),i=e.data("amui.collapse"),n=o.extend({},a.DEFAULTS,s.utils.options(e.attr("data-am-collapse")),"object"==typeof t&&t);!i&&n.toggle&&"open"==t&&(t=!t),i||e.data("amui.collapse",i=new a(this,n)),"string"==typeof t&&i[t]()})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core"),a=function(t,e){this.$element=o(t),this.options=o.extend({},a.DEFAULTS,e),this.transitioning=null,this.options.parent&&(this.$parent=o(this.options.parent)),this.options.toggle&&this.toggle()};a.DEFAULTS={toggle:!0},a.prototype.open=function(){if(!this.transitioning&&!this.$element.hasClass("am-in")){var t=o.Event("open.collapse.amui");if(this.$element.trigger(t),!t.isDefaultPrevented()){var e=this.$parent&&this.$parent.find("> .am-panel > .am-in");if(e&&e.length){var i=e.data("amui.collapse");if(i&&i.transitioning)return;n.call(e,"close"),i||e.data("amui.collapse",null)}this.$element.removeClass("am-collapse").addClass("am-collapsing").height(0),this.transitioning=1;var a=function(){this.$element.removeClass("am-collapsing").addClass("am-collapse am-in").height(""),this.transitioning=0,this.$element.trigger("opened.collapse.amui")};if(!s.support.transition)return a.call(this);var r=this.$element[0].scrollHeight;this.$element.one(s.support.transition.end,o.proxy(a,this)).emulateTransitionEnd(300).css({height:r})}}},a.prototype.close=function(){if(!this.transitioning&&this.$element.hasClass("am-in")){var t=o.Event("close.collapse.amui");if(this.$element.trigger(t),!t.isDefaultPrevented()){this.$element.height(this.$element.height()).redraw(),this.$element.addClass("am-collapsing").removeClass("am-collapse am-in"),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.trigger("closed.collapse.amui").removeClass("am-collapsing").addClass("am-collapse")};return s.support.transition?void this.$element.height(0).one(s.support.transition.end,o.proxy(e,this)).emulateTransitionEnd(300):e.call(this)}}},a.prototype.toggle=function(){this[this.$element.hasClass("am-in")?"close":"open"]()},o.fn.collapse=n,o(document).on("click.collapse.amui.data-api","[data-am-collapse]",function(t){var e,i=o(this),a=s.utils.options(i.attr("data-am-collapse")),r=a.target||t.preventDefault()||(e=i.attr("href"))&&e.replace(/.*(?=#[^\s]+$)/,""),l=o(r),c=l.data("amui.collapse"),u=c?"toggle":a,d=a.parent,h=d&&o(d);c&&c.transitioning||(h&&h.find("[data-am-collapse]").not(i).addClass("am-collapsed"),i[l.hasClass("am-in")?"addClass":"removeClass"]("am-collapsed")),n.call(l,u)}),o.AMUI.collapse=a,e.exports=a}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],27:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,o=t("./core"),s=n(document),a=function(t,e){if(this.$element=n(t),this.options=n.extend({},a.DEFAULTS,e),this.format=r.parseFormat(this.options.format),this.$element.data("date",this.options.date),this.language=this.getLocale(this.options.locale),this.theme=this.options.theme,this.$picker=n(r.template).appendTo("body").on({click:n.proxy(this.click,this)}),this.isInput=this.$element.is("input"),this.component=this.$element.is(".am-datepicker-date")?this.$element.find(".am-datepicker-add-on"):!1,this.isInput?this.$element.on({"click.datepicker.amui":n.proxy(this.open,this),"keyup.datepicker.amui":n.proxy(this.update,this)}):this.component?this.component.on("click.datepicker.amui",n.proxy(this.open,this)):this.$element.on("click.datepicker.amui",n.proxy(this.open,this)),this.minViewMode=this.options.minViewMode,"string"==typeof this.minViewMode)switch(this.minViewMode){case"months":this.minViewMode=1;break;case"years":this.minViewMode=2;break;default:this.minViewMode=0}if(this.viewMode=this.options.viewMode,"string"==typeof this.viewMode)switch(this.viewMode){case"months":this.viewMode=1;break;case"years":this.viewMode=2;break;default:this.viewMode=0}this.startViewMode=this.viewMode,this.weekStart=(this.options.weekStart||a.locales[this.language].weekStart||0)%7,this.weekEnd=(this.weekStart+6)%7,this.onRender=this.options.onRender,this.setTheme(),this.fillDow(),this.fillMonths(),this.update(),this.showMode()};a.DEFAULTS={locale:"zh_CN",format:"yyyy-mm-dd",weekStart:void 0,viewMode:0,minViewMode:0,date:"",theme:"",autoClose:1,onRender:function(){return""}},a.prototype.open=function(t){this.$picker.show(),this.height=this.component?this.component.outerHeight():this.$element.outerHeight(),this.place(),n(window).on("resize.datepicker.amui",n.proxy(this.place,this)),t&&(t.stopPropagation(),t.preventDefault());var e=this;s.on("mousedown.datapicker.amui touchstart.datepicker.amui",function(t){0===n(t.target).closest(".am-datepicker").length&&e.close()}),this.$element.trigger({type:"open.datepicker.amui",date:this.date})},a.prototype.close=function(){this.$picker.hide(),n(window).off("resize.datepicker.amui",this.place),this.viewMode=this.startViewMode,this.showMode(),this.isInput||n(document).off("mousedown.datapicker.amui touchstart.datepicker.amui",this.close),this.$element.trigger({type:"close.datepicker.amui",date:this.date})},a.prototype.set=function(){var t=r.formatDate(this.date,this.format);this.isInput?this.$element.prop("value",t):(this.component&&this.$element.find("input").prop("value",t),this.$element.data("date",t))},a.prototype.setValue=function(t){this.date="string"==typeof t?r.parseDate(t,this.format):new Date(t),this.set(),this.viewDate=new Date(this.date.getFullYear(),this.date.getMonth(),1,0,0,0,0),this.fill()},a.prototype.place=function(){var t=this.component?this.component.offset():this.$element.offset(),e=this.component?this.component.width():this.$element.width(),i=t.top+this.height,n=t.left,o=s.width()-t.left-e,a=this.isOutView();if(this.$picker.removeClass("am-datepicker-right"),this.$picker.removeClass("am-datepicker-up"),s.width()>640){if(a.outRight)return this.$picker.addClass("am-datepicker-right"),void this.$picker.css({top:i,left:"auto",right:o});a.outBottom&&(this.$picker.addClass("am-datepicker-up"),i=t.top-this.$picker.outerHeight(!0))}else n=0;this.$picker.css({top:i,left:n})},a.prototype.update=function(t){this.date=r.parseDate("string"==typeof t?t:this.isInput?this.$element.prop("value"):this.$element.data("date"),this.format),this.viewDate=new Date(this.date.getFullYear(),this.date.getMonth(),1,0,0,0,0),this.fill()},a.prototype.fillDow=function(){for(var t=this.weekStart,e="<tr>";t<this.weekStart+7;)e+='<th class="am-datepicker-dow">'+a.locales[this.language].daysMin[t++%7]+"</th>";e+="</tr>",this.$picker.find(".am-datepicker-days thead").append(e)},a.prototype.fillMonths=function(){for(var t="",e=0;12>e;)t+='<span class="am-datepicker-month">'+a.locales[this.language].monthsShort[e++]+"</span>";this.$picker.find(".am-datepicker-months td").append(t)},a.prototype.fill=function(){var t=new Date(this.viewDate),e=t.getFullYear(),i=t.getMonth(),n=this.date.valueOf(),o=new Date(e,i-1,28,0,0,0,0),s=r.getDaysInMonth(o.getFullYear(),o.getMonth()),l=this.$picker.find(".am-datepicker-days .am-datepicker-select");l.text("zh_CN"===this.language?e+a.locales[this.language].year[0]+" "+a.locales[this.language].months[i]:a.locales[this.language].months[i]+" "+e),o.setDate(s),o.setDate(s-(o.getDay()-this.weekStart+7)%7);var c=new Date(o);c.setDate(c.getDate()+42),c=c.valueOf();for(var u,d,h,p=[];o.valueOf()<c;)o.getDay()===this.weekStart&&p.push("<tr>"),u=this.onRender(o),d=o.getFullYear(),h=o.getMonth(),i>h&&d===e||e>d?u+=" am-datepicker-old":(h>i&&d===e||d>e)&&(u+=" am-datepicker-new"),o.valueOf()===n&&(u+=" am-active"),p.push('<td class="am-datepicker-day '+u+'">'+o.getDate()+"</td>"),o.getDay()===this.weekEnd&&p.push("</tr>"),o.setDate(o.getDate()+1);this.$picker.find(".am-datepicker-days tbody").empty().append(p.join(""));var f=this.date.getFullYear(),m=this.$picker.find(".am-datepicker-months").find(".am-datepicker-select").text(e);m=m.end().find("span").removeClass("am-active").removeClass("am-disabled");for(var v=0;12>v;)this.onRender(t.setFullYear(e,v))&&m.eq(v).addClass("am-disabled"),v++;f===e&&m.eq(this.date.getMonth()).removeClass("am-disabled").addClass("am-active"),p="",e=10*parseInt(e/10,10);var g,w=this.$picker.find(".am-datepicker-years").find(".am-datepicker-select").text(e+"-"+(e+9)).end().find("td");e-=1;for(var y=-1;11>y;y++)g=this.onRender(t.setFullYear(e)),p+='<span class="'+g+(-1===y||10===y?" am-datepicker-old":"")+(f===e?" am-active":"")+'">'+e+"</span>",e+=1;w.html(p)},a.prototype.click=function(t){t.stopPropagation(),t.preventDefault();var e,i,o=this.$picker.find(".am-datepicker-days").find(".am-active"),s=this.$picker.find(".am-datepicker-months"),a=s.find(".am-active").index(),l=n(t.target).closest("span, td, th");if(1===l.length)switch(l[0].nodeName.toLowerCase()){case"th":switch(l[0].className){case"am-datepicker-switch":this.showMode(1);break;case"am-datepicker-prev":case"am-datepicker-next":this.viewDate["set"+r.modes[this.viewMode].navFnc].call(this.viewDate,this.viewDate["get"+r.modes[this.viewMode].navFnc].call(this.viewDate)+r.modes[this.viewMode].navStep*("am-datepicker-prev"===l[0].className?-1:1)),this.fill(),this.set()}break;case"span":if(l.is(".am-disabled"))return;l.is(".am-datepicker-month")?(e=l.parent().find("span").index(l),l.is(".am-active")?this.viewDate.setMonth(e,o.text()):this.viewDate.setMonth(e)):(i=parseInt(l.text(),10)||0,l.is(".am-active")?this.viewDate.setFullYear(i,a,o.text()):this.viewDate.setFullYear(i)),0!==this.viewMode&&(this.date=new Date(this.viewDate),this.$element.trigger({type:"changeDate.datepicker.amui",date:this.date,viewMode:r.modes[this.viewMode].clsName})),this.showMode(-1),this.fill(),this.set();break;case"td":if(l.is(".am-datepicker-day")&&!l.is(".am-disabled")){var c=parseInt(l.text(),10)||1;e=this.viewDate.getMonth(),l.is(".am-datepicker-old")?e-=1:l.is(".am-datepicker-new")&&(e+=1),i=this.viewDate.getFullYear(),this.date=new Date(i,e,c,0,0,0,0),this.viewDate=new Date(i,e,Math.min(28,c),0,0,0,0),this.fill(),this.set(),this.$element.trigger({type:"changeDate.datepicker.amui",date:this.date,viewMode:r.modes[this.viewMode].clsName}),this.options.autoClose&&this.close()}}},a.prototype.mousedown=function(t){t.stopPropagation(),t.preventDefault()},a.prototype.showMode=function(t){t&&(this.viewMode=Math.max(this.minViewMode,Math.min(2,this.viewMode+t))),this.$picker.find(">div").hide().filter(".am-datepicker-"+r.modes[this.viewMode].clsName).show()},a.prototype.isOutView=function(){var t=this.component?this.component.offset():this.$element.offset(),e={outRight:!1,outBottom:!1},i=this.$picker,n=t.left+i.outerWidth(!0),o=t.top+i.outerHeight(!0)+this.$element.innerHeight();return n>s.width()&&(e.outRight=!0),o>s.height()&&(e.outBottom=!0),e},a.prototype.getLocale=function(t){return t||(t=navigator.language&&navigator.language.split("-"),t[1]=t[1].toUpperCase(),t=t.join("_")),a.locales[t]||(t="en_US"),t},a.prototype.setTheme=function(){this.theme&&this.$picker.addClass("am-datepicker-"+this.theme)},a.locales={en_US:{days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],daysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],daysMin:["Su","Mo","Tu","We","Th","Fr","Sa"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],weekStart:0},zh_CN:{days:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"],daysShort:["周日","周一","周二","周三","周四","周五","周六"],daysMin:["日","一","二","三","四","五","六"],months:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],monthsShort:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],weekStart:1,year:["年"]}};var r={modes:[{clsName:"days",navFnc:"Month",navStep:1},{clsName:"months",navFnc:"FullYear",navStep:1},{clsName:"years",navFnc:"FullYear",navStep:10}],isLeapYear:function(t){return t%4===0&&t%100!==0||t%400===0},getDaysInMonth:function(t,e){return[31,r.isLeapYear(t)?29:28,31,30,31,30,31,31,30,31,30,31][e]},parseFormat:function(t){var e=t.match(/[.\/\-\s].*?/),i=t.split(/\W+/);if(!e||!i||0===i.length)throw new Error("Invalid date format.");return{separator:e,parts:i}},parseDate:function(t,e){var i,n=t.split(e.separator);if(t=new Date,t.setHours(0),t.setMinutes(0),t.setSeconds(0),t.setMilliseconds(0),n.length===e.parts.length){for(var o=t.getFullYear(),s=t.getDate(),a=t.getMonth(),r=0,l=e.parts.length;l>r;r++)switch(i=parseInt(n[r],10)||1,e.parts[r]){case"dd":case"d":s=i,t.setDate(i);break;case"mm":case"m":a=i-1,t.setMonth(i-1);break;case"yy":o=2e3+i,t.setFullYear(2e3+i);break;case"yyyy":o=i,t.setFullYear(i)}t=new Date(o,a,s,0,0,0)}return t},formatDate:function(t,e){var i={d:t.getDate(),m:t.getMonth()+1,yy:t.getFullYear().toString().substring(2),yyyy:t.getFullYear()},n=[];i.dd=(i.d<10?"0":"")+i.d,i.mm=(i.m<10?"0":"")+i.m;for(var o=0,s=e.parts.length;s>o;o++)n.push(i[e.parts[o]]);return n.join(e.separator)},headTemplate:'<thead><tr class="am-datepicker-header"><th class="am-datepicker-prev"><i class="am-datepicker-prev-icon"></i></th><th colspan="5" class="am-datepicker-switch"><div class="am-datepicker-select"></div></th><th class="am-datepicker-next"><i class="am-datepicker-next-icon"></i></th></tr></thead>',contTemplate:'<tbody><tr><td colspan="7"></td></tr></tbody>'};r.template='<div class="am-datepicker am-datepicker-dropdown"><div class="am-datepicker-caret"></div><div class="am-datepicker-days"><table class="am-datepicker-table">'+r.headTemplate+'<tbody></tbody></table></div><div class="am-datepicker-months"><table class="am-datepicker-table">'+r.headTemplate+r.contTemplate+'</table></div><div class="am-datepicker-years"><table class="am-datepicker-table">'+r.headTemplate+r.contTemplate+"</table></div></div>",n.fn.datepicker=function(t,e){return this.each(function(){var i=n(this),s=i.data("amui.datepicker"),r=n.extend({},o.utils.options(i.data("amDatepicker")),"object"==typeof t&&t);s||i.data("amui.datepicker",s=new a(this,r)),"string"==typeof t&&s[t]&&s[t](e)})},n.fn.datepicker.Constructor=a,o.ready(function(){n("[data-am-datepicker]").datepicker()}),n.AMUI.datepicker=a,e.exports=a}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],28:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,o=t("./core"),s=n(document),a=o.support.transition,r=function(){this.id=o.utils.generateGUID("am-dimmer"),this.$element=n(r.DEFAULTS.tpl,{id:this.id}),this.inited=!1,this.scrollbarWidth=0,this.$used=n([])};r.DEFAULTS={tpl:'<div class="am-dimmer" data-am-dimmer></div>'},r.prototype.init=function(){return this.inited||(n(document.body).append(this.$element),this.inited=!0,s.trigger("init.dimmer.amui")),this},r.prototype.open=function(t){this.inited||this.init();var e=this.$element;return t&&(this.$used=this.$used.add(n(t))),this.checkScrollbar().setScrollbar(),e.off(a.end).show().trigger("open.dimmer.amui"),setTimeout(function(){e.addClass("am-active")},0),this},r.prototype.close=function(t,e){function i(){o.hide(),this.resetScrollbar()}if(this.$used=this.$used.not(n(t)),!e&&this.$used.length)return this;var o=this.$element;return o.removeClass("am-active").trigger("close.dimmer.amui"),i.call(this),this},r.prototype.checkScrollbar=function(){return this.scrollbarWidth=o.utils.measureScrollbar(),this},r.prototype.setScrollbar=function(){var t=n(document.body),e=parseInt(t.css("padding-right")||0,10);return this.scrollbarWidth&&t.css("padding-right",e+this.scrollbarWidth),t.addClass("am-dimmer-active"),this},r.prototype.resetScrollbar=function(){return n(document.body).css("padding-right","").removeClass("am-dimmer-active"),this};var l=new r;n.AMUI.dimmer=l,e.exports=l}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],29:[function(t,e){(function(i){"use strict";function n(t){return this.each(function(){var e=o(this),i=e.data("amui.dropdown"),n=o.extend({},s.utils.parseOptions(e.attr("data-am-dropdown")),"object"==typeof t&&t);i||e.data("amui.dropdown",i=new r(this,n)),"string"==typeof t&&i[t]()})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core"),a=s.support.animation,r=function(t,e){this.options=o.extend({},r.DEFAULTS,e),e=this.options,this.$element=o(t),this.$toggle=this.$element.find(e.selector.toggle),this.$dropdown=this.$element.find(e.selector.dropdown),this.$boundary=e.boundary===window?o(window):this.$element.closest(e.boundary),this.$justify=e.justify&&o(e.justify).length&&o(e.justify)||void 0,!this.$boundary.length&&(this.$boundary=o(window)),this.active=this.$element.hasClass("am-active")?!0:!1,this.animating=null,this.events()};r.DEFAULTS={animation:"am-animation-slide-top-fixed",boundary:window,justify:void 0,selector:{dropdown:".am-dropdown-content",toggle:".am-dropdown-toggle"},trigger:"click"},r.prototype.toggle=function(){this.clear(),this.animating||this[this.active?"close":"open"]()},r.prototype.open=function(){var t=this.$toggle,e=this.$element,i=this.$dropdown;if(!t.is(".am-disabled, :disabled")&&!this.active){e.trigger("open.dropdown.amui").addClass("am-active"),t.trigger("focus"),this.checkDimensions();var n=o.proxy(function(){e.trigger("opened.dropdown.amui"),this.active=!0,this.animating=0},this);a?(this.animating=1,i.addClass(this.options.animation).on(a.end+".open.dropdown.amui",o.proxy(function(){n(),i.removeClass(this.options.animation)},this))):n()}},r.prototype.close=function(){if(this.active){var t="am-dropdown-animation",e=this.$element,i=this.$dropdown;e.trigger("close.dropdown.amui");var n=o.proxy(function(){e.removeClass("am-active").trigger("closed.dropdown.amui"),this.active=!1,this.animating=0,this.$toggle.blur()},this);a?(i.removeClass(this.options.animation),i.addClass(t),this.animating=1,i.one(a.end+".close.dropdown.amui",function(){i.removeClass(t),n()})):n()}},r.prototype.checkDimensions=function(){if(this.$dropdown.length){var t=this.$dropdown,e=t.offset(),i=t.outerWidth(),n=this.$boundary.width(),s=o.isWindow(this.boundary)&&this.$boundary.offset()?this.$boundary.offset().left:0;this.$justify&&t.css({"min-width":this.$justify.css("width")}),i+(e.left-s)>n&&this.$element.addClass("am-dropdown-flip")}},r.prototype.clear=function(){o("[data-am-dropdown]").not(this.$element).each(function(){var t=o(this).data("amui.dropdown");t&&t.close()})},r.prototype.events=function(){var t="dropdown.amui",e=this.$toggle;e.on("click."+t,o.proxy(function(t){t.preventDefault(),this.toggle()},this)),o(document).on("keydown.dropdown.amui",o.proxy(function(t){27===t.keyCode&&this.active&&this.close()},this)).on("click.outer.dropdown.amui",o.proxy(function(t){!this.active||this.$element[0]!==t.target&&this.$element.find(t.target).length||this.close()},this))},o.fn.dropdown=n,s.ready(function(t){o("[data-am-dropdown]",t).dropdown()}),o(document).on("click.dropdown.amui.data-api",".am-dropdown form",function(t){t.stopPropagation()}),o.AMUI.dropdown=r,e.exports=r}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],30:[function(t,e){(function(i){var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,o=t("./core");n.flexslider=function(t,e){var i=n(t);i.vars=n.extend({},n.flexslider.defaults,e);var o,s=i.vars.namespace,a=window.navigator&&window.navigator.msPointerEnabled&&window.MSGesture,r=("ontouchstart"in window||a||window.DocumentTouch&&document instanceof DocumentTouch)&&i.vars.touch,l="click touchend MSPointerUp keyup",c="",u="vertical"===i.vars.direction,d=i.vars.reverse,h=i.vars.itemWidth>0,p="fade"===i.vars.animation,f=""!==i.vars.asNavFor,m={},v=!0;n.data(t,"flexslider",i),m={init:function(){i.animating=!1,i.currentSlide=parseInt(i.vars.startAt?i.vars.startAt:0,10),isNaN(i.currentSlide)&&(i.currentSlide=0),i.animatingTo=i.currentSlide,i.atEnd=0===i.currentSlide||i.currentSlide===i.last,i.containerSelector=i.vars.selector.substr(0,i.vars.selector.search(" ")),i.slides=n(i.vars.selector,i),i.container=n(i.containerSelector,i),i.count=i.slides.length,i.syncExists=n(i.vars.sync).length>0,"slide"===i.vars.animation&&(i.vars.animation="swing"),i.prop=u?"top":"marginLeft",i.args={},i.manualPause=!1,i.stopped=!1,i.started=!1,i.startTimeout=null,i.transitions=!i.vars.video&&!p&&i.vars.useCSS&&function(){var t=document.createElement("div"),e=["perspectiveProperty","WebkitPerspective","MozPerspective","OPerspective","msPerspective"];for(var n in e)if(void 0!==t.style[e[n]])return i.pfx=e[n].replace("Perspective","").toLowerCase(),i.prop="-"+i.pfx+"-transform",!0;return!1}(),i.ensureAnimationEnd="",""!==i.vars.controlsContainer&&(i.controlsContainer=n(i.vars.controlsContainer).length>0&&n(i.vars.controlsContainer)),""!==i.vars.manualControls&&(i.manualControls=n(i.vars.manualControls).length>0&&n(i.vars.manualControls)),i.vars.randomize&&(i.slides.sort(function(){return Math.round(Math.random())-.5}),i.container.empty().append(i.slides)),i.doMath(),i.setup("init"),i.vars.controlNav&&m.controlNav.setup(),i.vars.directionNav&&m.directionNav.setup(),i.vars.keyboard&&(1===n(i.containerSelector).length||i.vars.multipleKeyboard)&&n(document).bind("keyup",function(t){var e=t.keyCode;if(!i.animating&&(39===e||37===e)){var n=39===e?i.getTarget("next"):37===e?i.getTarget("prev"):!1;i.flexAnimate(n,i.vars.pauseOnAction)}}),i.vars.mousewheel&&i.bind("mousewheel",function(t,e){t.preventDefault();var n=i.getTarget(0>e?"next":"prev");i.flexAnimate(n,i.vars.pauseOnAction)}),i.vars.pausePlay&&m.pausePlay.setup(),i.vars.slideshow&&i.vars.pauseInvisible&&m.pauseInvisible.init(),i.vars.slideshow&&(i.vars.pauseOnHover&&i.hover(function(){i.manualPlay||i.manualPause||i.pause()},function(){i.manualPause||i.manualPlay||i.stopped||i.play()}),i.vars.pauseInvisible&&m.pauseInvisible.isHidden()||(i.vars.initDelay>0?i.startTimeout=setTimeout(i.play,i.vars.initDelay):i.play())),f&&m.asNav.setup(),r&&i.vars.touch&&m.touch(),(!p||p&&i.vars.smoothHeight)&&n(window).bind("resize orientationchange focus",m.resize),i.find("img").attr("draggable","false"),setTimeout(function(){i.vars.start(i)},200)},asNav:{setup:function(){i.asNav=!0,i.animatingTo=Math.floor(i.currentSlide/i.move),i.currentItem=i.currentSlide,i.slides.removeClass(s+"active-slide").eq(i.currentItem).addClass(s+"active-slide"),a?(t._slider=i,i.slides.each(function(){var t=this;t._gesture=new MSGesture,t._gesture.target=t,t.addEventListener("MSPointerDown",function(t){t.preventDefault(),t.currentTarget._gesture&&t.currentTarget._gesture.addPointer(t.pointerId)},!1),t.addEventListener("MSGestureTap",function(t){t.preventDefault();var e=n(this),o=e.index();n(i.vars.asNavFor).data("flexslider").animating||e.hasClass("active")||(i.direction=i.currentItem<o?"next":"prev",i.flexAnimate(o,i.vars.pauseOnAction,!1,!0,!0))})})):i.slides.on(l,function(t){t.preventDefault();var e=n(this),o=e.index(),a=e.offset().left-n(i).scrollLeft();0>=a&&e.hasClass(s+"active-slide")?i.flexAnimate(i.getTarget("prev"),!0):n(i.vars.asNavFor).data("flexslider").animating||e.hasClass(s+"active-slide")||(i.direction=i.currentItem<o?"next":"prev",i.flexAnimate(o,i.vars.pauseOnAction,!1,!0,!0))})}},controlNav:{setup:function(){i.manualControls?m.controlNav.setupManual():m.controlNav.setupPaging()
},setupPaging:function(){var t,e,o="thumbnails"===i.vars.controlNav?"control-thumbs":"control-paging",a=1;if(i.controlNavScaffold=n('<ol class="'+s+"control-nav "+s+o+'"></ol>'),i.pagingCount>1)for(var r=0;r<i.pagingCount;r++){if(e=i.slides.eq(r),t="thumbnails"===i.vars.controlNav?'<img src="'+e.attr("data-thumb")+'"/>':"<a>"+a+"</a>","thumbnails"===i.vars.controlNav&&!0===i.vars.thumbCaptions){var u=e.attr("data-thumbcaption");""!=u&&void 0!=u&&(t+='<span class="'+s+'caption">'+u+"</span>")}i.controlNavScaffold.append("<li>"+t+"<i></i></li>"),a++}i.controlsContainer?n(i.controlsContainer).append(i.controlNavScaffold):i.append(i.controlNavScaffold),m.controlNav.set(),m.controlNav.active(),i.controlNavScaffold.delegate("a, img",l,function(t){if(t.preventDefault(),""===c||c===t.type){var e=n(this),o=i.controlNav.index(e);e.hasClass(s+"active")||(i.direction=o>i.currentSlide?"next":"prev",i.flexAnimate(o,i.vars.pauseOnAction))}""===c&&(c=t.type),m.setToClearWatchedEvent()})},setupManual:function(){i.controlNav=i.manualControls,m.controlNav.active(),i.controlNav.bind(l,function(t){if(t.preventDefault(),""===c||c===t.type){var e=n(this),o=i.controlNav.index(e);e.hasClass(s+"active")||(i.direction=o>i.currentSlide?"next":"prev",i.flexAnimate(o,i.vars.pauseOnAction))}""===c&&(c=t.type),m.setToClearWatchedEvent()})},set:function(){var t="thumbnails"===i.vars.controlNav?"img":"a";i.controlNav=n("."+s+"control-nav li "+t,i.controlsContainer?i.controlsContainer:i)},active:function(){i.controlNav.removeClass(s+"active").eq(i.animatingTo).addClass(s+"active")},update:function(t,e){i.pagingCount>1&&"add"===t?i.controlNavScaffold.append(n("<li><a>"+i.count+"</a></li>")):1===i.pagingCount?i.controlNavScaffold.find("li").remove():i.controlNav.eq(e).closest("li").remove(),m.controlNav.set(),i.pagingCount>1&&i.pagingCount!==i.controlNav.length?i.update(e,t):m.controlNav.active()}},directionNav:{setup:function(){var t=n('<ul class="'+s+'direction-nav"><li><a class="'+s+'prev" href="#">'+i.vars.prevText+'</a></li><li><a class="'+s+'next" href="#">'+i.vars.nextText+"</a></li></ul>");i.controlsContainer?(n(i.controlsContainer).append(t),i.directionNav=n("."+s+"direction-nav li a",i.controlsContainer)):(i.append(t),i.directionNav=n("."+s+"direction-nav li a",i)),m.directionNav.update(),i.directionNav.bind(l,function(t){t.preventDefault();var e;(""===c||c===t.type)&&(e=i.getTarget(n(this).hasClass(s+"next")?"next":"prev"),i.flexAnimate(e,i.vars.pauseOnAction)),""===c&&(c=t.type),m.setToClearWatchedEvent()})},update:function(){var t=s+"disabled";1===i.pagingCount?i.directionNav.addClass(t).attr("tabindex","-1"):i.vars.animationLoop?i.directionNav.removeClass(t).removeAttr("tabindex"):0===i.animatingTo?i.directionNav.removeClass(t).filter("."+s+"prev").addClass(t).attr("tabindex","-1"):i.animatingTo===i.last?i.directionNav.removeClass(t).filter("."+s+"next").addClass(t).attr("tabindex","-1"):i.directionNav.removeClass(t).removeAttr("tabindex")}},pausePlay:{setup:function(){var t=n('<div class="'+s+'pauseplay"><a></a></div>');i.controlsContainer?(i.controlsContainer.append(t),i.pausePlay=n("."+s+"pauseplay a",i.controlsContainer)):(i.append(t),i.pausePlay=n("."+s+"pauseplay a",i)),m.pausePlay.update(i.vars.slideshow?s+"pause":s+"play"),i.pausePlay.bind(l,function(t){t.preventDefault(),(""===c||c===t.type)&&(n(this).hasClass(s+"pause")?(i.manualPause=!0,i.manualPlay=!1,i.pause()):(i.manualPause=!1,i.manualPlay=!0,i.play())),""===c&&(c=t.type),m.setToClearWatchedEvent()})},update:function(t){"play"===t?i.pausePlay.removeClass(s+"pause").addClass(s+"play").html(i.vars.playText):i.pausePlay.removeClass(s+"play").addClass(s+"pause").html(i.vars.pauseText)}},touch:function(){function e(e){i.animating?e.preventDefault():(window.navigator.msPointerEnabled||1===e.touches.length)&&(i.pause(),v=u?i.h:i.w,w=Number(new Date),b=e.touches[0].pageX,T=e.touches[0].pageY,m=h&&d&&i.animatingTo===i.last?0:h&&d?i.limit-(i.itemW+i.vars.itemMargin)*i.move*i.animatingTo:h&&i.currentSlide===i.last?i.limit:h?(i.itemW+i.vars.itemMargin)*i.move*i.currentSlide:d?(i.last-i.currentSlide+i.cloneOffset)*v:(i.currentSlide+i.cloneOffset)*v,c=u?T:b,f=u?b:T,t.addEventListener("touchmove",n,!1),t.addEventListener("touchend",o,!1))}function n(t){b=t.touches[0].pageX,T=t.touches[0].pageY,g=u?c-T:c-b,y=u?Math.abs(g)<Math.abs(b-f):Math.abs(g)<Math.abs(T-f);var e=500;(!y||Number(new Date)-w>e)&&(t.preventDefault(),!p&&i.transitions&&(i.vars.animationLoop||(g/=0===i.currentSlide&&0>g||i.currentSlide===i.last&&g>0?Math.abs(g)/v+2:1),i.setProps(m+g,"setTouch")))}function o(){if(t.removeEventListener("touchmove",n,!1),i.animatingTo===i.currentSlide&&!y&&null!==g){var e=d?-g:g,s=i.getTarget(e>0?"next":"prev");i.canAdvance(s)&&(Number(new Date)-w<550&&Math.abs(e)>50||Math.abs(e)>v/2)?i.flexAnimate(s,i.vars.pauseOnAction):p||i.flexAnimate(i.currentSlide,i.vars.pauseOnAction,!0)}t.removeEventListener("touchend",o,!1),c=null,f=null,g=null,m=null}function s(e){e.stopPropagation(),i.animating?e.preventDefault():(i.pause(),t._gesture.addPointer(e.pointerId),x=0,v=u?i.h:i.w,w=Number(new Date),m=h&&d&&i.animatingTo===i.last?0:h&&d?i.limit-(i.itemW+i.vars.itemMargin)*i.move*i.animatingTo:h&&i.currentSlide===i.last?i.limit:h?(i.itemW+i.vars.itemMargin)*i.move*i.currentSlide:d?(i.last-i.currentSlide+i.cloneOffset)*v:(i.currentSlide+i.cloneOffset)*v)}function r(e){e.stopPropagation();var i=e.target._slider;if(i){var n=-e.translationX,o=-e.translationY;return x+=u?o:n,g=x,y=u?Math.abs(x)<Math.abs(-n):Math.abs(x)<Math.abs(-o),e.detail===e.MSGESTURE_FLAG_INERTIA?void setImmediate(function(){t._gesture.stop()}):void((!y||Number(new Date)-w>500)&&(e.preventDefault(),!p&&i.transitions&&(i.vars.animationLoop||(g=x/(0===i.currentSlide&&0>x||i.currentSlide===i.last&&x>0?Math.abs(x)/v+2:1)),i.setProps(m+g,"setTouch"))))}}function l(t){t.stopPropagation();var e=t.target._slider;if(e){if(e.animatingTo===e.currentSlide&&!y&&null!==g){var i=d?-g:g,n=e.getTarget(i>0?"next":"prev");e.canAdvance(n)&&(Number(new Date)-w<550&&Math.abs(i)>50||Math.abs(i)>v/2)?e.flexAnimate(n,e.vars.pauseOnAction):p||e.flexAnimate(e.currentSlide,e.vars.pauseOnAction,!0)}c=null,f=null,g=null,m=null,x=0}}var c,f,m,v,g,w,y=!1,b=0,T=0,x=0;a?(t.style.msTouchAction="none",t._gesture=new MSGesture,t._gesture.target=t,t.addEventListener("MSPointerDown",s,!1),t._slider=i,t.addEventListener("MSGestureChange",r,!1),t.addEventListener("MSGestureEnd",l,!1)):t.addEventListener("touchstart",e,!1)},resize:function(){!i.animating&&i.is(":visible")&&(h||i.doMath(),p?m.smoothHeight():h?(i.slides.width(i.computedW),i.update(i.pagingCount),i.setProps()):u?(i.viewport.height(i.h),i.setProps(i.h,"setTotal")):(i.vars.smoothHeight&&m.smoothHeight(),i.newSlides.width(i.computedW),i.setProps(i.computedW,"setTotal")))},smoothHeight:function(t){if(!u||p){var e=p?i:i.viewport;t?e.animate({height:i.slides.eq(i.animatingTo).height()},t):e.height(i.slides.eq(i.animatingTo).height())}},sync:function(t){var e=n(i.vars.sync).data("flexslider"),o=i.animatingTo;switch(t){case"animate":e.flexAnimate(o,i.vars.pauseOnAction,!1,!0);break;case"play":e.playing||e.asNav||e.play();break;case"pause":e.pause()}},uniqueID:function(t){return t.filter("[id]").add(t.find("[id]")).each(function(){var t=n(this);t.attr("id",t.attr("id")+"_clone")}),t},pauseInvisible:{visProp:null,init:function(){var t=["webkit","moz","ms","o"];if("hidden"in document)return"hidden";for(var e=0;e<t.length;e++)t[e]+"Hidden"in document&&(m.pauseInvisible.visProp=t[e]+"Hidden");if(m.pauseInvisible.visProp){var n=m.pauseInvisible.visProp.replace(/[H|h]idden/,"")+"visibilitychange";document.addEventListener(n,function(){m.pauseInvisible.isHidden()?i.startTimeout?clearTimeout(i.startTimeout):i.pause():i.started?i.play():i.vars.initDelay>0?setTimeout(i.play,i.vars.initDelay):i.play()})}},isHidden:function(){return document[m.pauseInvisible.visProp]||!1}},setToClearWatchedEvent:function(){clearTimeout(o),o=setTimeout(function(){c=""},3e3)}},i.flexAnimate=function(t,e,o,a,l){if(i.vars.animationLoop||t===i.currentSlide||(i.direction=t>i.currentSlide?"next":"prev"),f&&1===i.pagingCount&&(i.direction=i.currentItem<t?"next":"prev"),!i.animating&&(i.canAdvance(t,l)||o)&&i.is(":visible")){if(f&&a){var c=n(i.vars.asNavFor).data("flexslider");if(i.atEnd=0===t||t===i.count-1,c.flexAnimate(t,!0,!1,!0,l),i.direction=i.currentItem<t?"next":"prev",c.direction=i.direction,Math.ceil((t+1)/i.visible)-1===i.currentSlide||0===t)return i.currentItem=t,i.slides.removeClass(s+"active-slide").eq(t).addClass(s+"active-slide"),!1;i.currentItem=t,i.slides.removeClass(s+"active-slide").eq(t).addClass(s+"active-slide"),t=Math.floor(t/i.visible)}if(i.animating=!0,i.animatingTo=t,e&&i.pause(),i.vars.before(i),i.syncExists&&!l&&m.sync("animate"),i.vars.controlNav&&m.controlNav.active(),h||i.slides.removeClass(s+"active-slide").eq(t).addClass(s+"active-slide"),i.atEnd=0===t||t===i.last,i.vars.directionNav&&m.directionNav.update(),t===i.last&&(i.vars.end(i),i.vars.animationLoop||i.pause()),p)r?(i.slides.eq(i.currentSlide).css({opacity:0,zIndex:1}),i.slides.eq(t).css({opacity:1,zIndex:2}),i.wrapup(y)):(i.slides.eq(i.currentSlide).css({zIndex:1}).animate({opacity:0},i.vars.animationSpeed,i.vars.easing),i.slides.eq(t).css({zIndex:2}).animate({opacity:1},i.vars.animationSpeed,i.vars.easing,i.wrapup));else{var v,g,w,y=u?i.slides.filter(":first").height():i.computedW;h?(v=i.vars.itemMargin,w=(i.itemW+v)*i.move*i.animatingTo,g=w>i.limit&&1!==i.visible?i.limit:w):g=0===i.currentSlide&&t===i.count-1&&i.vars.animationLoop&&"next"!==i.direction?d?(i.count+i.cloneOffset)*y:0:i.currentSlide===i.last&&0===t&&i.vars.animationLoop&&"prev"!==i.direction?d?0:(i.count+1)*y:d?(i.count-1-t+i.cloneOffset)*y:(t+i.cloneOffset)*y,i.setProps(g,"",i.vars.animationSpeed),i.transitions?(i.vars.animationLoop&&i.atEnd||(i.animating=!1,i.currentSlide=i.animatingTo),i.container.unbind("webkitTransitionEnd transitionend"),i.container.bind("webkitTransitionEnd transitionend",function(){clearTimeout(i.ensureAnimationEnd),i.wrapup(y)}),clearTimeout(i.ensureAnimationEnd),i.ensureAnimationEnd=setTimeout(function(){i.wrapup(y)},i.vars.animationSpeed+100)):i.container.animate(i.args,i.vars.animationSpeed,i.vars.easing,function(){i.wrapup(y)})}i.vars.smoothHeight&&m.smoothHeight(i.vars.animationSpeed)}},i.wrapup=function(t){p||h||(0===i.currentSlide&&i.animatingTo===i.last&&i.vars.animationLoop?i.setProps(t,"jumpEnd"):i.currentSlide===i.last&&0===i.animatingTo&&i.vars.animationLoop&&i.setProps(t,"jumpStart")),i.animating=!1,i.currentSlide=i.animatingTo,i.vars.after(i)},i.animateSlides=function(){!i.animating&&v&&i.flexAnimate(i.getTarget("next"))},i.pause=function(){clearInterval(i.animatedSlides),i.animatedSlides=null,i.playing=!1,i.vars.pausePlay&&m.pausePlay.update("play"),i.syncExists&&m.sync("pause")},i.play=function(){i.playing&&clearInterval(i.animatedSlides),i.animatedSlides=i.animatedSlides||setInterval(i.animateSlides,i.vars.slideshowSpeed),i.started=i.playing=!0,i.vars.pausePlay&&m.pausePlay.update("pause"),i.syncExists&&m.sync("play")},i.stop=function(){i.pause(),i.stopped=!0},i.canAdvance=function(t,e){var n=f?i.pagingCount-1:i.last;return e?!0:f&&i.currentItem===i.count-1&&0===t&&"prev"===i.direction?!0:f&&0===i.currentItem&&t===i.pagingCount-1&&"next"!==i.direction?!1:t!==i.currentSlide||f?i.vars.animationLoop?!0:i.atEnd&&0===i.currentSlide&&t===n&&"next"!==i.direction?!1:i.atEnd&&i.currentSlide===n&&0===t&&"next"===i.direction?!1:!0:!1},i.getTarget=function(t){return i.direction=t,"next"===t?i.currentSlide===i.last?0:i.currentSlide+1:0===i.currentSlide?i.last:i.currentSlide-1},i.setProps=function(t,e,n){var o=function(){var n=t?t:(i.itemW+i.vars.itemMargin)*i.move*i.animatingTo,o=function(){if(h)return"setTouch"===e?t:d&&i.animatingTo===i.last?0:d?i.limit-(i.itemW+i.vars.itemMargin)*i.move*i.animatingTo:i.animatingTo===i.last?i.limit:n;switch(e){case"setTotal":return d?(i.count-1-i.currentSlide+i.cloneOffset)*t:(i.currentSlide+i.cloneOffset)*t;case"setTouch":return d?t:t;case"jumpEnd":return d?t:i.count*t;case"jumpStart":return d?i.count*t:t;default:return t}}();return-1*o+"px"}();i.transitions&&(o=u?"translate3d(0,"+o+",0)":"translate3d("+o+",0,0)",n=void 0!==n?n/1e3+"s":"0s",i.container.css("-"+i.pfx+"-transition-duration",n),i.container.css("transition-duration",n)),i.args[i.prop]=o,(i.transitions||void 0===n)&&i.container.css(i.args),i.container.css("transform",o)},i.setup=function(t){if(p)i.slides.css({width:"100%","float":"left",marginRight:"-100%",position:"relative"}),"init"===t&&(r?i.slides.css({opacity:0,display:"block",webkitTransition:"opacity "+i.vars.animationSpeed/1e3+"s ease",zIndex:1}).eq(i.currentSlide).css({opacity:1,zIndex:2}):0==i.vars.fadeFirstSlide?i.slides.css({opacity:0,display:"block",zIndex:1}).eq(i.currentSlide).css({zIndex:2}).css({opacity:1}):i.slides.css({opacity:0,display:"block",zIndex:1}).eq(i.currentSlide).css({zIndex:2}).animate({opacity:1},i.vars.animationSpeed,i.vars.easing)),i.vars.smoothHeight&&m.smoothHeight();else{var e,o;"init"===t&&(i.viewport=n('<div class="'+s+'viewport"></div>').css({overflow:"hidden",position:"relative"}).appendTo(i).append(i.container),i.cloneCount=0,i.cloneOffset=0,d&&(o=n.makeArray(i.slides).reverse(),i.slides=n(o),i.container.empty().append(i.slides))),i.vars.animationLoop&&!h&&(i.cloneCount=2,i.cloneOffset=1,"init"!==t&&i.container.find(".clone").remove(),i.container.append(m.uniqueID(i.slides.first().clone().addClass("clone")).attr("aria-hidden","true")).prepend(m.uniqueID(i.slides.last().clone().addClass("clone")).attr("aria-hidden","true"))),i.newSlides=n(i.vars.selector,i),e=d?i.count-1-i.currentSlide+i.cloneOffset:i.currentSlide+i.cloneOffset,u&&!h?(i.container.height(200*(i.count+i.cloneCount)+"%").css("position","absolute").width("100%"),setTimeout(function(){i.newSlides.css({display:"block"}),i.doMath(),i.viewport.height(i.h),i.setProps(e*i.h,"init")},"init"===t?100:0)):(i.container.width(200*(i.count+i.cloneCount)+"%"),i.setProps(e*i.computedW,"init"),setTimeout(function(){i.doMath(),i.newSlides.css({width:i.computedW,"float":"left",display:"block"}),i.vars.smoothHeight&&m.smoothHeight()},"init"===t?100:0))}h||i.slides.removeClass(s+"active-slide").eq(i.currentSlide).addClass(s+"active-slide"),i.vars.init(i)},i.doMath=function(){var t=i.slides.first(),e=i.vars.itemMargin,n=i.vars.minItems,o=i.vars.maxItems;i.w=void 0===i.viewport?i.width():i.viewport.width(),i.h=t.height(),i.boxPadding=t.outerWidth()-t.width(),h?(i.itemT=i.vars.itemWidth+e,i.minW=n?n*i.itemT:i.w,i.maxW=o?o*i.itemT-e:i.w,i.itemW=i.minW>i.w?(i.w-e*(n-1))/n:i.maxW<i.w?(i.w-e*(o-1))/o:i.vars.itemWidth>i.w?i.w:i.vars.itemWidth,i.visible=Math.floor(i.w/i.itemW),i.move=i.vars.move>0&&i.vars.move<i.visible?i.vars.move:i.visible,i.pagingCount=Math.ceil((i.count-i.visible)/i.move+1),i.last=i.pagingCount-1,i.limit=1===i.pagingCount?0:i.vars.itemWidth>i.w?i.itemW*(i.count-1)+e*(i.count-1):(i.itemW+e)*i.count-i.w-e):(i.itemW=i.w,i.pagingCount=i.count,i.last=i.count-1),i.computedW=i.itemW-i.boxPadding},i.update=function(t,e){i.doMath(),h||(t<i.currentSlide?i.currentSlide+=1:t<=i.currentSlide&&0!==t&&(i.currentSlide-=1),i.animatingTo=i.currentSlide),i.vars.controlNav&&!i.manualControls&&("add"===e&&!h||i.pagingCount>i.controlNav.length?m.controlNav.update("add"):("remove"===e&&!h||i.pagingCount<i.controlNav.length)&&(h&&i.currentSlide>i.last&&(i.currentSlide-=1,i.animatingTo-=1),m.controlNav.update("remove",i.last))),i.vars.directionNav&&m.directionNav.update()},i.addSlide=function(t,e){var o=n(t);i.count+=1,i.last=i.count-1,u&&d?void 0!==e?i.slides.eq(i.count-e).after(o):i.container.prepend(o):void 0!==e?i.slides.eq(e).before(o):i.container.append(o),i.update(e,"add"),i.slides=n(i.vars.selector+":not(.clone)",i),i.setup(),i.vars.added(i)},i.removeSlide=function(t){var e=isNaN(t)?i.slides.index(n(t)):t;i.count-=1,i.last=i.count-1,isNaN(t)?n(t,i.slides).remove():u&&d?i.slides.eq(i.last).remove():i.slides.eq(t).remove(),i.doMath(),i.update(e,"remove"),i.slides=n(i.vars.selector+":not(.clone)",i),i.setup(),i.vars.removed(i)},m.init()},n(window).blur(function(){focused=!1}).focus(function(){focused=!0}),n.flexslider.defaults={namespace:"am-",selector:".am-slides > li",animation:"slide",easing:"swing",direction:"horizontal",reverse:!1,animationLoop:!0,smoothHeight:!1,startAt:0,slideshow:!0,slideshowSpeed:5e3,animationSpeed:600,initDelay:0,randomize:!1,fadeFirstSlide:!0,thumbCaptions:!1,pauseOnAction:!0,pauseOnHover:!1,pauseInvisible:!0,useCSS:!0,touch:!0,video:!1,controlNav:!0,directionNav:!0,prevText:"Previous",nextText:"Next",keyboard:!0,multipleKeyboard:!1,mousewheel:!1,pausePlay:!1,pauseText:"Pause",playText:"Play",controlsContainer:"",manualControls:"",sync:"",asNavFor:"",itemWidth:0,itemMargin:0,minItems:1,maxItems:0,move:0,allowOneSlide:!0,start:function(){},before:function(){},after:function(){},end:function(){},added:function(){},removed:function(){},init:function(){}},n.fn.flexslider=function(t){if(void 0===t&&(t={}),"object"==typeof t)return this.each(function(){var e=n(this),i=t.selector?t.selector:".am-slides > li",o=e.find(i);1===o.length&&t.allowOneSlide===!0||0===o.length?(o.fadeIn(400),t.start&&t.start(e)):void 0===e.data("flexslider")&&new n.flexslider(this,t)});var e=n(this).data("flexslider");switch(t){case"play":e.play();break;case"pause":e.pause();break;case"stop":e.stop();break;case"next":e.flexAnimate(e.getTarget("next"),!0);break;case"prev":case"previous":e.flexAnimate(e.getTarget("prev"),!0);break;default:"number"==typeof t&&e.flexAnimate(t,!0)}},o.ready(function(t){n("[data-am-flexslider]",t).each(function(t,e){var i=n(e),s=o.utils.parseOptions(i.data("amFlexslider"));s.before=function(t){t._pausedTimer&&(window.clearTimeout(t._pausedTimer),t._pausedTimer=null)},s.after=function(t){var e=t.vars.playAfterPaused;!e||isNaN(e)||t.playing||t.manualPause||t.manualPlay||t.stopped||(t._pausedTimer=window.setTimeout(function(){t.play()},e))},i.flexslider(s)})}),e.exports=n.flexslider}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],31:[function(t,e){(function(i){"use strict";function n(t,e){this.wrapper="string"==typeof t?document.querySelector(t):t,this.scroller=this.wrapper.children[0],this.scrollerStyle=this.scroller.style,this.options={startX:0,startY:0,scrollY:!0,directionLockThreshold:5,momentum:!0,bounce:!0,bounceTime:600,bounceEasing:"",preventDefault:!0,preventDefaultException:{tagName:/^(INPUT|TEXTAREA|BUTTON|SELECT)$/},HWCompositing:!0,useTransition:!0,useTransform:!0};for(var i in e)this.options[i]=e[i];this.translateZ=this.options.HWCompositing&&a.hasPerspective?" translateZ(0)":"",this.options.useTransition=a.hasTransition&&this.options.useTransition,this.options.useTransform=a.hasTransform&&this.options.useTransform,this.options.eventPassthrough=this.options.eventPassthrough===!0?"vertical":this.options.eventPassthrough,this.options.preventDefault=!this.options.eventPassthrough&&this.options.preventDefault,this.options.scrollY="vertical"==this.options.eventPassthrough?!1:this.options.scrollY,this.options.scrollX="horizontal"==this.options.eventPassthrough?!1:this.options.scrollX,this.options.freeScroll=this.options.freeScroll&&!this.options.eventPassthrough,this.options.directionLockThreshold=this.options.eventPassthrough?0:this.options.directionLockThreshold,this.options.bounceEasing="string"==typeof this.options.bounceEasing?a.ease[this.options.bounceEasing]||a.ease.circular:this.options.bounceEasing,this.options.resizePolling=void 0===this.options.resizePolling?60:this.options.resizePolling,this.options.tap===!0&&(this.options.tap="tap"),this.x=0,this.y=0,this.directionX=0,this.directionY=0,this._events={},this._init(),this.refresh(),this.scrollTo(this.options.startX,this.options.startY),this.enable()}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=(t("./core"),window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){window.setTimeout(t,1e3/60)}),a=function(){function t(t){return n===!1?!1:""===n?t:n+t.charAt(0).toUpperCase()+t.substr(1)}var e={},i=document.createElement("div").style,n=function(){for(var t,e=["t","webkitT","MozT","msT","OT"],n=0,o=e.length;o>n;n++)if(t=e[n]+"ransform",t in i)return e[n].substr(0,e[n].length-1);return!1}();e.getTime=Date.now||function(){return(new Date).getTime()},e.extend=function(t,e){for(var i in e)t[i]=e[i]},e.addEvent=function(t,e,i,n){t.addEventListener(e,i,!!n)},e.removeEvent=function(t,e,i,n){t.removeEventListener(e,i,!!n)},e.prefixPointerEvent=function(t){return window.MSPointerEvent?"MSPointer"+t.charAt(9).toUpperCase()+t.substr(10):t},e.momentum=function(t,e,i,n,o,s){var a,r,l=t-e,c=Math.abs(l)/i;return s=void 0===s?6e-4:s,a=t+c*c/(2*s)*(0>l?-1:1),r=c/s,n>a?(a=o?n-o/2.5*(c/8):n,l=Math.abs(a-t),r=l/c):a>0&&(a=o?o/2.5*(c/8):0,l=Math.abs(t)+a,r=l/c),{destination:Math.round(a),duration:r}};var o=t("transform");return e.extend(e,{hasTransform:o!==!1,hasPerspective:t("perspective")in i,hasTouch:"ontouchstart"in window,hasPointer:window.PointerEvent||window.MSPointerEvent,hasTransition:t("transition")in i}),e.isBadAndroid=/Android /.test(window.navigator.appVersion)&&!/Chrome\/\d/.test(window.navigator.appVersion),e.extend(e.style={},{transform:o,transitionTimingFunction:t("transitionTimingFunction"),transitionDuration:t("transitionDuration"),transitionDelay:t("transitionDelay"),transformOrigin:t("transformOrigin")}),e.hasClass=function(t,e){var i=new RegExp("(^|\\s)"+e+"(\\s|$)");return i.test(t.className)},e.addClass=function(t,i){if(!e.hasClass(t,i)){var n=t.className.split(" ");n.push(i),t.className=n.join(" ")}},e.removeClass=function(t,i){if(e.hasClass(t,i)){var n=new RegExp("(^|\\s)"+i+"(\\s|$)","g");t.className=t.className.replace(n," ")}},e.offset=function(t){for(var e=-t.offsetLeft,i=-t.offsetTop;t=t.offsetParent;)e-=t.offsetLeft,i-=t.offsetTop;return{left:e,top:i}},e.preventDefaultException=function(t,e){for(var i in e)if(e[i].test(t[i]))return!0;return!1},e.extend(e.eventType={},{touchstart:1,touchmove:1,touchend:1,mousedown:2,mousemove:2,mouseup:2,pointerdown:3,pointermove:3,pointerup:3,MSPointerDown:3,MSPointerMove:3,MSPointerUp:3}),e.extend(e.ease={},{quadratic:{style:"cubic-bezier(0.25, 0.46, 0.45, 0.94)",fn:function(t){return t*(2-t)}},circular:{style:"cubic-bezier(0.1, 0.57, 0.1, 1)",fn:function(t){return Math.sqrt(1- --t*t)}},back:{style:"cubic-bezier(0.175, 0.885, 0.32, 1.275)",fn:function(t){var e=4;return(t-=1)*t*((e+1)*t+e)+1}},bounce:{style:"",fn:function(t){return(t/=1)<1/2.75?7.5625*t*t:2/2.75>t?7.5625*(t-=1.5/2.75)*t+.75:2.5/2.75>t?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375}},elastic:{style:"",fn:function(t){var e=.22,i=.4;return 0===t?0:1==t?1:i*Math.pow(2,-10*t)*Math.sin(2*(t-e/4)*Math.PI/e)+1}}}),e.tap=function(t,e){var i=document.createEvent("Event");i.initEvent(e,!0,!0),i.pageX=t.pageX,i.pageY=t.pageY,t.target.dispatchEvent(i)},e.click=function(t){var e,i=t.target;/(SELECT|INPUT|TEXTAREA)/i.test(i.tagName)||(e=document.createEvent("MouseEvents"),e.initMouseEvent("click",!0,!0,t.view,1,i.screenX,i.screenY,i.clientX,i.clientY,t.ctrlKey,t.altKey,t.shiftKey,t.metaKey,0,null),e._constructed=!0,i.dispatchEvent(e))},e}();n.prototype={version:"5.1.3",_init:function(){this._initEvents()},destroy:function(){this._initEvents(!0),this._execEvent("destroy")},_transitionEnd:function(t){t.target==this.scroller&&this.isInTransition&&(this._transitionTime(),this.resetPosition(this.options.bounceTime)||(this.isInTransition=!1,this._execEvent("scrollEnd")))},_start:function(t){if(!(1!=a.eventType[t.type]&&0!==t.button||!this.enabled||this.initiated&&a.eventType[t.type]!==this.initiated)){!this.options.preventDefault||a.isBadAndroid||a.preventDefaultException(t.target,this.options.preventDefaultException)||t.preventDefault();var e,i=t.touches?t.touches[0]:t;this.initiated=a.eventType[t.type],this.moved=!1,this.distX=0,this.distY=0,this.directionX=0,this.directionY=0,this.directionLocked=0,this._transitionTime(),this.startTime=a.getTime(),this.options.useTransition&&this.isInTransition?(this.isInTransition=!1,e=this.getComputedPosition(),this._translate(Math.round(e.x),Math.round(e.y)),this._execEvent("scrollEnd")):!this.options.useTransition&&this.isAnimating&&(this.isAnimating=!1,this._execEvent("scrollEnd")),this.startX=this.x,this.startY=this.y,this.absStartX=this.x,this.absStartY=this.y,this.pointX=i.pageX,this.pointY=i.pageY,this._execEvent("beforeScrollStart")}},_move:function(t){if(this.enabled&&a.eventType[t.type]===this.initiated){this.options.preventDefault&&t.preventDefault();var e,i,n,o,s=t.touches?t.touches[0]:t,r=s.pageX-this.pointX,l=s.pageY-this.pointY,c=a.getTime();if(this.pointX=s.pageX,this.pointY=s.pageY,this.distX+=r,this.distY+=l,n=Math.abs(this.distX),o=Math.abs(this.distY),!(c-this.endTime>300&&10>n&&10>o)){if(this.directionLocked||this.options.freeScroll||(this.directionLocked=n>o+this.options.directionLockThreshold?"h":o>=n+this.options.directionLockThreshold?"v":"n"),"h"==this.directionLocked){if("vertical"==this.options.eventPassthrough)t.preventDefault();else if("horizontal"==this.options.eventPassthrough)return void(this.initiated=!1);l=0}else if("v"==this.directionLocked){if("horizontal"==this.options.eventPassthrough)t.preventDefault();else if("vertical"==this.options.eventPassthrough)return void(this.initiated=!1);r=0}r=this.hasHorizontalScroll?r:0,l=this.hasVerticalScroll?l:0,e=this.x+r,i=this.y+l,(e>0||e<this.maxScrollX)&&(e=this.options.bounce?this.x+r/3:e>0?0:this.maxScrollX),(i>0||i<this.maxScrollY)&&(i=this.options.bounce?this.y+l/3:i>0?0:this.maxScrollY),this.directionX=r>0?-1:0>r?1:0,this.directionY=l>0?-1:0>l?1:0,this.moved||this._execEvent("scrollStart"),this.moved=!0,this._translate(e,i),c-this.startTime>300&&(this.startTime=c,this.startX=this.x,this.startY=this.y)}}},_end:function(t){if(this.enabled&&a.eventType[t.type]===this.initiated){this.options.preventDefault&&!a.preventDefaultException(t.target,this.options.preventDefaultException)&&t.preventDefault();var e,i,n=(t.changedTouches?t.changedTouches[0]:t,a.getTime()-this.startTime),o=Math.round(this.x),s=Math.round(this.y),r=Math.abs(o-this.startX),l=Math.abs(s-this.startY),c=0,u="";if(this.isInTransition=0,this.initiated=0,this.endTime=a.getTime(),!this.resetPosition(this.options.bounceTime))return this.scrollTo(o,s),this.moved?this._events.flick&&200>n&&100>r&&100>l?void this._execEvent("flick"):(this.options.momentum&&300>n&&(e=this.hasHorizontalScroll?a.momentum(this.x,this.startX,n,this.maxScrollX,this.options.bounce?this.wrapperWidth:0,this.options.deceleration):{destination:o,duration:0},i=this.hasVerticalScroll?a.momentum(this.y,this.startY,n,this.maxScrollY,this.options.bounce?this.wrapperHeight:0,this.options.deceleration):{destination:s,duration:0},o=e.destination,s=i.destination,c=Math.max(e.duration,i.duration),this.isInTransition=1),o!=this.x||s!=this.y?((o>0||o<this.maxScrollX||s>0||s<this.maxScrollY)&&(u=a.ease.quadratic),void this.scrollTo(o,s,c,u)):void this._execEvent("scrollEnd")):(this.options.tap&&a.tap(t,this.options.tap),this.options.click&&a.click(t),void this._execEvent("scrollCancel"))}},_resize:function(){var t=this;clearTimeout(this.resizeTimeout),this.resizeTimeout=setTimeout(function(){t.refresh()},this.options.resizePolling)},resetPosition:function(t){var e=this.x,i=this.y;return t=t||0,!this.hasHorizontalScroll||this.x>0?e=0:this.x<this.maxScrollX&&(e=this.maxScrollX),!this.hasVerticalScroll||this.y>0?i=0:this.y<this.maxScrollY&&(i=this.maxScrollY),e==this.x&&i==this.y?!1:(this.scrollTo(e,i,t,this.options.bounceEasing),!0)},disable:function(){this.enabled=!1},enable:function(){this.enabled=!0},refresh:function(){this.wrapper.offsetHeight;this.wrapperWidth=this.wrapper.clientWidth,this.wrapperHeight=this.wrapper.clientHeight,this.scrollerWidth=this.scroller.offsetWidth,this.scrollerHeight=this.scroller.offsetHeight,this.maxScrollX=this.wrapperWidth-this.scrollerWidth,this.maxScrollY=this.wrapperHeight-this.scrollerHeight,this.hasHorizontalScroll=this.options.scrollX&&this.maxScrollX<0,this.hasVerticalScroll=this.options.scrollY&&this.maxScrollY<0,this.hasHorizontalScroll||(this.maxScrollX=0,this.scrollerWidth=this.wrapperWidth),this.hasVerticalScroll||(this.maxScrollY=0,this.scrollerHeight=this.wrapperHeight),this.endTime=0,this.directionX=0,this.directionY=0,this.wrapperOffset=a.offset(this.wrapper),this._execEvent("refresh"),this.resetPosition()},on:function(t,e){this._events[t]||(this._events[t]=[]),this._events[t].push(e)},off:function(t,e){if(this._events[t]){var i=this._events[t].indexOf(e);i>-1&&this._events[t].splice(i,1)}},_execEvent:function(t){if(this._events[t]){var e=0,i=this._events[t].length;if(i)for(;i>e;e++)this._events[t][e].apply(this,[].slice.call(arguments,1))}},scrollBy:function(t,e,i,n){t=this.x+t,e=this.y+e,i=i||0,this.scrollTo(t,e,i,n)},scrollTo:function(t,e,i,n){n=n||a.ease.circular,this.isInTransition=this.options.useTransition&&i>0,!i||this.options.useTransition&&n.style?(this._transitionTimingFunction(n.style),this._transitionTime(i),this._translate(t,e)):this._animate(t,e,i,n.fn)},scrollToElement:function(t,e,i,n,o){if(t=t.nodeType?t:this.scroller.querySelector(t)){var s=a.offset(t);s.left-=this.wrapperOffset.left,s.top-=this.wrapperOffset.top,i===!0&&(i=Math.round(t.offsetWidth/2-this.wrapper.offsetWidth/2)),n===!0&&(n=Math.round(t.offsetHeight/2-this.wrapper.offsetHeight/2)),s.left-=i||0,s.top-=n||0,s.left=s.left>0?0:s.left<this.maxScrollX?this.maxScrollX:s.left,s.top=s.top>0?0:s.top<this.maxScrollY?this.maxScrollY:s.top,e=void 0===e||null===e||"auto"===e?Math.max(Math.abs(this.x-s.left),Math.abs(this.y-s.top)):e,this.scrollTo(s.left,s.top,e,o)}},_transitionTime:function(t){t=t||0,this.scrollerStyle[a.style.transitionDuration]=t+"ms",!t&&a.isBadAndroid&&(this.scrollerStyle[a.style.transitionDuration]="0.001s")},_transitionTimingFunction:function(t){this.scrollerStyle[a.style.transitionTimingFunction]=t},_translate:function(t,e){this.options.useTransform?this.scrollerStyle[a.style.transform]="translate("+t+"px,"+e+"px)"+this.translateZ:(t=Math.round(t),e=Math.round(e),this.scrollerStyle.left=t+"px",this.scrollerStyle.top=e+"px"),this.x=t,this.y=e},_initEvents:function(t){var e=t?a.removeEvent:a.addEvent,i=this.options.bindToWrapper?this.wrapper:window;e(window,"orientationchange",this),e(window,"resize",this),this.options.click&&e(this.wrapper,"click",this,!0),this.options.disableMouse||(e(this.wrapper,"mousedown",this),e(i,"mousemove",this),e(i,"mousecancel",this),e(i,"mouseup",this)),a.hasPointer&&!this.options.disablePointer&&(e(this.wrapper,a.prefixPointerEvent("pointerdown"),this),e(i,a.prefixPointerEvent("pointermove"),this),e(i,a.prefixPointerEvent("pointercancel"),this),e(i,a.prefixPointerEvent("pointerup"),this)),a.hasTouch&&!this.options.disableTouch&&(e(this.wrapper,"touchstart",this),e(i,"touchmove",this),e(i,"touchcancel",this),e(i,"touchend",this)),e(this.scroller,"transitionend",this),e(this.scroller,"webkitTransitionEnd",this),e(this.scroller,"oTransitionEnd",this),e(this.scroller,"MSTransitionEnd",this)},getComputedPosition:function(){var t,e,i=window.getComputedStyle(this.scroller,null);return this.options.useTransform?(i=i[a.style.transform].split(")")[0].split(", "),t=+(i[12]||i[4]),e=+(i[13]||i[5])):(t=+i.left.replace(/[^-\d.]/g,""),e=+i.top.replace(/[^-\d.]/g,"")),{x:t,y:e}},_animate:function(t,e,i,n){function o(){var h,p,f,m=a.getTime();return m>=d?(r.isAnimating=!1,r._translate(t,e),void(r.resetPosition(r.options.bounceTime)||r._execEvent("scrollEnd"))):(m=(m-u)/i,f=n(m),h=(t-l)*f+l,p=(e-c)*f+c,r._translate(h,p),void(r.isAnimating&&s(o)))}var r=this,l=this.x,c=this.y,u=a.getTime(),d=u+i;this.isAnimating=!0,o()},handleEvent:function(t){switch(t.type){case"touchstart":case"pointerdown":case"MSPointerDown":case"mousedown":this._start(t);
break;case"touchmove":case"pointermove":case"MSPointerMove":case"mousemove":this._move(t);break;case"touchend":case"pointerup":case"MSPointerUp":case"mouseup":case"touchcancel":case"pointercancel":case"MSPointerCancel":case"mousecancel":this._end(t);break;case"orientationchange":case"resize":this._resize();break;case"transitionend":case"webkitTransitionEnd":case"oTransitionEnd":case"MSTransitionEnd":this._transitionEnd(t);break;case"wheel":case"DOMMouseScroll":case"mousewheel":this._wheel(t);break;case"keydown":this._key(t);break;case"click":t._constructed||(t.preventDefault(),t.stopPropagation())}}},n.utils=a,o.AMUI.iScroll=n,e.exports=n}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],32:[function(t,e){(function(i){"use strict";function n(t,e){return this.each(function(){var i=o(this),n=i.data("amui.modal"),s=o.extend({},c.DEFAULTS,"object"==typeof t&&t);n||i.data("amui.modal",n=new c(this,s)),"string"==typeof t?n[t]&&n[t](e):n.toggle(t&&t.relatedTarget||void 0)})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core"),a=t("./ui.dimmer"),r=o(document),l=s.support.transition,c=function(t,e){this.options=o.extend({},c.DEFAULTS,e||{}),this.$element=o(t),this.$dialog=this.$element.find(".am-modal-dialog"),this.$element.attr("id")||this.$element.attr("id",s.utils.generateGUID("am-modal")),this.isPopup=this.$element.hasClass("am-popup"),this.isActions=this.$element.hasClass("am-modal-actions"),this.isPrompt=this.$element.hasClass("am-modal-prompt"),this.isLoading=this.$element.hasClass("am-modal-loading"),this.active=this.transitioning=this.relatedTarget=null,this.events()};c.DEFAULTS={className:{active:"am-modal-active",out:"am-modal-out"},selector:{modal:".am-modal",active:".am-modal-active"},closeViaDimmer:!0,cancelable:!0,onConfirm:function(){},onCancel:function(){},height:void 0,width:void 0,duration:300,transitionEnd:l&&l.end+".modal.amui"},c.prototype.toggle=function(t){return this.active?this.close():this.open(t)},c.prototype.open=function(t){var e=this.$element,i=this.options,n=this.isPopup,s=i.width,r=i.height,c={};if(!this.active&&this.$element.length){t&&(this.relatedTarget=t),this.transitioning&&(clearTimeout(e.transitionEndTimmer),e.transitionEndTimmer=null,e.trigger(i.transitionEnd).off(i.transitionEnd)),n&&this.$element.show(),this.active=!0,e.trigger(o.Event("open.modal.amui",{relatedTarget:t})),a.open(e),e.show().redraw(),n||this.isActions||(s&&(s=parseInt(s,10),c.width=s+"px",c.marginLeft=-parseInt(s/2)+"px"),r?(r=parseInt(r,10),c.marginTop=-parseInt(r/2)+"px",this.$dialog.css({height:r+"px"})):c.marginTop=-parseInt(e.height()/2,10)+"px",e.css(c)),e.removeClass(i.className.out).addClass(i.className.active),this.transitioning=1;var u=function(){e.trigger(o.Event("opened.modal.amui",{relatedTarget:t})),this.transitioning=0,this.isPrompt&&this.$dialog.find("input").eq(0).focus()};return l?void e.one(i.transitionEnd,o.proxy(u,this)).emulateTransitionEnd(i.duration):u.call(this)}},c.prototype.close=function(t){if(this.active){var e=this.$element,i=this.options,n=this.isPopup;this.transitioning&&(clearTimeout(e.transitionEndTimmer),e.transitionEndTimmer=null,e.trigger(i.transitionEnd).off(i.transitionEnd),a.close(e,!0)),this.$element.trigger(o.Event("close.modal.amui",{relatedTarget:t})),this.transitioning=1;var s=function(){e.trigger("closed.modal.amui"),n&&e.removeClass(i.className.out),e.hide(),this.transitioning=0,a.close(e,!1),this.active=!1};return e.removeClass(i.className.active).addClass(i.className.out),l?void e.one(i.transitionEnd,o.proxy(s,this)).emulateTransitionEnd(i.duration):s.call(this)}},c.prototype.events=function(){var t=this,e=this.$element,i=e.find(".am-modal-prompt-input"),n=function(){var t=[];return i.each(function(){t.push(o(this).val())}),0===t.length?void 0:1===t.length?t[0]:t};this.options.cancelable&&e.on("keyup.modal.amui",function(i){t.active&&27===i.which&&(e.trigger("cancel.modal.amui"),t.close())}),this.options.closeViaDimmer&&!this.isLoading&&a.$element.on("click.dimmer.modal.amui",function(){t.close()}),e.find("[data-am-modal-close], .am-modal-btn").on("click.close.modal.amui",function(e){e.preventDefault(),t.close()}),e.find("[data-am-modal-confirm]").on("click.confirm.modal.amui",function(){e.trigger(o.Event("confirm.modal.amui",{trigger:this}))}),e.find("[data-am-modal-cancel]").on("click.cancel.modal.amui",function(){e.trigger(o.Event("cancel.modal.amui",{trigger:this}))}),e.on("confirm.modal.amui",function(e){e.data=n(),t.options.onConfirm.call(t,e)}).on("cancel.modal.amui",function(e){e.data=n(),t.options.onCancel.call(t,e)})},o.fn.modal=n,r.on("click.modal.amui.data-api","[data-am-modal]",function(){var t=o(this),e=s.utils.parseOptions(t.attr("data-am-modal")),i=o(e.target||this.href&&this.href.replace(/.*(?=#[^\s]+$)/,"")),a=i.data("amui.modal")?"toggle":e;n.call(i,a,this)}),o.AMUI.modal=c,e.exports=c}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.dimmer":28}],33:[function(t,e){(function(i){"use strict";function n(t,e){return this.each(function(){var i=s(this),n=i.data("amui.offcanvas"),o=s.extend({},"object"==typeof t&&t);n||(i.data("amui.offcanvas",n=new c(this,o)),(!t||"object"==typeof t)&&n.open(e)),"string"==typeof t&&n[t]&&n[t](e)})}var o,s="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,a=t("./core"),r=(t("./util.hammer"),s(window)),l=s(document),c=function(t,e){this.$element=s(t),this.options=s.extend({},c.DEFAULTS,e),this.active=null,this.bindEvents()};c.DEFAULTS={duration:300,effect:"overlay"},c.prototype.open=function(){var t=this,e=this.$element;if(e.length&&!e.hasClass("am-active")){var i=this.options.effect,n=s("html"),a=s("body"),l=e.find(".am-offcanvas-bar").first(),c=l.hasClass("am-offcanvas-bar-flip")?-1:1;l.addClass("am-offcanvas-bar-"+i),o={x:window.scrollX,y:window.scrollY},e.addClass("am-active"),a.css({width:window.innerWidth,height:r.height()}).addClass("am-offcanvas-page"),"overlay"!==i&&a.css({"margin-left":l.outerWidth()*c}).width(),n.css("margin-top",-1*o.y),setTimeout(function(){l.addClass("am-offcanvas-bar-active").width()},0),e.trigger("open.offcanvas.amui"),this.active=1,e.on("click.offcanvas.amui",function(e){var i=s(e.target);i.hasClass("am-offcanvas-bar")||i.parents(".am-offcanvas-bar").first().length||(e.stopImmediatePropagation(),t.close())}),n.on("keydown.offcanvas.amui",function(e){27===e.keyCode&&t.close()})}},c.prototype.close=function(){function t(){n.removeClass("am-offcanvas-page").css({width:"",height:"","margin-left":"","margin-right":""}),r.removeClass("am-active"),l.removeClass("am-offcanvas-bar-active"),i.css("margin-top",""),window.scrollTo(o.x,o.y),r.trigger("closed.offcanvas.amui"),e.active=0}var e=this,i=s("html"),n=s("body"),r=this.$element,l=r.find(".am-offcanvas-bar").first();r.length&&this.active&&r.hasClass("am-active")&&(r.trigger("close.offcanvas.amui"),a.support.transition?(setTimeout(function(){l.removeClass("am-offcanvas-bar-active")},0),n.css("margin-left","").one(a.support.transition.end,function(){t()}).emulateTransitionEnd(this.options.duration)):t(),r.off("click.offcanvas.amui"),i.off(".offcanvas.amui"))},c.prototype.bindEvents=function(){var t=this;return l.on("click.offcanvas.amui",'[data-am-dismiss="offcanvas"]',function(e){e.preventDefault(),t.close()}),r.on("resize.offcanvas.amui orientationchange.offcanvas.amui",function(){t.active&&t.close()}),this.$element.hammer().on("swipeleft swipeleft",function(e){e.preventDefault(),t.close()}),this},s.fn.offCanvas=n,l.on("click.offcanvas.amui","[data-am-offcanvas]",function(t){t.preventDefault();var e=s(this),i=a.utils.parseOptions(e.data("amOffcanvas")),o=s(i.target||this.href&&this.href.replace(/.*(?=#[^\s]+$)/,"")),r=o.data("amui.offcanvas")?"open":i;n.call(o,r,this)}),s.AMUI.offcanvas=c,e.exports=c}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./util.hammer":51}],34:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,o=(t("./core"),function(t){var e=function(e,i){this.el=t(e),this.zoomFactor=1,this.lastScale=1,this.offset={x:0,y:0},this.options=t.extend({},this.defaults,i),this.setupMarkup(),this.bindEvents(),this.update(),this.enable()},i=function(t,e){return t+e},n=function(t,e){return t>e-.01&&e+.01>t};e.prototype={defaults:{tapZoomFactor:2,zoomOutFactor:1.3,animationDuration:300,animationInterval:5,maxZoom:5,minZoom:.5,lockDragAxis:!1,use2d:!1,zoomStartEventName:"pz_zoomstart",zoomEndEventName:"pz_zoomend",dragStartEventName:"pz_dragstart",dragEndEventName:"pz_dragend",doubleTapEventName:"pz_doubletap"},handleDragStart:function(t){this.el.trigger(this.options.dragStartEventName),this.stopAnimation(),this.lastDragPosition=!1,this.hasInteraction=!0,this.handleDrag(t)},handleDrag:function(t){if(this.zoomFactor>1){var e=this.getTouches(t)[0];this.drag(e,this.lastDragPosition),this.offset=this.sanitizeOffset(this.offset),this.lastDragPosition=e}},handleDragEnd:function(){this.el.trigger(this.options.dragEndEventName),this.end()},handleZoomStart:function(){this.el.trigger(this.options.zoomStartEventName),this.stopAnimation(),this.lastScale=1,this.nthZoom=0,this.lastZoomCenter=!1,this.hasInteraction=!0},handleZoom:function(t,e){var i=this.getTouchCenter(this.getTouches(t)),n=e/this.lastScale;this.lastScale=e,this.nthZoom+=1,this.nthZoom>3&&(this.scale(n,i),this.drag(i,this.lastZoomCenter)),this.lastZoomCenter=i},handleZoomEnd:function(){this.el.trigger(this.options.zoomEndEventName),this.end()},handleDoubleTap:function(t){var e=this.getTouches(t)[0],i=this.zoomFactor>1?1:this.options.tapZoomFactor,n=this.zoomFactor,o=function(t){this.scaleTo(n+t*(i-n),e)}.bind(this);this.hasInteraction||(n>i&&(e=this.getCurrentZoomCenter()),this.animate(this.options.animationDuration,this.options.animationInterval,o,this.swing),this.el.trigger(this.options.doubleTapEventName))},sanitizeOffset:function(t){var e=(this.zoomFactor-1)*this.getContainerX(),i=(this.zoomFactor-1)*this.getContainerY(),n=Math.max(e,0),o=Math.max(i,0),s=Math.min(e,0),a=Math.min(i,0);return{x:Math.min(Math.max(t.x,s),n),y:Math.min(Math.max(t.y,a),o)}},scaleTo:function(t,e){this.scale(t/this.zoomFactor,e)},scale:function(t,e){t=this.scaleZoomFactor(t),this.addOffset({x:(t-1)*(e.x+this.offset.x),y:(t-1)*(e.y+this.offset.y)})},scaleZoomFactor:function(t){var e=this.zoomFactor;return this.zoomFactor*=t,this.zoomFactor=Math.min(this.options.maxZoom,Math.max(this.zoomFactor,this.options.minZoom)),this.zoomFactor/e},drag:function(t,e){e&&this.addOffset(this.options.lockDragAxis?Math.abs(t.x-e.x)>Math.abs(t.y-e.y)?{x:-(t.x-e.x),y:0}:{y:-(t.y-e.y),x:0}:{y:-(t.y-e.y),x:-(t.x-e.x)})},getTouchCenter:function(t){return this.getVectorAvg(t)},getVectorAvg:function(t){return{x:t.map(function(t){return t.x}).reduce(i)/t.length,y:t.map(function(t){return t.y}).reduce(i)/t.length}},addOffset:function(t){this.offset={x:this.offset.x+t.x,y:this.offset.y+t.y}},sanitize:function(){this.zoomFactor<this.options.zoomOutFactor?this.zoomOutAnimation():this.isInsaneOffset(this.offset)&&this.sanitizeOffsetAnimation()},isInsaneOffset:function(t){var e=this.sanitizeOffset(t);return e.x!==t.x||e.y!==t.y},sanitizeOffsetAnimation:function(){var t=this.sanitizeOffset(this.offset),e={x:this.offset.x,y:this.offset.y},i=function(i){this.offset.x=e.x+i*(t.x-e.x),this.offset.y=e.y+i*(t.y-e.y),this.update()}.bind(this);this.animate(this.options.animationDuration,this.options.animationInterval,i,this.swing)},zoomOutAnimation:function(){var t=this.zoomFactor,e=1,i=this.getCurrentZoomCenter(),n=function(n){this.scaleTo(t+n*(e-t),i)}.bind(this);this.animate(this.options.animationDuration,this.options.animationInterval,n,this.swing)},updateAspectRatio:function(){this.setContainerY()},getInitialZoomFactor:function(){return this.container[0].offsetWidth/this.el[0].offsetWidth},getAspectRatio:function(){return this.el[0].offsetWidth/this.el[0].offsetHeight},getCurrentZoomCenter:function(){var t=this.container[0].offsetWidth*this.zoomFactor,e=this.offset.x,i=t-e-this.container[0].offsetWidth,n=e/i,o=n*this.container[0].offsetWidth/(n+1),s=this.container[0].offsetHeight*this.zoomFactor,a=this.offset.y,r=s-a-this.container[0].offsetHeight,l=a/r,c=l*this.container[0].offsetHeight/(l+1);return 0===i&&(o=this.container[0].offsetWidth),0===r&&(c=this.container[0].offsetHeight),{x:o,y:c}},canDrag:function(){return!n(this.zoomFactor,1)},getTouches:function(t){var e=this.container.offset();return Array.prototype.slice.call(t.touches).map(function(t){return{x:t.pageX-e.left,y:t.pageY-e.top}})},animate:function(t,e,i,n,o){var s=(new Date).getTime(),a=function(){if(this.inAnimation){var r=(new Date).getTime()-s,l=r/t;r>=t?(i(1),o&&o(),this.update(),this.stopAnimation(),this.update()):(n&&(l=n(l)),i(l),this.update(),setTimeout(a,e))}}.bind(this);this.inAnimation=!0,a()},stopAnimation:function(){this.inAnimation=!1},swing:function(t){return-Math.cos(t*Math.PI)/2+.5},getContainerX:function(){return window.innerWidth},getContainerY:function(){return window.innerHeight},setContainerY:function(){var t=window.innerHeight;return this.el.css({height:t}),this.container.height(t)},setupMarkup:function(){this.container=t('<div class="pinch-zoom-container"></div>'),this.el.before(this.container),this.container.append(this.el),this.container.css({overflow:"hidden",position:"relative"}),this.el.css({"-webkit-transform-origin":"0% 0%","-moz-transform-origin":"0% 0%","-ms-transform-origin":"0% 0%","-o-transform-origin":"0% 0%","transform-origin":"0% 0%",position:"absolute"})},end:function(){this.hasInteraction=!1,this.sanitize(),this.update()},bindEvents:function(){o(this.container.get(0),this),t(window).on("resize",this.update.bind(this)),t(this.el).find("img").on("load",this.update.bind(this))},update:function(){this.updatePlaned||(this.updatePlaned=!0,setTimeout(function(){this.updatePlaned=!1,this.updateAspectRatio();var t=this.getInitialZoomFactor()*this.zoomFactor,e=-this.offset.x/t,i=-this.offset.y/t,n="scale3d("+t+", "+t+",1) translate3d("+e+"px,"+i+"px,0px)",o="scale("+t+", "+t+") translate("+e+"px,"+i+"px)",s=function(){this.clone&&(this.clone.remove(),delete this.clone)}.bind(this);!this.options.use2d||this.hasInteraction||this.inAnimation?(this.is3d=!0,s(),this.el.css({"-webkit-transform":n,"-o-transform":o,"-ms-transform":o,"-moz-transform":o,transform:n})):(this.is3d&&(this.clone=this.el.clone(),this.clone.css("pointer-events","none"),this.clone.appendTo(this.container),setTimeout(s,200)),this.el.css({"-webkit-transform":o,"-o-transform":o,"-ms-transform":o,"-moz-transform":o,transform:o}),this.is3d=!1)}.bind(this),0))},enable:function(){this.enabled=!0},disable:function(){this.enabled=!1}};var o=function(t,e){var i=null,n=0,o=null,s=null,a=function(t,n){if(i!==t){if(i&&!t)switch(i){case"zoom":e.handleZoomEnd(n);break;case"drag":e.handleDragEnd(n)}switch(t){case"zoom":e.handleZoomStart(n);break;case"drag":e.handleDragStart(n)}}i=t},r=function(t){2===n?a("zoom"):1===n&&e.canDrag()?a("drag",t):a(null,t)},l=function(t){return Array.prototype.slice.call(t).map(function(t){return{x:t.pageX,y:t.pageY}})},c=function(t,e){var i,n;return i=t.x-e.x,n=t.y-e.y,Math.sqrt(i*i+n*n)},u=function(t,e){var i=c(t[0],t[1]),n=c(e[0],e[1]);return n/i},d=function(t){t.stopPropagation(),t.preventDefault()},h=function(t){var s=(new Date).getTime();if(n>1&&(o=null),300>s-o)switch(d(t),e.handleDoubleTap(t),i){case"zoom":e.handleZoomEnd(t);break;case"drag":e.handleDragEnd(t)}1===n&&(o=s)},p=!0;t.addEventListener("touchstart",function(t){e.enabled&&(p=!0,n=t.touches.length,h(t))}),t.addEventListener("touchmove",function(t){if(e.enabled){if(p)r(t),i&&d(t),s=l(t.touches);else{switch(i){case"zoom":e.handleZoom(t,u(s,l(t.touches)));break;case"drag":e.handleDrag(t)}i&&(d(t),e.update())}p=!1}}),t.addEventListener("touchend",function(t){e.enabled&&(n=t.touches.length,r(t))})};return e});n.AMUI.pichzoom=o(n),e.exports=o(n)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],35:[function(t,e){(function(i){"use strict";function n(t){return this.each(function(){var e=o(this),i=e.data("amui.popover"),n=o.extend({},s.utils.parseOptions(e.attr("data-am-popover")),"object"==typeof t&&t);i||e.data("amui.popover",i=new r(this,n)),"string"==typeof t&&i[t]&&i[t]()})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core"),a=o(window),r=function(t,e){this.options=o.extend({},r.DEFAULTS,e||{}),this.$element=o(t),this.active=null,this.$popover=this.options.target&&o(this.options.target)||null,this.init(),this.events()};r.DEFAULTS={theme:void 0,trigger:"click",content:"",open:!1,target:void 0,tpl:'<div class="am-popover"><div class="am-popover-inner"></div><div class="am-popover-caret"></div></div>'},r.prototype.init=function(){function t(){i.sizePopover()}var e,i=this,n=this.$element;this.options.target||(this.$popover=this.getPopover(),this.setContent()),e=this.$popover,e.appendTo(o("body")),this.sizePopover(),n.on("open.popover.amui",function(){o(window).on("resize.popover.amui",s.utils.debounce(t,50))}),n.on("close.popover.amui",function(){o(window).off("resize.popover.amui",t)}),this.options.open&&this.open()},r.prototype.sizePopover=function(){var t=this.$element,e=this.$popover;if(e&&e.length){var i=e.outerWidth(),n=e.outerHeight(),o=e.find(".am-popover-caret"),s=o.outerWidth()/2||8,r=n+8,l=t.outerWidth(),c=t.outerHeight(),u=t.offset(),d=t[0].getBoundingClientRect(),h=a.height(),p=a.width(),f=0,m=0,v=0,g=2,w="top";e.css({left:"",top:""}).removeClass("am-popover-left am-popover-right am-popover-top am-popover-bottom"),o.css({left:"",top:""}),r-g<d.top+g?f=u.top-r-g:r<h-d.top-d.height?(w="bottom",f=u.top+c+s+g):(w="middle",f=c/2+u.top-n/2),"top"===w||"bottom"===w?(m=l/2+u.left-i/2,v=m,5>m&&(m=5),m+i>p&&(m=p-i-20),"top"===w&&e.addClass("am-popover-top"),"bottom"===w&&e.addClass("am-popover-bottom"),v-=m,o.css({left:i/2-s+v+"px"})):"middle"===w&&(m=u.left-i-s,e.addClass("am-popover-left"),5>m&&(m=u.left+l+s,e.removeClass("am-popover-left").addClass("am-popover-right")),m+i>p&&(m=p-i-5,e.removeClass("am-popover-left").addClass("am-popover-right")),o.css({top:n/2-s/2+"px"})),e.css({top:f+"px",left:m+"px"})}},r.prototype.toggle=function(){return this[this.active?"close":"open"]()},r.prototype.open=function(){var t=this.$popover;this.$element.trigger("open.popover.amui"),this.sizePopover(),t.show().addClass("am-active"),this.active=!0},r.prototype.close=function(){var t=this.$popover;this.$element.trigger("close.popover.amui"),t.removeClass("am-active").trigger("closed.popover.amui").hide(),this.active=!1},r.prototype.getPopover=function(){var t=s.utils.generateGUID("am-popover"),e=[];return this.options.theme&&o.each(this.options.theme.split(","),function(t,i){e.push("am-popover-"+o.trim(i))}),o(this.options.tpl).attr("id",t).addClass(e.join(" "))},r.prototype.setContent=function(t){t=t||this.options.content,this.$popover&&this.$popover.find(".am-popover-inner").empty().html(t)},r.prototype.events=function(){for(var t="popover.amui",e=this.options.trigger.split(" "),i=e.length;i--;){var n=e[i];if("click"===n)this.$element.on("click."+t,o.proxy(this.toggle,this));else{var s="hover"==n?"mouseenter":"focusin",a="hover"==n?"mouseleave":"focusout";this.$element.on(s+"."+t,o.proxy(this.open,this)),this.$element.on(a+"."+t,o.proxy(this.close,this))}}},o.fn.popover=n,s.ready(function(t){o("[data-am-popover]",t).popover()}),o.AMUI.popover=r,e.exports=r}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],36:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,o=(t("./core"),function(){function t(t,e,i){return e>t?e:t>i?i:t}function e(t){return 100*(-1+t)}function i(t,i,n){var o;return o="translate3d"===a.positionUsing?{transform:"translate3d("+e(t)+"%,0,0)"}:"translate"===a.positionUsing?{transform:"translate("+e(t)+"%,0)"}:{"margin-left":e(t)+"%"},o.transition="all "+i+"ms "+n,o}var o={},s=n("html");o.version="0.1.6";var a=o.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,parent:"body",barSelector:'[role="nprogress-bar"]',spinnerSelector:'[role="nprogress-spinner"]',template:'<div class="nprogress-bar" role="nprogress-bar"><div class="nprogress-peg"></div></div><div class="nprogress-spinner" role="nprogress-spinner"><div class="nprogress-spinner-icon"></div></div>'};o.configure=function(t){var e,i;for(e in t)i=t[e],void 0!==i&&t.hasOwnProperty(e)&&(a[e]=i);return this},o.status=null,o.set=function(e){var n=o.isStarted();e=t(e,a.minimum,1),o.status=1===e?null:e;var s=o.render(!n),c=s.querySelector(a.barSelector),u=a.speed,d=a.easing;return s.offsetWidth,r(function(t){""===a.positionUsing&&(a.positionUsing=o.getPositioningCSS()),l(c,i(e,u,d)),1===e?(l(s,{transition:"none",opacity:1}),s.offsetWidth,setTimeout(function(){l(s,{transition:"all "+u+"ms linear",opacity:0}),setTimeout(function(){o.remove(),t()},u)},u)):setTimeout(t,u)}),this},o.isStarted=function(){return"number"==typeof o.status},o.start=function(){o.status||o.set(0);var t=function(){setTimeout(function(){o.status&&(o.trickle(),t())},a.trickleSpeed)};return a.trickle&&t(),this},o.done=function(t){return t||o.status?o.inc(.3+.5*Math.random()).set(1):this},o.inc=function(e){var i=o.status;return i?("number"!=typeof e&&(e=(1-i)*t(Math.random()*i,.1,.95)),i=t(i+e,0,.994),o.set(i)):o.start()},o.trickle=function(){return o.inc(Math.random()*a.trickleRate)},o.render=function(t){if(o.isRendered())return document.getElementById("nprogress");s.addClass("nprogress-busy");var i=document.createElement("div");i.id="nprogress",i.innerHTML=a.template;var r,c=i.querySelector(a.barSelector),u=t?"-100":e(o.status||0),d=document.querySelector(a.parent);return l(c,{transition:"all 0 linear",transform:"translate3d("+u+"%,0,0)"}),a.showSpinner||(r=i.querySelector(a.spinnerSelector),r&&n(r).remove()),d!=document.body&&n(d).addClass("nprogress-custom-parent"),d.appendChild(i),i},o.remove=function(){s.removeClass("nprogress-busy"),n(a.parent).removeClass("nprogress-custom-parent");var t=document.getElementById("nprogress");t&&n(t).remove()},o.isRendered=function(){return!!document.getElementById("nprogress")},o.getPositioningCSS=function(){var t=document.body.style,e="WebkitTransform"in t?"Webkit":"MozTransform"in t?"Moz":"msTransform"in t?"ms":"OTransform"in t?"O":"";return e+"Perspective"in t?"translate3d":e+"Transform"in t?"translate":"margin"};var r=function(){function t(){var i=e.shift();i&&i(t)}var e=[];return function(i){e.push(i),1==e.length&&t()}}(),l=function(){function t(t){return t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(t,e){return e.toUpperCase()})}function e(t){var e=document.body.style;if(t in e)return t;for(var i,n=o.length,s=t.charAt(0).toUpperCase()+t.slice(1);n--;)if(i=o[n]+s,i in e)return i;return t}function i(i){return i=t(i),s[i]||(s[i]=e(i))}function n(t,e,n){e=i(e),t.style[e]=n}var o=["Webkit","O","Moz","ms"],s={};return function(t,e){var i,o,s=arguments;if(2==s.length)for(i in e)o=e[i],void 0!==o&&e.hasOwnProperty(i)&&n(t,i,o);else n(t,s[1],s[2])}}();return o}());n.AMUI.progress=o,e.exports=o}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],37:[function(t,e){(function(i){"use strict";function n(t){return this.each(function(){var e=o(this),i=e.data("amui.pureview"),n=o.extend({},s.utils.parseOptions(e.data("amPureview")),"object"==typeof t&&t);i||e.data("amui.pureview",i=new u(this,n)),"string"==typeof t&&i[t]()})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core"),a=t("./ui.pinchzoom"),r=t("./util.hammer"),l=s.support.animation,c=s.support.transition,u=function(t,e){this.$element=o(t),this.$body=o(document.body),this.options=o.extend({},u.DEFAULTS,e),this.$pureview=o(this.options.tpl).attr("id",s.utils.generateGUID("am-pureview")),this.$slides=null,this.transitioning=null,this.scrollbarWidth=0,this.init()};u.DEFAULTS={tpl:'<div class="am-pureview am-pureview-bar-active"><ul class="am-pureview-slider"></ul><ul class="am-pureview-direction"><li class="am-pureview-prev"><a href=""></a></li><li class="am-pureview-next"><a href=""></a></li></ul><ol class="am-pureview-nav"></ol><div class="am-pureview-bar am-active"><span class="am-pureview-title"></span><div class="am-pureview-counter"><span class="am-pureview-current"></span> / <span class="am-pureview-total"></span></div></div><div class="am-pureview-actions am-active"><a href="javascript: void(0)" class="am-icon-chevron-left" data-am-close="pureview"></a></div></div>',className:{prevSlide:"am-pureview-slide-prev",nextSlide:"am-pureview-slide-next",onlyOne:"am-pureview-only",active:"am-active",barActive:"am-pureview-bar-active",activeBody:"am-pureview-active"},selector:{slider:".am-pureview-slider",close:'[data-am-close="pureview"]',total:".am-pureview-total",current:".am-pureview-current",title:".am-pureview-title",actions:".am-pureview-actions",bar:".am-pureview-bar",pinchZoom:".am-pinch-zoom",nav:".am-pureview-nav"},shareBtn:!1,toggleToolbar:!0,target:"img",weChatImagePreview:!0},u.prototype.init=function(){var t=this,e=this.options,i=this.$element,n=this.$pureview;this.refreshSlides(),o("body").append(n),this.$title=n.find(e.selector.title),this.$current=n.find(e.selector.current),this.$bar=n.find(e.selector.bar),this.$actions=n.find(e.selector.actions),e.shareBtn&&this.$actions.append('<a href="javascript: void(0)" class="am-icon-share-square-o" data-am-toggle="share"></a>'),this.$element.on("click.pureview.amui",e.target,function(i){i.preventDefault();var n=t.$images.index(this);e.weChatImagePreview&&window.WeixinJSBridge?window.WeixinJSBridge.invoke("imagePreview",{current:t.imgUrls[n],urls:t.imgUrls}):t.open(n)}),n.find(".am-pureview-direction").on("click.direction.pureview.amui","li",function(e){e.preventDefault(),o(this).is(".am-pureview-prev")?t.prevSlide():t.nextSlide()}),n.find(e.selector.nav).on("click.nav.pureview.amui","li",function(){var e=t.$navItems.index(o(this));t.activate(t.$slides.eq(e))}),n.find(e.selector.close).on("click.close.pureview.amui",function(e){e.preventDefault(),t.close()}),this.$slider.hammer().on("swipeleft.pureview.amui",function(e){e.preventDefault(),t.nextSlide()}).on("swiperight.pureview.amui",function(e){e.preventDefault(),t.prevSlide()}).on("press.pureview.amui",function(i){i.preventDefault(),e.toggleToolbar&&t.toggleToolBar()}),this.$slider.data("hammer").get("swipe").set({direction:r.DIRECTION_HORIZONTAL,velocity:.35}),i.DOMObserve({childList:!0,subtree:!0},function(){}),i.on("changed.dom.amui",function(e){e.stopPropagation(),t.refreshSlides()}),o(document).on("keydown.pureview.amui",o.proxy(function(t){var e=t.keyCode;37==e?this.prevSlide():39==e?this.nextSlide():27==e&&this.close()},this))},u.prototype.refreshSlides=function(){this.$images=this.$element.find(this.options.target);var t=this,e=this.options,i=this.$pureview,n=o([]),s=o([]),a=this.$images,r=a.length;this.$slider=i.find(e.selector.slider),this.$nav=i.find(e.selector.nav);var l="data-am-pureviewed";this.imgUrls=this.imgUrls||[],r&&(1===r&&i.addClass(e.className.onlyOne),a.not("["+l+"]").each(function(e,i){var a,r;"A"===i.nodeName?(a=i.href,r=i.title||""):(a=o(i).data("rel")||i.src,r=o(i).attr("alt")||""),i.setAttribute(l,"1"),t.imgUrls.push(a),n=n.add(o('<li data-src="'+a+'" data-title="'+r+'"></li>')),s=s.add(o("<li>"+(e+1)+"</li>"))}),i.find(e.selector.total).text(r),this.$slider.append(n),this.$nav.append(s),this.$navItems=this.$nav.find("li"),this.$slides=this.$slider.find("li"))},u.prototype.loadImage=function(t,e){var i="image-appended";if(!t.data(i)){var n=o("<img>",{src:t.data("src"),alt:t.data("title")});t.html(n).wrapInner('<div class="am-pinch-zoom"></div>').redraw();var s=t.find(this.options.selector.pinchZoom);s.data("amui.pinchzoom",new a(s[0],{})),t.data("image-appended",!0)}e&&e.call(this)},u.prototype.activate=function(t){var e=this.options,i=this.$slides,n=i.index(t),a=t.data("title")||"",r=e.className.active;i.find("."+r).is(t)||this.transitioning||(this.loadImage(t,function(){s.utils.imageLoader(t.find("img"),function(t){o(t).addClass("am-img-loaded")})}),this.transitioning=1,this.$title.text(a),this.$current.text(n+1),i.removeClass(),t.addClass(r),i.eq(n-1).addClass(e.className.prevSlide),i.eq(n+1).addClass(e.className.nextSlide),this.$navItems.removeClass().eq(n).addClass(e.className.active),c?t.one(c.end,o.proxy(function(){this.transitioning=0},this)).emulateTransitionEnd(300):this.transitioning=0)},u.prototype.nextSlide=function(){if(1!==this.$slides.length){var t=this.$slides,e=t.filter(".am-active"),i=t.index(e),n="am-animation-right-spring";i+1>=t.length?l&&e.addClass(n).on(l.end,function(){e.removeClass(n)}):this.activate(t.eq(i+1))}},u.prototype.prevSlide=function(){if(1!==this.$slides.length){var t=this.$slides,e=t.filter(".am-active"),i=this.$slides.index(e),n="am-animation-left-spring";0===i?l&&e.addClass(n).on(l.end,function(){e.removeClass(n)}):this.activate(t.eq(i-1))}},u.prototype.toggleToolBar=function(){this.$pureview.toggleClass(this.options.className.barActive)},u.prototype.open=function(t){var e=t||0;this.checkScrollbar(),this.setScrollbar(),this.activate(this.$slides.eq(e)),this.$pureview.show().redraw().addClass(this.options.className.active),this.$body.addClass(this.options.className.activeBody)},u.prototype.close=function(){function t(){this.$pureview.hide(),this.$body.removeClass(e.className.activeBody),this.resetScrollbar()}var e=this.options;this.$pureview.removeClass(e.className.active),this.$slides.removeClass(),c?this.$pureview.one(c.end,o.proxy(t,this)).emulateTransitionEnd(300):t.call(this)},u.prototype.checkScrollbar=function(){this.scrollbarWidth=s.utils.measureScrollbar()},u.prototype.setScrollbar=function(){var t=parseInt(this.$body.css("padding-right")||0,10);this.scrollbarWidth&&this.$body.css("padding-right",t+this.scrollbarWidth)},u.prototype.resetScrollbar=function(){this.$body.css("padding-right","")},o.fn.pureview=n,s.ready(function(t){o("[data-am-pureview]",t).pureview()}),o.AMUI.pureview=u,e.exports=u}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.pinchzoom":34,"./util.hammer":51}],38:[function(t,e){(function(i){"use strict";function n(t){return this.each(function(){var e=o(this),i=e.data("am.scrollspy"),n="object"==typeof t&&t;i||e.data("am.scrollspy",i=new a(this,n)),"string"==typeof t&&i[t]()})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core"),a=function(t,e){if(s.support.animation){this.options=o.extend({},a.DEFAULTS,e),this.$element=o(t);var i=function(){s.utils.rAF.call(window,o.proxy(this.checkView,this))}.bind(this);this.$window=o(window).on("scroll.scrollspy.amui",i).on("resize.scrollspy.amui orientationchange.scrollspy.amui",s.utils.debounce(i,50)),this.timer=this.inViewState=this.initInView=null,i()}};a.DEFAULTS={animation:"fade",className:{inView:"am-scrollspy-inview",init:"am-scrollspy-init"},repeat:!0,delay:0,topOffset:0,leftOffset:0},a.prototype.checkView=function(){var t=this.$element,e=this.options,i=s.utils.isInView(t,e),n=e.animation?" am-animation-"+e.animation:"";i&&!this.inViewState&&(this.timer&&clearTimeout(this.timer),this.initInView||(t.addClass(e.className.init),this.offset=t.offset(),this.initInView=!0,t.trigger("init.scrollspy.amui")),this.timer=setTimeout(function(){i&&t.addClass(e.className.inView+n).width()},e.delay),this.inViewState=!0,t.trigger("inview.scrollspy.amui")),!i&&this.inViewState&&e.repeat&&(t.removeClass(e.className.inView+n),this.inViewState=!1,t.trigger("outview.scrollspy.amui"))
},a.prototype.check=function(){s.utils.rAF.call(window,o.proxy(this.checkView,this))},o.fn.scrollspy=n,s.ready(function(t){o("[data-am-scrollspy]",t).each(function(){var t=o(this),e=s.utils.options(t.data("amScrollspy"));t.scrollspy(e)})}),o.AMUI.scrollspy=a,e.exports=a}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],39:[function(t,e){(function(i){"use strict";function n(t){return this.each(function(){var e=o(this),i=e.data("amui.scrollspynav"),n="object"==typeof t&&t;i||e.data("amui.scrollspynav",i=new a(this,n)),"string"==typeof t&&i[t]()})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core");t("./ui.smooth-scroll");var a=function(t,e){this.options=o.extend({},a.DEFAULTS,e),this.$element=o(t),this.anchors=[],this.$links=this.$element.find('a[href^="#"]').each(function(t,e){this.anchors.push(o(e).attr("href"))}.bind(this)),this.$targets=o(this.anchors.join(", "));var i=function(){s.utils.rAF.call(window,o.proxy(this.process,this))}.bind(this);this.$window=o(window).on("scroll.scrollspynav.amui",i).on("resize.scrollspynav.amui orientationchange.scrollspynav.amui",s.utils.debounce(i,50)),i(),this.scrollProcess()};a.DEFAULTS={className:{active:"am-active"},closest:!1,smooth:!0,offsetTop:0},a.prototype.process=function(){var t=this.$window.scrollTop(),e=this.options,i=[],n=this.$links,a=this.$targets;if(a.each(function(t,n){s.utils.isInView(n,e)&&i.push(n)}),i.length){var r;if(o.each(i,function(e,i){return o(i).offset().top>=t?(r=o(i),!1):void 0}),!r)return;e.closest?(n.closest(e.closest).removeClass(e.className.active),n.filter('a[href="#'+r.attr("id")+'"]').closest(e.closest).addClass(e.className.active)):n.removeClass(e.className.active).filter('a[href="#'+r.attr("id")+'"]').addClass(e.className.active)}},a.prototype.scrollProcess=function(){var t=this.$links,e=this.options;e.smooth&&t.on("click",function(t){t.preventDefault();var i=o(this),n=o(i.attr("href"));if(n){var s=e.offsetTop&&!isNaN(parseInt(e.offsetTop))&&parseInt(e.offsetTop)||0;o(window).smoothScroll({position:n.offset().top-s})}})},o.fn.scrollspynav=n,s.ready(function(t){o("[data-am-scrollspy-nav]",t).each(function(){var t=o(this),e=s.utils.options(t.data("amScrollspyNav"));n.call(t,e)})}),o.AMUI.scrollspynav=a,e.exports=a}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.smooth-scroll":42}],40:[function(t,e){(function(i){"use strict";function n(t){return this.each(function(){var e=o(this),i=e.data("amui.selected"),n=o.extend({},s.utils.parseOptions(e.data("amSelected")),s.utils.parseOptions(e.data("amSelectit")),"object"==typeof t&&t);(i||"destroy"!==t)&&(i||e.data("amui.selected",i=new a(this,n)),"string"==typeof t&&i[t]&&i[t]())})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core");o.expr[":"].containsNC=function(t,e,i){return(t.textContent||t.innerText||"").toLowerCase().indexOf((i[3]||"").toLowerCase())>=0};var a=function(t,e){this.$element=o(t),this.options=o.extend({},a.DEFAULTS,e),this.$originalOptions=this.$element.find("option"),this.multiple=t.multiple,this.$selector=null,this.init()};a.DEFAULTS={btnWidth:null,btnSize:null,btnStyle:"default",dropUp:0,maxHeight:null,noSelectedText:"点击选择...",selectedClass:"am-checked",disabledClass:"am-disabled",searchBox:!1,tpl:'<div class="am-selected am-dropdown <%= dropUp ? \'am-dropdown-up\': \'\' %>" id="<%= id %>" data-am-dropdown>  <button type="button" class="am-selected-btn am-btn am-dropdown-toggle">    <span class="am-selected-status am-fl"></span>    <i class="am-selected-icon am-icon-caret-<%= dropUp ? \'up\' : \'down\' %>"></i>  </button>  <div class="am-selected-content am-dropdown-content">    <h2 class="am-selected-header"><span class="am-icon-chevron-left">返回</span></h2>   <% if (searchBox) { %>   <div class="am-selected-search">     <input type="text" autocomplete="off" class="am-form-field" />   </div>   <% } %>    <ul class="am-selected-list">      <% for (var i = 0; i < options.length; i++) { %>       <% var option = options[i] %>       <% if (option.header) { %>  <li data-group="<%= option.group %>" class="am-selected-list-header">       <%= option.text %></li>       <% } else { %>       <li class="<%= option.classNames%>"          data-index="<%= option.index %>"          data-group="<%= option.group || 0 %>"          data-value="<%= option.value %>" >         <span class="am-selected-text"><%= option.text %></span>         <i class="am-icon-check"></i></li>      <% } %>      <% } %>    </ul>    <div class="am-selected-hint"></div>  </div></div>',listTpl:'<% for (var i = 0; i < options.length; i++) { %>       <% var option = options[i] %>       <% if (option.header) { %>  <li data-group="<%= option.group %>" class="am-selected-list-header">       <%= option.text %></li>       <% } else { %>       <li class="<%= option.classNames %>"          data-index="<%= option.index %>"          data-group="<%= option.group || 0 %>"          data-value="<%= option.value %>" >         <span class="am-selected-text"><%= option.text %></span>         <i class="am-icon-check"></i></li>      <% } %>      <% } %>'},a.prototype.init=function(){var t=this,e=this.$element,i=this.options;e.hide();var n={id:s.utils.generateGUID("am-selected"),multiple:this.multiple,options:[],searchBox:i.searchBox,dropUp:i.dropUp};this.$selector=o(s.template(this.options.tpl,n)),this.$list=this.$selector.find(".am-selected-list"),this.$searchField=this.$selector.find(".am-selected-search input"),this.$hint=this.$selector.find(".am-selected-hint");var a=this.$selector.find(".am-selected-btn").css({width:this.options.btnWidth}),r=[];i.btnSize&&r.push("am-btn-"+i.btnSize),i.btnStyle&&r.push("am-btn-"+i.btnStyle),a.addClass(r.join(" ")),this.$selector.dropdown({justify:a}),i.maxHeight&&this.$selector.find(".am-selected-list").css({"max-height":i.maxHeight,"overflow-y":"scroll"});var l=[],c=e.attr("minchecked"),u=e.attr("maxchecked");e[0].required&&l.push("必选"),(c||u)&&(c&&l.push("至少选择 "+c+" 项"),u&&l.push("至多选择 "+u+" 项")),this.$hint.text(l.join("，")),this.renderOptions(),this.$element.after(this.$selector),this.dropdown=this.$selector.data("amui.dropdown"),this.$status=this.$selector.find(".am-selected-status"),setTimeout(function(){t.syncData()},0),this.bindEvents()},a.prototype.renderOptions=function(){function t(t,e,o){var s="";e.disabled&&(s+=i.disabledClass),!e.disabled&&e.selected&&(s+=i.selectedClass),n.push({group:o,index:t,classNames:s,text:e.text,value:e.value})}var e=this.$element,i=this.options,n=[],o=e.find("optgroup");this.$originalOptions=this.$element.find("option"),this.multiple||null!==e.val()||(this.$originalOptions.get(0).selected=!0),o.length?o.each(function(e){n.push({header:!0,group:e+1,text:this.label}),o.eq(e).find("option").each(function(i,n){t(i,n,e)})}):this.$originalOptions.each(function(e,i){t(e,i,null)}),this.$list.html(s.template(i.listTpl,{options:n})),this.$shadowOptions=this.$list.find("> li").not(".am-selected-list-header")},a.prototype.setChecked=function(t){var e=this.options,i=o(t),n=i.hasClass(e.selectedClass);if(!this.multiple){if(n)return;this.dropdown.close(),this.$shadowOptions.not(i).removeClass(e.selectedClass)}i.toggleClass(e.selectedClass),this.syncData(t)},a.prototype.syncData=function(t){var e=this,i=this.options,n=[],s=o([]);if(this.$shadowOptions.filter("."+i.selectedClass).each(function(){var i=o(this);n.push(i.find(".am-selected-text").text()),t||(s=s.add(e.$originalOptions.filter('[value="'+i.data("value")+'"]').prop("selected",!0)))}),t){var a=o(t);this.$originalOptions.filter('[value="'+a.data("value")+'"]').prop("selected",a.hasClass(i.selectedClass))}else this.$originalOptions.not(s).prop("selected",!1);this.$element.val()||(n=[i.noSelectedText]),this.$status.text(n.join(", ")),this.$element.trigger("change")},a.prototype.bindEvents=function(){var t=this,e="am-selected-list-header",i=s.utils.debounce(function(i){t.$shadowOptions.not("."+e).hide().filter(':containsNC("'+i.target.value+'")').show()},100);this.$list.on("click","> li",function(){var i=o(this);!i.hasClass(t.options.disabledClass)&&!i.hasClass(e)&&t.setChecked(this)}),this.$searchField.on("keyup.selected.amui",i),this.$selector.on("closed.dropdown.amui",function(){t.$searchField.val(""),t.$shadowOptions.css({display:""})}),s.support.mutationobserver&&(this.observer=new s.support.mutationobserver(function(){t.$element.trigger("changed.selected.amui")}),this.observer.observe(this.$element[0],{childList:!0,attributes:!0,subtree:!0,characterData:!0})),this.$element.on("changed.selected.amui",function(){t.renderOptions(),t.syncData()})},a.prototype.destroy=function(){this.$element.removeData("amui.selected").show(),this.$selector.remove()},o.fn.selected=o.fn.selectIt=n,s.ready(function(t){o("[data-am-selected]",t).selectIt()}),o.AMUI.selected=a,e.exports=a}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],41:[function(t,e){(function(i){"use strict";t("./ui.modal");var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,o=t("./core"),s=t("./util.qrcode"),a=document,r=n(a),l=function(t){this.options=n.extend({},l.DEFAULTS,t||{}),this.$element=null,this.$wechatQr=null,this.pics=null,this.inited=!1,this.active=!1};l.DEFAULTS={sns:["weibo","qq","qzone","tqq","wechat","renren"],title:"分享到",cancel:"取消",closeOnShare:!0,id:o.utils.generateGUID("am-share"),desc:"Hi，孤夜观天象，发现一个不错的西西，分享一下下 ;-)",via:"Amaze UI",tpl:'<div class="am-share am-modal-actions" id="<%= id %>"><h3 class="am-share-title"><%= title %></h3><ul class="am-share-sns am-avg-sm-3"><% for(var i = 0; i < sns.length; i++) {%><li><a href="<%= sns[i].shareUrl %>" data-am-share-to="<%= sns[i].id %>" ><i class="am-icon-<%= sns[i].icon %>"></i><span><%= sns[i].title %></span></a></li><% } %></ul><div class="am-share-footer"><button class="am-btn am-btn-default am-btn-block" data-am-share-close><%= cancel %></button></div></div>'},l.SNS={weibo:{title:"新浪微博",url:"http://service.weibo.com/share/share.php",width:620,height:450,icon:"weibo"},qq:{title:"QQ 好友",url:"http://connect.qq.com/widget/shareqq/index.html",icon:"qq"},qzone:{title:"QQ 空间",url:"http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey",icon:"star"},tqq:{title:"腾讯微博",url:"http://v.t.qq.com/share/share.php",icon:"tencent-weibo"},wechat:{title:"微信",url:"[qrcode]",icon:"wechat"},renren:{title:"人人网",url:"http://widget.renren.com/dialog/share",icon:"renren"},douban:{title:"豆瓣",url:"http://www.douban.com/recommend/",icon:"share-alt"},mail:{title:"邮件分享",url:"mailto:",icon:"envelope-o"},sms:{title:"短信分享",url:"sms:",icon:"comment"}},l.prototype.render=function(){var t=this.options,e=[],i=encodeURIComponent(a.title),s=encodeURIComponent(a.location),r="?body="+i+s;return t.sns.forEach(function(n){if(l.SNS[n]){var o,a=l.SNS[n];a.id=n,o="mail"===n?r+"&subject="+t.desc:"sms"===n?r:"?url="+s+"&title="+i,a.shareUrl=a.url+o,e.push(a)}}),o.template(t.tpl,n.extend({},t,{sns:e}))},l.prototype.init=function(){if(!this.inited){var t=this,e="[data-am-share-to]";r.ready(n.proxy(function(){n("body").append(this.render()),this.$element=n("#"+this.options.id),this.$element.find("[data-am-share-close]").on("click.share.amui",function(){t.close()})},this)),r.on("click.share.amui",e,n.proxy(function(t){var i=n(t.target),o=i.is(e)&&i||i.parent(e),s=o.attr("data-am-share-to");"mail"!==s&&"sms"!==s&&(t.preventDefault(),this.shareTo(s,this.setData(s))),this.close()},this)),this.inited=!0}},l.prototype.open=function(){!this.inited&&this.init(),this.$element&&this.$element.modal("open"),this.$element.trigger("open.share.amui"),this.active=!0},l.prototype.close=function(){this.$element&&this.$element.modal("close"),this.$element.trigger("close.share.amui"),this.active=!1},l.prototype.toggle=function(){this.active?this.close():this.open()},l.prototype.setData=function(t){if(t){var e={url:a.location,title:a.title},i=this.options.desc,n=this.pics||[],o=/^(qzone|qq|tqq)$/;if(o.test(t)&&!n.length){for(var s=a.images,r=0;r<s.length&&10>r;r++)!!s[r].src&&n.push(encodeURIComponent(s[r].src));this.pics=n}switch(t){case"qzone":e.desc=i,e.site=this.options.via,e.pics=n.join("|");break;case"qq":e.desc=i,e.site=this.options.via,e.pics=n[0];break;case"tqq":e.pic=n.join("|")}return e}},l.prototype.shareTo=function(t,e){var i=l.SNS[t];if(i){if("wechat"===t||"weixin"===t)return this.wechatQr();var n=[];for(var o in e)e[o]&&n.push(o.toString()+"="+("pic"===o||"pics"===o?e[o]:encodeURIComponent(e[o])));window.open(i.url+"?"+n.join("&"))}},l.prototype.wechatQr=function(){if(!this.$wechatQr){var t=o.utils.generateGUID("am-share-wechat"),e=n('<div class="am-modal am-modal-no-btn am-share-wechat-qr"><div class="am-modal-dialog"><div class="am-modal-hd">分享到微信 <a href="" class="am-close am-close-spin" data-am-modal-close>&times;</a> </div><div class="am-modal-bd"><div class="am-share-wx-qr"></div><div class="am-share-wechat-tip">打开微信，点击底部的<em>发现</em>，<br/> 使用<em>扫一扫</em>将网页分享至朋友圈</div></div></div></div>');e.attr("id",t);var i=new s({render:"canvas",correctLevel:0,text:a.location.href,width:180,height:180,background:"#fff",foreground:"#000"});e.find(".am-share-wx-qr").html(i),e.appendTo(n("body")),this.$wechatQr=n("#"+t)}this.$wechatQr.modal("open")};var c=new l;r.on("click.share.amui.data-api",'[data-am-toggle="share"]',function(t){t.preventDefault(),c.toggle()}),n.AMUI.share=c,e.exports=c}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./ui.modal":32,"./util.qrcode":52}],42:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,o=t("./core"),s=o.utils.rAF,a=o.utils.cancelAF,r=!1,l=function(t,e){function i(t){return(t/=.5)<1?.5*Math.pow(t,5):.5*(Math.pow(t-2,5)+2)}function o(){p.off("touchstart.smoothscroll.amui",y),r=!1}function c(t){r&&(u||(u=t),d=Math.min(1,Math.max((t-u)/w,0)),h=Math.round(m+g*i(d)),g>0&&h>f&&(h=f),0>g&&f>h&&(h=f),v!=h&&p.scrollTop(h),v=h,h!==f?(a(b),b=s(c)):(a(b),o()))}e=e||{};var u,d,h,p=n(t),f=parseInt(e.position)||l.DEFAULTS.position,m=p.scrollTop(),v=m,g=f-m,w=e.speed||Math.min(750,Math.min(1500,Math.abs(m-f))),y=function(){o()};if(!r&&0!==g){p.on("touchstart.smoothscroll.amui",y),r=!0;var b=s(c)}};l.DEFAULTS={position:0},n.fn.smoothScroll=function(t){return this.each(function(){new l(this,t)})},n(document).on("click.smoothScroll.amui.data-api","[data-am-smooth-scroll]",function(t){t.preventDefault();var e=o.utils.parseOptions(n(this).data("amSmoothScroll"));n(window).smoothScroll(e)}),e.exports=l}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],43:[function(t,e){(function(i){"use strict";function n(t){return this.each(function(){var e=o(this),i=e.data("amui.sticky"),n="object"==typeof t&&t;i||e.data("amui.sticky",i=new a(this,n)),"string"==typeof t&&i[t]()})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core"),a=function(t,e){var i=this;this.options=o.extend({},a.DEFAULTS,e),this.$element=o(t),this.sticked=null,this.inited=null,this.$holder=void 0,this.$window=o(window).on("scroll.sticky.amui",s.utils.debounce(o.proxy(this.checkPosition,this),10)).on("resize.sticky.amui orientationchange.sticky.amui",s.utils.debounce(function(){i.reset(!0,function(){i.checkPosition()})},50)).on("load.sticky.amui",o.proxy(this.checkPosition,this)),this.offset=this.$element.offset(),this.init()};a.DEFAULTS={top:0,bottom:0,animation:"",className:{sticky:"am-sticky",resetting:"am-sticky-resetting",stickyBtm:"am-sticky-bottom",animationRev:"am-animation-reverse"}},a.prototype.init=function(){var t=this.check();if(!t)return!1;var e=this.$element,i="";o.each(e.css(["marginTop","marginRight","marginBottom","marginLeft"]),function(t,e){return i+=" "+e});var n=o('<div class="am-sticky-placeholder"></div>').css({height:"absolute"!=e.css("position")?e.outerHeight():"","float":"none"!=e.css("float")?e.css("float"):"",margin:i});return this.$holder=e.css("margin",0).wrap(n).parent(),this.inited=1,!0},a.prototype.reset=function(t,e){var i=this.options,n=this.$element,o=i.animation?" am-animation-"+i.animation:"",a=function(){n.css({position:"",top:"",width:"",left:"",margin:0}),n.removeClass([o,i.className.animationRev,i.className.sticky,i.className.resetting].join(" ")),this.animating=!1,this.sticked=!1,this.offset=n.offset(),e&&e()}.bind(this);n.addClass(i.className.resetting),!t&&i.animation&&s.support.animation?(this.animating=!0,n.removeClass(o).one(s.support.animation.end,function(){a()}).width(),n.addClass(o+" "+i.className.animationRev)):a()},a.prototype.check=function(){if(!this.$element.is(":visible"))return!1;var t=this.options.media;if(t)switch(typeof t){case"number":if(window.innerWidth<t)return!1;break;case"string":if(window.matchMedia&&!window.matchMedia(t).matches)return!1}return!0},a.prototype.checkPosition=function(){if(!this.inited){var t=this.init();if(!t)return}var e=this.options,i=this.$window.scrollTop(),n=e.top,o=e.bottom,s=this.$element,a=e.animation?" am-animation-"+e.animation:"",r=[e.className.sticky,a].join(" ");"function"==typeof o&&(o=o(this.$element));var l=i>this.$holder.offset().top;!this.sticked&&l?s.addClass(r):this.sticked&&!l&&this.reset(),this.$holder.height(s.is(":visible")?s.height():0),l&&s.css({top:n,left:this.$holder.offset().left,width:this.$holder.width()}),this.sticked=l},o.fn.sticky=n,o(window).on("load",function(){o("[data-am-sticky]").each(function(){var t=o(this),e=s.utils.options(t.attr("data-am-sticky"));n.call(t,e)})}),o.AMUI.sticky=a,e.exports=a}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],44:[function(t,e){(function(i){"use strict";function n(t){return this.each(function(){var e=o(this),i=e.is(".am-tabs")&&e||e.closest(".am-tabs"),n=i.data("amui.tabs"),a=o.extend({},o.isPlainObject(t)?t:{},s.utils.parseOptions(e.data("amTabs")));n||i.data("amui.tabs",n=new c(i[0],a)),"string"==typeof t&&e.is(".am-tabs-nav a")&&n[t](e)})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core"),a=t("./util.hammer"),r=s.support.transition,l=s.support.animation,c=function(t,e){this.$element=o(t),this.options=o.extend({},c.DEFAULTS,e||{}),this.$tabNav=this.$element.find(this.options.selector.nav),this.$navs=this.$tabNav.find("a"),this.$content=this.$element.find(this.options.selector.content),this.$tabPanels=this.$content.find(this.options.selector.panel),this.transitioning=null,this.init()};c.DEFAULTS={selector:{nav:"> .am-tabs-nav",content:"> .am-tabs-bd",panel:"> .am-tab-panel"},className:{active:"am-active"}},c.prototype.init=function(){var t=this,e=this.options;if(1!==this.$tabNav.find("> .am-active").length){var i=this.$tabNav;this.activate(i.children("li").first(),i),this.activate(this.$tabPanels.first(),this.$content)}if(this.$navs.on("click.tabs.amui",function(e){e.preventDefault(),t.open(o(this))}),!e.noSwipe){var n=new a(this.$content[0]);n.get("pan").set({direction:a.DIRECTION_HORIZONTAL,threshold:120}),n.on("panleft",s.utils.debounce(function(i){i.preventDefault();var n=o(i.target);n.is(e.selector.panel)||(n=n.closest(e.selector.panel)),n.focus();var s=t.getNextNav(n);s&&t.open(s)},100)),n.on("panright",s.utils.debounce(function(i){i.preventDefault();var n=o(i.target);n.is(e.selector.panel)||(n=n.closest(e.selector.panel));var s=t.getPrevNav(n);s&&t.open(s)},100))}},c.prototype.open=function(t){if(t&&!this.transitioning&&!t.parent("li").hasClass("am-active")){var e=this.$tabNav,i=this.$navs,n=this.$content,s=t.attr("href"),a=/^#.+$/,r=a.test(s)&&this.$content.find(s)||this.$tabPanels.eq(i.index(t)),l=e.find(".am-active a")[0],c=o.Event("open.tabs.amui",{relatedTarget:l});t.trigger(c),c.isDefaultPrevented()||(this.activate(t.closest("li"),e),this.activate(r,n,function(){t.trigger({type:"opened.tabs.amui",relatedTarget:l})}))}},c.prototype.activate=function(t,e,i){function n(){i&&i(),this.transitioning=!1}this.transitioning=!0;var s=e.find("> .am-active"),a=i&&r&&!!s.length;s.removeClass("am-active am-in"),t.addClass("am-active"),a?(t.redraw(),t.addClass("am-in")):t.removeClass("am-fade"),a?s.one(r.end,o.proxy(n,this)):o.proxy(n,this)()},c.prototype.getNextNav=function(t){var e=this.$tabPanels.index(t),i="am-animation-right-spring";return e+1>=this.$navs.length?(l&&t.addClass(i).on(l.end,function(){t.removeClass(i)}),null):this.$navs.eq(e+1)},c.prototype.getPrevNav=function(t){var e=this.$tabPanels.index(t),i="am-animation-left-spring";return 0===e?(l&&t.addClass(i).on(l.end,function(){t.removeClass(i)}),null):this.$navs.eq(e-1)},o.fn.tabs=n,s.ready(function(t){o("[data-am-tabs]",t).tabs()}),o.AMUI.tabs=c,e.exports=c}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4,"./util.hammer":51}],45:[function(t,e){(function(i){"use strict";function n(t){return this.each(function(){var e=o(this),i=e.data("amui.ucheck"),n=o.extend({},s.utils.parseOptions(e.data("amUcheck")),"object"==typeof t&&t);(i||"destroy"!==t)&&(i||e.data("amui.ucheck",i=new a(this,n)),"string"==typeof t&&i[t]&&i[t](),s.support.touch&&e.parent().hover(function(){e.addClass("am-nohover")},function(){e.removeClass("am-nohover")}))})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core"),a=function(t,e){this.options=o.extend({},a.DEFAULTS,e),this.$element=o(t),this.init()};a.DEFAULTS={checkboxClass:"am-ucheck-checkbox",radioClass:"am-ucheck-radio",checkboxTpl:'<span class="am-ucheck-icons"><i class="am-icon-unchecked"></i><i class="am-icon-checked"></i></span>',radioTpl:'<span class="am-ucheck-icons"><i class="am-icon-unchecked"></i><i class="am-icon-checked"></i></span>'},a.prototype.init=function(){var t=this.$element,e=t[0],i=this.options;"checkbox"===e.type?t.addClass(i.checkboxClass).after(i.checkboxTpl):"radio"===e.type&&t.addClass(i.radioClass).after(i.radioTpl)},a.prototype.check=function(){this.$element.prop("checked",!0).trigger("change.ucheck.amui").trigger("checked.ucheck.amui")},a.prototype.uncheck=function(){this.$element.prop("checked",!1).trigger("change.ucheck.amui").trigger("unchecked.ucheck.amui")},a.prototype.toggle=function(){this.$element.prop("checked",function(t,e){return!e}).trigger("change.ucheck.amui").trigger("toggled.ucheck.amui")},a.prototype.disable=function(){this.$element.prop("disabled",!0).trigger("change.ucheck.amui").trigger("disabled.ucheck.amui")},a.prototype.enable=function(){this.$element.prop("disabled",!1),this.$element.trigger("change.ucheck.amui").trigger("enabled.ucheck.amui")},a.prototype.destroy=function(){this.$element.removeData("amui.ucheck").removeClass(this.options.checkboxClass+" "+this.options.radioClass).next(".am-ucheck-icons").remove().end().trigger("destroyed.ucheck.amui")},o.fn.uCheck=n,s.ready(function(t){o("[data-am-ucheck]",t).uCheck()}),o.AMUI.uCheck=a,e.exports=a}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],46:[function(t,e){(function(i){"use strict";function n(t){return this.each(function(){var e=o(this),i=e.data("amui.validator"),n=o.extend({},s.utils.parseOptions(e.data("amValidator")),"object"==typeof t&&t);i||e.data("amui.validator",i=new a(this,n)),"string"==typeof t&&i[t]&&i[t]()})}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core"),a=function(t,e){this.options=o.extend({},a.DEFAULTS,e),this.options.patterns=o.extend({},a.patterns,this.options.patterns);var i=this.options.locales;!a.validationMessages[i]&&(this.options.locales="zh_CN"),this.$element=o(t),this.init()};a.DEFAULTS={debug:!1,locales:"zh_CN",H5validation:!1,H5inputType:["email","url","number"],patterns:{},patternClassPrefix:"js-pattern-",activeClass:"am-active",inValidClass:"am-field-error",validClass:"am-field-valid",validateOnSubmit:!0,allFields:":input:visible:not(:submit, :button, :disabled, .am-novalidate)",customEvents:"validate",keyboardFields:":input:not(:submit, :button, :disabled, .am-novalidate)",keyboardEvents:"focusout, change",activeKeyup:!0,pointerFields:'input[type="range"]:not(:disabled, .am-novalidate), input[type="radio"]:not(:disabled, .am-novalidate), input[type="checkbox"]:not(:disabled, .am-novalidate), select:not(:disabled, .am-novalidate), option:not(:disabled, .am-novalidate)',pointerEvents:"click",onValid:function(){},onInValid:function(){},markValid:function(t){var e=this.options,i=o(t.field),n=i.closest(".am-form-group");i.addClass(e.validClass).removeClass(e.inValidClass),n.addClass("am-form-success").removeClass("am-form-error"),e.onValid.call(this,t)},markInValid:function(t){var e=this.options,i=o(t.field),n=i.closest(".am-form-group");i.addClass(e.inValidClass+" "+e.activeClass).removeClass(e.validClass),n.addClass("am-form-error").removeClass("am-form-success"),e.onInValid.call(this,t)},validate:function(){},submit:null},a.VERSION="2.0.0",a.patterns={email:/^((([a-zA-Z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-zA-Z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/,url:/^(https?|ftp):\/\/(((([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-zA-Z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/,number:/^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/,dateISO:/^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/,integer:/^-?\d+$/},a.validationMessages={zh_CN:{valueMissing:"请填写（选择）此字段",customError:{tooShort:"至少填写 %s 个字符",checkedOverflow:"至多选择 %s 项",checkedUnderflow:"至少选择 %s 项"},patternMismatch:"请按照要求的格式填写",rangeOverflow:"请填写小于等于 %s 的值",rangeUnderflow:"请填写大于等于 %s 的值",stepMismatch:"",tooLong:"至多填写 %s 个字符",typeMismatch:"请按照要求的类型填写"}},a.ERROR_MAP={tooShort:"minlength",checkedOverflow:"maxchecked",checkedUnderflow:"minchecked",rangeOverflow:"max",rangeUnderflow:"min",tooLong:"maxlength"},a.prototype.init=function(){function t(t){var e=t.toString();return e.substring(1,e.length-1)}function e(t,e,a){var r=e.split(","),l=function(){i.validate(this)};a&&(l=s.utils.debounce(l,a)),o.each(r,function(e,i){n.on(i+".validator.amui",t,l)})}var i=this,n=this.$element,a=this.options;return a.H5validation&&s.support.formValidation?!1:(n.attr("novalidate","novalidate"),o.each(a.H5inputType,function(e,i){var o=n.find("input[type="+i+"]");o.attr("pattern")||o.attr("pattern",t(a.patterns[i]))}),o.each(a.patterns,function(e,i){var o=n.find("."+a.patternClassPrefix+e);!o.attr("pattern")&&o.attr("pattern",t(i))}),n.submit(function(t){if("function"==typeof a.submit)return a.submit.call(i,t);if(a.validateOnSubmit){var e=i.isFormValid();return"boolean"===o.type(e)?e:n.data("amui.checked")?!0:(o.when(e).then(function(){n.data("amui.checked",!0).submit()},function(){n.data("amui.checked",!1).find("."+a.inValidClass).eq(0).focus()}),!1)}}),e(":input",a.customEvents),e(a.keyboardFields,a.keyboardEvents),e(a.pointerFields,a.pointerEvents),e(".am-active","keyup",50),void e("textarea[maxlength]","keyup",50))},a.prototype.isValid=function(t){var e=o(t);return void 0===e.data("validity")&&this.validate(t),e.data("validity")&&e.data("validity").valid},a.prototype.validate=function(t){var e=this,i=this.$element,n=this.options,s=o(t),a=s.data("equalTo");a&&s.attr("pattern","^"+i.find(a).val()+"$");var r=s.attr("pattern")||!1,l=new RegExp(r),c=null,u=null,d=s.is("[type=checkbox]")?(u=i.find('input[name="'+t.name+'"]')).filter(":checked").length:s.is("[type=radio]")?(c=this.$element.find('input[name="'+t.name+'"]')).filter(":checked").length>0:s.val();s=u&&u.length?u.first():s;var h=void 0!==s.attr("required")&&"false"!==s.attr("required"),p=parseInt(s.attr("maxlength"),10),f=parseInt(s.attr("minlength"),10),m=Number(s.attr("min")),v=Number(s.attr("max")),g=this.createValidity({field:s[0],valid:!0});if(n.debug&&window.console&&(console.log("Validate: value -> ["+d+", regex -> ["+l+"], required -> "+h),console.log("Regex test: "+l.test(d)+", Pattern: "+r)),!isNaN(p)&&d.length>p&&(g.valid=!1,g.tooLong=!0),!isNaN(f)&&d.length<f&&(g.valid=!1,g.customError="tooShort"),!isNaN(m)&&Number(d)<m&&(g.valid=!1,g.rangeUnderflow=!0),!isNaN(v)&&Number(d)>v&&(g.valid=!1,g.rangeOverflow=!0),h&&!d)g.valid=!1,g.valueMissing=!0;else if((u||s.is('select[multiple="multiple"]'))&&d){d=u?d:d.length;var w=parseInt(s.attr("minchecked"),10),y=parseInt(s.attr("maxchecked"),10);!isNaN(w)&&w>d&&(g.valid=!1,g.customError="checkedUnderflow"),!isNaN(y)&&d>y&&(g.valid=!1,g.customError="checkedOverflow")}else r&&!l.test(d)&&d&&(g.valid=!1,g.patternMismatch=!0);var b,T=function(t){this.markField(t),s.trigger("validated.field.validator.amui",t).data("validity",t);var i=c||u;i&&i.not(s).data("validity",t).each(function(){t.field=this,e.markField(t)})};if("function"==typeof n.validate&&(b=n.validate.call(this,g)),b){var x=new o.Deferred;return s.data("amui.dfdValidity",x.promise()),o.when(b).always(function(t){x[t.valid?"resolve":"reject"](t),T.call(e,t)})}T.call(this,g)},a.prototype.markField=function(t){var e=this.options,i="mark"+(t.valid?"":"In")+"Valid";e[i]&&e[i].call(this,t)},a.prototype.validateForm=function(){var t=this,e=this.$element,i=this.options,n=e.find(i.allFields),s=[],a=!0,r=[],l=o([]),c=[],u=!1;e.trigger("validate.form.validator.amui");var d=n.filter(function(){var t;if("INPUT"===this.tagName&&"radio"===this.type){if(t=this.name,s[t]===!0)return!1;s[t]=!0}return!0});d.each(function(){var i=o(this),n=t.isValid(this),s=i.data("validity");a=!!n&&a,r.push(s),n||(l=l.add(o(this),e));var d=i.data("amui.dfdValidity");if(d)c.push(d),u=!0;else{var h=new o.Deferred;c.push(h.promise()),h[n?"resolve":"reject"](s)}});var h={valid:a,$invalidFields:l,validity:r,promises:c,async:u};return e.trigger("validated.form.validator.amui",h),h},a.prototype.isFormValid=function(){var t=this,e=this.validateForm(),i=function(e){t.$element.trigger(e+".validator.amui")};if(e.async){var n=new o.Deferred;return o.when.apply(null,e.promises).then(function(){n.resolve(),i("valid")
},function(){n.reject(),i("invalid")}),n.promise()}return e.valid?(i("valid"),!0):(e.$invalidFields.first().focus(),i("invalid"),!1)},a.prototype.createValidity=function(t){return o.extend({customError:t.customError||!1,patternMismatch:t.patternMismatch||!1,rangeOverflow:t.rangeOverflow||!1,rangeUnderflow:t.rangeUnderflow||!1,stepMismatch:t.stepMismatch||!1,tooLong:t.tooLong||!1,typeMismatch:t.typeMismatch||!1,valid:t.valid||!0,valueMissing:t.valueMissing||!1},t)},a.prototype.getValidationMessage=function(t){var e,i,n=a.validationMessages[this.options.locales],s="%s",r=o(t.field);return(r.is('[type="checkbox"]')||r.is('[type="radio"]'))&&(r=this.$element.find("[name="+r.attr("name")+"]").first()),o.each(t,function(t,i){return"field"===t||"valid"===t?t:"customError"===t&&i?(e=i,n=n.customError,!1):i===!0?(e=t,!1):void 0}),i=n[e]||void 0,i&&a.ERROR_MAP[e]&&(i=i.replace(s,r.attr(a.ERROR_MAP[e])||"规定的")),i},o.fn.validator=n,s.ready(function(t){o("[data-am-validator]",t).validator()}),o.AMUI.validator=a,e.exports=a}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],47:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core");var o={get:function(t){var e,i=encodeURIComponent(t)+"=",n=document.cookie.indexOf(i),o=null;return n>-1&&(e=document.cookie.indexOf(";",n),-1==e&&(e=document.cookie.length),o=decodeURIComponent(document.cookie.substring(n+i.length,e))),o},set:function(t,e,i,n,o,s){var a=encodeURIComponent(t)+"="+encodeURIComponent(e);i instanceof Date&&(a+="; expires="+i.toGMTString()),n&&(a+="; path="+n),o&&(a+="; domain="+o),s&&(a+="; secure"),document.cookie=a},unset:function(t,e,i,n){this.set(t,"",new Date(0),e,i,n)}};n.AMUI.utils.cookie=o,e.exports=o}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],48:[function(t,e){(function(t){"use strict";function i(t,e){function n(t,e){return function(){return t.apply(e,arguments)}}var o;if(e=e||{},this.trackingClick=!1,this.trackingClickStart=0,this.targetElement=null,this.touchStartX=0,this.touchStartY=0,this.lastTouchIdentifier=0,this.touchBoundary=e.touchBoundary||10,this.layer=t,this.tapDelay=e.tapDelay||200,this.tapTimeout=e.tapTimeout||700,!i.notNeeded(t)){for(var a=["onMouse","onClick","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel"],r=this,l=0,c=a.length;c>l;l++)r[a[l]]=n(r[a[l]],r);s&&(t.addEventListener("mouseover",this.onMouse,!0),t.addEventListener("mousedown",this.onMouse,!0),t.addEventListener("mouseup",this.onMouse,!0)),t.addEventListener("click",this.onClick,!0),t.addEventListener("touchstart",this.onTouchStart,!1),t.addEventListener("touchmove",this.onTouchMove,!1),t.addEventListener("touchend",this.onTouchEnd,!1),t.addEventListener("touchcancel",this.onTouchCancel,!1),Event.prototype.stopImmediatePropagation||(t.removeEventListener=function(e,i,n){var o=Node.prototype.removeEventListener;"click"===e?o.call(t,e,i.hijacked||i,n):o.call(t,e,i,n)},t.addEventListener=function(e,i,n){var o=Node.prototype.addEventListener;"click"===e?o.call(t,e,i.hijacked||(i.hijacked=function(t){t.propagationStopped||i(t)}),n):o.call(t,e,i,n)}),"function"==typeof t.onclick&&(o=t.onclick,t.addEventListener("click",function(t){o(t)},!1),t.onclick=null)}}var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof t?t.jQuery:null,o=navigator.userAgent.indexOf("Windows Phone")>=0,s=navigator.userAgent.indexOf("Android")>0&&!o,a=/iP(ad|hone|od)/.test(navigator.userAgent)&&!o,r=a&&/OS 4_\d(_\d)?/.test(navigator.userAgent),l=a&&/OS [6-7]_\d/.test(navigator.userAgent),c=navigator.userAgent.indexOf("BB10")>0;i.prototype.needsClick=function(t){switch(t.nodeName.toLowerCase()){case"button":case"select":case"textarea":if(t.disabled)return!0;break;case"input":if(a&&"file"===t.type||t.disabled)return!0;break;case"label":case"iframe":case"video":return!0}return/\bneedsclick\b/.test(t.className)},i.prototype.needsFocus=function(t){switch(t.nodeName.toLowerCase()){case"textarea":return!0;case"select":return!s;case"input":switch(t.type){case"button":case"checkbox":case"file":case"image":case"radio":case"submit":return!1}return!t.disabled&&!t.readOnly;default:return/\bneedsfocus\b/.test(t.className)}},i.prototype.sendClick=function(t,e){var i,n;document.activeElement&&document.activeElement!==t&&document.activeElement.blur(),n=e.changedTouches[0],i=document.createEvent("MouseEvents"),i.initMouseEvent(this.determineEventType(t),!0,!0,window,1,n.screenX,n.screenY,n.clientX,n.clientY,!1,!1,!1,!1,0,null),i.forwardedTouchEvent=!0,t.dispatchEvent(i)},i.prototype.determineEventType=function(t){return s&&"select"===t.tagName.toLowerCase()?"mousedown":"click"},i.prototype.focus=function(t){var e;a&&t.setSelectionRange&&0!==t.type.indexOf("date")&&"time"!==t.type&&"month"!==t.type?(e=t.value.length,t.setSelectionRange(e,e)):t.focus()},i.prototype.updateScrollParent=function(t){var e,i;if(e=t.fastClickScrollParent,!e||!e.contains(t)){i=t;do{if(i.scrollHeight>i.offsetHeight){e=i,t.fastClickScrollParent=i;break}i=i.parentElement}while(i)}e&&(e.fastClickLastScrollTop=e.scrollTop)},i.prototype.getTargetElementFromEventTarget=function(t){return t.nodeType===Node.TEXT_NODE?t.parentNode:t},i.prototype.onTouchStart=function(t){var e,i,n;if(t.targetTouches.length>1)return!0;if(e=this.getTargetElementFromEventTarget(t.target),i=t.targetTouches[0],a){if(n=window.getSelection(),n.rangeCount&&!n.isCollapsed)return!0;if(!r){if(i.identifier&&i.identifier===this.lastTouchIdentifier)return t.preventDefault(),!1;this.lastTouchIdentifier=i.identifier,this.updateScrollParent(e)}}return this.trackingClick=!0,this.trackingClickStart=t.timeStamp,this.targetElement=e,this.touchStartX=i.pageX,this.touchStartY=i.pageY,t.timeStamp-this.lastClickTime<this.tapDelay&&t.preventDefault(),!0},i.prototype.touchHasMoved=function(t){var e=t.changedTouches[0],i=this.touchBoundary;return Math.abs(e.pageX-this.touchStartX)>i||Math.abs(e.pageY-this.touchStartY)>i?!0:!1},i.prototype.onTouchMove=function(t){return this.trackingClick?((this.targetElement!==this.getTargetElementFromEventTarget(t.target)||this.touchHasMoved(t))&&(this.trackingClick=!1,this.targetElement=null),!0):!0},i.prototype.findControl=function(t){return void 0!==t.control?t.control:t.htmlFor?document.getElementById(t.htmlFor):t.querySelector("button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea")},i.prototype.onTouchEnd=function(t){var e,i,n,o,c,u=this.targetElement;if(!this.trackingClick)return!0;if(t.timeStamp-this.lastClickTime<this.tapDelay)return this.cancelNextClick=!0,!0;if(t.timeStamp-this.trackingClickStart>this.tapTimeout)return!0;if(this.cancelNextClick=!1,this.lastClickTime=t.timeStamp,i=this.trackingClickStart,this.trackingClick=!1,this.trackingClickStart=0,l&&(c=t.changedTouches[0],u=document.elementFromPoint(c.pageX-window.pageXOffset,c.pageY-window.pageYOffset)||u,u.fastClickScrollParent=this.targetElement.fastClickScrollParent),n=u.tagName.toLowerCase(),"label"===n){if(e=this.findControl(u)){if(this.focus(u),s)return!1;u=e}}else if(this.needsFocus(u))return t.timeStamp-i>100||a&&window.top!==window&&"input"===n?(this.targetElement=null,!1):(this.focus(u),this.sendClick(u,t),a&&"select"===n||(this.targetElement=null,t.preventDefault()),!1);return a&&!r&&(o=u.fastClickScrollParent,o&&o.fastClickLastScrollTop!==o.scrollTop)?!0:(this.needsClick(u)||(t.preventDefault(),this.sendClick(u,t)),!1)},i.prototype.onTouchCancel=function(){this.trackingClick=!1,this.targetElement=null},i.prototype.onMouse=function(t){return this.targetElement?t.forwardedTouchEvent?!0:t.cancelable&&(!this.needsClick(this.targetElement)||this.cancelNextClick)?(t.stopImmediatePropagation?t.stopImmediatePropagation():t.propagationStopped=!0,t.stopPropagation(),t.preventDefault(),!1):!0:!0},i.prototype.onClick=function(t){var e;return this.trackingClick?(this.targetElement=null,this.trackingClick=!1,!0):"submit"===t.target.type&&0===t.detail?!0:(e=this.onMouse(t),e||(this.targetElement=null),e)},i.prototype.destroy=function(){var t=this.layer;s&&(t.removeEventListener("mouseover",this.onMouse,!0),t.removeEventListener("mousedown",this.onMouse,!0),t.removeEventListener("mouseup",this.onMouse,!0)),t.removeEventListener("click",this.onClick,!0),t.removeEventListener("touchstart",this.onTouchStart,!1),t.removeEventListener("touchmove",this.onTouchMove,!1),t.removeEventListener("touchend",this.onTouchEnd,!1),t.removeEventListener("touchcancel",this.onTouchCancel,!1)},i.notNeeded=function(t){var e,i,n,o;if("undefined"==typeof window.ontouchstart)return!0;if(i=+(/Chrome\/([0-9]+)/.exec(navigator.userAgent)||[,0])[1]){if(!s)return!0;if(e=document.querySelector("meta[name=viewport]")){if(-1!==e.content.indexOf("user-scalable=no"))return!0;if(i>31&&document.documentElement.scrollWidth<=window.outerWidth)return!0}}if(c&&(n=navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/),n[1]>=10&&n[2]>=3&&(e=document.querySelector("meta[name=viewport]")))){if(-1!==e.content.indexOf("user-scalable=no"))return!0;if(document.documentElement.scrollWidth<=window.outerWidth)return!0}return"none"===t.style.msTouchAction||"manipulation"===t.style.touchAction?!0:(o=+(/Firefox\/([0-9]+)/.exec(navigator.userAgent)||[,0])[1],o>=27&&(e=document.querySelector("meta[name=viewport]"),e&&(-1!==e.content.indexOf("user-scalable=no")||document.documentElement.scrollWidth<=window.outerWidth))?!0:"none"===t.style.touchAction||"manipulation"===t.style.touchAction?!0:!1)},i.attach=function(t,e){return new i(t,e)},i.VERSION="1.0.6",n&&(n.AMUI?n.AMUI.FastClick=i:n.AMUI={FastClick:i}),e.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],49:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,o=(t("./core"),"undefined"!=typeof Element&&"ALLOW_KEYBOARD_INPUT"in Element),s=function(){for(var t,e,i=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],n=0,o=i.length,s={};o>n;n++)if(t=i[n],t&&t[1]in document){for(n=0,e=t.length;e>n;n++)s[i[0][n]]=t[n];return s}return!1}(),a={request:function(t){var e=s.requestFullscreen;t=t||document.documentElement,/5\.1[\.\d]* Safari/.test(navigator.userAgent)?t[e]():t[e](o&&Element.ALLOW_KEYBOARD_INPUT)},exit:function(){document[s.exitFullscreen]()},toggle:function(t){this.isFullscreen?this.exit():this.request(t)},raw:s};return s?(Object.defineProperties(a,{isFullscreen:{get:function(){return!!document[s.fullscreenElement]}},element:{enumerable:!0,get:function(){return document[s.fullscreenElement]}},enabled:{enumerable:!0,get:function(){return!!document[s.fullscreenEnabled]}}}),a.VERSION="2.0.0",n.AMUI.fullscreen=a,void(e.exports=a)):void(e.exports=!1)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],50:[function(t,e){(function(i){"use strict";var n="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,o=t("./core");o.support.geolocation=window.navigator&&window.navigator.geolocation;var s=o.support.geolocation,a=function(t){this.options=t||{}};a.MESSAGES={unsupportedBrowser:"Browser does not support location services",permissionDenied:"You have rejected access to your location",positionUnavailable:"Unable to determine your location",timeout:"Service timeout has been reached"},a.ERROR_CODE={0:"unsupportedBrowser",1:"permissionDenied",2:"positionUnavailable",3:"timeout"},a.prototype.get=function(t){var e=this;t=n.extend({},this.options,t);var i=new n.Deferred;return s?this.watchID=s.getCurrentPosition(function(t){i.resolve.call(e,t)},function(t){i.reject(a.MESSAGES[a.ERROR_CODE[t.code]])},t):i.reject(a.MESSAGES.unsupportedBrowser),i.promise()},a.prototype.watch=function(t){if(s&&(t=n.extend({},this.options,t),n.isFunction(t.done))){this.clearWatch();var e=n.isFunction(t.fail)?t.fail:null;return this.watchID=s.watchPosition(t.done,e,t),this.watchID}},a.prototype.clearWatch=function(){s&&this.watchID&&(s.clearWatch(this.watchID),this.watchID=null)},n.AMUI.Geolocation=a,e.exports=a}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],51:[function(t,e){(function(i){"use strict";function n(t,e,i){return setTimeout(c(t,i),e)}function o(t,e,i){return Array.isArray(t)?(s(t,i[e],i),!0):!1}function s(t,e,i){var n;if(t)if(t.forEach)t.forEach(e,i);else if(void 0!==t.length)for(n=0;n<t.length;)e.call(i,t[n],n,t),n++;else for(n in t)t.hasOwnProperty(n)&&e.call(i,t[n],n,t)}function a(t,e,i){for(var n=Object.keys(e),o=0;o<n.length;)(!i||i&&void 0===t[n[o]])&&(t[n[o]]=e[n[o]]),o++;return t}function r(t,e){return a(t,e,!0)}function l(t,e,i){var n,o=e.prototype;n=t.prototype=Object.create(o),n.constructor=t,n._super=o,i&&a(n,i)}function c(t,e){return function(){return t.apply(e,arguments)}}function u(t,e){return typeof t==ue?t.apply(e?e[0]||void 0:void 0,e):t}function d(t,e){return void 0===t?e:t}function h(t,e,i){s(v(e),function(e){t.addEventListener(e,i,!1)})}function p(t,e,i){s(v(e),function(e){t.removeEventListener(e,i,!1)})}function f(t,e){for(;t;){if(t==e)return!0;t=t.parentNode}return!1}function m(t,e){return t.indexOf(e)>-1}function v(t){return t.trim().split(/\s+/g)}function g(t,e,i){if(t.indexOf&&!i)return t.indexOf(e);for(var n=0;n<t.length;){if(i&&t[n][i]==e||!i&&t[n]===e)return n;n++}return-1}function w(t){return Array.prototype.slice.call(t,0)}function y(t,e,i){for(var n=[],o=[],s=0;s<t.length;){var a=e?t[s][e]:t[s];g(o,a)<0&&n.push(t[s]),o[s]=a,s++}return i&&(n=e?n.sort(function(t,i){return t[e]>i[e]}):n.sort()),n}function b(t,e){for(var i,n,o=e[0].toUpperCase()+e.slice(1),s=0;s<le.length;){if(i=le[s],n=i?i+o:e,n in t)return n;s++}return void 0}function T(){return fe++}function x(t){var e=t.ownerDocument;return e.defaultView||e.parentWindow}function C(t,e){var i=this;this.manager=t,this.callback=e,this.element=t.element,this.target=t.options.inputTarget,this.domHandler=function(e){u(t.options.enable,[t])&&i.handler(e)},this.init()}function E(t){var e,i=t.options.inputClass;return new(e=i?i:ge?_:we?U:ve?W:z)(t,k)}function k(t,e,i){var n=i.pointers.length,o=i.changedPointers.length,s=e&Ee&&n-o===0,a=e&(Se|Ae)&&n-o===0;i.isFirst=!!s,i.isFinal=!!a,s&&(t.session={}),i.eventType=e,S(t,i),t.emit("hammer.input",i),t.recognize(i),t.session.prevInput=i}function S(t,e){var i=t.session,n=e.pointers,o=n.length;i.firstInput||(i.firstInput=F(e)),o>1&&!i.firstMultiple?i.firstMultiple=F(e):1===o&&(i.firstMultiple=!1);var s=i.firstInput,a=i.firstMultiple,r=a?a.center:s.center,l=e.center=M(n);e.timeStamp=pe(),e.deltaTime=e.timeStamp-s.timeStamp,e.angle=$(r,l),e.distance=N(r,l),A(i,e),e.offsetDirection=I(e.deltaX,e.deltaY),e.scale=a?O(a.pointers,n):1,e.rotation=a?L(a.pointers,n):0,D(i,e);var c=t.element;f(e.srcEvent.target,c)&&(c=e.srcEvent.target),e.target=c}function A(t,e){var i=e.center,n=t.offsetDelta||{},o=t.prevDelta||{},s=t.prevInput||{};(e.eventType===Ee||s.eventType===Se)&&(o=t.prevDelta={x:s.deltaX||0,y:s.deltaY||0},n=t.offsetDelta={x:i.x,y:i.y}),e.deltaX=o.x+(i.x-n.x),e.deltaY=o.y+(i.y-n.y)}function D(t,e){var i,n,o,s,a=t.lastInterval||e,r=e.timeStamp-a.timeStamp;if(e.eventType!=Ae&&(r>Ce||void 0===a.velocity)){var l=a.deltaX-e.deltaX,c=a.deltaY-e.deltaY,u=P(r,l,c);n=u.x,o=u.y,i=he(u.x)>he(u.y)?u.x:u.y,s=I(l,c),t.lastInterval=e}else i=a.velocity,n=a.velocityX,o=a.velocityY,s=a.direction;e.velocity=i,e.velocityX=n,e.velocityY=o,e.direction=s}function F(t){for(var e=[],i=0;i<t.pointers.length;)e[i]={clientX:de(t.pointers[i].clientX),clientY:de(t.pointers[i].clientY)},i++;return{timeStamp:pe(),pointers:e,center:M(e),deltaX:t.deltaX,deltaY:t.deltaY}}function M(t){var e=t.length;if(1===e)return{x:de(t[0].clientX),y:de(t[0].clientY)};for(var i=0,n=0,o=0;e>o;)i+=t[o].clientX,n+=t[o].clientY,o++;return{x:de(i/e),y:de(n/e)}}function P(t,e,i){return{x:e/t||0,y:i/t||0}}function I(t,e){return t===e?De:he(t)>=he(e)?t>0?Fe:Me:e>0?Pe:Ie}function N(t,e,i){i||(i=Oe);var n=e[i[0]]-t[i[0]],o=e[i[1]]-t[i[1]];return Math.sqrt(n*n+o*o)}function $(t,e,i){i||(i=Oe);var n=e[i[0]]-t[i[0]],o=e[i[1]]-t[i[1]];return 180*Math.atan2(o,n)/Math.PI}function L(t,e){return $(e[1],e[0],ze)-$(t[1],t[0],ze)}function O(t,e){return N(e[0],e[1],ze)/N(t[0],t[1],ze)}function z(){this.evEl=je,this.evWin=Re,this.allow=!0,this.pressed=!1,C.apply(this,arguments)}function _(){this.evEl=We,this.evWin=Be,C.apply(this,arguments),this.store=this.manager.session.pointerEvents=[]}function j(){this.evTarget=Qe,this.evWin=Ve,this.started=!1,C.apply(this,arguments)}function R(t,e){var i=w(t.touches),n=w(t.changedTouches);return e&(Se|Ae)&&(i=y(i.concat(n),"identifier",!0)),[i,n]}function U(){this.evTarget=Ye,this.targetIds={},C.apply(this,arguments)}function q(t,e){var i=w(t.touches),n=this.targetIds;if(e&(Ee|ke)&&1===i.length)return n[i[0].identifier]=!0,[i,i];var o,s,a=w(t.changedTouches),r=[],l=this.target;if(s=i.filter(function(t){return f(t.target,l)}),e===Ee)for(o=0;o<s.length;)n[s[o].identifier]=!0,o++;for(o=0;o<a.length;)n[a[o].identifier]&&r.push(a[o]),e&(Se|Ae)&&delete n[a[o].identifier],o++;return r.length?[y(s.concat(r),"identifier",!0),r]:void 0}function W(){C.apply(this,arguments);var t=c(this.handler,this);this.touch=new U(this.manager,t),this.mouse=new z(this.manager,t)}function B(t,e){this.manager=t,this.set(e)}function H(t){if(m(t,ei))return ei;var e=m(t,ii),i=m(t,ni);return e&&i?ii+" "+ni:e||i?e?ii:ni:m(t,ti)?ti:Ke}function Q(t){this.id=T(),this.manager=null,this.options=r(t||{},this.defaults),this.options.enable=d(this.options.enable,!0),this.state=oi,this.simultaneous={},this.requireFail=[]}function V(t){return t&ci?"cancel":t&ri?"end":t&ai?"move":t&si?"start":""}function X(t){return t==Ie?"down":t==Pe?"up":t==Fe?"left":t==Me?"right":""}function Y(t,e){var i=e.manager;return i?i.get(t):t}function Z(){Q.apply(this,arguments)}function G(){Z.apply(this,arguments),this.pX=null,this.pY=null}function J(){Z.apply(this,arguments)}function K(){Q.apply(this,arguments),this._timer=null,this._input=null}function te(){Z.apply(this,arguments)}function ee(){Z.apply(this,arguments)}function ie(){Q.apply(this,arguments),this.pTime=!1,this.pCenter=!1,this._timer=null,this._input=null,this.count=0}function ne(t,e){return e=e||{},e.recognizers=d(e.recognizers,ne.defaults.preset),new oe(t,e)}function oe(t,e){e=e||{},this.options=r(e,ne.defaults),this.options.inputTarget=this.options.inputTarget||t,this.handlers={},this.session={},this.recognizers=[],this.element=t,this.input=E(this),this.touchAction=new B(this,this.options.touchAction),se(this,!0),s(e.recognizers,function(t){var e=this.add(new t[0](t[1]));t[2]&&e.recognizeWith(t[2]),t[3]&&e.requireFailure(t[3])},this)}function se(t,e){var i=t.element;s(t.options.cssProps,function(t,n){i.style[b(i.style,n)]=e?t:""})}function ae(t,e){var i=document.createEvent("Event");i.initEvent(t,!0,!0),i.gesture=e,e.target.dispatchEvent(i)}var re="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,le=(t("./core"),["","webkit","moz","MS","ms","o"]),ce=document.createElement("div"),ue="function",de=Math.round,he=Math.abs,pe=Date.now,fe=1,me=/mobile|tablet|ip(ad|hone|od)|android/i,ve="ontouchstart"in window,ge=void 0!==b(window,"PointerEvent"),we=ve&&me.test(navigator.userAgent),ye="touch",be="pen",Te="mouse",xe="kinect",Ce=25,Ee=1,ke=2,Se=4,Ae=8,De=1,Fe=2,Me=4,Pe=8,Ie=16,Ne=Fe|Me,$e=Pe|Ie,Le=Ne|$e,Oe=["x","y"],ze=["clientX","clientY"];C.prototype={handler:function(){},init:function(){this.evEl&&h(this.element,this.evEl,this.domHandler),this.evTarget&&h(this.target,this.evTarget,this.domHandler),this.evWin&&h(x(this.element),this.evWin,this.domHandler)},destroy:function(){this.evEl&&p(this.element,this.evEl,this.domHandler),this.evTarget&&p(this.target,this.evTarget,this.domHandler),this.evWin&&p(x(this.element),this.evWin,this.domHandler)}};var _e={mousedown:Ee,mousemove:ke,mouseup:Se},je="mousedown",Re="mousemove mouseup";l(z,C,{handler:function(t){var e=_e[t.type];e&Ee&&0===t.button&&(this.pressed=!0),e&ke&&1!==t.which&&(e=Se),this.pressed&&this.allow&&(e&Se&&(this.pressed=!1),this.callback(this.manager,e,{pointers:[t],changedPointers:[t],pointerType:Te,srcEvent:t}))}});var Ue={pointerdown:Ee,pointermove:ke,pointerup:Se,pointercancel:Ae,pointerout:Ae},qe={2:ye,3:be,4:Te,5:xe},We="pointerdown",Be="pointermove pointerup pointercancel";window.MSPointerEvent&&(We="MSPointerDown",Be="MSPointerMove MSPointerUp MSPointerCancel"),l(_,C,{handler:function(t){var e=this.store,i=!1,n=t.type.toLowerCase().replace("ms",""),o=Ue[n],s=qe[t.pointerType]||t.pointerType,a=s==ye,r=g(e,t.pointerId,"pointerId");o&Ee&&(0===t.button||a)?0>r&&(e.push(t),r=e.length-1):o&(Se|Ae)&&(i=!0),0>r||(e[r]=t,this.callback(this.manager,o,{pointers:e,changedPointers:[t],pointerType:s,srcEvent:t}),i&&e.splice(r,1))}});var He={touchstart:Ee,touchmove:ke,touchend:Se,touchcancel:Ae},Qe="touchstart",Ve="touchstart touchmove touchend touchcancel";l(j,C,{handler:function(t){var e=He[t.type];if(e===Ee&&(this.started=!0),this.started){var i=R.call(this,t,e);e&(Se|Ae)&&i[0].length-i[1].length===0&&(this.started=!1),this.callback(this.manager,e,{pointers:i[0],changedPointers:i[1],pointerType:ye,srcEvent:t})}}});var Xe={touchstart:Ee,touchmove:ke,touchend:Se,touchcancel:Ae},Ye="touchstart touchmove touchend touchcancel";l(U,C,{handler:function(t){var e=Xe[t.type],i=q.call(this,t,e);i&&this.callback(this.manager,e,{pointers:i[0],changedPointers:i[1],pointerType:ye,srcEvent:t})}}),l(W,C,{handler:function(t,e,i){var n=i.pointerType==ye,o=i.pointerType==Te;if(n)this.mouse.allow=!1;else if(o&&!this.mouse.allow)return;e&(Se|Ae)&&(this.mouse.allow=!0),this.callback(t,e,i)},destroy:function(){this.touch.destroy(),this.mouse.destroy()}});var Ze=b(ce.style,"touchAction"),Ge=void 0!==Ze,Je="compute",Ke="auto",ti="manipulation",ei="none",ii="pan-x",ni="pan-y";B.prototype={set:function(t){t==Je&&(t=this.compute()),Ge&&(this.manager.element.style[Ze]=t),this.actions=t.toLowerCase().trim()},update:function(){this.set(this.manager.options.touchAction)},compute:function(){var t=[];return s(this.manager.recognizers,function(e){u(e.options.enable,[e])&&(t=t.concat(e.getTouchAction()))}),H(t.join(" "))},preventDefaults:function(t){if(!Ge){var e=t.srcEvent,i=t.offsetDirection;if(this.manager.session.prevented)return void e.preventDefault();var n=this.actions,o=m(n,ei),s=m(n,ni),a=m(n,ii);return o||s&&i&Ne||a&&i&$e?this.preventSrc(e):void 0}},preventSrc:function(t){this.manager.session.prevented=!0,t.preventDefault()}};var oi=1,si=2,ai=4,ri=8,li=ri,ci=16,ui=32;Q.prototype={defaults:{},set:function(t){return a(this.options,t),this.manager&&this.manager.touchAction.update(),this},recognizeWith:function(t){if(o(t,"recognizeWith",this))return this;var e=this.simultaneous;return t=Y(t,this),e[t.id]||(e[t.id]=t,t.recognizeWith(this)),this},dropRecognizeWith:function(t){return o(t,"dropRecognizeWith",this)?this:(t=Y(t,this),delete this.simultaneous[t.id],this)},requireFailure:function(t){if(o(t,"requireFailure",this))return this;var e=this.requireFail;return t=Y(t,this),-1===g(e,t)&&(e.push(t),t.requireFailure(this)),this},dropRequireFailure:function(t){if(o(t,"dropRequireFailure",this))return this;t=Y(t,this);var e=g(this.requireFail,t);return e>-1&&this.requireFail.splice(e,1),this},hasRequireFailures:function(){return this.requireFail.length>0},canRecognizeWith:function(t){return!!this.simultaneous[t.id]},emit:function(t){function e(e){i.manager.emit(i.options.event+(e?V(n):""),t)}var i=this,n=this.state;ri>n&&e(!0),e(),n>=ri&&e(!0)},tryEmit:function(t){return this.canEmit()?this.emit(t):void(this.state=ui)},canEmit:function(){for(var t=0;t<this.requireFail.length;){if(!(this.requireFail[t].state&(ui|oi)))return!1;t++}return!0},recognize:function(t){var e=a({},t);return u(this.options.enable,[this,e])?(this.state&(li|ci|ui)&&(this.state=oi),this.state=this.process(e),void(this.state&(si|ai|ri|ci)&&this.tryEmit(e))):(this.reset(),void(this.state=ui))},process:function(){},getTouchAction:function(){},reset:function(){}},l(Z,Q,{defaults:{pointers:1},attrTest:function(t){var e=this.options.pointers;return 0===e||t.pointers.length===e},process:function(t){var e=this.state,i=t.eventType,n=e&(si|ai),o=this.attrTest(t);return n&&(i&Ae||!o)?e|ci:n||o?i&Se?e|ri:e&si?e|ai:si:ui}}),l(G,Z,{defaults:{event:"pan",threshold:10,pointers:1,direction:Le},getTouchAction:function(){var t=this.options.direction,e=[];return t&Ne&&e.push(ni),t&$e&&e.push(ii),e},directionTest:function(t){var e=this.options,i=!0,n=t.distance,o=t.direction,s=t.deltaX,a=t.deltaY;return o&e.direction||(e.direction&Ne?(o=0===s?De:0>s?Fe:Me,i=s!=this.pX,n=Math.abs(t.deltaX)):(o=0===a?De:0>a?Pe:Ie,i=a!=this.pY,n=Math.abs(t.deltaY))),t.direction=o,i&&n>e.threshold&&o&e.direction},attrTest:function(t){return Z.prototype.attrTest.call(this,t)&&(this.state&si||!(this.state&si)&&this.directionTest(t))},emit:function(t){this.pX=t.deltaX,this.pY=t.deltaY;var e=X(t.direction);e&&this.manager.emit(this.options.event+e,t),this._super.emit.call(this,t)}}),l(J,Z,{defaults:{event:"pinch",threshold:0,pointers:2},getTouchAction:function(){return[ei]},attrTest:function(t){return this._super.attrTest.call(this,t)&&(Math.abs(t.scale-1)>this.options.threshold||this.state&si)},emit:function(t){if(this._super.emit.call(this,t),1!==t.scale){var e=t.scale<1?"in":"out";this.manager.emit(this.options.event+e,t)}}}),l(K,Q,{defaults:{event:"press",pointers:1,time:500,threshold:5},getTouchAction:function(){return[Ke]},process:function(t){var e=this.options,i=t.pointers.length===e.pointers,o=t.distance<e.threshold,s=t.deltaTime>e.time;if(this._input=t,!o||!i||t.eventType&(Se|Ae)&&!s)this.reset();else if(t.eventType&Ee)this.reset(),this._timer=n(function(){this.state=li,this.tryEmit()},e.time,this);else if(t.eventType&Se)return li;return ui},reset:function(){clearTimeout(this._timer)},emit:function(t){this.state===li&&(t&&t.eventType&Se?this.manager.emit(this.options.event+"up",t):(this._input.timeStamp=pe(),this.manager.emit(this.options.event,this._input)))}}),l(te,Z,{defaults:{event:"rotate",threshold:0,pointers:2},getTouchAction:function(){return[ei]},attrTest:function(t){return this._super.attrTest.call(this,t)&&(Math.abs(t.rotation)>this.options.threshold||this.state&si)}}),l(ee,Z,{defaults:{event:"swipe",threshold:10,velocity:.65,direction:Ne|$e,pointers:1},getTouchAction:function(){return G.prototype.getTouchAction.call(this)},attrTest:function(t){var e,i=this.options.direction;return i&(Ne|$e)?e=t.velocity:i&Ne?e=t.velocityX:i&$e&&(e=t.velocityY),this._super.attrTest.call(this,t)&&i&t.direction&&t.distance>this.options.threshold&&he(e)>this.options.velocity&&t.eventType&Se},emit:function(t){var e=X(t.direction);e&&this.manager.emit(this.options.event+e,t),this.manager.emit(this.options.event,t)}}),l(ie,Q,{defaults:{event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:2,posThreshold:10},getTouchAction:function(){return[ti]},process:function(t){var e=this.options,i=t.pointers.length===e.pointers,o=t.distance<e.threshold,s=t.deltaTime<e.time;if(this.reset(),t.eventType&Ee&&0===this.count)return this.failTimeout();if(o&&s&&i){if(t.eventType!=Se)return this.failTimeout();var a=this.pTime?t.timeStamp-this.pTime<e.interval:!0,r=!this.pCenter||N(this.pCenter,t.center)<e.posThreshold;this.pTime=t.timeStamp,this.pCenter=t.center,r&&a?this.count+=1:this.count=1,this._input=t;var l=this.count%e.taps;if(0===l)return this.hasRequireFailures()?(this._timer=n(function(){this.state=li,this.tryEmit()},e.interval,this),si):li}return ui},failTimeout:function(){return this._timer=n(function(){this.state=ui},this.options.interval,this),ui},reset:function(){clearTimeout(this._timer)},emit:function(){this.state==li&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))}}),ne.VERSION="2.0.4",ne.defaults={domEvents:!1,touchAction:Je,enable:!0,inputTarget:null,inputClass:null,preset:[[te,{enable:!1}],[J,{enable:!1},["rotate"]],[ee,{direction:Ne}],[G,{direction:Ne},["swipe"]],[ie],[ie,{event:"doubletap",taps:2},["tap"]],[K]],cssProps:{userSelect:"none",touchSelect:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}};var di=1,hi=2;oe.prototype={set:function(t){return a(this.options,t),t.touchAction&&this.touchAction.update(),t.inputTarget&&(this.input.destroy(),this.input.target=t.inputTarget,this.input.init()),this},stop:function(t){this.session.stopped=t?hi:di},recognize:function(t){var e=this.session;if(!e.stopped){this.touchAction.preventDefaults(t);var i,n=this.recognizers,o=e.curRecognizer;(!o||o&&o.state&li)&&(o=e.curRecognizer=null);for(var s=0;s<n.length;)i=n[s],e.stopped===hi||o&&i!=o&&!i.canRecognizeWith(o)?i.reset():i.recognize(t),!o&&i.state&(si|ai|ri)&&(o=e.curRecognizer=i),s++}},get:function(t){if(t instanceof Q)return t;for(var e=this.recognizers,i=0;i<e.length;i++)if(e[i].options.event==t)return e[i];return null},add:function(t){if(o(t,"add",this))return this;var e=this.get(t.options.event);return e&&this.remove(e),this.recognizers.push(t),t.manager=this,this.touchAction.update(),t},remove:function(t){if(o(t,"remove",this))return this;var e=this.recognizers;return t=this.get(t),e.splice(g(e,t),1),this.touchAction.update(),this},on:function(t,e){var i=this.handlers;return s(v(t),function(t){i[t]=i[t]||[],i[t].push(e)}),this},off:function(t,e){var i=this.handlers;return s(v(t),function(t){e?i[t].splice(g(i[t],e),1):delete i[t]}),this},emit:function(t,e){this.options.domEvents&&ae(t,e);var i=this.handlers[t]&&this.handlers[t].slice();if(i&&i.length){e.type=t,e.preventDefault=function(){e.srcEvent.preventDefault()};for(var n=0;n<i.length;)i[n](e),n++}},destroy:function(){this.element&&se(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}},a(ne,{INPUT_START:Ee,INPUT_MOVE:ke,INPUT_END:Se,INPUT_CANCEL:Ae,STATE_POSSIBLE:oi,STATE_BEGAN:si,STATE_CHANGED:ai,STATE_ENDED:ri,STATE_RECOGNIZED:li,STATE_CANCELLED:ci,STATE_FAILED:ui,DIRECTION_NONE:De,DIRECTION_LEFT:Fe,DIRECTION_RIGHT:Me,DIRECTION_UP:Pe,DIRECTION_DOWN:Ie,DIRECTION_HORIZONTAL:Ne,DIRECTION_VERTICAL:$e,DIRECTION_ALL:Le,Manager:oe,Input:C,TouchAction:B,TouchInput:U,MouseInput:z,PointerEventInput:_,TouchMouseInput:W,SingleTouchInput:j,Recognizer:Q,AttrRecognizer:Z,Tap:ie,Pan:G,Swipe:ee,Pinch:J,Rotate:te,Press:K,on:h,off:p,each:s,merge:r,extend:a,inherit:l,bindFn:c,prefixed:b}),function(t,e){function i(i,n){var o=t(i);o.data("hammer")||o.data("hammer",new e(o[0],n))}t.fn.hammer=function(t){return this.each(function(){i(this,t)})},e.Manager.prototype.emit=function(e){return function(i,n){e.call(this,i,n),t(this.element).trigger({type:i,gesture:n})}}(e.Manager.prototype.emit)}(re,ne),re.AMUI.Hammer=ne,e.exports=ne}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],52:[function(t,e){(function(i){function n(t){return 128>t?[t]:2048>t?(c0=192+(t>>6),c1=128+(63&t),[c0,c1]):(c0=224+(t>>12),c1=128+(t>>6&63),c2=128+(63&t),[c0,c1,c2])}function o(t){for(var e=[],i=0;i<t.length;i++)for(var o=t.charCodeAt(i),s=n(o),a=0;a<s.length;a++)e.push(s[a]);return e}function s(t,e){this.typeNumber=-1,this.errorCorrectLevel=e,this.modules=null,this.moduleCount=0,this.dataCache=null,this.rsBlocks=null,this.totalDataCount=-1,this.data=t,this.utf8bytes=o(t),this.make()
}function a(t,e){if(void 0==t.length)throw new Error(t.length+"/"+e);for(var i=0;i<t.length&&0==t[i];)i++;this.num=new Array(t.length-i+e);for(var n=0;n<t.length-i;n++)this.num[n]=t[n+i]}function r(){this.buffer=new Array,this.length=0}function n(t){return 128>t?[t]:2048>t?(c0=192+(t>>6),c1=128+(63&t),[c0,c1]):(c0=224+(t>>12),c1=128+(t>>6&63),c2=128+(63&t),[c0,c1,c2])}function o(t){for(var e=[],i=0;i<t.length;i++)for(var o=t.charCodeAt(i),s=n(o),a=0;a<s.length;a++)e.push(s[a]);return e}function s(t,e){this.typeNumber=-1,this.errorCorrectLevel=e,this.modules=null,this.moduleCount=0,this.dataCache=null,this.rsBlocks=null,this.totalDataCount=-1,this.data=t,this.utf8bytes=o(t),this.make()}function a(t,e){if(void 0==t.length)throw new Error(t.length+"/"+e);for(var i=0;i<t.length&&0==t[i];)i++;this.num=new Array(t.length-i+e);for(var n=0;n<t.length-i;n++)this.num[n]=t[n+i]}function r(){this.buffer=new Array,this.length=0}var c="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core");var u=[],d=function(t){"string"==typeof t&&(t={text:t}),this.options=c.extend({},{text:"",render:"",width:256,height:256,correctLevel:3,background:"#ffffff",foreground:"#000000"},t);for(var e=null,i=0,n=u.length;n>i;i++)if(u[i].text==this.options.text&&u[i].text.correctLevel==this.options.correctLevel){e=u[i].obj;break}if(i==n&&(e=new s(this.options.text,this.options.correctLevel),u.push({text:this.options.text,correctLevel:this.options.correctLevel,obj:e})),this.options.render)switch(this.options.render){case"canvas":return this.createCanvas(e);case"table":return this.createTable(e);case"svg":return this.createSVG(e);default:return this.createDefault(e)}return this.createDefault(e)};d.prototype.createDefault=function(t){var e=document.createElement("canvas");return e.getContext?this.createCanvas(t):document.createElementNS&&document.createElementNS(SVG_NS,"svg").createSVGRect?this.createSVG(t):this.createTable(t)},d.prototype.createCanvas=function(t){var e=document.createElement("canvas");e.width=this.options.width,e.height=this.options.height;for(var i=e.getContext("2d"),n=(this.options.width/t.getModuleCount()).toPrecision(4),o=this.options.height/t.getModuleCount().toPrecision(4),s=0;s<t.getModuleCount();s++)for(var a=0;a<t.getModuleCount();a++){i.fillStyle=t.modules[s][a]?this.options.foreground:this.options.background;var r=Math.ceil((a+1)*n)-Math.floor(a*n),l=Math.ceil((s+1)*n)-Math.floor(s*n);i.fillRect(Math.round(a*n),Math.round(s*o),r,l)}return e},d.prototype.createTable=function(t){var e=[];e.push('<table style="border:0px; margin:0px; padding:0px; border-collapse:collapse; background-color: '+this.options.background+';">');var i=-1,n=-1,o=-1,s=-1;i=o=Math.floor(this.options.width/t.getModuleCount()),n=s=Math.floor(this.options.height/t.getModuleCount()),0>=o&&(i=t.getModuleCount()<80?2:1),0>=s&&(n=t.getModuleCount()<80?2:1),foreTd='<td style="border:0px; margin:0px; padding:0px; width:'+i+"px; background-color: "+this.options.foreground+'"></td>',backTd='<td style="border:0px; margin:0px; padding:0px; width:'+i+"px; background-color: "+this.options.background+'"></td>',l=t.getModuleCount();for(var a=0;l>a;a++){e.push('<tr style="border:0px; margin:0px; padding:0px; height: '+n+'px">');for(var r=0;l>r;r++)e.push(t.modules[a][r]?foreTd:backTd);e.push("</tr>")}e.push("</table>");var c=document.createElement("span");return c.innerHTML=e.join(""),c.firstChild},d.prototype.createSVG=function(t){for(var e,i,n,o,s=t.getModuleCount(),a=this.options.height/this.options.width,r='<svg xmlns="http://www.w3.org/2000/svg" width="'+this.options.width+'px" height="'+this.options.height+'px" viewbox="0 0 '+10*s+" "+10*s*a+'">',l="<path ",u=' style="stroke-width:0.5;stroke:'+this.options.foreground+";fill:"+this.options.foreground+';"></path>',d=' style="stroke-width:0.5;stroke:'+this.options.background+";fill:"+this.options.background+';"></path>',h=0;s>h;h++)for(var p=0;s>p;p++)e=10*p,n=10*h*a,i=10*(p+1),o=10*(h+1)*a,r+=l+'d="M '+e+","+n+" L "+i+","+n+" L "+i+","+o+" L "+e+","+o+' Z"',r+=t.modules[h][p]?u:d;return r+="</svg>",c(r)[0]},s.prototype={constructor:s,getModuleCount:function(){return this.moduleCount},make:function(){this.getRightType(),this.dataCache=this.createData(),this.createQrcode()},makeImpl:function(t){this.moduleCount=4*this.typeNumber+17,this.modules=new Array(this.moduleCount);for(var e=0;e<this.moduleCount;e++)this.modules[e]=new Array(this.moduleCount);this.setupPositionProbePattern(0,0),this.setupPositionProbePattern(this.moduleCount-7,0),this.setupPositionProbePattern(0,this.moduleCount-7),this.setupPositionAdjustPattern(),this.setupTimingPattern(),this.setupTypeInfo(!0,t),this.typeNumber>=7&&this.setupTypeNumber(!0),this.mapData(this.dataCache,t)},setupPositionProbePattern:function(t,e){for(var i=-1;7>=i;i++)if(!(-1>=t+i||this.moduleCount<=t+i))for(var n=-1;7>=n;n++)-1>=e+n||this.moduleCount<=e+n||(this.modules[t+i][e+n]=i>=0&&6>=i&&(0==n||6==n)||n>=0&&6>=n&&(0==i||6==i)||i>=2&&4>=i&&n>=2&&4>=n?!0:!1)},createQrcode:function(){for(var t=0,e=0,i=null,n=0;8>n;n++){this.makeImpl(n);var o=f.getLostPoint(this);(0==n||t>o)&&(t=o,e=n,i=this.modules)}this.modules=i,this.setupTypeInfo(!1,e),this.typeNumber>=7&&this.setupTypeNumber(!1)},setupTimingPattern:function(){for(var t=8;t<this.moduleCount-8;t++)null==this.modules[t][6]&&(this.modules[t][6]=t%2==0,null==this.modules[6][t]&&(this.modules[6][t]=t%2==0))},setupPositionAdjustPattern:function(){for(var t=f.getPatternPosition(this.typeNumber),e=0;e<t.length;e++)for(var i=0;i<t.length;i++){var n=t[e],o=t[i];if(null==this.modules[n][o])for(var s=-2;2>=s;s++)for(var a=-2;2>=a;a++)this.modules[n+s][o+a]=-2==s||2==s||-2==a||2==a||0==s&&0==a?!0:!1}},setupTypeNumber:function(t){for(var e=f.getBCHTypeNumber(this.typeNumber),i=0;18>i;i++){var n=!t&&1==(e>>i&1);this.modules[Math.floor(i/3)][i%3+this.moduleCount-8-3]=n,this.modules[i%3+this.moduleCount-8-3][Math.floor(i/3)]=n}},setupTypeInfo:function(t,e){for(var i=h[this.errorCorrectLevel]<<3|e,n=f.getBCHTypeInfo(i),o=0;15>o;o++){var s=!t&&1==(n>>o&1);6>o?this.modules[o][8]=s:8>o?this.modules[o+1][8]=s:this.modules[this.moduleCount-15+o][8]=s;var s=!t&&1==(n>>o&1);8>o?this.modules[8][this.moduleCount-o-1]=s:9>o?this.modules[8][15-o-1+1]=s:this.modules[8][15-o-1]=s}this.modules[this.moduleCount-8][8]=!t},createData:function(){var t=new r,e=this.typeNumber>9?16:8;t.put(4,4),t.put(this.utf8bytes.length,e);for(var i=0,n=this.utf8bytes.length;n>i;i++)t.put(this.utf8bytes[i],8);for(t.length+4<=8*this.totalDataCount&&t.put(0,4);t.length%8!=0;)t.putBit(!1);for(;;){if(t.length>=8*this.totalDataCount)break;if(t.put(s.PAD0,8),t.length>=8*this.totalDataCount)break;t.put(s.PAD1,8)}return this.createBytes(t)},createBytes:function(t){for(var e=0,i=0,n=0,o=this.rsBlock.length/3,s=new Array,r=0;o>r;r++)for(var l=this.rsBlock[3*r+0],c=this.rsBlock[3*r+1],u=this.rsBlock[3*r+2],d=0;l>d;d++)s.push([u,c]);for(var h=new Array(s.length),p=new Array(s.length),m=0;m<s.length;m++){var v=s[m][0],g=s[m][1]-v;i=Math.max(i,v),n=Math.max(n,g),h[m]=new Array(v);for(var r=0;r<h[m].length;r++)h[m][r]=255&t.buffer[r+e];e+=v;var w=f.getErrorCorrectPolynomial(g),y=new a(h[m],w.getLength()-1),b=y.mod(w);p[m]=new Array(w.getLength()-1);for(var r=0;r<p[m].length;r++){var T=r+b.getLength()-p[m].length;p[m][r]=T>=0?b.get(T):0}}for(var x=new Array(this.totalDataCount),C=0,r=0;i>r;r++)for(var m=0;m<s.length;m++)r<h[m].length&&(x[C++]=h[m][r]);for(var r=0;n>r;r++)for(var m=0;m<s.length;m++)r<p[m].length&&(x[C++]=p[m][r]);return x},mapData:function(t,e){for(var i=-1,n=this.moduleCount-1,o=7,s=0,a=this.moduleCount-1;a>0;a-=2)for(6==a&&a--;;){for(var r=0;2>r;r++)if(null==this.modules[n][a-r]){var l=!1;s<t.length&&(l=1==(t[s]>>>o&1));var c=f.getMask(e,n,a-r);c&&(l=!l),this.modules[n][a-r]=l,o--,-1==o&&(s++,o=7)}if(n+=i,0>n||this.moduleCount<=n){n-=i,i=-i;break}}}},s.PAD0=236,s.PAD1=17;for(var h=[1,0,3,2],p={PATTERN000:0,PATTERN001:1,PATTERN010:2,PATTERN011:3,PATTERN100:4,PATTERN101:5,PATTERN110:6,PATTERN111:7},f={PATTERN_POSITION_TABLE:[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],G15:1335,G18:7973,G15_MASK:21522,getBCHTypeInfo:function(t){for(var e=t<<10;f.getBCHDigit(e)-f.getBCHDigit(f.G15)>=0;)e^=f.G15<<f.getBCHDigit(e)-f.getBCHDigit(f.G15);return(t<<10|e)^f.G15_MASK},getBCHTypeNumber:function(t){for(var e=t<<12;f.getBCHDigit(e)-f.getBCHDigit(f.G18)>=0;)e^=f.G18<<f.getBCHDigit(e)-f.getBCHDigit(f.G18);return t<<12|e},getBCHDigit:function(t){for(var e=0;0!=t;)e++,t>>>=1;return e},getPatternPosition:function(t){return f.PATTERN_POSITION_TABLE[t-1]},getMask:function(t,e,i){switch(t){case p.PATTERN000:return(e+i)%2==0;case p.PATTERN001:return e%2==0;case p.PATTERN010:return i%3==0;case p.PATTERN011:return(e+i)%3==0;case p.PATTERN100:return(Math.floor(e/2)+Math.floor(i/3))%2==0;case p.PATTERN101:return e*i%2+e*i%3==0;case p.PATTERN110:return(e*i%2+e*i%3)%2==0;case p.PATTERN111:return(e*i%3+(e+i)%2)%2==0;default:throw new Error("bad maskPattern:"+t)}},getErrorCorrectPolynomial:function(t){for(var e=new a([1],0),i=0;t>i;i++)e=e.multiply(new a([1,m.gexp(i)],0));return e},getLostPoint:function(t){for(var e=t.getModuleCount(),i=0,n=0,o=0;e>o;o++)for(var s=0,a=t.modules[o][0],r=0;e>r;r++){var l=t.modules[o][r];if(e-6>r&&l&&!t.modules[o][r+1]&&t.modules[o][r+2]&&t.modules[o][r+3]&&t.modules[o][r+4]&&!t.modules[o][r+5]&&t.modules[o][r+6]&&(e-10>r?t.modules[o][r+7]&&t.modules[o][r+8]&&t.modules[o][r+9]&&t.modules[o][r+10]&&(i+=40):r>3&&t.modules[o][r-1]&&t.modules[o][r-2]&&t.modules[o][r-3]&&t.modules[o][r-4]&&(i+=40)),e-1>o&&e-1>r){var c=0;l&&c++,t.modules[o+1][r]&&c++,t.modules[o][r+1]&&c++,t.modules[o+1][r+1]&&c++,(0==c||4==c)&&(i+=3)}a^l?s++:(a=l,s>=5&&(i+=3+s-5),s=1),l&&n++}for(var r=0;e>r;r++)for(var s=0,a=t.modules[0][r],o=0;e>o;o++){var l=t.modules[o][r];e-6>o&&l&&!t.modules[o+1][r]&&t.modules[o+2][r]&&t.modules[o+3][r]&&t.modules[o+4][r]&&!t.modules[o+5][r]&&t.modules[o+6][r]&&(e-10>o?t.modules[o+7][r]&&t.modules[o+8][r]&&t.modules[o+9][r]&&t.modules[o+10][r]&&(i+=40):o>3&&t.modules[o-1][r]&&t.modules[o-2][r]&&t.modules[o-3][r]&&t.modules[o-4][r]&&(i+=40)),a^l?s++:(a=l,s>=5&&(i+=3+s-5),s=1)}var u=Math.abs(100*n/e/e-50)/5;return i+=10*u}},m={glog:function(t){if(1>t)throw new Error("glog("+t+")");return m.LOG_TABLE[t]},gexp:function(t){for(;0>t;)t+=255;for(;t>=256;)t-=255;return m.EXP_TABLE[t]},EXP_TABLE:new Array(256),LOG_TABLE:new Array(256)},v=0;8>v;v++)m.EXP_TABLE[v]=1<<v;for(var v=8;256>v;v++)m.EXP_TABLE[v]=m.EXP_TABLE[v-4]^m.EXP_TABLE[v-5]^m.EXP_TABLE[v-6]^m.EXP_TABLE[v-8];for(var v=0;255>v;v++)m.LOG_TABLE[m.EXP_TABLE[v]]=v;a.prototype={get:function(t){return this.num[t]},getLength:function(){return this.num.length},multiply:function(t){for(var e=new Array(this.getLength()+t.getLength()-1),i=0;i<this.getLength();i++)for(var n=0;n<t.getLength();n++)e[i+n]^=m.gexp(m.glog(this.get(i))+m.glog(t.get(n)));return new a(e,0)},mod:function(t){var e=this.getLength(),i=t.getLength();if(0>e-i)return this;for(var n=new Array(e),o=0;e>o;o++)n[o]=this.get(o);for(;n.length>=i;){for(var s=m.glog(n[0])-m.glog(t.get(0)),o=0;o<t.getLength();o++)n[o]^=m.gexp(m.glog(t.get(o))+s);for(;0==n[0];)n.shift()}return new a(n,0)}};var g=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]];s.prototype.getRightType=function(){for(var t=1;41>t;t++){var e=g[4*(t-1)+this.errorCorrectLevel];if(void 0==e)throw new Error("bad rs block @ typeNumber:"+t+"/errorCorrectLevel:"+this.errorCorrectLevel);for(var i=e.length/3,n=0,o=0;i>o;o++){var s=e[3*o+0],a=e[3*o+2];n+=a*s}var r=t>9?2:1;if(this.utf8bytes.length+r<n||40==t){this.typeNumber=t,this.rsBlock=e,this.totalDataCount=n;break}}},r.prototype={get:function(t){var e=Math.floor(t/8);return this.buffer[e]>>>7-t%8&1},put:function(t,e){for(var i=0;e>i;i++)this.putBit(t>>>e-i-1&1)},putBit:function(t){var e=Math.floor(this.length/8);this.buffer.length<=e&&this.buffer.push(0),t&&(this.buffer[e]|=128>>>this.length%8),this.length++}},s.prototype={constructor:s,getModuleCount:function(){return this.moduleCount},make:function(){this.getRightType(),this.dataCache=this.createData(),this.createQrcode()},makeImpl:function(t){this.moduleCount=4*this.typeNumber+17,this.modules=new Array(this.moduleCount);for(var e=0;e<this.moduleCount;e++)this.modules[e]=new Array(this.moduleCount);this.setupPositionProbePattern(0,0),this.setupPositionProbePattern(this.moduleCount-7,0),this.setupPositionProbePattern(0,this.moduleCount-7),this.setupPositionAdjustPattern(),this.setupTimingPattern(),this.setupTypeInfo(!0,t),this.typeNumber>=7&&this.setupTypeNumber(!0),this.mapData(this.dataCache,t)},setupPositionProbePattern:function(t,e){for(var i=-1;7>=i;i++)if(!(-1>=t+i||this.moduleCount<=t+i))for(var n=-1;7>=n;n++)-1>=e+n||this.moduleCount<=e+n||(this.modules[t+i][e+n]=i>=0&&6>=i&&(0==n||6==n)||n>=0&&6>=n&&(0==i||6==i)||i>=2&&4>=i&&n>=2&&4>=n?!0:!1)},createQrcode:function(){for(var t=0,e=0,i=null,n=0;8>n;n++){this.makeImpl(n);var o=f.getLostPoint(this);(0==n||t>o)&&(t=o,e=n,i=this.modules)}this.modules=i,this.setupTypeInfo(!1,e),this.typeNumber>=7&&this.setupTypeNumber(!1)},setupTimingPattern:function(){for(var t=8;t<this.moduleCount-8;t++)null==this.modules[t][6]&&(this.modules[t][6]=t%2==0,null==this.modules[6][t]&&(this.modules[6][t]=t%2==0))},setupPositionAdjustPattern:function(){for(var t=f.getPatternPosition(this.typeNumber),e=0;e<t.length;e++)for(var i=0;i<t.length;i++){var n=t[e],o=t[i];if(null==this.modules[n][o])for(var s=-2;2>=s;s++)for(var a=-2;2>=a;a++)this.modules[n+s][o+a]=-2==s||2==s||-2==a||2==a||0==s&&0==a?!0:!1}},setupTypeNumber:function(t){for(var e=f.getBCHTypeNumber(this.typeNumber),i=0;18>i;i++){var n=!t&&1==(e>>i&1);this.modules[Math.floor(i/3)][i%3+this.moduleCount-8-3]=n,this.modules[i%3+this.moduleCount-8-3][Math.floor(i/3)]=n}},setupTypeInfo:function(t,e){for(var i=h[this.errorCorrectLevel]<<3|e,n=f.getBCHTypeInfo(i),o=0;15>o;o++){var s=!t&&1==(n>>o&1);6>o?this.modules[o][8]=s:8>o?this.modules[o+1][8]=s:this.modules[this.moduleCount-15+o][8]=s;var s=!t&&1==(n>>o&1);8>o?this.modules[8][this.moduleCount-o-1]=s:9>o?this.modules[8][15-o-1+1]=s:this.modules[8][15-o-1]=s}this.modules[this.moduleCount-8][8]=!t},createData:function(){var t=new r,e=this.typeNumber>9?16:8;t.put(4,4),t.put(this.utf8bytes.length,e);for(var i=0,n=this.utf8bytes.length;n>i;i++)t.put(this.utf8bytes[i],8);for(t.length+4<=8*this.totalDataCount&&t.put(0,4);t.length%8!=0;)t.putBit(!1);for(;;){if(t.length>=8*this.totalDataCount)break;if(t.put(s.PAD0,8),t.length>=8*this.totalDataCount)break;t.put(s.PAD1,8)}return this.createBytes(t)},createBytes:function(t){for(var e=0,i=0,n=0,o=this.rsBlock.length/3,s=new Array,r=0;o>r;r++)for(var l=this.rsBlock[3*r+0],c=this.rsBlock[3*r+1],u=this.rsBlock[3*r+2],d=0;l>d;d++)s.push([u,c]);for(var h=new Array(s.length),p=new Array(s.length),m=0;m<s.length;m++){var v=s[m][0],g=s[m][1]-v;i=Math.max(i,v),n=Math.max(n,g),h[m]=new Array(v);for(var r=0;r<h[m].length;r++)h[m][r]=255&t.buffer[r+e];e+=v;var w=f.getErrorCorrectPolynomial(g),y=new a(h[m],w.getLength()-1),b=y.mod(w);p[m]=new Array(w.getLength()-1);for(var r=0;r<p[m].length;r++){var T=r+b.getLength()-p[m].length;p[m][r]=T>=0?b.get(T):0}}for(var x=new Array(this.totalDataCount),C=0,r=0;i>r;r++)for(var m=0;m<s.length;m++)r<h[m].length&&(x[C++]=h[m][r]);for(var r=0;n>r;r++)for(var m=0;m<s.length;m++)r<p[m].length&&(x[C++]=p[m][r]);return x},mapData:function(t,e){for(var i=-1,n=this.moduleCount-1,o=7,s=0,a=this.moduleCount-1;a>0;a-=2)for(6==a&&a--;;){for(var r=0;2>r;r++)if(null==this.modules[n][a-r]){var l=!1;s<t.length&&(l=1==(t[s]>>>o&1));var c=f.getMask(e,n,a-r);c&&(l=!l),this.modules[n][a-r]=l,o--,-1==o&&(s++,o=7)}if(n+=i,0>n||this.moduleCount<=n){n-=i,i=-i;break}}}},s.PAD0=236,s.PAD1=17;for(var h=[1,0,3,2],p={PATTERN000:0,PATTERN001:1,PATTERN010:2,PATTERN011:3,PATTERN100:4,PATTERN101:5,PATTERN110:6,PATTERN111:7},f={PATTERN_POSITION_TABLE:[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],G15:1335,G18:7973,G15_MASK:21522,getBCHTypeInfo:function(t){for(var e=t<<10;f.getBCHDigit(e)-f.getBCHDigit(f.G15)>=0;)e^=f.G15<<f.getBCHDigit(e)-f.getBCHDigit(f.G15);return(t<<10|e)^f.G15_MASK},getBCHTypeNumber:function(t){for(var e=t<<12;f.getBCHDigit(e)-f.getBCHDigit(f.G18)>=0;)e^=f.G18<<f.getBCHDigit(e)-f.getBCHDigit(f.G18);return t<<12|e},getBCHDigit:function(t){for(var e=0;0!=t;)e++,t>>>=1;return e},getPatternPosition:function(t){return f.PATTERN_POSITION_TABLE[t-1]},getMask:function(t,e,i){switch(t){case p.PATTERN000:return(e+i)%2==0;case p.PATTERN001:return e%2==0;case p.PATTERN010:return i%3==0;case p.PATTERN011:return(e+i)%3==0;case p.PATTERN100:return(Math.floor(e/2)+Math.floor(i/3))%2==0;case p.PATTERN101:return e*i%2+e*i%3==0;case p.PATTERN110:return(e*i%2+e*i%3)%2==0;case p.PATTERN111:return(e*i%3+(e+i)%2)%2==0;default:throw new Error("bad maskPattern:"+t)}},getErrorCorrectPolynomial:function(t){for(var e=new a([1],0),i=0;t>i;i++)e=e.multiply(new a([1,m.gexp(i)],0));return e},getLostPoint:function(t){for(var e=t.getModuleCount(),i=0,n=0,o=0;e>o;o++)for(var s=0,a=t.modules[o][0],r=0;e>r;r++){var l=t.modules[o][r];if(e-6>r&&l&&!t.modules[o][r+1]&&t.modules[o][r+2]&&t.modules[o][r+3]&&t.modules[o][r+4]&&!t.modules[o][r+5]&&t.modules[o][r+6]&&(e-10>r?t.modules[o][r+7]&&t.modules[o][r+8]&&t.modules[o][r+9]&&t.modules[o][r+10]&&(i+=40):r>3&&t.modules[o][r-1]&&t.modules[o][r-2]&&t.modules[o][r-3]&&t.modules[o][r-4]&&(i+=40)),e-1>o&&e-1>r){var c=0;l&&c++,t.modules[o+1][r]&&c++,t.modules[o][r+1]&&c++,t.modules[o+1][r+1]&&c++,(0==c||4==c)&&(i+=3)}a^l?s++:(a=l,s>=5&&(i+=3+s-5),s=1),l&&n++}for(var r=0;e>r;r++)for(var s=0,a=t.modules[0][r],o=0;e>o;o++){var l=t.modules[o][r];e-6>o&&l&&!t.modules[o+1][r]&&t.modules[o+2][r]&&t.modules[o+3][r]&&t.modules[o+4][r]&&!t.modules[o+5][r]&&t.modules[o+6][r]&&(e-10>o?t.modules[o+7][r]&&t.modules[o+8][r]&&t.modules[o+9][r]&&t.modules[o+10][r]&&(i+=40):o>3&&t.modules[o-1][r]&&t.modules[o-2][r]&&t.modules[o-3][r]&&t.modules[o-4][r]&&(i+=40)),a^l?s++:(a=l,s>=5&&(i+=3+s-5),s=1)}var u=Math.abs(100*n/e/e-50)/5;return i+=10*u}},m={glog:function(t){if(1>t)throw new Error("glog("+t+")");return m.LOG_TABLE[t]},gexp:function(t){for(;0>t;)t+=255;for(;t>=256;)t-=255;return m.EXP_TABLE[t]},EXP_TABLE:new Array(256),LOG_TABLE:new Array(256)},v=0;8>v;v++)m.EXP_TABLE[v]=1<<v;for(var v=8;256>v;v++)m.EXP_TABLE[v]=m.EXP_TABLE[v-4]^m.EXP_TABLE[v-5]^m.EXP_TABLE[v-6]^m.EXP_TABLE[v-8];for(var v=0;255>v;v++)m.LOG_TABLE[m.EXP_TABLE[v]]=v;a.prototype={get:function(t){return this.num[t]},getLength:function(){return this.num.length},multiply:function(t){for(var e=new Array(this.getLength()+t.getLength()-1),i=0;i<this.getLength();i++)for(var n=0;n<t.getLength();n++)e[i+n]^=m.gexp(m.glog(this.get(i))+m.glog(t.get(n)));return new a(e,0)},mod:function(t){var e=this.getLength(),i=t.getLength();if(0>e-i)return this;for(var n=new Array(e),o=0;e>o;o++)n[o]=this.get(o);for(;n.length>=i;){for(var s=m.glog(n[0])-m.glog(t.get(0)),o=0;o<t.getLength();o++)n[o]^=m.gexp(m.glog(t.get(o))+s);for(;0==n[0];)n.shift()}return new a(n,0)}},g=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]],s.prototype.getRightType=function(){for(var t=1;41>t;t++){var e=g[4*(t-1)+this.errorCorrectLevel];if(void 0==e)throw new Error("bad rs block @ typeNumber:"+t+"/errorCorrectLevel:"+this.errorCorrectLevel);for(var i=e.length/3,n=0,o=0;i>o;o++){var s=e[3*o+0],a=e[3*o+2];n+=a*s}var r=t>9?2:1;if(this.utf8bytes.length+r<n||40==t){this.typeNumber=t,this.rsBlock=e,this.totalDataCount=n;break}}},r.prototype={get:function(t){var e=Math.floor(t/8);return this.buffer[e]>>>7-t%8&1},put:function(t,e){for(var i=0;e>i;i++)this.putBit(t>>>e-i-1&1)},putBit:function(t){var e=Math.floor(this.length/8);this.buffer.length<=e&&this.buffer.push(0),t&&(this.buffer[e]|=128>>>this.length%8),this.length++}},c.AMUI.qrcode=d,e.exports=d}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],53:[function(t,e){(function(i){"use strict";function n(){try{return l in r&&r[l]}catch(t){return!1}}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null;t("./core");var s,a={},r=window,l="localStorage";a.disabled=!1,a.version="1.3.17",a.set=function(){},a.get=function(){},a.has=function(t){return void 0!==a.get(t)},a.remove=function(){},a.clear=function(){},a.transact=function(t,e,i){null==i&&(i=e,e=null),null==e&&(e={});var n=a.get(t,e);i(n),a.set(t,n)},a.getAll=function(){},a.forEach=function(){},a.serialize=function(t){return JSON.stringify(t)},a.deserialize=function(t){if("string"!=typeof t)return void 0;try{return JSON.parse(t)}catch(e){return t||void 0}},n()&&(s=r[l],a.set=function(t,e){return void 0===e?a.remove(t):(s.setItem(t,a.serialize(e)),e)},a.get=function(t,e){var i=a.deserialize(s.getItem(t));return void 0===i?e:i},a.remove=function(t){s.removeItem(t)},a.clear=function(){s.clear()},a.getAll=function(){var t={};return a.forEach(function(e,i){t[e]=i}),t},a.forEach=function(t){for(var e=0;e<s.length;e++){var i=s.key(e);t(i,a.get(i))}});try{var c="__storeJs__";a.set(c,c),a.get(c)!=c&&(a.disabled=!0),a.remove(c)}catch(u){a.disabled=!0}a.enabled=!a.disabled,o.AMUI=o.AMUI||{},o.AMUI.store=a,e.exports=a}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}],54:[function(t,e){(function(i){"use strict";function n(){var t=o('[data-am-widget="wechatpay"]');return a?void t.on("click",".am-wechatpay-btn",function(t){t.preventDefault();var e=s.utils.parseOptions(o(this).parent().data("wechatPay"));return window.wx?void wx.checkJsApi({jsApiList:["chooseWXPay"],success:function(t){t.checkResult.chooseWXPay?wx.chooseWXPay(e):alert("微信版本不支持支付接口或没有开启！")},fail:function(){alert("调用 checkJsApi 接口时发生错误!")}}):void alert("没有微信 JS SDK")}):(t.hide(),!1)}var o="undefined"!=typeof window?window.jQuery:"undefined"!=typeof i?i.jQuery:null,s=t("./core"),a=window.navigator.userAgent.indexOf("MicroMessenger")>-1,r=n;o(document).on("ready",r),e.exports=o.AMUI.pay={VERSION:"1.0.0",init:r}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./core":4}]},{},[2]);
/*! Amaze UI v2.3.0 ~ helper | by Amaze UI Team | (c) 2015 AllMobilize, Inc. | Licensed under MIT | 2015-04-08T06:04:29 UTC */
 
(function(undefined) {
  'use strict';

  var registerIfCondHelper = function(hbs) {
    hbs.registerHelper('ifCond', function(v1, operator, v2, options) {
      switch (operator) {
        case '==':
          return (v1 == v2) ? options.fn(this) : options.inverse(this);
          break;
        case '===':
          return (v1 === v2) ? options.fn(this) : options.inverse(this);
          break;
        case '<':
          return (v1 < v2) ? options.fn(this) : options.inverse(this);
          break;
        case '<=':
          return (v1 <= v2) ? options.fn(this) : options.inverse(this);
          break;
        case '>':
          return (v1 > v2) ? options.fn(this) : options.inverse(this);
          break;
        case '>=':
          return (v1 >= v2) ? options.fn(this) : options.inverse(this);
          break;
        default:
          return options.inverse(this);
          break;
      }
      return options.inverse(this);
    });
  };

  if (typeof module !== 'undefined' && module.exports) {
    module.exports = registerIfCondHelper;
  }

  this.Handlebars && registerIfCondHelper(this.Handlebars);
}).call(this);

(function(undefined){
  'use strict';

  var registerAMUIPartials = function(hbs) {
    hbs.registerPartial('accordion', "{{#this}}\n  <section data-am-widget=\"accordion\" class=\"am-accordion {{#if theme}}am-accordion-{{theme}}{{else}}am-accordion-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\"{{#if id}} id=\"{{id}}\"{{/if}} data-am-accordion='{ {{#if options.multiple}}\"multiple\": true{{/if}} }'>\n    {{#each content}}\n      <dl class=\"am-accordion-item{{#if active}} am-active{{/if}}{{#if disabled}} am-disabled{{/if}}\">\n        <dt class=\"am-accordion-title\">\n          {{{title}}}\n        </dt>\n        <dd class=\"am-accordion-bd am-collapse {{#if active}}am-in{{/if}}\">\n          <!-- 规避 Collapase 处理有 padding 的折叠内容计算计算有误问题， 加一个容器 -->\n          <div class=\"am-accordion-content\">\n            {{{content}}}\n          </div>\n        </dd>\n      </dl>\n    {{/each}}\n  </section>\n{{/this}}\n");

    hbs.registerPartial('divider', "{{#this}}\n  <hr data-am-widget=\"divider\" style=\"{{#if options.width}}width:{{{options.width}}};{{/if}}{{#if options.height}}height:{{{options.height}}};{{/if}}\" class=\"am-divider {{#if theme}}am-divider-{{theme}}{{else}}am-divider-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\"{{#if id}} id=\"{{id}}\"{{/if}} />\n{{/this}}\n");

    hbs.registerPartial('duoshuo', "{{#this}}\n  <div data-am-widget=\"duoshuo\" class=\"am-duoshuo{{#if theme}} am-duoshuo-{{theme}}{{else}} am-duoshuo-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\"{{#if id}} id=\"{{id}}\"{{/if}} {{#if options.shortName}}data-ds-short-name=\"{{options.shortName}}\"{{/if}}>\n    <div class=\"ds-thread\" {{#if content}}{{#each content}}{{#ifCond @key '==' 'threadKey'}}  data-thread-key=\"{{this}}\"{{else}} data-{{@key}}=\"{{this}}\"{{/ifCond}}{{/each}}{{/if}}>\n    </div>\n  </div>\n{{/this}}");

    hbs.registerPartial('figure', "{{#this}}\n  <figure data-am-widget=\"figure\" class=\"am am-figure {{#if theme}}am-figure-{{theme}}{{else}}am-figure-default{{/if}} {{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\" {{#if id}}\n      id=\"{{id}}\"{{/if}}  data-am-figure=\"{ {{#if options.zoomAble}} pureview: '{{options.zoomAble}}'{{/if}} }\">\n    {{#if content.link}}<a href=\"{{content.link}}\" title=\"{{content.figcaption}}\" class=\"{{className}}\">{{/if}}\n\n    {{#if options.figcaptionPosition}}\n      {{#ifCond options.figcaptionPosition '==' 'top'}}\n        {{#if content.figcaption}}\n          <figcaption class=\"am-figure-capition-top\">\n            {{content.figcaption}}\n          </figcaption>\n        {{/if}}\n      {{/ifCond}}\n    {{/if}}\n\n    {{#if content.img}}\n      <img src=\"{{content.img}}\" {{#if content.rel}}data-rel=\"{{content.rel}}\"{{/if}} alt=\"{{#if content.imgAlt}}{{content.imgAlt}}{{else}}{{content.figcaption}}{{/if}}\"/>\n    {{/if}}\n    {{#if options.figcaptionPosition}}\n      {{#ifCond options.figcaptionPosition '==' 'bottom'}}\n        {{#if content.figcaption}}\n          <figcaption class=\"am-figure-capition-btm\">\n            {{content.figcaption}}\n          </figcaption>\n        {{/if}}\n      {{/ifCond}}\n    {{else}}\n      {{#if content.figcaption}}\n        <figcaption class=\"am-figure-capition-btm\">\n          {{content.figcaption}}\n        </figcaption>\n      {{/if}}\n    {{/if}}\n\n    {{#if content.link}}</a>{{/if}}\n  </figure>\n{{/this}}\n");

    hbs.registerPartial('footer', "{{#this}}\n  <footer data-am-widget=\"footer\"\n          class=\"am-footer {{#if theme}}am-footer-{{theme}}{{else}}am-footer-default {{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\"\n          {{#if id}}id=\"{{id}}\"{{/if}} data-am-footer=\"{ {{#if options.addToHS}}addToHS: 1{{/if}} }\">\n    <div class=\"am-footer-switch\">\n    <span class=\"{{#if options.modal}}am-footer-ysp{{/if}}\" data-rel=\"mobile\"\n          data-am-modal=\"{target: '#am-switch-mode'}\">\n      {{#unless content.switchName}}\n        {{#ifCond content.lang '==' 'en'}}\n          Mobile\n        {{else}}\n          云适配版\n        {{/ifCond}}\n      {{else}}\n        {{content.switchName}}\n      {{/unless}}\n    </span>\n      <span class=\"am-footer-divider\"> | </span>\n      <a id=\"godesktop\" data-rel=\"desktop\" class=\"am-footer-desktop\" href=\"javascript:\">\n        {{#ifCond content.lang '==' 'en'}}\n          Desktop\n        {{else}}\n          电脑版\n        {{/ifCond}}\n      </a>\n    </div>\n    <div class=\"am-footer-miscs {{#if options.textPosition}}am-text-left{{/if}}\">\n\n      {{#if options.techSupportCo}}\n        {{#ifCond content.lang '==' 'en'}}\n          <p>Supported by {{#if options.techSupportSite}}<a href=\"{{options.techSupportSite}}\"\n                                                            title=\"{{options.techSupportCo}}\"\n                                                            target=\"_blank\"> class=\"{{className}}\"{{{options.techSupportCo}}}</a>{{else}}{{{options.techSupportCo}}}{{/if}}\n            .</p>\n        {{else}}\n          <p>由 {{#if options.techSupportSite}}<a href=\"{{options.techSupportSite}}\" title=\"{{options.techSupportCo}}\"\n                                                target=\"_blank\" class=\"{{techSupportClassName}}\">{{{options.techSupportCo}}}</a>{{else}}{{{options.techSupportCo}}}{{/if}}\n            提供技术支持</p>\n        {{/ifCond}}\n      {{/if}}\n      {{#each content.companyInfo}}\n        <p>{{{detail}}}</p>\n      {{/each}}\n    </div>\n  </footer>\n\n  <div id=\"am-footer-modal\"\n       class=\"am-modal am-modal-no-btn am-switch-mode-m {{#if theme}}am-switch-mode-m-{{theme}}{{/if}}\">\n    <div class=\"am-modal-dialog\">\n      <div class=\"am-modal-hd am-modal-footer-hd\">\n        <a href=\"javascript:void(0)\" data-dismiss=\"modal\" class=\"am-close am-close-spin {{className}}\" data-am-modal-close>&times;</a>\n      </div>\n      <div class=\"am-modal-bd\">\n        {{#ifCond content.lang '==' 'en'}}\n          You are visiting\n        {{else}}\n          您正在浏览的是\n        {{/ifCond}}\n\n        <span class=\"am-switch-mode-owner\">\n          {{#if content.owner}}\n            {{content.owner}}\n          {{else}}\n            云适配\n          {{/if}}\n        </span>\n\n        <span class=\"am-switch-mode-slogan\">\n          {{#if content.slogan}}\n            {{{content.slogan}}}\n          {{else}}\n            {{#ifCond content.lang '==' 'en'}}\n              mobilized version for your device.\n            {{else}}\n              为您当前手机订制的移动网站。\n            {{/ifCond}}\n          {{/if}}\n        </span>\n      </div>\n    </div>\n  </div>\n{{/this}}\n");

    hbs.registerPartial('gallery', "{{#this}}\n  <ul data-am-widget=\"gallery\" class=\"am-gallery{{#if options.cols}} am-avg-sm-{{options.cols}}{{else}} am-avg-sm-2{{/if}}\n  am-avg-md-3 am-avg-lg-4 {{#if\n  theme}}am-gallery-{{theme}}{{else}}am-gallery-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\" data-am-gallery=\"{ {{#if options.gallery}}pureview: true{{/if}} }\" {{#if id}}id=\"{{id}}\"{{/if}}>\n    {{#each content}}\n      <li>\n        <div class=\"am-gallery-item\">\n          {{#if link}}\n            <a href=\"{{link}}\" class=\"{{className}}\">\n              {{#if img}}<img src=\"{{img}}\" {{#if rel}}data-rel=\"{{rel}}\"{{/if}} alt=\"{{title}}\"/>{{/if}}\n              {{#if title}}\n                <h3 class=\"am-gallery-title\">{{{title}}}</h3>\n              {{/if}}\n              {{#if desc}}\n                <div class=\"am-gallery-desc\">{{{desc}}}</div>\n              {{/if}}\n            </a>\n          {{else}}\n            {{#if img}}<img src=\"{{img}}\" {{#if rel}}data-rel=\"{{rel}}\"{{/if}} alt=\"{{title}}\"/>{{/if}}\n            {{#if title}}\n              <h3 class=\"am-gallery-title\">{{{title}}}</h3>\n            {{/if}}\n            {{#if desc}}\n              <div class=\"am-gallery-desc\">{{{desc}}}</div>\n            {{/if}}\n          {{/if}}\n        </div>\n      </li>\n    {{/each}}\n  </ul>\n{{/this}}\n");

    hbs.registerPartial('gotop', "{{#this}}\n  <div data-am-widget=\"gotop\" class=\"am-gotop {{#if theme}}am-gotop-{{theme}}{{else}}am-gotop-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\" {{#if id}}id=\"{{id}}\"{{/if}}>\n    <a href=\"#top\" title=\"{{content.title}}\">\n      {{#if content.title}}\n        <span class=\"am-gotop-title\">{{content.title}}</span>\n      {{/if}}\n      {{#if content.customIcon}}\n        <img class=\"am-gotop-icon-custom\" src=\"{{content.customIcon}}\" />\n      {{else}}\n        {{#if content.icon}}\n          <i class=\"am-gotop-icon am-icon-{{content.icon}}\"></i>\n        {{else}}\n          <i class=\"am-gotop-icon am-icon-chevron-up\"></i>\n        {{/if}}\n      {{/if}}\n    </a>\n  </div>\n{{/this}}\n");

    hbs.registerPartial('header', "{{#this}}\n  <header data-am-widget=\"header\"\n          class=\"am-header{{#if theme}} am-header-{{theme}}{{else}} am-header-default{{/if}}{{#if options.fixed}} am-header-fixed{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\"{{#if id}}\n          id=\"{{id}}\"{{/if}}>\n    {{#if content.left}}\n      <div class=\"am-header-left am-header-nav\">\n        {{#each content.left}}\n          <a href=\"{{link}}\" class=\"{{className}}\">\n            {{#if title}}\n              <span class=\"am-header-nav-title\">\n                {{title}}\n              </span>\n            {{/if}}\n\n            {{# if customIcon}}\n              <img class=\"am-header-icon-custom\" src=\"{{customIcon}}\" alt=\"\"/>\n            {{else}}\n              {{#if icon}}\n                <i class=\"am-header-icon am-icon-{{icon}}\"></i>\n              {{/if}}\n            {{/if}}\n          </a>\n        {{/each}}\n      </div>\n    {{/if}}\n\n    {{#if content.title}}\n      <h1 class=\"am-header-title\">\n        {{#if content.link}}\n          <a href=\"{{content.link}}\" class=\"{{content.className}}\">\n            {{{content.title}}}\n          </a>\n        {{else}}\n          {{{content.title}}}\n        {{/if}}\n      </h1>\n    {{/if}}\n\n    {{#if content.right}}\n      <div class=\"am-header-right am-header-nav\">\n        {{#each content.right}}\n          <a href=\"{{link}}\" class=\"{{className}}\">\n            {{#if title}}\n              <span class=\"am-header-nav-title\">\n                {{title}}\n              </span>\n            {{/if}}\n\n            {{# if customIcon}}\n              <img class=\"am-header-icon-custom\" src=\"{{customIcon}}\" alt=\"\"/>\n            {{else}}\n              {{#if icon}}\n                <i class=\"am-header-icon am-icon-{{icon}}\"></i>\n              {{/if}}\n            {{/if}}\n          </a>\n        {{/each}}\n      </div>\n    {{/if}}\n  </header>\n{{/this}}\n");

    hbs.registerPartial('intro', "{{#this }}\n  <div data-am-widget=\"intro\"\n       class=\"am-intro am-cf {{#if theme}}am-intro-{{theme}}{{else}}am-intro-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\"\n       {{#if id}}id=\"{{id}}\"{{/if}}>\n    {{#if content.title}}\n      <div class=\"am-intro-hd\">\n        <h2 class=\"am-intro-title\">{{{content.title}}}</h2>\n        {{#if content.more.link}}\n          {{#ifCond options.position '==' 'top'}}\n            <a class=\"am-intro-more am-intro-more-top {{content.more.className}}\" href=\"{{content.more.link}}\">{{content.more.title}}</a>\n          {{/ifCond}}\n        {{/if}}\n      </div>\n    {{/if}}\n\n    <div class=\"am-g am-intro-bd\">\n      {{#if content.left}}\n        <div\n            class=\"am-intro-left {{#if options.leftCols}}am-u-sm-{{options.leftCols}}{{/if}}\">{{{content.left}}}</div>\n      {{/if}}\n      {{#if content.right}}\n        <div\n            class=\"am-intro-right {{#if options.rightCols}}am-u-sm-{{options.rightCols}}{{/if}}\">{{{content.right}}}</div>\n      {{/if}}\n    </div>\n    {{#ifCond options.position '==' 'bottom'}}\n      <div class=\"am-intro-more-bottom\">\n        <a class=\"am-btn am-btn-default {{content.more.className}}\"\n           href=\"{{content.more.link}}\">{{content.more.title}}</a>\n      </div>\n    {{/ifCond}}\n  </div>\n{{/this}}\n");

    hbs.registerPartial('list_news', "{{#this}}\n  <div data-am-widget=\"list_news\" class=\"am-list-news{{#if theme}} am-list-news-{{theme}}{{else}} am-list-news-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\" {{#if id}}id=\"{{id}}\"{{/if}}>\n  <!--列表标题-->\n  {{#if content.header.title}}\n    <div class=\"am-list-news-hd am-cf\">\n      {{#if content.header.link}} <!--带更多链接-->\n        <a href=\"{{content.header.link}}\" class=\"{{content.header.className}}\">\n          <h2>{{{content.header.title}}}</h2>\n          {{#ifCond content.header.morePosition '==' 'top'}}\n            <span class=\"am-list-news-more am-fr\">{{{content.header.moreText}}}</span>\n          {{/ifCond}}\n        </a>\n      {{else}} <!--不带更多链接-->\n        <h2>{{{content.header.title}}}</h2>\n      {{/if}}\n    </div>\n  {{/if}}\n\n  <div class=\"am-list-news-bd\">\n  <ul class=\"am-list\">\n  {{#ifCond options.type '==' 'thumb'}}\n    {{#ifCond options.thumbPosition '==' 'top'}} <!--缩略图在标题上方-->\n    {{#each content.main}}\n      <li class=\"am-g{{#if date}} am-list-item-dated{{/if}}{{#if desc}} am-list-item-desced{{/if}}{{#if img}} am-list-item-thumbed am-list-item-thumb-top{{/if}}\">\n        {{!--\n          am-list-item-dated - 带日期\n          am-list-item-desced - 带描述\n          am-list-item-thumbed - 带缩略图的\n        --}}\n        {{#if img}}\n        <div class=\"am-list-thumb am-u-sm-12\">\n          <a href=\"{{link}}\" class=\"{{className}}\">\n            <img src=\"{{img}}\" alt=\"{{title}}\"/>\n          </a>\n          {{#if thumbAddition}}\n            <div class=\"am-list-thumb-addon\">{{{thumbAddition}}}</div>\n          {{/if}}\n        </div>\n        {{/if}}\n\n        <div class=\"{{#if img}}{{/if}} am-list-main\">\n          {{#if title}}\n            <h3 class=\"am-list-item-hd\"><a href=\"{{link}}\" class=\"{{className}}\">{{{title}}}</a></h3>\n          {{/if}}\n\n          {{#if date}}\n            <span class=\"am-list-date\">{{date}}</span>\n          {{/if}}\n\n          {{#if desc}}\n            <div class=\"am-list-item-text\">{{{desc}}}</div>\n          {{/if}}\n\n          {{#if mainAddition}}\n            <div class=\"am-list-news-addon\">{{{mainAddition}}}</div>\n          {{/if}}\n        </div>\n      </li>\n    {{/each}}\n    {{/ifCond}}\n\n    {{#ifCond options.thumbPosition '==' 'bottom-left'}} <!--缩略图在标题下方居左-->\n    {{#each content.main}}\n      <li class=\"am-g{{#if date}} am-list-item-dated{{/if}}{{#if desc}} am-list-item-desced{{/if}}{{#if img}} am-list-item-thumbed am-list-item-thumb-bottom-left{{/if}}\">\n        {{!--\n          am-list-item-dated - 带日期\n          am-list-item-desced - 带描述\n          am-list-item-thumbed - 带缩略图的\n        --}}\n        {{#if title}}\n          <h3 class=\"am-list-item-hd\"><a href=\"{{link}}\" class=\"{{className}}\">{{{title}}}</a></h3>\n        {{/if}}\n        {{#if img}}\n        <div class=\"am-u-sm-4 am-list-thumb\">\n          <a href=\"{{link}}\" class=\"{{className}}\">\n            <img src=\"{{img}}\" alt=\"{{title}}\"/>\n          </a>\n          {{#if thumbAddition}}\n            <div class=\"am-list-thumb-addon\">{{{thumbAddition}}}</div>\n          {{/if}}\n        </div>\n        {{/if}}\n\n        <div class=\"{{#if img}} am-u-sm-8 {{/if}} am-list-main\">\n          {{#if date}}\n            <span class=\"am-list-date\">{{date}}</span>\n          {{/if}}\n\n          {{#if desc}}\n            <div class=\"am-list-item-text\">{{{desc}}}</div>\n          {{/if}}\n\n          {{#if mainAddition}}\n            <div class=\"am-list-news-addon\">{{{mainAddition}}}</div>\n          {{/if}}\n        </div>\n      </li>\n    {{/each}}\n    {{/ifCond}}\n\n    {{#ifCond options.thumbPosition '==' 'bottom-right'}} <!--缩略图在标题下方居右-->\n    {{#each content.main}}\n      <li class=\"am-g{{#if date}} am-list-item-dated{{/if}}{{#if desc}} am-list-item-desced{{/if}}{{#if img}} am-list-item-thumbed am-list-item-thumb-bottom-right{{/if}}\">\n        {{!--\n          am-list-item-dated - 带日期\n          am-list-item-desced - 带描述\n          am-list-item-thumbed - 带缩略图的\n        --}}\n        {{#if title}}\n          <h3 class=\"am-list-item-hd\"><a href=\"{{link}}\" class=\"{{className}}\">{{{title}}}</a></h3>\n        {{/if}}\n\n        <div class=\"{{#if img}} am-u-sm-8{{/if}} am-list-main\">\n          {{#if date}}\n            <span class=\"am-list-date\">{{date}}</span>\n          {{/if}}\n\n          {{#if desc}}\n            <div class=\"am-list-item-text\">{{{desc}}}</div>\n          {{/if}}\n\n          {{#if mainAddition}}\n            <div class=\"am-list-news-addon\">{{{mainAddition}}}</div>\n          {{/if}}\n        </div>\n        {{#if img}}\n        <div class=\"am-list-thumb am-u-sm-4\">\n          <a href=\"{{link}}\" class=\"{{className}}\">\n            <img src=\"{{img}}\" alt=\"{{title}}\"/>\n          </a>\n          {{#if thumbAddition}}\n            <div class=\"am-list-thumb-addon\">{{{thumbAddition}}}</div>\n          {{/if}}\n        </div>\n        {{/if}}\n      </li>\n    {{/each}}\n    {{/ifCond}}\n\n    {{#ifCond options.thumbPosition '==' 'left'}} <!--缩略图在标题左边-->\n    {{#each content.main}}\n      <li class=\"am-g{{#if date}} am-list-item-dated{{/if}}{{#if desc}} am-list-item-desced{{/if}}{{#if img}} am-list-item-thumbed am-list-item-thumb-left{{/if}}\">\n        {{!--\n          am-list-item-dated - 带日期\n          am-list-item-desced - 带描述\n          am-list-item-thumbed - 带缩略图的\n        --}}\n        {{#if img}}\n        <div class=\"am-u-sm-4 am-list-thumb\">\n          <a href=\"{{link}}\" class=\"{{className}}\">\n            <img src=\"{{img}}\" alt=\"{{title}}\"/>\n          </a>\n          {{#if thumbAddition}}\n            <div class=\"am-list-thumb-addon\">{{{thumbAddition}}}</div>\n          {{/if}}\n        </div>\n        {{/if}}\n\n        <div class=\"{{#if img}} am-u-sm-8{{/if}} am-list-main\">\n          {{#if title}}\n            <h3 class=\"am-list-item-hd\"><a href=\"{{link}}\" class=\"{{className}}\">{{{title}}}</a></h3>\n          {{/if}}\n          {{#if date}}\n            <span class=\"am-list-date\">{{date}}</span>\n          {{/if}}\n\n          {{#if desc}}\n            <div class=\"am-list-item-text\">{{{desc}}}</div>\n          {{/if}}\n\n          {{#if mainAddition}}\n            <div class=\"am-list-news-addon\">{{{mainAddition}}}</div>\n          {{/if}}\n        </div>\n      </li>\n    {{/each}}\n    {{/ifCond}}\n\n    {{#ifCond options.thumbPosition '==' 'right'}} <!--缩略图在标题右边-->\n    {{#each content.main}}\n      <li class=\"am-g{{#if date}} am-list-item-dated{{/if}}{{#if desc}} am-list-item-desced{{/if}}{{#if img}} am-list-item-thumbed am-list-item-thumb-right{{/if}}\">\n        {{!--\n          am-list-item-dated - 带日期\n          am-list-item-desced - 带描述\n          am-list-item-thumbed - 带缩略图的\n        --}}\n        <div class=\"{{#if img}} am-u-sm-8{{/if}} am-list-main\">\n          {{#if title}}\n            <h3 class=\"am-list-item-hd\"><a href=\"{{link}}\" class=\"{{className}}\">{{{title}}}</a></h3>\n          {{/if}}\n\n          {{#if date}}\n            <span class=\"am-list-date\">{{date}}</span>\n          {{/if}}\n\n          {{#if desc}}\n            <div class=\"am-list-item-text\">{{{desc}}}</div>\n          {{/if}}\n\n          {{#if mainAddition}}\n            <div class=\"am-list-news-addon\">{{{mainAddition}}}</div>\n          {{/if}}\n        </div>\n        {{#if img}}\n          <div class=\"am-u-sm-4 am-list-thumb\">\n            <a href=\"{{link}}\" class=\"{{className}}\">\n              <img src=\"{{img}}\" alt=\"{{title}}\"/>\n            </a>\n            {{#if thumbAddition}}\n              <div class=\"am-list-thumb-addon\">{{{thumbAddition}}}</div>\n            {{/if}}\n          </div>\n        {{/if}}\n      </li>\n    {{/each}}\n    {{/ifCond}}\n\n  {{else}}{{!--不带缩略图--}}\n    {{#each content.main}}\n      <li class=\"am-g{{#if date}} am-list-item-dated{{/if}}{{#if desc}} am-list-item-desced{{/if}}{{#if img}} am-list-item-thumbed{{/if}}\">\n        {{!--\n          am-list-item-dated - 带日期\n          am-list-item-desced - 带描述\n          am-list-item-thumbed - 带缩略图的\n        --}}\n        {{#if title}}\n          <a href=\"{{link}}\" class=\"am-list-item-hd {{className}}\">{{{title}}}</a>\n        {{/if}}\n\n        {{#if date}}\n          <span class=\"am-list-date\">{{date}}</span>\n        {{/if}}\n\n        {{#if desc}}\n          <div class=\"am-list-item-text\">{{{desc}}}</div>\n        {{/if}}\n\n        {{#if mainAddition}}\n          <div class=\"am-list-news-addon\">{{{mainAddition}}}</div>\n        {{/if}}\n      </li>\n    {{/each}}\n  {{/ifCond}}\n  </ul>\n  </div>\n\n  {{#ifCond content.header.morePosition '==' 'bottom'}}<!--更多在底部-->\n    {{#if content.header.link}}\n      <div class=\"am-list-news-ft\">\n        <a class=\"am-list-news-more am-btn am-btn-default {{content.header.className}}\" href=\"{{content.header.link}}\">{{{content.header.moreText}}}</a>\n      </div>\n    {{/if}}\n  {{/ifCond}}\n  </div>\n{{/this}}\n");

    hbs.registerPartial('map', "{{#this}}\n  <div data-am-widget=\"map\" class=\"am-map {{#if theme}}am-map-{{theme}}{{else}}am-map-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\"\n      data-name=\"{{options.name}}\" data-address=\"{{options.address}}\" data-longitude=\"{{options.longitude}}\" data-latitude=\"{{options.latitude}}\" data-scaleControl=\"{{options.scaleControl}}\" data-zoomControl=\"{{options.zoomControl}}\" data-setZoom=\"{{options.setZoom}}\" data-icon=\"{{options.icon}}\">\n    <div id=\"bd-map\"></div>\n  </div>\n{{/this}}");

    hbs.registerPartial('mechat', "{{#this}}\n  <section data-am-widget=\"mechat\" class=\"am-mechat{{#if theme}} am-mechat-{{theme}}{{else}} am-mechat-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\" {{#if id}} id=\"{{id}}\" {{/if}} {{#if options.unitid}}data-am-mechat-unitid=\"{{options.unitid}}\"{{/if}}>\n    <div id=\"mechat\"></div>\n  </section>\n{{/this}}");

    hbs.registerPartial('menu', "{{#this}}\n  <nav data-am-widget=\"menu\" class=\"am-menu {{#if theme}} am-menu-{{theme}}{{else}} am-menu-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\" {{options.dataset}} {{#if id}}id=\"{{id}}\"{{/if}}\n    {{#ifCond theme '==' 'dropdown1'}} data-am-menu-collapse{{/ifCond}}\n    {{#ifCond theme '==' 'dropdown2'}} data-am-menu-collapse{{/ifCond}}\n    {{#ifCond theme '==' 'slide1'}} data-am-menu-collapse{{/ifCond}}\n    {{#ifCond theme '==' 'offcanvas1'}} data-am-menu-offcanvas{{/ifCond}}\n    {{#ifCond theme '==' 'offcanvas2'}} data-am-menu-offcanvas{{/ifCond}}> {{!-- 与模板深耦合，与 JS 浅耦合 --}}\n    <a href=\"javascript: void(0)\" class=\"am-menu-toggle\">\n      {{#if options.toggleTitle}}\n        <span class=\"am-menu-toggle-title\">{{options.toggleTitle}}</span>\n      {{/if}}\n      {{#if options.toggleCustomIcon}}\n        <img src=\"{{options.toggleCustomIcon}}\" alt=\"Menu Toggle\"/>\n      {{else}}\n        {{#if options.toggleIcon}}\n          <i class=\"am-menu-toggle-icon am-icon-{{options.toggleIcon}}\"></i>\n          {{else}}\n          <i class=\"am-menu-toggle-icon am-icon-bars\"></i>\n        {{/if}}\n      {{/if}}\n    </a>\n\n    {{!-- offCanvas menu Wrap --}}\n    {{!-- 问题：方便用户，但是与主题名称（类名）耦合过深 --}}\n    {{#ifCond theme '==' 'offcanvas1'}}\n    <div class=\"am-offcanvas\" {{#if options.closeOffCanvasOnclick}}data-dismiss-on=\"click\"{{/if}}>\n      <div class=\"am-offcanvas-bar{{#if options.offCanvasFlip}} am-offcanvas-bar-flip{{/if}}\">\n    {{/ifCond}}\n    {{#ifCond theme '==' 'offcanvas2'}}\n    <div class=\"am-offcanvas\">\n      <div class=\"am-offcanvas-bar{{#if options.offCanvasFlip}} am-offcanvas-bar-flip{{/if}}\">\n    {{/ifCond}}\n\n    {{#if content}}\n      <ul class=\"am-menu-nav {{#if options.cols}}am-avg-sm-{{options\n      .cols}}{{else}}am-avg-sm-1{{/if}}{{#ifCond theme '==' 'dropdown1'}} am-collapse{{/ifCond}}{{#ifCond theme\n      '==' 'dropdown2'}} am-collapse{{/ifCond}}{{#ifCond theme\n      '==' 'slide1'}} am-collapse{{/ifCond}}\">\n        {{#each content}}\n          <li class=\"{{#if subMenu}}am-parent{{/if}}{{#if className}} {{className}}{{/if}}\">\n            <a href=\"{{link}}\" class=\"{{className}}\" {{#if target}}target=\"{{target}}\" {{/if}}>{{{title}}}</a>\n            {{#if subMenu}}\n              <ul class=\"am-menu-sub am-collapse {{#if subCols}} am-avg-sm-{{subCols}}{{else}}\n              am-avg-sm-1{{/if}} {{subMenuClassName}}\">\n                {{#each subMenu}}\n                  <li class=\"{{#if subMenu}} am-parent{{/if}}{{#if className}} {{className}}{{/if}}\">\n                    <a href=\"{{link}}\" class=\"{{className}}\" {{#if target}}target=\"{{target}}\" {{/if}}>{{{title}}}</a>\n                  </li>\n                {{/each}}\n                {{!-- 显示进入栏目链接 --}}\n                {{#if channelLink}}\n                  <li class=\"am-menu-nav-channel\"><a href=\"{{link}}\" class=\"{{className}}\" title=\"{{title}}\">{{{channelLink}}}</a></li>\n                {{/if}}\n              </ul>\n            {{/if}}\n          </li>\n        {{/each}}\n      </ul>\n    {{/if}}\n\n    {{#ifCond theme '==' 'offcanvas1'}}\n      </div>\n    </div>\n    {{/ifCond}}\n    {{#ifCond theme '==' 'offcanvas2'}}\n      </div>\n    </div>\n    {{/ifCond}}\n    {{!-- 不要问我为什么这样写，我也不想这样 --}}\n  </nav>\n{{/this}}\n");

    hbs.registerPartial('navbar', "{{#this}}\n  <div data-am-widget=\"navbar\" class=\"am-navbar am-cf {{#if theme}}am-navbar-{{theme}}{{else}}am-navbar-default{{/if}} {{#if options.iconPosition}}am-navbar-inline{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\"\n      id=\"{{id}}\">\n    {{#if content}}\n      <ul class=\"am-navbar-nav am-cf {{#if options.cols}}am-avg-sm-{{options.cols}}{{/if}}\">\n        {{#each content}}\n          <li {{#if dataApi}}{{dataApi}}{{/if}}>\n            <a href=\"{{link}}\" class=\"{{className}}\">\n              {{#if customIcon}}\n                <img src=\"{{customIcon}}\" alt=\"{{title}}\"/>\n              {{else}}\n                {{#if icon}}\n                  <span class=\"am-icon-{{icon}}\"></span>\n                {{/if}}\n              {{/if}}\n              {{#if title}}\n                <span class=\"am-navbar-label\">{{title}}</span>\n              {{/if}}\n            </a>\n          </li>\n        {{/each}}\n      </ul>\n    {{/if}}\n  </div>\n{{/this}}\n");

    hbs.registerPartial('pagination', "{{#this}}\n  <ul data-am-widget=\"pagination\"\n      class=\"am-pagination {{#if theme}}am-pagination-{{theme}}{{else}}am-pagination-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\"\n      {{#if id}}id=\"{{id}}\"{{/if}}>\n\n    {{#if content.firstTitle}}\n      <li class=\"am-pagination-first {{content.firstClassName}}\">\n        <a href=\"{{content.firstLink}}\" class=\"{{content.firstClassName}}\">{{{content.firstTitle}}}</a>\n      </li>\n    {{/if}}\n\n    {{#if content.prevTitle}}\n      <li class=\"am-pagination-prev {{content.prevClassName}}\">\n        <a href=\"{{content.prevLink}}\" class=\"{{content.prevClassName}}\">{{{content.prevTitle}}}</a>\n      </li>\n    {{/if}}\n\n    {{! 移除 options.select，根据主题来判断结构，无奈 handlebars 逻辑处理...}}\n\n    {{#if content.page}}\n      {{#ifCond theme '==' 'select'}}\n        <li class=\"am-pagination-select\">\n          <select>\n            {{#each content.page}}\n              <option value=\"{{link}}\" class=\"{{className}}\">{{title}}{{#if ../content.total}}\n                / {{../../content.total}}{{/if}}\n              </option>\n            {{/each}}\n          </select>\n        </li>\n      {{else}}\n        {{#ifCond theme '==' 'one'}}\n          <li class=\"am-pagination-select\">\n            <select>\n              {{#each content.page}}\n                {{content.total}}\n                <option value=\"{{link}}\" class=\"{{className}}\">{{title}}{{#if ../content.total}}\n                  / {{../../content.total}}{{/if}}\n                </option>\n              {{/each}}\n            </select>\n          </li>\n        {{else}}\n          {{#each content.page}}\n            <li class=\"{{className}}\">\n              <a href=\"{{link}}\" class=\"{{className}}\">{{{title}}}</a>\n            </li>\n          {{/each}}\n        {{/ifCond}}\n      {{/ifCond}}\n\n    {{/if}}\n\n    {{#if content.nextTitle}}\n      <li class=\"am-pagination-next {{content.nextClassName}}\">\n        <a href=\"{{content.nextLink}}\" class=\"{{content.nextClassName}}\">{{{content.nextTitle}}}</a>\n      </li>\n    {{/if}}\n\n    {{#if content.lastTitle}}\n      <li class=\"am-pagination-last {{content.lastClassName}}\">\n        <a href=\"{{content.lastLink}}\" class=\"{{content.lastClassName}}\">{{{content.lastTitle}}}</a>\n      </li>\n    {{/if}}\n  </ul>\n{{/this}}\n");

    hbs.registerPartial('paragraph', "{{#this}}\n  <article data-am-widget=\"paragraph\"\n           class=\"am-paragraph {{#if theme}}am-paragraph-{{theme}}{{else}}am-paragraph-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\"\n           {{#if id}}id=\"{{id}}\"{{/if}}\n           data-am-paragraph=\"{ {{#if options.tableScrollable}}tableScrollable: true,{{/if}} {{#if options.imgLightbox}}pureview: true{{/if}} }\">\n\n    {{#if content}}\n      {{{ content.content }}}\n    {{/if}}\n  </article>\n{{/this}}\n");

    hbs.registerPartial('slider', "{{#this}}\n  <div data-am-widget=\"slider\" class=\"am-slider {{#if theme}}am-slider-{{theme}}{{else}}am-slider-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\" data-am-slider='{{sliderConfig}}' {{#if id}}id=\"{{id}}\"{{/if}}>\n  <ul class=\"am-slides\">\n    {{#each content}}\n      <li{{#if thumb}} data-thumb=\"{{thumb}}\"{{/if}}>\n        {{#if link}}\n          <a href=\"{{link}}\" class=\"{{className}}\">\n        {{/if}}\n        {{#if img}}\n        \t<img src=\"{{img}}\">\n        {{/if}}\n        {{#if desc}}\n          <div class=\"am-slider-desc\">{{{desc}}}</div>\n        {{/if}}\n        {{#if link}}</a>{{/if}} {{!--/end link--}}\n      </li>\n    {{/each}}\n  </ul>\n</div>\n{{/this}}");

    hbs.registerPartial('tabs', "{{#this}}\n  <div data-am-widget=\"tabs\"\n       class=\"am-tabs{{#if theme}} am-tabs-{{theme}}{{else}} am-tabs-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\"\n       {{#if id}}id=\"{{id}}\"{{/if}} {{#if options.noSwipe}}data-am-tabs-noswipe=\"1\"{{/if}}>\n    {{#if content}}\n      <ul class=\"am-tabs-nav am-cf\">\n        {{#each content}}\n          <li class=\"{{#if active}}am-active{{/if}}\"><a href=\"[data-tab-panel-{{@index}}]\">{{{title}}}</a></li>\n        {{/each}}\n      </ul>\n      <div class=\"am-tabs-bd\">\n        {{#each content}}\n          <div data-tab-panel-{{@index}} class=\"am-tab-panel {{#if active}}am-active{{/if}}\">\n            {{{content}}}\n          </div>\n        {{/each}}\n      </div>\n    {{/if}}\n  </div>\n{{/this}}\n");

    hbs.registerPartial('titlebar', "{{#this}}\n<div data-am-widget=\"titlebar\" class=\"am-titlebar {{#if theme}}am-titlebar-{{theme}}{{else}}am-titlebar-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\" {{#if id}}id=\"{{id}}\"{{/if}}>\n  {{#if content.title}}\n    <h2 class=\"am-titlebar-title {{#unless content.link}}{{content.className}}{{/unless}}\">\n      {{#if content.link}}\n        <a href=\"{{content.link}}\" class=\"{{content.className}}\">{{{content.title}}}</a>\n      {{else}}\n        {{{content.title}}}\n      {{/if}}\n    </h2>\n  {{/if}}\n\n  {{#if content.nav}}\n    <nav class=\"am-titlebar-nav\">\n      {{#each content.nav}}\n        <a href=\"{{link}}\" class=\"{{className}}\">{{{title}}}</a>\n      {{/each}}\n    </nav>\n  {{/if}}\n</div>\n{{/this}}\n");

    hbs.registerPartial('wechatpay', "{{#this}}\n  <div data-am-widget=\"wechatpay\" class=\"am-wechatpay{{#if theme}} am-wechatpay-{{theme}}{{else}} am-wechatpay-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}\"{{#if id}} id=\"{{id}}\"{{/if}} data-wechat-pay=\"{ {{#each content.order}} {{@key}}: '{{this}}',{{/each}} }\">\n      <button type=\"button\" class=\"am-btn am-btn-primary am-btn-block am-wechatpay-btn\">\n        {{#if content.title}}\n          {{content.title}}\n        {{else}}\n          微信支付\n        {{/if}}\n      </button>\n  </div>\n{{/this}}\n");

  };

  if (typeof module !== 'undefined' && module.exports) {
    module.exports = registerAMUIPartials;
  }

  this.Handlebars && registerAMUIPartials(this.Handlebars);
}).call(this);
/*! Amaze UI v2.3.0 ~ helper | by Amaze UI Team | (c) 2015 AllMobilize, Inc. | Licensed under MIT | 2015-04-08T06:04:29 UTC */
 
(function(){"use strict";var i=function(i){i.registerHelper("ifCond",function(i,n,t,a){switch(n){case"==":return i==t?a.fn(this):a.inverse(this);case"===":return i===t?a.fn(this):a.inverse(this);case"<":return t>i?a.fn(this):a.inverse(this);case"<=":return t>=i?a.fn(this):a.inverse(this);case">":return i>t?a.fn(this):a.inverse(this);case">=":return i>=t?a.fn(this):a.inverse(this);default:return a.inverse(this)}return a.inverse(this)})};"undefined"!=typeof module&&module.exports&&(module.exports=i),this.Handlebars&&i(this.Handlebars)}).call(this),function(){"use strict";var i=function(i){i.registerPartial("accordion",'{{#this}}\n  <section data-am-widget="accordion" class="am-accordion {{#if theme}}am-accordion-{{theme}}{{else}}am-accordion-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}"{{#if id}} id="{{id}}"{{/if}} data-am-accordion=\'{ {{#if options.multiple}}"multiple": true{{/if}} }\'>\n    {{#each content}}\n      <dl class="am-accordion-item{{#if active}} am-active{{/if}}{{#if disabled}} am-disabled{{/if}}">\n        <dt class="am-accordion-title">\n          {{{title}}}\n        </dt>\n        <dd class="am-accordion-bd am-collapse {{#if active}}am-in{{/if}}">\n          <!-- 规避 Collapase 处理有 padding 的折叠内容计算计算有误问题， 加一个容器 -->\n          <div class="am-accordion-content">\n            {{{content}}}\n          </div>\n        </dd>\n      </dl>\n    {{/each}}\n  </section>\n{{/this}}\n'),i.registerPartial("divider",'{{#this}}\n  <hr data-am-widget="divider" style="{{#if options.width}}width:{{{options.width}}};{{/if}}{{#if options.height}}height:{{{options.height}}};{{/if}}" class="am-divider {{#if theme}}am-divider-{{theme}}{{else}}am-divider-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}"{{#if id}} id="{{id}}"{{/if}} />\n{{/this}}\n'),i.registerPartial("duoshuo",'{{#this}}\n  <div data-am-widget="duoshuo" class="am-duoshuo{{#if theme}} am-duoshuo-{{theme}}{{else}} am-duoshuo-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}"{{#if id}} id="{{id}}"{{/if}} {{#if options.shortName}}data-ds-short-name="{{options.shortName}}"{{/if}}>\n    <div class="ds-thread" {{#if content}}{{#each content}}{{#ifCond @key \'==\' \'threadKey\'}}  data-thread-key="{{this}}"{{else}} data-{{@key}}="{{this}}"{{/ifCond}}{{/each}}{{/if}}>\n    </div>\n  </div>\n{{/this}}'),i.registerPartial("figure",'{{#this}}\n  <figure data-am-widget="figure" class="am am-figure {{#if theme}}am-figure-{{theme}}{{else}}am-figure-default{{/if}} {{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}" {{#if id}}\n      id="{{id}}"{{/if}}  data-am-figure="{ {{#if options.zoomAble}} pureview: \'{{options.zoomAble}}\'{{/if}} }">\n    {{#if content.link}}<a href="{{content.link}}" title="{{content.figcaption}}" class="{{className}}">{{/if}}\n\n    {{#if options.figcaptionPosition}}\n      {{#ifCond options.figcaptionPosition \'==\' \'top\'}}\n        {{#if content.figcaption}}\n          <figcaption class="am-figure-capition-top">\n            {{content.figcaption}}\n          </figcaption>\n        {{/if}}\n      {{/ifCond}}\n    {{/if}}\n\n    {{#if content.img}}\n      <img src="{{content.img}}" {{#if content.rel}}data-rel="{{content.rel}}"{{/if}} alt="{{#if content.imgAlt}}{{content.imgAlt}}{{else}}{{content.figcaption}}{{/if}}"/>\n    {{/if}}\n    {{#if options.figcaptionPosition}}\n      {{#ifCond options.figcaptionPosition \'==\' \'bottom\'}}\n        {{#if content.figcaption}}\n          <figcaption class="am-figure-capition-btm">\n            {{content.figcaption}}\n          </figcaption>\n        {{/if}}\n      {{/ifCond}}\n    {{else}}\n      {{#if content.figcaption}}\n        <figcaption class="am-figure-capition-btm">\n          {{content.figcaption}}\n        </figcaption>\n      {{/if}}\n    {{/if}}\n\n    {{#if content.link}}</a>{{/if}}\n  </figure>\n{{/this}}\n'),i.registerPartial("footer",'{{#this}}\n  <footer data-am-widget="footer"\n          class="am-footer {{#if theme}}am-footer-{{theme}}{{else}}am-footer-default {{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}"\n          {{#if id}}id="{{id}}"{{/if}} data-am-footer="{ {{#if options.addToHS}}addToHS: 1{{/if}} }">\n    <div class="am-footer-switch">\n    <span class="{{#if options.modal}}am-footer-ysp{{/if}}" data-rel="mobile"\n          data-am-modal="{target: \'#am-switch-mode\'}">\n      {{#unless content.switchName}}\n        {{#ifCond content.lang \'==\' \'en\'}}\n          Mobile\n        {{else}}\n          云适配版\n        {{/ifCond}}\n      {{else}}\n        {{content.switchName}}\n      {{/unless}}\n    </span>\n      <span class="am-footer-divider"> | </span>\n      <a id="godesktop" data-rel="desktop" class="am-footer-desktop" href="javascript:">\n        {{#ifCond content.lang \'==\' \'en\'}}\n          Desktop\n        {{else}}\n          电脑版\n        {{/ifCond}}\n      </a>\n    </div>\n    <div class="am-footer-miscs {{#if options.textPosition}}am-text-left{{/if}}">\n\n      {{#if options.techSupportCo}}\n        {{#ifCond content.lang \'==\' \'en\'}}\n          <p>Supported by {{#if options.techSupportSite}}<a href="{{options.techSupportSite}}"\n                                                            title="{{options.techSupportCo}}"\n                                                            target="_blank"> class="{{className}}"{{{options.techSupportCo}}}</a>{{else}}{{{options.techSupportCo}}}{{/if}}\n            .</p>\n        {{else}}\n          <p>由 {{#if options.techSupportSite}}<a href="{{options.techSupportSite}}" title="{{options.techSupportCo}}"\n                                                target="_blank" class="{{techSupportClassName}}">{{{options.techSupportCo}}}</a>{{else}}{{{options.techSupportCo}}}{{/if}}\n            提供技术支持</p>\n        {{/ifCond}}\n      {{/if}}\n      {{#each content.companyInfo}}\n        <p>{{{detail}}}</p>\n      {{/each}}\n    </div>\n  </footer>\n\n  <div id="am-footer-modal"\n       class="am-modal am-modal-no-btn am-switch-mode-m {{#if theme}}am-switch-mode-m-{{theme}}{{/if}}">\n    <div class="am-modal-dialog">\n      <div class="am-modal-hd am-modal-footer-hd">\n        <a href="javascript:void(0)" data-dismiss="modal" class="am-close am-close-spin {{className}}" data-am-modal-close>&times;</a>\n      </div>\n      <div class="am-modal-bd">\n        {{#ifCond content.lang \'==\' \'en\'}}\n          You are visiting\n        {{else}}\n          您正在浏览的是\n        {{/ifCond}}\n\n        <span class="am-switch-mode-owner">\n          {{#if content.owner}}\n            {{content.owner}}\n          {{else}}\n            云适配\n          {{/if}}\n        </span>\n\n        <span class="am-switch-mode-slogan">\n          {{#if content.slogan}}\n            {{{content.slogan}}}\n          {{else}}\n            {{#ifCond content.lang \'==\' \'en\'}}\n              mobilized version for your device.\n            {{else}}\n              为您当前手机订制的移动网站。\n            {{/ifCond}}\n          {{/if}}\n        </span>\n      </div>\n    </div>\n  </div>\n{{/this}}\n'),i.registerPartial("gallery",'{{#this}}\n  <ul data-am-widget="gallery" class="am-gallery{{#if options.cols}} am-avg-sm-{{options.cols}}{{else}} am-avg-sm-2{{/if}}\n  am-avg-md-3 am-avg-lg-4 {{#if\n  theme}}am-gallery-{{theme}}{{else}}am-gallery-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}" data-am-gallery="{ {{#if options.gallery}}pureview: true{{/if}} }" {{#if id}}id="{{id}}"{{/if}}>\n    {{#each content}}\n      <li>\n        <div class="am-gallery-item">\n          {{#if link}}\n            <a href="{{link}}" class="{{className}}">\n              {{#if img}}<img src="{{img}}" {{#if rel}}data-rel="{{rel}}"{{/if}} alt="{{title}}"/>{{/if}}\n              {{#if title}}\n                <h3 class="am-gallery-title">{{{title}}}</h3>\n              {{/if}}\n              {{#if desc}}\n                <div class="am-gallery-desc">{{{desc}}}</div>\n              {{/if}}\n            </a>\n          {{else}}\n            {{#if img}}<img src="{{img}}" {{#if rel}}data-rel="{{rel}}"{{/if}} alt="{{title}}"/>{{/if}}\n            {{#if title}}\n              <h3 class="am-gallery-title">{{{title}}}</h3>\n            {{/if}}\n            {{#if desc}}\n              <div class="am-gallery-desc">{{{desc}}}</div>\n            {{/if}}\n          {{/if}}\n        </div>\n      </li>\n    {{/each}}\n  </ul>\n{{/this}}\n'),i.registerPartial("gotop",'{{#this}}\n  <div data-am-widget="gotop" class="am-gotop {{#if theme}}am-gotop-{{theme}}{{else}}am-gotop-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}" {{#if id}}id="{{id}}"{{/if}}>\n    <a href="#top" title="{{content.title}}">\n      {{#if content.title}}\n        <span class="am-gotop-title">{{content.title}}</span>\n      {{/if}}\n      {{#if content.customIcon}}\n        <img class="am-gotop-icon-custom" src="{{content.customIcon}}" />\n      {{else}}\n        {{#if content.icon}}\n          <i class="am-gotop-icon am-icon-{{content.icon}}"></i>\n        {{else}}\n          <i class="am-gotop-icon am-icon-chevron-up"></i>\n        {{/if}}\n      {{/if}}\n    </a>\n  </div>\n{{/this}}\n'),i.registerPartial("header",'{{#this}}\n  <header data-am-widget="header"\n          class="am-header{{#if theme}} am-header-{{theme}}{{else}} am-header-default{{/if}}{{#if options.fixed}} am-header-fixed{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}"{{#if id}}\n          id="{{id}}"{{/if}}>\n    {{#if content.left}}\n      <div class="am-header-left am-header-nav">\n        {{#each content.left}}\n          <a href="{{link}}" class="{{className}}">\n            {{#if title}}\n              <span class="am-header-nav-title">\n                {{title}}\n              </span>\n            {{/if}}\n\n            {{# if customIcon}}\n              <img class="am-header-icon-custom" src="{{customIcon}}" alt=""/>\n            {{else}}\n              {{#if icon}}\n                <i class="am-header-icon am-icon-{{icon}}"></i>\n              {{/if}}\n            {{/if}}\n          </a>\n        {{/each}}\n      </div>\n    {{/if}}\n\n    {{#if content.title}}\n      <h1 class="am-header-title">\n        {{#if content.link}}\n          <a href="{{content.link}}" class="{{content.className}}">\n            {{{content.title}}}\n          </a>\n        {{else}}\n          {{{content.title}}}\n        {{/if}}\n      </h1>\n    {{/if}}\n\n    {{#if content.right}}\n      <div class="am-header-right am-header-nav">\n        {{#each content.right}}\n          <a href="{{link}}" class="{{className}}">\n            {{#if title}}\n              <span class="am-header-nav-title">\n                {{title}}\n              </span>\n            {{/if}}\n\n            {{# if customIcon}}\n              <img class="am-header-icon-custom" src="{{customIcon}}" alt=""/>\n            {{else}}\n              {{#if icon}}\n                <i class="am-header-icon am-icon-{{icon}}"></i>\n              {{/if}}\n            {{/if}}\n          </a>\n        {{/each}}\n      </div>\n    {{/if}}\n  </header>\n{{/this}}\n'),i.registerPartial("intro",'{{#this }}\n  <div data-am-widget="intro"\n       class="am-intro am-cf {{#if theme}}am-intro-{{theme}}{{else}}am-intro-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}"\n       {{#if id}}id="{{id}}"{{/if}}>\n    {{#if content.title}}\n      <div class="am-intro-hd">\n        <h2 class="am-intro-title">{{{content.title}}}</h2>\n        {{#if content.more.link}}\n          {{#ifCond options.position \'==\' \'top\'}}\n            <a class="am-intro-more am-intro-more-top {{content.more.className}}" href="{{content.more.link}}">{{content.more.title}}</a>\n          {{/ifCond}}\n        {{/if}}\n      </div>\n    {{/if}}\n\n    <div class="am-g am-intro-bd">\n      {{#if content.left}}\n        <div\n            class="am-intro-left {{#if options.leftCols}}am-u-sm-{{options.leftCols}}{{/if}}">{{{content.left}}}</div>\n      {{/if}}\n      {{#if content.right}}\n        <div\n            class="am-intro-right {{#if options.rightCols}}am-u-sm-{{options.rightCols}}{{/if}}">{{{content.right}}}</div>\n      {{/if}}\n    </div>\n    {{#ifCond options.position \'==\' \'bottom\'}}\n      <div class="am-intro-more-bottom">\n        <a class="am-btn am-btn-default {{content.more.className}}"\n           href="{{content.more.link}}">{{content.more.title}}</a>\n      </div>\n    {{/ifCond}}\n  </div>\n{{/this}}\n'),i.registerPartial("list_news",'{{#this}}\n  <div data-am-widget="list_news" class="am-list-news{{#if theme}} am-list-news-{{theme}}{{else}} am-list-news-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}" {{#if id}}id="{{id}}"{{/if}}>\n  <!--列表标题-->\n  {{#if content.header.title}}\n    <div class="am-list-news-hd am-cf">\n      {{#if content.header.link}} <!--带更多链接-->\n        <a href="{{content.header.link}}" class="{{content.header.className}}">\n          <h2>{{{content.header.title}}}</h2>\n          {{#ifCond content.header.morePosition \'==\' \'top\'}}\n            <span class="am-list-news-more am-fr">{{{content.header.moreText}}}</span>\n          {{/ifCond}}\n        </a>\n      {{else}} <!--不带更多链接-->\n        <h2>{{{content.header.title}}}</h2>\n      {{/if}}\n    </div>\n  {{/if}}\n\n  <div class="am-list-news-bd">\n  <ul class="am-list">\n  {{#ifCond options.type \'==\' \'thumb\'}}\n    {{#ifCond options.thumbPosition \'==\' \'top\'}} <!--缩略图在标题上方-->\n    {{#each content.main}}\n      <li class="am-g{{#if date}} am-list-item-dated{{/if}}{{#if desc}} am-list-item-desced{{/if}}{{#if img}} am-list-item-thumbed am-list-item-thumb-top{{/if}}">\n        {{!--\n          am-list-item-dated - 带日期\n          am-list-item-desced - 带描述\n          am-list-item-thumbed - 带缩略图的\n        --}}\n        {{#if img}}\n        <div class="am-list-thumb am-u-sm-12">\n          <a href="{{link}}" class="{{className}}">\n            <img src="{{img}}" alt="{{title}}"/>\n          </a>\n          {{#if thumbAddition}}\n            <div class="am-list-thumb-addon">{{{thumbAddition}}}</div>\n          {{/if}}\n        </div>\n        {{/if}}\n\n        <div class="{{#if img}}{{/if}} am-list-main">\n          {{#if title}}\n            <h3 class="am-list-item-hd"><a href="{{link}}" class="{{className}}">{{{title}}}</a></h3>\n          {{/if}}\n\n          {{#if date}}\n            <span class="am-list-date">{{date}}</span>\n          {{/if}}\n\n          {{#if desc}}\n            <div class="am-list-item-text">{{{desc}}}</div>\n          {{/if}}\n\n          {{#if mainAddition}}\n            <div class="am-list-news-addon">{{{mainAddition}}}</div>\n          {{/if}}\n        </div>\n      </li>\n    {{/each}}\n    {{/ifCond}}\n\n    {{#ifCond options.thumbPosition \'==\' \'bottom-left\'}} <!--缩略图在标题下方居左-->\n    {{#each content.main}}\n      <li class="am-g{{#if date}} am-list-item-dated{{/if}}{{#if desc}} am-list-item-desced{{/if}}{{#if img}} am-list-item-thumbed am-list-item-thumb-bottom-left{{/if}}">\n        {{!--\n          am-list-item-dated - 带日期\n          am-list-item-desced - 带描述\n          am-list-item-thumbed - 带缩略图的\n        --}}\n        {{#if title}}\n          <h3 class="am-list-item-hd"><a href="{{link}}" class="{{className}}">{{{title}}}</a></h3>\n        {{/if}}\n        {{#if img}}\n        <div class="am-u-sm-4 am-list-thumb">\n          <a href="{{link}}" class="{{className}}">\n            <img src="{{img}}" alt="{{title}}"/>\n          </a>\n          {{#if thumbAddition}}\n            <div class="am-list-thumb-addon">{{{thumbAddition}}}</div>\n          {{/if}}\n        </div>\n        {{/if}}\n\n        <div class="{{#if img}} am-u-sm-8 {{/if}} am-list-main">\n          {{#if date}}\n            <span class="am-list-date">{{date}}</span>\n          {{/if}}\n\n          {{#if desc}}\n            <div class="am-list-item-text">{{{desc}}}</div>\n          {{/if}}\n\n          {{#if mainAddition}}\n            <div class="am-list-news-addon">{{{mainAddition}}}</div>\n          {{/if}}\n        </div>\n      </li>\n    {{/each}}\n    {{/ifCond}}\n\n    {{#ifCond options.thumbPosition \'==\' \'bottom-right\'}} <!--缩略图在标题下方居右-->\n    {{#each content.main}}\n      <li class="am-g{{#if date}} am-list-item-dated{{/if}}{{#if desc}} am-list-item-desced{{/if}}{{#if img}} am-list-item-thumbed am-list-item-thumb-bottom-right{{/if}}">\n        {{!--\n          am-list-item-dated - 带日期\n          am-list-item-desced - 带描述\n          am-list-item-thumbed - 带缩略图的\n        --}}\n        {{#if title}}\n          <h3 class="am-list-item-hd"><a href="{{link}}" class="{{className}}">{{{title}}}</a></h3>\n        {{/if}}\n\n        <div class="{{#if img}} am-u-sm-8{{/if}} am-list-main">\n          {{#if date}}\n            <span class="am-list-date">{{date}}</span>\n          {{/if}}\n\n          {{#if desc}}\n            <div class="am-list-item-text">{{{desc}}}</div>\n          {{/if}}\n\n          {{#if mainAddition}}\n            <div class="am-list-news-addon">{{{mainAddition}}}</div>\n          {{/if}}\n        </div>\n        {{#if img}}\n        <div class="am-list-thumb am-u-sm-4">\n          <a href="{{link}}" class="{{className}}">\n            <img src="{{img}}" alt="{{title}}"/>\n          </a>\n          {{#if thumbAddition}}\n            <div class="am-list-thumb-addon">{{{thumbAddition}}}</div>\n          {{/if}}\n        </div>\n        {{/if}}\n      </li>\n    {{/each}}\n    {{/ifCond}}\n\n    {{#ifCond options.thumbPosition \'==\' \'left\'}} <!--缩略图在标题左边-->\n    {{#each content.main}}\n      <li class="am-g{{#if date}} am-list-item-dated{{/if}}{{#if desc}} am-list-item-desced{{/if}}{{#if img}} am-list-item-thumbed am-list-item-thumb-left{{/if}}">\n        {{!--\n          am-list-item-dated - 带日期\n          am-list-item-desced - 带描述\n          am-list-item-thumbed - 带缩略图的\n        --}}\n        {{#if img}}\n        <div class="am-u-sm-4 am-list-thumb">\n          <a href="{{link}}" class="{{className}}">\n            <img src="{{img}}" alt="{{title}}"/>\n          </a>\n          {{#if thumbAddition}}\n            <div class="am-list-thumb-addon">{{{thumbAddition}}}</div>\n          {{/if}}\n        </div>\n        {{/if}}\n\n        <div class="{{#if img}} am-u-sm-8{{/if}} am-list-main">\n          {{#if title}}\n            <h3 class="am-list-item-hd"><a href="{{link}}" class="{{className}}">{{{title}}}</a></h3>\n          {{/if}}\n          {{#if date}}\n            <span class="am-list-date">{{date}}</span>\n          {{/if}}\n\n          {{#if desc}}\n            <div class="am-list-item-text">{{{desc}}}</div>\n          {{/if}}\n\n          {{#if mainAddition}}\n            <div class="am-list-news-addon">{{{mainAddition}}}</div>\n          {{/if}}\n        </div>\n      </li>\n    {{/each}}\n    {{/ifCond}}\n\n    {{#ifCond options.thumbPosition \'==\' \'right\'}} <!--缩略图在标题右边-->\n    {{#each content.main}}\n      <li class="am-g{{#if date}} am-list-item-dated{{/if}}{{#if desc}} am-list-item-desced{{/if}}{{#if img}} am-list-item-thumbed am-list-item-thumb-right{{/if}}">\n        {{!--\n          am-list-item-dated - 带日期\n          am-list-item-desced - 带描述\n          am-list-item-thumbed - 带缩略图的\n        --}}\n        <div class="{{#if img}} am-u-sm-8{{/if}} am-list-main">\n          {{#if title}}\n            <h3 class="am-list-item-hd"><a href="{{link}}" class="{{className}}">{{{title}}}</a></h3>\n          {{/if}}\n\n          {{#if date}}\n            <span class="am-list-date">{{date}}</span>\n          {{/if}}\n\n          {{#if desc}}\n            <div class="am-list-item-text">{{{desc}}}</div>\n          {{/if}}\n\n          {{#if mainAddition}}\n            <div class="am-list-news-addon">{{{mainAddition}}}</div>\n          {{/if}}\n        </div>\n        {{#if img}}\n          <div class="am-u-sm-4 am-list-thumb">\n            <a href="{{link}}" class="{{className}}">\n              <img src="{{img}}" alt="{{title}}"/>\n            </a>\n            {{#if thumbAddition}}\n              <div class="am-list-thumb-addon">{{{thumbAddition}}}</div>\n            {{/if}}\n          </div>\n        {{/if}}\n      </li>\n    {{/each}}\n    {{/ifCond}}\n\n  {{else}}{{!--不带缩略图--}}\n    {{#each content.main}}\n      <li class="am-g{{#if date}} am-list-item-dated{{/if}}{{#if desc}} am-list-item-desced{{/if}}{{#if img}} am-list-item-thumbed{{/if}}">\n        {{!--\n          am-list-item-dated - 带日期\n          am-list-item-desced - 带描述\n          am-list-item-thumbed - 带缩略图的\n        --}}\n        {{#if title}}\n          <a href="{{link}}" class="am-list-item-hd {{className}}">{{{title}}}</a>\n        {{/if}}\n\n        {{#if date}}\n          <span class="am-list-date">{{date}}</span>\n        {{/if}}\n\n        {{#if desc}}\n          <div class="am-list-item-text">{{{desc}}}</div>\n        {{/if}}\n\n        {{#if mainAddition}}\n          <div class="am-list-news-addon">{{{mainAddition}}}</div>\n        {{/if}}\n      </li>\n    {{/each}}\n  {{/ifCond}}\n  </ul>\n  </div>\n\n  {{#ifCond content.header.morePosition \'==\' \'bottom\'}}<!--更多在底部-->\n    {{#if content.header.link}}\n      <div class="am-list-news-ft">\n        <a class="am-list-news-more am-btn am-btn-default {{content.header.className}}" href="{{content.header.link}}">{{{content.header.moreText}}}</a>\n      </div>\n    {{/if}}\n  {{/ifCond}}\n  </div>\n{{/this}}\n'),i.registerPartial("map",'{{#this}}\n  <div data-am-widget="map" class="am-map {{#if theme}}am-map-{{theme}}{{else}}am-map-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}"\n      data-name="{{options.name}}" data-address="{{options.address}}" data-longitude="{{options.longitude}}" data-latitude="{{options.latitude}}" data-scaleControl="{{options.scaleControl}}" data-zoomControl="{{options.zoomControl}}" data-setZoom="{{options.setZoom}}" data-icon="{{options.icon}}">\n    <div id="bd-map"></div>\n  </div>\n{{/this}}'),i.registerPartial("mechat",'{{#this}}\n  <section data-am-widget="mechat" class="am-mechat{{#if theme}} am-mechat-{{theme}}{{else}} am-mechat-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}" {{#if id}} id="{{id}}" {{/if}} {{#if options.unitid}}data-am-mechat-unitid="{{options.unitid}}"{{/if}}>\n    <div id="mechat"></div>\n  </section>\n{{/this}}'),i.registerPartial("menu",'{{#this}}\n  <nav data-am-widget="menu" class="am-menu {{#if theme}} am-menu-{{theme}}{{else}} am-menu-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}" {{options.dataset}} {{#if id}}id="{{id}}"{{/if}}\n    {{#ifCond theme \'==\' \'dropdown1\'}} data-am-menu-collapse{{/ifCond}}\n    {{#ifCond theme \'==\' \'dropdown2\'}} data-am-menu-collapse{{/ifCond}}\n    {{#ifCond theme \'==\' \'slide1\'}} data-am-menu-collapse{{/ifCond}}\n    {{#ifCond theme \'==\' \'offcanvas1\'}} data-am-menu-offcanvas{{/ifCond}}\n    {{#ifCond theme \'==\' \'offcanvas2\'}} data-am-menu-offcanvas{{/ifCond}}> {{!-- 与模板深耦合，与 JS 浅耦合 --}}\n    <a href="javascript: void(0)" class="am-menu-toggle">\n      {{#if options.toggleTitle}}\n        <span class="am-menu-toggle-title">{{options.toggleTitle}}</span>\n      {{/if}}\n      {{#if options.toggleCustomIcon}}\n        <img src="{{options.toggleCustomIcon}}" alt="Menu Toggle"/>\n      {{else}}\n        {{#if options.toggleIcon}}\n          <i class="am-menu-toggle-icon am-icon-{{options.toggleIcon}}"></i>\n          {{else}}\n          <i class="am-menu-toggle-icon am-icon-bars"></i>\n        {{/if}}\n      {{/if}}\n    </a>\n\n    {{!-- offCanvas menu Wrap --}}\n    {{!-- 问题：方便用户，但是与主题名称（类名）耦合过深 --}}\n    {{#ifCond theme \'==\' \'offcanvas1\'}}\n    <div class="am-offcanvas" {{#if options.closeOffCanvasOnclick}}data-dismiss-on="click"{{/if}}>\n      <div class="am-offcanvas-bar{{#if options.offCanvasFlip}} am-offcanvas-bar-flip{{/if}}">\n    {{/ifCond}}\n    {{#ifCond theme \'==\' \'offcanvas2\'}}\n    <div class="am-offcanvas">\n      <div class="am-offcanvas-bar{{#if options.offCanvasFlip}} am-offcanvas-bar-flip{{/if}}">\n    {{/ifCond}}\n\n    {{#if content}}\n      <ul class="am-menu-nav {{#if options.cols}}am-avg-sm-{{options\n      .cols}}{{else}}am-avg-sm-1{{/if}}{{#ifCond theme \'==\' \'dropdown1\'}} am-collapse{{/ifCond}}{{#ifCond theme\n      \'==\' \'dropdown2\'}} am-collapse{{/ifCond}}{{#ifCond theme\n      \'==\' \'slide1\'}} am-collapse{{/ifCond}}">\n        {{#each content}}\n          <li class="{{#if subMenu}}am-parent{{/if}}{{#if className}} {{className}}{{/if}}">\n            <a href="{{link}}" class="{{className}}" {{#if target}}target="{{target}}" {{/if}}>{{{title}}}</a>\n            {{#if subMenu}}\n              <ul class="am-menu-sub am-collapse {{#if subCols}} am-avg-sm-{{subCols}}{{else}}\n              am-avg-sm-1{{/if}} {{subMenuClassName}}">\n                {{#each subMenu}}\n                  <li class="{{#if subMenu}} am-parent{{/if}}{{#if className}} {{className}}{{/if}}">\n                    <a href="{{link}}" class="{{className}}" {{#if target}}target="{{target}}" {{/if}}>{{{title}}}</a>\n                  </li>\n                {{/each}}\n                {{!-- 显示进入栏目链接 --}}\n                {{#if channelLink}}\n                  <li class="am-menu-nav-channel"><a href="{{link}}" class="{{className}}" title="{{title}}">{{{channelLink}}}</a></li>\n                {{/if}}\n              </ul>\n            {{/if}}\n          </li>\n        {{/each}}\n      </ul>\n    {{/if}}\n\n    {{#ifCond theme \'==\' \'offcanvas1\'}}\n      </div>\n    </div>\n    {{/ifCond}}\n    {{#ifCond theme \'==\' \'offcanvas2\'}}\n      </div>\n    </div>\n    {{/ifCond}}\n    {{!-- 不要问我为什么这样写，我也不想这样 --}}\n  </nav>\n{{/this}}\n'),i.registerPartial("navbar",'{{#this}}\n  <div data-am-widget="navbar" class="am-navbar am-cf {{#if theme}}am-navbar-{{theme}}{{else}}am-navbar-default{{/if}} {{#if options.iconPosition}}am-navbar-inline{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}"\n      id="{{id}}">\n    {{#if content}}\n      <ul class="am-navbar-nav am-cf {{#if options.cols}}am-avg-sm-{{options.cols}}{{/if}}">\n        {{#each content}}\n          <li {{#if dataApi}}{{dataApi}}{{/if}}>\n            <a href="{{link}}" class="{{className}}">\n              {{#if customIcon}}\n                <img src="{{customIcon}}" alt="{{title}}"/>\n              {{else}}\n                {{#if icon}}\n                  <span class="am-icon-{{icon}}"></span>\n                {{/if}}\n              {{/if}}\n              {{#if title}}\n                <span class="am-navbar-label">{{title}}</span>\n              {{/if}}\n            </a>\n          </li>\n        {{/each}}\n      </ul>\n    {{/if}}\n  </div>\n{{/this}}\n'),i.registerPartial("pagination",'{{#this}}\n  <ul data-am-widget="pagination"\n      class="am-pagination {{#if theme}}am-pagination-{{theme}}{{else}}am-pagination-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}"\n      {{#if id}}id="{{id}}"{{/if}}>\n\n    {{#if content.firstTitle}}\n      <li class="am-pagination-first {{content.firstClassName}}">\n        <a href="{{content.firstLink}}" class="{{content.firstClassName}}">{{{content.firstTitle}}}</a>\n      </li>\n    {{/if}}\n\n    {{#if content.prevTitle}}\n      <li class="am-pagination-prev {{content.prevClassName}}">\n        <a href="{{content.prevLink}}" class="{{content.prevClassName}}">{{{content.prevTitle}}}</a>\n      </li>\n    {{/if}}\n\n    {{! 移除 options.select，根据主题来判断结构，无奈 handlebars 逻辑处理...}}\n\n    {{#if content.page}}\n      {{#ifCond theme \'==\' \'select\'}}\n        <li class="am-pagination-select">\n          <select>\n            {{#each content.page}}\n              <option value="{{link}}" class="{{className}}">{{title}}{{#if ../content.total}}\n                / {{../../content.total}}{{/if}}\n              </option>\n            {{/each}}\n          </select>\n        </li>\n      {{else}}\n        {{#ifCond theme \'==\' \'one\'}}\n          <li class="am-pagination-select">\n            <select>\n              {{#each content.page}}\n                {{content.total}}\n                <option value="{{link}}" class="{{className}}">{{title}}{{#if ../content.total}}\n                  / {{../../content.total}}{{/if}}\n                </option>\n              {{/each}}\n            </select>\n          </li>\n        {{else}}\n          {{#each content.page}}\n            <li class="{{className}}">\n              <a href="{{link}}" class="{{className}}">{{{title}}}</a>\n            </li>\n          {{/each}}\n        {{/ifCond}}\n      {{/ifCond}}\n\n    {{/if}}\n\n    {{#if content.nextTitle}}\n      <li class="am-pagination-next {{content.nextClassName}}">\n        <a href="{{content.nextLink}}" class="{{content.nextClassName}}">{{{content.nextTitle}}}</a>\n      </li>\n    {{/if}}\n\n    {{#if content.lastTitle}}\n      <li class="am-pagination-last {{content.lastClassName}}">\n        <a href="{{content.lastLink}}" class="{{content.lastClassName}}">{{{content.lastTitle}}}</a>\n      </li>\n    {{/if}}\n  </ul>\n{{/this}}\n'),i.registerPartial("paragraph",'{{#this}}\n  <article data-am-widget="paragraph"\n           class="am-paragraph {{#if theme}}am-paragraph-{{theme}}{{else}}am-paragraph-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}"\n           {{#if id}}id="{{id}}"{{/if}}\n           data-am-paragraph="{ {{#if options.tableScrollable}}tableScrollable: true,{{/if}} {{#if options.imgLightbox}}pureview: true{{/if}} }">\n\n    {{#if content}}\n      {{{ content.content }}}\n    {{/if}}\n  </article>\n{{/this}}\n'),i.registerPartial("slider",'{{#this}}\n  <div data-am-widget="slider" class="am-slider {{#if theme}}am-slider-{{theme}}{{else}}am-slider-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}" data-am-slider=\'{{sliderConfig}}\' {{#if id}}id="{{id}}"{{/if}}>\n  <ul class="am-slides">\n    {{#each content}}\n      <li{{#if thumb}} data-thumb="{{thumb}}"{{/if}}>\n        {{#if link}}\n          <a href="{{link}}" class="{{className}}">\n        {{/if}}\n        {{#if img}}\n        	<img src="{{img}}">\n        {{/if}}\n        {{#if desc}}\n          <div class="am-slider-desc">{{{desc}}}</div>\n        {{/if}}\n        {{#if link}}</a>{{/if}} {{!--/end link--}}\n      </li>\n    {{/each}}\n  </ul>\n</div>\n{{/this}}'),i.registerPartial("tabs",'{{#this}}\n  <div data-am-widget="tabs"\n       class="am-tabs{{#if theme}} am-tabs-{{theme}}{{else}} am-tabs-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}"\n       {{#if id}}id="{{id}}"{{/if}} {{#if options.noSwipe}}data-am-tabs-noswipe="1"{{/if}}>\n    {{#if content}}\n      <ul class="am-tabs-nav am-cf">\n        {{#each content}}\n          <li class="{{#if active}}am-active{{/if}}"><a href="[data-tab-panel-{{@index}}]">{{{title}}}</a></li>\n        {{/each}}\n      </ul>\n      <div class="am-tabs-bd">\n        {{#each content}}\n          <div data-tab-panel-{{@index}} class="am-tab-panel {{#if active}}am-active{{/if}}">\n            {{{content}}}\n          </div>\n        {{/each}}\n      </div>\n    {{/if}}\n  </div>\n{{/this}}\n'),i.registerPartial("titlebar",'{{#this}}\n<div data-am-widget="titlebar" class="am-titlebar {{#if theme}}am-titlebar-{{theme}}{{else}}am-titlebar-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}" {{#if id}}id="{{id}}"{{/if}}>\n  {{#if content.title}}\n    <h2 class="am-titlebar-title {{#unless content.link}}{{content.className}}{{/unless}}">\n      {{#if content.link}}\n        <a href="{{content.link}}" class="{{content.className}}">{{{content.title}}}</a>\n      {{else}}\n        {{{content.title}}}\n      {{/if}}\n    </h2>\n  {{/if}}\n\n  {{#if content.nav}}\n    <nav class="am-titlebar-nav">\n      {{#each content.nav}}\n        <a href="{{link}}" class="{{className}}">{{{title}}}</a>\n      {{/each}}\n    </nav>\n  {{/if}}\n</div>\n{{/this}}\n'),i.registerPartial("wechatpay",'{{#this}}\n  <div data-am-widget="wechatpay" class="am-wechatpay{{#if theme}} am-wechatpay-{{theme}}{{else}} am-wechatpay-default{{/if}}{{#if widgetId}} {{widgetId}}{{/if}}{{#if className}} {{className}}{{/if}}"{{#if id}} id="{{id}}"{{/if}} data-wechat-pay="{ {{#each content.order}} {{@key}}: \'{{this}}\',{{/each}} }">\n      <button type="button" class="am-btn am-btn-primary am-btn-block am-wechatpay-btn">\n        {{#if content.title}}\n          {{content.title}}\n        {{else}}\n          微信支付\n        {{/if}}\n      </button>\n  </div>\n{{/this}}\n')
};"undefined"!=typeof module&&module.exports&&(module.exports=i),this.Handlebars&&i(this.Handlebars)}.call(this);
(function($) {
  'use strict';

  $(function() {
    var $fullText = $('.admin-fullText');
    $('#admin-fullscreen').on('click', function() {
      $.AMUI.fullscreen.toggle();
    });

    $(document).on($.AMUI.fullscreen.raw.fullscreenchange, function() {
      $.AMUI.fullscreen.isFullscreen ? $fullText.text('关闭全屏') : $fullText.text('开启全屏');
    });
  });
})(jQuery);
(function() {


}).call(this);
/*!

 handlebars v2.0.0

Copyright (C) 2011-2014 by Yehuda Katz

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

@license
*/

!function(a,b){"function"==typeof define&&define.amd?define([],b):"object"==typeof exports?module.exports=b():a.Handlebars=a.Handlebars||b()}(this,function(){var a=function(){"use strict";function a(a){this.string=a}var b;return a.prototype.toString=function(){return""+this.string},b=a}(),b=function(a){"use strict";function b(a){return i[a]}function c(a){for(var b=1;b<arguments.length;b++)for(var c in arguments[b])Object.prototype.hasOwnProperty.call(arguments[b],c)&&(a[c]=arguments[b][c]);return a}function d(a){return a instanceof h?a.toString():null==a?"":a?(a=""+a,k.test(a)?a.replace(j,b):a):a+""}function e(a){return a||0===a?n(a)&&0===a.length?!0:!1:!0}function f(a,b){return(a?a+".":"")+b}var g={},h=a,i={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},j=/[&<>"'`]/g,k=/[&<>"'`]/;g.extend=c;var l=Object.prototype.toString;g.toString=l;var m=function(a){return"function"==typeof a};m(/x/)&&(m=function(a){return"function"==typeof a&&"[object Function]"===l.call(a)});var m;g.isFunction=m;var n=Array.isArray||function(a){return a&&"object"==typeof a?"[object Array]"===l.call(a):!1};return g.isArray=n,g.escapeExpression=d,g.isEmpty=e,g.appendContextPath=f,g}(a),c=function(){"use strict";function a(a,b){var d;b&&b.firstLine&&(d=b.firstLine,a+=" - "+d+":"+b.firstColumn);for(var e=Error.prototype.constructor.call(this,a),f=0;f<c.length;f++)this[c[f]]=e[c[f]];d&&(this.lineNumber=d,this.column=b.firstColumn)}var b,c=["description","fileName","lineNumber","message","name","number","stack"];return a.prototype=new Error,b=a}(),d=function(a,b){"use strict";function c(a,b){this.helpers=a||{},this.partials=b||{},d(this)}function d(a){a.registerHelper("helperMissing",function(){if(1===arguments.length)return void 0;throw new g("Missing helper: '"+arguments[arguments.length-1].name+"'")}),a.registerHelper("blockHelperMissing",function(b,c){var d=c.inverse,e=c.fn;if(b===!0)return e(this);if(b===!1||null==b)return d(this);if(k(b))return b.length>0?(c.ids&&(c.ids=[c.name]),a.helpers.each(b,c)):d(this);if(c.data&&c.ids){var g=q(c.data);g.contextPath=f.appendContextPath(c.data.contextPath,c.name),c={data:g}}return e(b,c)}),a.registerHelper("each",function(a,b){if(!b)throw new g("Must pass iterator to #each");var c,d,e=b.fn,h=b.inverse,i=0,j="";if(b.data&&b.ids&&(d=f.appendContextPath(b.data.contextPath,b.ids[0])+"."),l(a)&&(a=a.call(this)),b.data&&(c=q(b.data)),a&&"object"==typeof a)if(k(a))for(var m=a.length;m>i;i++)c&&(c.index=i,c.first=0===i,c.last=i===a.length-1,d&&(c.contextPath=d+i)),j+=e(a[i],{data:c});else for(var n in a)a.hasOwnProperty(n)&&(c&&(c.key=n,c.index=i,c.first=0===i,d&&(c.contextPath=d+n)),j+=e(a[n],{data:c}),i++);return 0===i&&(j=h(this)),j}),a.registerHelper("if",function(a,b){return l(a)&&(a=a.call(this)),!b.hash.includeZero&&!a||f.isEmpty(a)?b.inverse(this):b.fn(this)}),a.registerHelper("unless",function(b,c){return a.helpers["if"].call(this,b,{fn:c.inverse,inverse:c.fn,hash:c.hash})}),a.registerHelper("with",function(a,b){l(a)&&(a=a.call(this));var c=b.fn;if(f.isEmpty(a))return b.inverse(this);if(b.data&&b.ids){var d=q(b.data);d.contextPath=f.appendContextPath(b.data.contextPath,b.ids[0]),b={data:d}}return c(a,b)}),a.registerHelper("log",function(b,c){var d=c.data&&null!=c.data.level?parseInt(c.data.level,10):1;a.log(d,b)}),a.registerHelper("lookup",function(a,b){return a&&a[b]})}var e={},f=a,g=b,h="2.0.0";e.VERSION=h;var i=6;e.COMPILER_REVISION=i;var j={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1"};e.REVISION_CHANGES=j;var k=f.isArray,l=f.isFunction,m=f.toString,n="[object Object]";e.HandlebarsEnvironment=c,c.prototype={constructor:c,logger:o,log:p,registerHelper:function(a,b){if(m.call(a)===n){if(b)throw new g("Arg not supported with multiple helpers");f.extend(this.helpers,a)}else this.helpers[a]=b},unregisterHelper:function(a){delete this.helpers[a]},registerPartial:function(a,b){m.call(a)===n?f.extend(this.partials,a):this.partials[a]=b},unregisterPartial:function(a){delete this.partials[a]}};var o={methodMap:{0:"debug",1:"info",2:"warn",3:"error"},DEBUG:0,INFO:1,WARN:2,ERROR:3,level:3,log:function(a,b){if(o.level<=a){var c=o.methodMap[a];"undefined"!=typeof console&&console[c]&&console[c].call(console,b)}}};e.logger=o;var p=o.log;e.log=p;var q=function(a){var b=f.extend({},a);return b._parent=a,b};return e.createFrame=q,e}(b,c),e=function(a,b,c){"use strict";function d(a){var b=a&&a[0]||1,c=m;if(b!==c){if(c>b){var d=n[c],e=n[b];throw new l("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+d+") or downgrade your runtime to an older version ("+e+").")}throw new l("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+a[1]+").")}}function e(a,b){if(!b)throw new l("No environment passed to template");if(!a||!a.main)throw new l("Unknown template object: "+typeof a);b.VM.checkRevision(a.compiler);var c=function(c,d,e,f,g,h,i,j,m){g&&(f=k.extend({},f,g));var n=b.VM.invokePartial.call(this,c,e,f,h,i,j,m);if(null==n&&b.compile){var o={helpers:h,partials:i,data:j,depths:m};i[e]=b.compile(c,{data:void 0!==j,compat:a.compat},b),n=i[e](f,o)}if(null!=n){if(d){for(var p=n.split("\n"),q=0,r=p.length;r>q&&(p[q]||q+1!==r);q++)p[q]=d+p[q];n=p.join("\n")}return n}throw new l("The partial "+e+" could not be compiled when running in runtime-only mode")},d={lookup:function(a,b){for(var c=a.length,d=0;c>d;d++)if(a[d]&&null!=a[d][b])return a[d][b]},lambda:function(a,b){return"function"==typeof a?a.call(b):a},escapeExpression:k.escapeExpression,invokePartial:c,fn:function(b){return a[b]},programs:[],program:function(a,b,c){var d=this.programs[a],e=this.fn(a);return b||c?d=f(this,a,e,b,c):d||(d=this.programs[a]=f(this,a,e)),d},data:function(a,b){for(;a&&b--;)a=a._parent;return a},merge:function(a,b){var c=a||b;return a&&b&&a!==b&&(c=k.extend({},b,a)),c},noop:b.VM.noop,compilerInfo:a.compiler},e=function(b,c){c=c||{};var f=c.data;e._setup(c),!c.partial&&a.useData&&(f=i(b,f));var g;return a.useDepths&&(g=c.depths?[b].concat(c.depths):[b]),a.main.call(d,b,d.helpers,d.partials,f,g)};return e.isTop=!0,e._setup=function(c){c.partial?(d.helpers=c.helpers,d.partials=c.partials):(d.helpers=d.merge(c.helpers,b.helpers),a.usePartial&&(d.partials=d.merge(c.partials,b.partials)))},e._child=function(b,c,e){if(a.useDepths&&!e)throw new l("must pass parent depths");return f(d,b,a[b],c,e)},e}function f(a,b,c,d,e){var f=function(b,f){return f=f||{},c.call(a,b,a.helpers,a.partials,f.data||d,e&&[b].concat(e))};return f.program=b,f.depth=e?e.length:0,f}function g(a,b,c,d,e,f,g){var h={partial:!0,helpers:d,partials:e,data:f,depths:g};if(void 0===a)throw new l("The partial "+b+" could not be found");return a instanceof Function?a(c,h):void 0}function h(){return""}function i(a,b){return b&&"root"in b||(b=b?o(b):{},b.root=a),b}var j={},k=a,l=b,m=c.COMPILER_REVISION,n=c.REVISION_CHANGES,o=c.createFrame;return j.checkRevision=d,j.template=e,j.program=f,j.invokePartial=g,j.noop=h,j}(b,c,d),f=function(a,b,c,d,e){"use strict";var f,g=a,h=b,i=c,j=d,k=e,l=function(){var a=new g.HandlebarsEnvironment;return j.extend(a,g),a.SafeString=h,a.Exception=i,a.Utils=j,a.escapeExpression=j.escapeExpression,a.VM=k,a.template=function(b){return k.template(b,a)},a},m=l();return m.create=l,m["default"]=m,f=m}(d,a,c,b,e),g=function(a){"use strict";function b(a){a=a||{},this.firstLine=a.first_line,this.firstColumn=a.first_column,this.lastColumn=a.last_column,this.lastLine=a.last_line}var c,d=a,e={ProgramNode:function(a,c,d){b.call(this,d),this.type="program",this.statements=a,this.strip=c},MustacheNode:function(a,c,d,f,g){if(b.call(this,g),this.type="mustache",this.strip=f,null!=d&&d.charAt){var h=d.charAt(3)||d.charAt(2);this.escaped="{"!==h&&"&"!==h}else this.escaped=!!d;this.sexpr=a instanceof e.SexprNode?a:new e.SexprNode(a,c),this.id=this.sexpr.id,this.params=this.sexpr.params,this.hash=this.sexpr.hash,this.eligibleHelper=this.sexpr.eligibleHelper,this.isHelper=this.sexpr.isHelper},SexprNode:function(a,c,d){b.call(this,d),this.type="sexpr",this.hash=c;var e=this.id=a[0],f=this.params=a.slice(1);this.isHelper=!(!f.length&&!c),this.eligibleHelper=this.isHelper||e.isSimple},PartialNode:function(a,c,d,e,f){b.call(this,f),this.type="partial",this.partialName=a,this.context=c,this.hash=d,this.strip=e,this.strip.inlineStandalone=!0},BlockNode:function(a,c,d,e,f){b.call(this,f),this.type="block",this.mustache=a,this.program=c,this.inverse=d,this.strip=e,d&&!c&&(this.isInverse=!0)},RawBlockNode:function(a,c,f,g){if(b.call(this,g),a.sexpr.id.original!==f)throw new d(a.sexpr.id.original+" doesn't match "+f,this);c=new e.ContentNode(c,g),this.type="block",this.mustache=a,this.program=new e.ProgramNode([c],{},g)},ContentNode:function(a,c){b.call(this,c),this.type="content",this.original=this.string=a},HashNode:function(a,c){b.call(this,c),this.type="hash",this.pairs=a},IdNode:function(a,c){b.call(this,c),this.type="ID";for(var e="",f=[],g=0,h="",i=0,j=a.length;j>i;i++){var k=a[i].part;if(e+=(a[i].separator||"")+k,".."===k||"."===k||"this"===k){if(f.length>0)throw new d("Invalid path: "+e,this);".."===k?(g++,h+="../"):this.isScoped=!0}else f.push(k)}this.original=e,this.parts=f,this.string=f.join("."),this.depth=g,this.idName=h+this.string,this.isSimple=1===a.length&&!this.isScoped&&0===g,this.stringModeValue=this.string},PartialNameNode:function(a,c){b.call(this,c),this.type="PARTIAL_NAME",this.name=a.original},DataNode:function(a,c){b.call(this,c),this.type="DATA",this.id=a,this.stringModeValue=a.stringModeValue,this.idName="@"+a.stringModeValue},StringNode:function(a,c){b.call(this,c),this.type="STRING",this.original=this.string=this.stringModeValue=a},NumberNode:function(a,c){b.call(this,c),this.type="NUMBER",this.original=this.number=a,this.stringModeValue=Number(a)},BooleanNode:function(a,c){b.call(this,c),this.type="BOOLEAN",this.bool=a,this.stringModeValue="true"===a},CommentNode:function(a,c){b.call(this,c),this.type="comment",this.comment=a,this.strip={inlineStandalone:!0}}};return c=e}(c),h=function(){"use strict";var a,b=function(){function a(){this.yy={}}var b={trace:function(){},yy:{},symbols_:{error:2,root:3,program:4,EOF:5,program_repetition0:6,statement:7,mustache:8,block:9,rawBlock:10,partial:11,CONTENT:12,COMMENT:13,openRawBlock:14,END_RAW_BLOCK:15,OPEN_RAW_BLOCK:16,sexpr:17,CLOSE_RAW_BLOCK:18,openBlock:19,block_option0:20,closeBlock:21,openInverse:22,block_option1:23,OPEN_BLOCK:24,CLOSE:25,OPEN_INVERSE:26,inverseAndProgram:27,INVERSE:28,OPEN_ENDBLOCK:29,path:30,OPEN:31,OPEN_UNESCAPED:32,CLOSE_UNESCAPED:33,OPEN_PARTIAL:34,partialName:35,param:36,partial_option0:37,partial_option1:38,sexpr_repetition0:39,sexpr_option0:40,dataName:41,STRING:42,NUMBER:43,BOOLEAN:44,OPEN_SEXPR:45,CLOSE_SEXPR:46,hash:47,hash_repetition_plus0:48,hashSegment:49,ID:50,EQUALS:51,DATA:52,pathSegments:53,SEP:54,$accept:0,$end:1},terminals_:{2:"error",5:"EOF",12:"CONTENT",13:"COMMENT",15:"END_RAW_BLOCK",16:"OPEN_RAW_BLOCK",18:"CLOSE_RAW_BLOCK",24:"OPEN_BLOCK",25:"CLOSE",26:"OPEN_INVERSE",28:"INVERSE",29:"OPEN_ENDBLOCK",31:"OPEN",32:"OPEN_UNESCAPED",33:"CLOSE_UNESCAPED",34:"OPEN_PARTIAL",42:"STRING",43:"NUMBER",44:"BOOLEAN",45:"OPEN_SEXPR",46:"CLOSE_SEXPR",50:"ID",51:"EQUALS",52:"DATA",54:"SEP"},productions_:[0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[10,3],[14,3],[9,4],[9,4],[19,3],[22,3],[27,2],[21,3],[8,3],[8,3],[11,5],[11,4],[17,3],[17,1],[36,1],[36,1],[36,1],[36,1],[36,1],[36,3],[47,1],[49,3],[35,1],[35,1],[35,1],[41,2],[30,1],[53,3],[53,1],[6,0],[6,2],[20,0],[20,1],[23,0],[23,1],[37,0],[37,1],[38,0],[38,1],[39,0],[39,2],[40,0],[40,1],[48,1],[48,2]],performAction:function(a,b,c,d,e,f){var g=f.length-1;switch(e){case 1:return d.prepareProgram(f[g-1].statements,!0),f[g-1];case 2:this.$=new d.ProgramNode(d.prepareProgram(f[g]),{},this._$);break;case 3:this.$=f[g];break;case 4:this.$=f[g];break;case 5:this.$=f[g];break;case 6:this.$=f[g];break;case 7:this.$=new d.ContentNode(f[g],this._$);break;case 8:this.$=new d.CommentNode(f[g],this._$);break;case 9:this.$=new d.RawBlockNode(f[g-2],f[g-1],f[g],this._$);break;case 10:this.$=new d.MustacheNode(f[g-1],null,"","",this._$);break;case 11:this.$=d.prepareBlock(f[g-3],f[g-2],f[g-1],f[g],!1,this._$);break;case 12:this.$=d.prepareBlock(f[g-3],f[g-2],f[g-1],f[g],!0,this._$);break;case 13:this.$=new d.MustacheNode(f[g-1],null,f[g-2],d.stripFlags(f[g-2],f[g]),this._$);break;case 14:this.$=new d.MustacheNode(f[g-1],null,f[g-2],d.stripFlags(f[g-2],f[g]),this._$);break;case 15:this.$={strip:d.stripFlags(f[g-1],f[g-1]),program:f[g]};break;case 16:this.$={path:f[g-1],strip:d.stripFlags(f[g-2],f[g])};break;case 17:this.$=new d.MustacheNode(f[g-1],null,f[g-2],d.stripFlags(f[g-2],f[g]),this._$);break;case 18:this.$=new d.MustacheNode(f[g-1],null,f[g-2],d.stripFlags(f[g-2],f[g]),this._$);break;case 19:this.$=new d.PartialNode(f[g-3],f[g-2],f[g-1],d.stripFlags(f[g-4],f[g]),this._$);break;case 20:this.$=new d.PartialNode(f[g-2],void 0,f[g-1],d.stripFlags(f[g-3],f[g]),this._$);break;case 21:this.$=new d.SexprNode([f[g-2]].concat(f[g-1]),f[g],this._$);break;case 22:this.$=new d.SexprNode([f[g]],null,this._$);break;case 23:this.$=f[g];break;case 24:this.$=new d.StringNode(f[g],this._$);break;case 25:this.$=new d.NumberNode(f[g],this._$);break;case 26:this.$=new d.BooleanNode(f[g],this._$);break;case 27:this.$=f[g];break;case 28:f[g-1].isHelper=!0,this.$=f[g-1];break;case 29:this.$=new d.HashNode(f[g],this._$);break;case 30:this.$=[f[g-2],f[g]];break;case 31:this.$=new d.PartialNameNode(f[g],this._$);break;case 32:this.$=new d.PartialNameNode(new d.StringNode(f[g],this._$),this._$);break;case 33:this.$=new d.PartialNameNode(new d.NumberNode(f[g],this._$));break;case 34:this.$=new d.DataNode(f[g],this._$);break;case 35:this.$=new d.IdNode(f[g],this._$);break;case 36:f[g-2].push({part:f[g],separator:f[g-1]}),this.$=f[g-2];break;case 37:this.$=[{part:f[g]}];break;case 38:this.$=[];break;case 39:f[g-1].push(f[g]);break;case 48:this.$=[];break;case 49:f[g-1].push(f[g]);break;case 52:this.$=[f[g]];break;case 53:f[g-1].push(f[g])}},table:[{3:1,4:2,5:[2,38],6:3,12:[2,38],13:[2,38],16:[2,38],24:[2,38],26:[2,38],31:[2,38],32:[2,38],34:[2,38]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:[1,10],13:[1,11],14:16,16:[1,20],19:14,22:15,24:[1,18],26:[1,19],28:[2,2],29:[2,2],31:[1,12],32:[1,13],34:[1,17]},{1:[2,1]},{5:[2,39],12:[2,39],13:[2,39],16:[2,39],24:[2,39],26:[2,39],28:[2,39],29:[2,39],31:[2,39],32:[2,39],34:[2,39]},{5:[2,3],12:[2,3],13:[2,3],16:[2,3],24:[2,3],26:[2,3],28:[2,3],29:[2,3],31:[2,3],32:[2,3],34:[2,3]},{5:[2,4],12:[2,4],13:[2,4],16:[2,4],24:[2,4],26:[2,4],28:[2,4],29:[2,4],31:[2,4],32:[2,4],34:[2,4]},{5:[2,5],12:[2,5],13:[2,5],16:[2,5],24:[2,5],26:[2,5],28:[2,5],29:[2,5],31:[2,5],32:[2,5],34:[2,5]},{5:[2,6],12:[2,6],13:[2,6],16:[2,6],24:[2,6],26:[2,6],28:[2,6],29:[2,6],31:[2,6],32:[2,6],34:[2,6]},{5:[2,7],12:[2,7],13:[2,7],16:[2,7],24:[2,7],26:[2,7],28:[2,7],29:[2,7],31:[2,7],32:[2,7],34:[2,7]},{5:[2,8],12:[2,8],13:[2,8],16:[2,8],24:[2,8],26:[2,8],28:[2,8],29:[2,8],31:[2,8],32:[2,8],34:[2,8]},{17:21,30:22,41:23,50:[1,26],52:[1,25],53:24},{17:27,30:22,41:23,50:[1,26],52:[1,25],53:24},{4:28,6:3,12:[2,38],13:[2,38],16:[2,38],24:[2,38],26:[2,38],28:[2,38],29:[2,38],31:[2,38],32:[2,38],34:[2,38]},{4:29,6:3,12:[2,38],13:[2,38],16:[2,38],24:[2,38],26:[2,38],28:[2,38],29:[2,38],31:[2,38],32:[2,38],34:[2,38]},{12:[1,30]},{30:32,35:31,42:[1,33],43:[1,34],50:[1,26],53:24},{17:35,30:22,41:23,50:[1,26],52:[1,25],53:24},{17:36,30:22,41:23,50:[1,26],52:[1,25],53:24},{17:37,30:22,41:23,50:[1,26],52:[1,25],53:24},{25:[1,38]},{18:[2,48],25:[2,48],33:[2,48],39:39,42:[2,48],43:[2,48],44:[2,48],45:[2,48],46:[2,48],50:[2,48],52:[2,48]},{18:[2,22],25:[2,22],33:[2,22],46:[2,22]},{18:[2,35],25:[2,35],33:[2,35],42:[2,35],43:[2,35],44:[2,35],45:[2,35],46:[2,35],50:[2,35],52:[2,35],54:[1,40]},{30:41,50:[1,26],53:24},{18:[2,37],25:[2,37],33:[2,37],42:[2,37],43:[2,37],44:[2,37],45:[2,37],46:[2,37],50:[2,37],52:[2,37],54:[2,37]},{33:[1,42]},{20:43,27:44,28:[1,45],29:[2,40]},{23:46,27:47,28:[1,45],29:[2,42]},{15:[1,48]},{25:[2,46],30:51,36:49,38:50,41:55,42:[1,52],43:[1,53],44:[1,54],45:[1,56],47:57,48:58,49:60,50:[1,59],52:[1,25],53:24},{25:[2,31],42:[2,31],43:[2,31],44:[2,31],45:[2,31],50:[2,31],52:[2,31]},{25:[2,32],42:[2,32],43:[2,32],44:[2,32],45:[2,32],50:[2,32],52:[2,32]},{25:[2,33],42:[2,33],43:[2,33],44:[2,33],45:[2,33],50:[2,33],52:[2,33]},{25:[1,61]},{25:[1,62]},{18:[1,63]},{5:[2,17],12:[2,17],13:[2,17],16:[2,17],24:[2,17],26:[2,17],28:[2,17],29:[2,17],31:[2,17],32:[2,17],34:[2,17]},{18:[2,50],25:[2,50],30:51,33:[2,50],36:65,40:64,41:55,42:[1,52],43:[1,53],44:[1,54],45:[1,56],46:[2,50],47:66,48:58,49:60,50:[1,59],52:[1,25],53:24},{50:[1,67]},{18:[2,34],25:[2,34],33:[2,34],42:[2,34],43:[2,34],44:[2,34],45:[2,34],46:[2,34],50:[2,34],52:[2,34]},{5:[2,18],12:[2,18],13:[2,18],16:[2,18],24:[2,18],26:[2,18],28:[2,18],29:[2,18],31:[2,18],32:[2,18],34:[2,18]},{21:68,29:[1,69]},{29:[2,41]},{4:70,6:3,12:[2,38],13:[2,38],16:[2,38],24:[2,38],26:[2,38],29:[2,38],31:[2,38],32:[2,38],34:[2,38]},{21:71,29:[1,69]},{29:[2,43]},{5:[2,9],12:[2,9],13:[2,9],16:[2,9],24:[2,9],26:[2,9],28:[2,9],29:[2,9],31:[2,9],32:[2,9],34:[2,9]},{25:[2,44],37:72,47:73,48:58,49:60,50:[1,74]},{25:[1,75]},{18:[2,23],25:[2,23],33:[2,23],42:[2,23],43:[2,23],44:[2,23],45:[2,23],46:[2,23],50:[2,23],52:[2,23]},{18:[2,24],25:[2,24],33:[2,24],42:[2,24],43:[2,24],44:[2,24],45:[2,24],46:[2,24],50:[2,24],52:[2,24]},{18:[2,25],25:[2,25],33:[2,25],42:[2,25],43:[2,25],44:[2,25],45:[2,25],46:[2,25],50:[2,25],52:[2,25]},{18:[2,26],25:[2,26],33:[2,26],42:[2,26],43:[2,26],44:[2,26],45:[2,26],46:[2,26],50:[2,26],52:[2,26]},{18:[2,27],25:[2,27],33:[2,27],42:[2,27],43:[2,27],44:[2,27],45:[2,27],46:[2,27],50:[2,27],52:[2,27]},{17:76,30:22,41:23,50:[1,26],52:[1,25],53:24},{25:[2,47]},{18:[2,29],25:[2,29],33:[2,29],46:[2,29],49:77,50:[1,74]},{18:[2,37],25:[2,37],33:[2,37],42:[2,37],43:[2,37],44:[2,37],45:[2,37],46:[2,37],50:[2,37],51:[1,78],52:[2,37],54:[2,37]},{18:[2,52],25:[2,52],33:[2,52],46:[2,52],50:[2,52]},{12:[2,13],13:[2,13],16:[2,13],24:[2,13],26:[2,13],28:[2,13],29:[2,13],31:[2,13],32:[2,13],34:[2,13]},{12:[2,14],13:[2,14],16:[2,14],24:[2,14],26:[2,14],28:[2,14],29:[2,14],31:[2,14],32:[2,14],34:[2,14]},{12:[2,10]},{18:[2,21],25:[2,21],33:[2,21],46:[2,21]},{18:[2,49],25:[2,49],33:[2,49],42:[2,49],43:[2,49],44:[2,49],45:[2,49],46:[2,49],50:[2,49],52:[2,49]},{18:[2,51],25:[2,51],33:[2,51],46:[2,51]},{18:[2,36],25:[2,36],33:[2,36],42:[2,36],43:[2,36],44:[2,36],45:[2,36],46:[2,36],50:[2,36],52:[2,36],54:[2,36]},{5:[2,11],12:[2,11],13:[2,11],16:[2,11],24:[2,11],26:[2,11],28:[2,11],29:[2,11],31:[2,11],32:[2,11],34:[2,11]},{30:79,50:[1,26],53:24},{29:[2,15]},{5:[2,12],12:[2,12],13:[2,12],16:[2,12],24:[2,12],26:[2,12],28:[2,12],29:[2,12],31:[2,12],32:[2,12],34:[2,12]},{25:[1,80]},{25:[2,45]},{51:[1,78]},{5:[2,20],12:[2,20],13:[2,20],16:[2,20],24:[2,20],26:[2,20],28:[2,20],29:[2,20],31:[2,20],32:[2,20],34:[2,20]},{46:[1,81]},{18:[2,53],25:[2,53],33:[2,53],46:[2,53],50:[2,53]},{30:51,36:82,41:55,42:[1,52],43:[1,53],44:[1,54],45:[1,56],50:[1,26],52:[1,25],53:24},{25:[1,83]},{5:[2,19],12:[2,19],13:[2,19],16:[2,19],24:[2,19],26:[2,19],28:[2,19],29:[2,19],31:[2,19],32:[2,19],34:[2,19]},{18:[2,28],25:[2,28],33:[2,28],42:[2,28],43:[2,28],44:[2,28],45:[2,28],46:[2,28],50:[2,28],52:[2,28]},{18:[2,30],25:[2,30],33:[2,30],46:[2,30],50:[2,30]},{5:[2,16],12:[2,16],13:[2,16],16:[2,16],24:[2,16],26:[2,16],28:[2,16],29:[2,16],31:[2,16],32:[2,16],34:[2,16]}],defaultActions:{4:[2,1],44:[2,41],47:[2,43],57:[2,47],63:[2,10],70:[2,15],73:[2,45]},parseError:function(a){throw new Error(a)},parse:function(a){function b(){var a;return a=c.lexer.lex()||1,"number"!=typeof a&&(a=c.symbols_[a]||a),a}var c=this,d=[0],e=[null],f=[],g=this.table,h="",i=0,j=0,k=0;this.lexer.setInput(a),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,"undefined"==typeof this.lexer.yylloc&&(this.lexer.yylloc={});var l=this.lexer.yylloc;f.push(l);var m=this.lexer.options&&this.lexer.options.ranges;"function"==typeof this.yy.parseError&&(this.parseError=this.yy.parseError);for(var n,o,p,q,r,s,t,u,v,w={};;){if(p=d[d.length-1],this.defaultActions[p]?q=this.defaultActions[p]:((null===n||"undefined"==typeof n)&&(n=b()),q=g[p]&&g[p][n]),"undefined"==typeof q||!q.length||!q[0]){var x="";if(!k){v=[];for(s in g[p])this.terminals_[s]&&s>2&&v.push("'"+this.terminals_[s]+"'");x=this.lexer.showPosition?"Parse error on line "+(i+1)+":\n"+this.lexer.showPosition()+"\nExpecting "+v.join(", ")+", got '"+(this.terminals_[n]||n)+"'":"Parse error on line "+(i+1)+": Unexpected "+(1==n?"end of input":"'"+(this.terminals_[n]||n)+"'"),this.parseError(x,{text:this.lexer.match,token:this.terminals_[n]||n,line:this.lexer.yylineno,loc:l,expected:v})}}if(q[0]instanceof Array&&q.length>1)throw new Error("Parse Error: multiple actions possible at state: "+p+", token: "+n);switch(q[0]){case 1:d.push(n),e.push(this.lexer.yytext),f.push(this.lexer.yylloc),d.push(q[1]),n=null,o?(n=o,o=null):(j=this.lexer.yyleng,h=this.lexer.yytext,i=this.lexer.yylineno,l=this.lexer.yylloc,k>0&&k--);break;case 2:if(t=this.productions_[q[1]][1],w.$=e[e.length-t],w._$={first_line:f[f.length-(t||1)].first_line,last_line:f[f.length-1].last_line,first_column:f[f.length-(t||1)].first_column,last_column:f[f.length-1].last_column},m&&(w._$.range=[f[f.length-(t||1)].range[0],f[f.length-1].range[1]]),r=this.performAction.call(w,h,j,i,this.yy,q[1],e,f),"undefined"!=typeof r)return r;t&&(d=d.slice(0,-1*t*2),e=e.slice(0,-1*t),f=f.slice(0,-1*t)),d.push(this.productions_[q[1]][0]),e.push(w.$),f.push(w._$),u=g[d[d.length-2]][d[d.length-1]],d.push(u);break;case 3:return!0}}return!0}},c=function(){var a={EOF:1,parseError:function(a,b){if(!this.yy.parser)throw new Error(a);this.yy.parser.parseError(a,b)},setInput:function(a){return this._input=a,this._more=this._less=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var a=this._input[0];this.yytext+=a,this.yyleng++,this.offset++,this.match+=a,this.matched+=a;var b=a.match(/(?:\r\n?|\n).*/g);return b?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),a},unput:function(a){var b=a.length,c=a.split(/(?:\r\n?|\n)/g);this._input=a+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-b-1),this.offset-=b;var d=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),c.length-1&&(this.yylineno-=c.length-1);var e=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:c?(c.length===d.length?this.yylloc.first_column:0)+d[d.length-c.length].length-c[0].length:this.yylloc.first_column-b},this.options.ranges&&(this.yylloc.range=[e[0],e[0]+this.yyleng-b]),this},more:function(){return this._more=!0,this},less:function(a){this.unput(this.match.slice(a))},pastInput:function(){var a=this.matched.substr(0,this.matched.length-this.match.length);return(a.length>20?"...":"")+a.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var a=this.match;return a.length<20&&(a+=this._input.substr(0,20-a.length)),(a.substr(0,20)+(a.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var a=this.pastInput(),b=new Array(a.length+1).join("-");return a+this.upcomingInput()+"\n"+b+"^"},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var a,b,c,d,e;this._more||(this.yytext="",this.match="");for(var f=this._currentRules(),g=0;g<f.length&&(c=this._input.match(this.rules[f[g]]),!c||b&&!(c[0].length>b[0].length)||(b=c,d=g,this.options.flex));g++);return b?(e=b[0].match(/(?:\r\n?|\n).*/g),e&&(this.yylineno+=e.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:e?e[e.length-1].length-e[e.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+b[0].length},this.yytext+=b[0],this.match+=b[0],this.matches=b,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._input=this._input.slice(b[0].length),this.matched+=b[0],a=this.performAction.call(this,this.yy,this,f[d],this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),a?a:void 0):""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var a=this.next();return"undefined"!=typeof a?a:this.lex()},begin:function(a){this.conditionStack.push(a)},popState:function(){return this.conditionStack.pop()},_currentRules:function(){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules},topState:function(){return this.conditionStack[this.conditionStack.length-2]},pushState:function(a){this.begin(a)}};return a.options={},a.performAction=function(a,b,c,d){function e(a,c){return b.yytext=b.yytext.substr(a,b.yyleng-c)}switch(c){case 0:if("\\\\"===b.yytext.slice(-2)?(e(0,1),this.begin("mu")):"\\"===b.yytext.slice(-1)?(e(0,1),this.begin("emu")):this.begin("mu"),b.yytext)return 12;break;case 1:return 12;case 2:return this.popState(),12;case 3:return b.yytext=b.yytext.substr(5,b.yyleng-9),this.popState(),15;case 4:return 12;case 5:return e(0,4),this.popState(),13;case 6:return 45;case 7:return 46;case 8:return 16;case 9:return this.popState(),this.begin("raw"),18;case 10:return 34;case 11:return 24;case 12:return 29;case 13:return this.popState(),28;case 14:return this.popState(),28;case 15:return 26;case 16:return 26;case 17:return 32;case 18:return 31;case 19:this.popState(),this.begin("com");break;case 20:return e(3,5),this.popState(),13;case 21:return 31;case 22:return 51;case 23:return 50;case 24:return 50;case 25:return 54;case 26:break;case 27:return this.popState(),33;case 28:return this.popState(),25;case 29:return b.yytext=e(1,2).replace(/\\"/g,'"'),42;case 30:return b.yytext=e(1,2).replace(/\\'/g,"'"),42;case 31:return 52;case 32:return 44;case 33:return 44;case 34:return 43;case 35:return 50;case 36:return b.yytext=e(1,2),50;case 37:return"INVALID";case 38:return 5}},a.rules=[/^(?:[^\x00]*?(?=(\{\{)))/,/^(?:[^\x00]+)/,/^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/,/^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/,/^(?:[^\x00]*?(?=(\{\{\{\{\/)))/,/^(?:[\s\S]*?--\}\})/,/^(?:\()/,/^(?:\))/,/^(?:\{\{\{\{)/,/^(?:\}\}\}\})/,/^(?:\{\{(~)?>)/,/^(?:\{\{(~)?#)/,/^(?:\{\{(~)?\/)/,/^(?:\{\{(~)?\^\s*(~)?\}\})/,/^(?:\{\{(~)?\s*else\s*(~)?\}\})/,/^(?:\{\{(~)?\^)/,/^(?:\{\{(~)?\s*else\b)/,/^(?:\{\{(~)?\{)/,/^(?:\{\{(~)?&)/,/^(?:\{\{!--)/,/^(?:\{\{![\s\S]*?\}\})/,/^(?:\{\{(~)?)/,/^(?:=)/,/^(?:\.\.)/,/^(?:\.(?=([=~}\s\/.)])))/,/^(?:[\/.])/,/^(?:\s+)/,/^(?:\}(~)?\}\})/,/^(?:(~)?\}\})/,/^(?:"(\\["]|[^"])*")/,/^(?:'(\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\s)])))/,/^(?:false(?=([~}\s)])))/,/^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/,/^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)]))))/,/^(?:\[[^\]]*\])/,/^(?:.)/,/^(?:$)/],a.conditions={mu:{rules:[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],inclusive:!1},emu:{rules:[2],inclusive:!1},com:{rules:[5],inclusive:!1},raw:{rules:[3,4],inclusive:!1},INITIAL:{rules:[0,1,38],inclusive:!0}},a}();return b.lexer=c,a.prototype=b,b.Parser=a,new a}();return a=b}(),i=function(a){"use strict";function b(a,b){return{left:"~"===a.charAt(2),right:"~"===b.charAt(b.length-3)}}function c(a,b,c,d,i,k){if(a.sexpr.id.original!==d.path.original)throw new j(a.sexpr.id.original+" doesn't match "+d.path.original,a);var l=c&&c.program,m={left:a.strip.left,right:d.strip.right,openStandalone:f(b.statements),closeStandalone:e((l||b).statements)};if(a.strip.right&&g(b.statements,null,!0),l){var n=c.strip;n.left&&h(b.statements,null,!0),n.right&&g(l.statements,null,!0),d.strip.left&&h(l.statements,null,!0),e(b.statements)&&f(l.statements)&&(h(b.statements),g(l.statements))}else d.strip.left&&h(b.statements,null,!0);return i?new this.BlockNode(a,l,b,m,k):new this.BlockNode(a,b,l,m,k)}function d(a,b){for(var c=0,d=a.length;d>c;c++){var i=a[c],j=i.strip;if(j){var k=e(a,c,b,"partial"===i.type),l=f(a,c,b),m=j.openStandalone&&k,n=j.closeStandalone&&l,o=j.inlineStandalone&&k&&l;j.right&&g(a,c,!0),j.left&&h(a,c,!0),o&&(g(a,c),h(a,c)&&"partial"===i.type&&(i.indent=/([ \t]+$)/.exec(a[c-1].original)?RegExp.$1:"")),m&&(g((i.program||i.inverse).statements),h(a,c)),n&&(g(a,c),h((i.inverse||i.program).statements))}}return a}function e(a,b,c){void 0===b&&(b=a.length);var d=a[b-1],e=a[b-2];return d?"content"===d.type?(e||!c?/\r?\n\s*?$/:/(^|\r?\n)\s*?$/).test(d.original):void 0:c}function f(a,b,c){void 0===b&&(b=-1);var d=a[b+1],e=a[b+2];return d?"content"===d.type?(e||!c?/^\s*?\r?\n/:/^\s*?(\r?\n|$)/).test(d.original):void 0:c}function g(a,b,c){var d=a[null==b?0:b+1];if(d&&"content"===d.type&&(c||!d.rightStripped)){var e=d.string;d.string=d.string.replace(c?/^\s+/:/^[ \t]*\r?\n?/,""),d.rightStripped=d.string!==e}}function h(a,b,c){var d=a[null==b?a.length-1:b-1];if(d&&"content"===d.type&&(c||!d.leftStripped)){var e=d.string;return d.string=d.string.replace(c?/\s+$/:/[ \t]+$/,""),d.leftStripped=d.string!==e,d.leftStripped}}var i={},j=a;return i.stripFlags=b,i.prepareBlock=c,i.prepareProgram=d,i}(c),j=function(a,b,c,d){"use strict";function e(a){return a.constructor===h.ProgramNode?a:(g.yy=k,g.parse(a))}var f={},g=a,h=b,i=c,j=d.extend;f.parser=g;var k={};return j(k,i,h),f.parse=e,f}(h,g,i,b),k=function(a,b){"use strict";function c(){}function d(a,b,c){if(null==a||"string"!=typeof a&&a.constructor!==c.AST.ProgramNode)throw new h("You must pass a string or Handlebars AST to Handlebars.precompile. You passed "+a);b=b||{},"data"in b||(b.data=!0),b.compat&&(b.useDepths=!0);var d=c.parse(a),e=(new c.Compiler).compile(d,b);return(new c.JavaScriptCompiler).compile(e,b)}function e(a,b,c){function d(){var d=c.parse(a),e=(new c.Compiler).compile(d,b),f=(new c.JavaScriptCompiler).compile(e,b,void 0,!0);return c.template(f)}if(null==a||"string"!=typeof a&&a.constructor!==c.AST.ProgramNode)throw new h("You must pass a string or Handlebars AST to Handlebars.compile. You passed "+a);b=b||{},"data"in b||(b.data=!0),b.compat&&(b.useDepths=!0);var e,f=function(a,b){return e||(e=d()),e.call(this,a,b)};return f._setup=function(a){return e||(e=d()),e._setup(a)},f._child=function(a,b,c){return e||(e=d()),e._child(a,b,c)},f}function f(a,b){if(a===b)return!0;if(i(a)&&i(b)&&a.length===b.length){for(var c=0;c<a.length;c++)if(!f(a[c],b[c]))return!1;return!0}}var g={},h=a,i=b.isArray,j=[].slice;return g.Compiler=c,c.prototype={compiler:c,equals:function(a){var b=this.opcodes.length;if(a.opcodes.length!==b)return!1;for(var c=0;b>c;c++){var d=this.opcodes[c],e=a.opcodes[c];if(d.opcode!==e.opcode||!f(d.args,e.args))return!1}for(b=this.children.length,c=0;b>c;c++)if(!this.children[c].equals(a.children[c]))return!1;return!0},guid:0,compile:function(a,b){this.opcodes=[],this.children=[],this.depths={list:[]},this.options=b,this.stringParams=b.stringParams,this.trackIds=b.trackIds;var c=this.options.knownHelpers;if(this.options.knownHelpers={helperMissing:!0,blockHelperMissing:!0,each:!0,"if":!0,unless:!0,"with":!0,log:!0,lookup:!0},c)for(var d in c)this.options.knownHelpers[d]=c[d];return this.accept(a)},accept:function(a){return this[a.type](a)},program:function(a){for(var b=a.statements,c=0,d=b.length;d>c;c++)this.accept(b[c]);return this.isSimple=1===d,this.depths.list=this.depths.list.sort(function(a,b){return a-b}),this},compileProgram:function(a){var b,c=(new this.compiler).compile(a,this.options),d=this.guid++;
this.usePartial=this.usePartial||c.usePartial,this.children[d]=c;for(var e=0,f=c.depths.list.length;f>e;e++)b=c.depths.list[e],2>b||this.addDepth(b-1);return d},block:function(a){var b=a.mustache,c=a.program,d=a.inverse;c&&(c=this.compileProgram(c)),d&&(d=this.compileProgram(d));var e=b.sexpr,f=this.classifySexpr(e);"helper"===f?this.helperSexpr(e,c,d):"simple"===f?(this.simpleSexpr(e),this.opcode("pushProgram",c),this.opcode("pushProgram",d),this.opcode("emptyHash"),this.opcode("blockValue",e.id.original)):(this.ambiguousSexpr(e,c,d),this.opcode("pushProgram",c),this.opcode("pushProgram",d),this.opcode("emptyHash"),this.opcode("ambiguousBlockValue")),this.opcode("append")},hash:function(a){var b,c,d=a.pairs;for(this.opcode("pushHash"),b=0,c=d.length;c>b;b++)this.pushParam(d[b][1]);for(;b--;)this.opcode("assignToHash",d[b][0]);this.opcode("popHash")},partial:function(a){var b=a.partialName;this.usePartial=!0,a.hash?this.accept(a.hash):this.opcode("push","undefined"),a.context?this.accept(a.context):(this.opcode("getContext",0),this.opcode("pushContext")),this.opcode("invokePartial",b.name,a.indent||""),this.opcode("append")},content:function(a){a.string&&this.opcode("appendContent",a.string)},mustache:function(a){this.sexpr(a.sexpr),a.escaped&&!this.options.noEscape?this.opcode("appendEscaped"):this.opcode("append")},ambiguousSexpr:function(a,b,c){var d=a.id,e=d.parts[0],f=null!=b||null!=c;this.opcode("getContext",d.depth),this.opcode("pushProgram",b),this.opcode("pushProgram",c),this.ID(d),this.opcode("invokeAmbiguous",e,f)},simpleSexpr:function(a){var b=a.id;"DATA"===b.type?this.DATA(b):b.parts.length?this.ID(b):(this.addDepth(b.depth),this.opcode("getContext",b.depth),this.opcode("pushContext")),this.opcode("resolvePossibleLambda")},helperSexpr:function(a,b,c){var d=this.setupFullMustacheParams(a,b,c),e=a.id,f=e.parts[0];if(this.options.knownHelpers[f])this.opcode("invokeKnownHelper",d.length,f);else{if(this.options.knownHelpersOnly)throw new h("You specified knownHelpersOnly, but used the unknown helper "+f,a);e.falsy=!0,this.ID(e),this.opcode("invokeHelper",d.length,e.original,e.isSimple)}},sexpr:function(a){var b=this.classifySexpr(a);"simple"===b?this.simpleSexpr(a):"helper"===b?this.helperSexpr(a):this.ambiguousSexpr(a)},ID:function(a){this.addDepth(a.depth),this.opcode("getContext",a.depth);var b=a.parts[0];b?this.opcode("lookupOnContext",a.parts,a.falsy,a.isScoped):this.opcode("pushContext")},DATA:function(a){this.options.data=!0,this.opcode("lookupData",a.id.depth,a.id.parts)},STRING:function(a){this.opcode("pushString",a.string)},NUMBER:function(a){this.opcode("pushLiteral",a.number)},BOOLEAN:function(a){this.opcode("pushLiteral",a.bool)},comment:function(){},opcode:function(a){this.opcodes.push({opcode:a,args:j.call(arguments,1)})},addDepth:function(a){0!==a&&(this.depths[a]||(this.depths[a]=!0,this.depths.list.push(a)))},classifySexpr:function(a){var b=a.isHelper,c=a.eligibleHelper,d=this.options;if(c&&!b){var e=a.id.parts[0];d.knownHelpers[e]?b=!0:d.knownHelpersOnly&&(c=!1)}return b?"helper":c?"ambiguous":"simple"},pushParams:function(a){for(var b=0,c=a.length;c>b;b++)this.pushParam(a[b])},pushParam:function(a){this.stringParams?(a.depth&&this.addDepth(a.depth),this.opcode("getContext",a.depth||0),this.opcode("pushStringParam",a.stringModeValue,a.type),"sexpr"===a.type&&this.sexpr(a)):(this.trackIds&&this.opcode("pushId",a.type,a.idName||a.stringModeValue),this.accept(a))},setupFullMustacheParams:function(a,b,c){var d=a.params;return this.pushParams(d),this.opcode("pushProgram",b),this.opcode("pushProgram",c),a.hash?this.hash(a.hash):this.opcode("emptyHash"),d}},g.precompile=d,g.compile=e,g}(c,b),l=function(a,b){"use strict";function c(a){this.value=a}function d(){}var e,f=a.COMPILER_REVISION,g=a.REVISION_CHANGES,h=b;d.prototype={nameLookup:function(a,b){return d.isValidJavaScriptVariableName(b)?a+"."+b:a+"['"+b+"']"},depthedLookup:function(a){return this.aliases.lookup="this.lookup",'lookup(depths, "'+a+'")'},compilerInfo:function(){var a=f,b=g[a];return[a,b]},appendToBuffer:function(a){return this.environment.isSimple?"return "+a+";":{appendToBuffer:!0,content:a,toString:function(){return"buffer += "+a+";"}}},initializeBuffer:function(){return this.quotedString("")},namespace:"Handlebars",compile:function(a,b,c,d){this.environment=a,this.options=b,this.stringParams=this.options.stringParams,this.trackIds=this.options.trackIds,this.precompile=!d,this.name=this.environment.name,this.isChild=!!c,this.context=c||{programs:[],environments:[]},this.preamble(),this.stackSlot=0,this.stackVars=[],this.aliases={},this.registers={list:[]},this.hashes=[],this.compileStack=[],this.inlineStack=[],this.compileChildren(a,b),this.useDepths=this.useDepths||a.depths.list.length||this.options.compat;var e,f,g,i=a.opcodes;for(f=0,g=i.length;g>f;f++)e=i[f],this[e.opcode].apply(this,e.args);if(this.pushSource(""),this.stackSlot||this.inlineStack.length||this.compileStack.length)throw new h("Compile completed with content left on stack");var j=this.createFunctionContext(d);if(this.isChild)return j;var k={compiler:this.compilerInfo(),main:j},l=this.context.programs;for(f=0,g=l.length;g>f;f++)l[f]&&(k[f]=l[f]);return this.environment.usePartial&&(k.usePartial=!0),this.options.data&&(k.useData=!0),this.useDepths&&(k.useDepths=!0),this.options.compat&&(k.compat=!0),d||(k.compiler=JSON.stringify(k.compiler),k=this.objectLiteral(k)),k},preamble:function(){this.lastContext=0,this.source=[]},createFunctionContext:function(a){var b="",c=this.stackVars.concat(this.registers.list);c.length>0&&(b+=", "+c.join(", "));for(var d in this.aliases)this.aliases.hasOwnProperty(d)&&(b+=", "+d+"="+this.aliases[d]);var e=["depth0","helpers","partials","data"];this.useDepths&&e.push("depths");var f=this.mergeSource(b);return a?(e.push(f),Function.apply(this,e)):"function("+e.join(",")+") {\n  "+f+"}"},mergeSource:function(a){for(var b,c,d="",e=!this.forceBuffer,f=0,g=this.source.length;g>f;f++){var h=this.source[f];h.appendToBuffer?b=b?b+"\n    + "+h.content:h.content:(b&&(d?d+="buffer += "+b+";\n  ":(c=!0,d=b+";\n  "),b=void 0),d+=h+"\n  ",this.environment.isSimple||(e=!1))}return e?(b||!d)&&(d+="return "+(b||'""')+";\n"):(a+=", buffer = "+(c?"":this.initializeBuffer()),d+=b?"return buffer + "+b+";\n":"return buffer;\n"),a&&(d="var "+a.substring(2)+(c?"":";\n  ")+d),d},blockValue:function(a){this.aliases.blockHelperMissing="helpers.blockHelperMissing";var b=[this.contextName(0)];this.setupParams(a,0,b);var c=this.popStack();b.splice(1,0,c),this.push("blockHelperMissing.call("+b.join(", ")+")")},ambiguousBlockValue:function(){this.aliases.blockHelperMissing="helpers.blockHelperMissing";var a=[this.contextName(0)];this.setupParams("",0,a,!0),this.flushInline();var b=this.topStack();a.splice(1,0,b),this.pushSource("if (!"+this.lastHelper+") { "+b+" = blockHelperMissing.call("+a.join(", ")+"); }")},appendContent:function(a){this.pendingContent&&(a=this.pendingContent+a),this.pendingContent=a},append:function(){this.flushInline();var a=this.popStack();this.pushSource("if ("+a+" != null) { "+this.appendToBuffer(a)+" }"),this.environment.isSimple&&this.pushSource("else { "+this.appendToBuffer("''")+" }")},appendEscaped:function(){this.aliases.escapeExpression="this.escapeExpression",this.pushSource(this.appendToBuffer("escapeExpression("+this.popStack()+")"))},getContext:function(a){this.lastContext=a},pushContext:function(){this.pushStackLiteral(this.contextName(this.lastContext))},lookupOnContext:function(a,b,c){var d=0,e=a.length;for(c||!this.options.compat||this.lastContext?this.pushContext():this.push(this.depthedLookup(a[d++]));e>d;d++)this.replaceStack(function(c){var e=this.nameLookup(c,a[d],"context");return b?" && "+e:" != null ? "+e+" : "+c})},lookupData:function(a,b){a?this.pushStackLiteral("this.data(data, "+a+")"):this.pushStackLiteral("data");for(var c=b.length,d=0;c>d;d++)this.replaceStack(function(a){return" && "+this.nameLookup(a,b[d],"data")})},resolvePossibleLambda:function(){this.aliases.lambda="this.lambda",this.push("lambda("+this.popStack()+", "+this.contextName(0)+")")},pushStringParam:function(a,b){this.pushContext(),this.pushString(b),"sexpr"!==b&&("string"==typeof a?this.pushString(a):this.pushStackLiteral(a))},emptyHash:function(){this.pushStackLiteral("{}"),this.trackIds&&this.push("{}"),this.stringParams&&(this.push("{}"),this.push("{}"))},pushHash:function(){this.hash&&this.hashes.push(this.hash),this.hash={values:[],types:[],contexts:[],ids:[]}},popHash:function(){var a=this.hash;this.hash=this.hashes.pop(),this.trackIds&&this.push("{"+a.ids.join(",")+"}"),this.stringParams&&(this.push("{"+a.contexts.join(",")+"}"),this.push("{"+a.types.join(",")+"}")),this.push("{\n    "+a.values.join(",\n    ")+"\n  }")},pushString:function(a){this.pushStackLiteral(this.quotedString(a))},push:function(a){return this.inlineStack.push(a),a},pushLiteral:function(a){this.pushStackLiteral(a)},pushProgram:function(a){null!=a?this.pushStackLiteral(this.programExpression(a)):this.pushStackLiteral(null)},invokeHelper:function(a,b,c){this.aliases.helperMissing="helpers.helperMissing";var d=this.popStack(),e=this.setupHelper(a,b),f=(c?e.name+" || ":"")+d+" || helperMissing";this.push("(("+f+").call("+e.callParams+"))")},invokeKnownHelper:function(a,b){var c=this.setupHelper(a,b);this.push(c.name+".call("+c.callParams+")")},invokeAmbiguous:function(a,b){this.aliases.functionType='"function"',this.aliases.helperMissing="helpers.helperMissing",this.useRegister("helper");var c=this.popStack();this.emptyHash();var d=this.setupHelper(0,a,b),e=this.lastHelper=this.nameLookup("helpers",a,"helper");this.push("((helper = (helper = "+e+" || "+c+") != null ? helper : helperMissing"+(d.paramsInit?"),("+d.paramsInit:"")+"),(typeof helper === functionType ? helper.call("+d.callParams+") : helper))")},invokePartial:function(a,b){var c=[this.nameLookup("partials",a,"partial"),"'"+b+"'","'"+a+"'",this.popStack(),this.popStack(),"helpers","partials"];this.options.data?c.push("data"):this.options.compat&&c.push("undefined"),this.options.compat&&c.push("depths"),this.push("this.invokePartial("+c.join(", ")+")")},assignToHash:function(a){var b,c,d,e=this.popStack();this.trackIds&&(d=this.popStack()),this.stringParams&&(c=this.popStack(),b=this.popStack());var f=this.hash;b&&f.contexts.push("'"+a+"': "+b),c&&f.types.push("'"+a+"': "+c),d&&f.ids.push("'"+a+"': "+d),f.values.push("'"+a+"': ("+e+")")},pushId:function(a,b){"ID"===a||"DATA"===a?this.pushString(b):"sexpr"===a?this.pushStackLiteral("true"):this.pushStackLiteral("null")},compiler:d,compileChildren:function(a,b){for(var c,d,e=a.children,f=0,g=e.length;g>f;f++){c=e[f],d=new this.compiler;var h=this.matchExistingProgram(c);null==h?(this.context.programs.push(""),h=this.context.programs.length,c.index=h,c.name="program"+h,this.context.programs[h]=d.compile(c,b,this.context,!this.precompile),this.context.environments[h]=c,this.useDepths=this.useDepths||d.useDepths):(c.index=h,c.name="program"+h)}},matchExistingProgram:function(a){for(var b=0,c=this.context.environments.length;c>b;b++){var d=this.context.environments[b];if(d&&d.equals(a))return b}},programExpression:function(a){var b=this.environment.children[a],c=(b.depths.list,this.useDepths),d=[b.index,"data"];return c&&d.push("depths"),"this.program("+d.join(", ")+")"},useRegister:function(a){this.registers[a]||(this.registers[a]=!0,this.registers.list.push(a))},pushStackLiteral:function(a){return this.push(new c(a))},pushSource:function(a){this.pendingContent&&(this.source.push(this.appendToBuffer(this.quotedString(this.pendingContent))),this.pendingContent=void 0),a&&this.source.push(a)},pushStack:function(a){this.flushInline();var b=this.incrStack();return this.pushSource(b+" = "+a+";"),this.compileStack.push(b),b},replaceStack:function(a){{var b,d,e,f="";this.isInline()}if(!this.isInline())throw new h("replaceStack on non-inline");var g=this.popStack(!0);if(g instanceof c)f=b=g.value,e=!0;else{d=!this.stackSlot;var i=d?this.incrStack():this.topStackName();f="("+this.push(i)+" = "+g+")",b=this.topStack()}var j=a.call(this,b);e||this.popStack(),d&&this.stackSlot--,this.push("("+f+j+")")},incrStack:function(){return this.stackSlot++,this.stackSlot>this.stackVars.length&&this.stackVars.push("stack"+this.stackSlot),this.topStackName()},topStackName:function(){return"stack"+this.stackSlot},flushInline:function(){var a=this.inlineStack;if(a.length){this.inlineStack=[];for(var b=0,d=a.length;d>b;b++){var e=a[b];e instanceof c?this.compileStack.push(e):this.pushStack(e)}}},isInline:function(){return this.inlineStack.length},popStack:function(a){var b=this.isInline(),d=(b?this.inlineStack:this.compileStack).pop();if(!a&&d instanceof c)return d.value;if(!b){if(!this.stackSlot)throw new h("Invalid stack pop");this.stackSlot--}return d},topStack:function(){var a=this.isInline()?this.inlineStack:this.compileStack,b=a[a.length-1];return b instanceof c?b.value:b},contextName:function(a){return this.useDepths&&a?"depths["+a+"]":"depth"+a},quotedString:function(a){return'"'+a.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")+'"'},objectLiteral:function(a){var b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(this.quotedString(c)+":"+a[c]);return"{"+b.join(",")+"}"},setupHelper:function(a,b,c){var d=[],e=this.setupParams(b,a,d,c),f=this.nameLookup("helpers",b,"helper");return{params:d,paramsInit:e,name:f,callParams:[this.contextName(0)].concat(d).join(", ")}},setupOptions:function(a,b,c){var d,e,f,g={},h=[],i=[],j=[];g.name=this.quotedString(a),g.hash=this.popStack(),this.trackIds&&(g.hashIds=this.popStack()),this.stringParams&&(g.hashTypes=this.popStack(),g.hashContexts=this.popStack()),e=this.popStack(),f=this.popStack(),(f||e)&&(f||(f="this.noop"),e||(e="this.noop"),g.fn=f,g.inverse=e);for(var k=b;k--;)d=this.popStack(),c[k]=d,this.trackIds&&(j[k]=this.popStack()),this.stringParams&&(i[k]=this.popStack(),h[k]=this.popStack());return this.trackIds&&(g.ids="["+j.join(",")+"]"),this.stringParams&&(g.types="["+i.join(",")+"]",g.contexts="["+h.join(",")+"]"),this.options.data&&(g.data="data"),g},setupParams:function(a,b,c,d){var e=this.objectLiteral(this.setupOptions(a,b,c));return d?(this.useRegister("options"),c.push("options"),"options="+e):(c.push(e),"")}};for(var i="break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield".split(" "),j=d.RESERVED_WORDS={},k=0,l=i.length;l>k;k++)j[i[k]]=!0;return d.isValidJavaScriptVariableName=function(a){return!d.RESERVED_WORDS[a]&&/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(a)},e=d}(d,c),m=function(a,b,c,d,e){"use strict";var f,g=a,h=b,i=c.parser,j=c.parse,k=d.Compiler,l=d.compile,m=d.precompile,n=e,o=g.create,p=function(){var a=o();return a.compile=function(b,c){return l(b,c,a)},a.precompile=function(b,c){return m(b,c,a)},a.AST=h,a.Compiler=k,a.JavaScriptCompiler=n,a.Parser=i,a.parse=j,a};return g=p(),g.create=p,g["default"]=g,f=g}(f,g,j,k,l);return m});
(function() {


}).call(this);
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define('simple-hotkeys', ["jquery","simple-module"], function ($, SimpleModule) {
      return (root['hotkeys'] = factory($, SimpleModule));
    });
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require("jquery"),require("simplemodule"));
  } else {
    root.simple = root.simple || {};
    root.simple['hotkeys'] = factory(jQuery,SimpleModule);
  }
}(this, function ($, SimpleModule) {

var Hotkeys, hotkeys,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Hotkeys = (function(superClass) {
  extend(Hotkeys, superClass);

  function Hotkeys() {
    return Hotkeys.__super__.constructor.apply(this, arguments);
  }

  Hotkeys.count = 0;

  Hotkeys.keyNameMap = {
    8: "Backspace",
    9: "Tab",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Esc",
    32: "Spacebar",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "Left",
    38: "Up",
    39: "Right",
    40: "Down",
    45: "Insert",
    46: "Del",
    91: "Meta",
    93: "Meta",
    48: "0",
    49: "1",
    50: "2",
    51: "3",
    52: "4",
    53: "5",
    54: "6",
    55: "7",
    56: "8",
    57: "9",
    65: "A",
    66: "B",
    67: "C",
    68: "D",
    69: "E",
    70: "F",
    71: "G",
    72: "H",
    73: "I",
    74: "J",
    75: "K",
    76: "L",
    77: "M",
    78: "N",
    79: "O",
    80: "P",
    81: "Q",
    82: "R",
    83: "S",
    84: "T",
    85: "U",
    86: "V",
    87: "W",
    88: "X",
    89: "Y",
    90: "Z",
    96: "0",
    97: "1",
    98: "2",
    99: "3",
    100: "4",
    101: "5",
    102: "6",
    103: "7",
    104: "8",
    105: "9",
    106: "Multiply",
    107: "Add",
    109: "Subtract",
    110: "Decimal",
    111: "Divide",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    124: "F13",
    125: "F14",
    126: "F15",
    127: "F16",
    128: "F17",
    129: "F18",
    130: "F19",
    131: "F20",
    132: "F21",
    133: "F22",
    134: "F23",
    135: "F24",
    59: ";",
    61: "=",
    186: ";",
    187: "=",
    188: ",",
    190: ".",
    191: "/",
    192: "`",
    219: "[",
    220: "\\",
    221: "]",
    222: "'"
  };

  Hotkeys.aliases = {
    "escape": "esc",
    "delete": "del",
    "return": "enter",
    "ctrl": "control",
    "space": "spacebar",
    "ins": "insert",
    "cmd": "meta",
    "command": "meta",
    "wins": "meta",
    "windows": "meta"
  };

  Hotkeys.normalize = function(shortcut) {
    var i, j, key, keyname, keys, len;
    keys = shortcut.toLowerCase().replace(/\s+/gi, "").split("+");
    for (i = j = 0, len = keys.length; j < len; i = ++j) {
      key = keys[i];
      keys[i] = this.aliases[key] || key;
    }
    keyname = keys.pop();
    keys.sort().push(keyname);
    return keys.join("_");
  };

  Hotkeys.prototype.opts = {
    el: document
  };

  Hotkeys.prototype._init = function() {
    this.id = ++this.constructor.count;
    this._map = {};
    this._delegate = typeof this.opts.el === "string" ? document : this.opts.el;
    return $(this._delegate).on("keydown.simple-hotkeys-" + this.id, this.opts.el, (function(_this) {
      return function(e) {
        var ref;
        return (ref = _this._getHander(e)) != null ? ref.call(_this, e) : void 0;
      };
    })(this));
  };

  Hotkeys.prototype._getHander = function(e) {
    var keyname, shortcut;
    if (!(keyname = this.constructor.keyNameMap[e.which])) {
      return;
    }
    shortcut = "";
    if (e.altKey) {
      shortcut += "alt_";
    }
    if (e.ctrlKey) {
      shortcut += "control_";
    }
    if (e.metaKey) {
      shortcut += "meta_";
    }
    if (e.shiftKey) {
      shortcut += "shift_";
    }
    shortcut += keyname.toLowerCase();
    return this._map[shortcut];
  };

  Hotkeys.prototype.respondTo = function(subject) {
    if (typeof subject === 'string') {
      return this._map[this.constructor.normalize(subject)] != null;
    } else {
      return this._getHander(subject) != null;
    }
  };

  Hotkeys.prototype.add = function(shortcut, handler) {
    this._map[this.constructor.normalize(shortcut)] = handler;
    return this;
  };

  Hotkeys.prototype.remove = function(shortcut) {
    delete this._map[this.constructor.normalize(shortcut)];
    return this;
  };

  Hotkeys.prototype.destroy = function() {
    $(this._delegate).off(".simple-hotkeys-" + this.id);
    this._map = {};
    return this;
  };

  return Hotkeys;

})(SimpleModule);

hotkeys = function(opts) {
  return new Hotkeys(opts);
};

return hotkeys;

}));

!function(a,b){"function"==typeof define&&define.amd?define("simple-hotkeys",["jquery","simple-module"],function(c,d){return a.hotkeys=b(c,d)}):"object"==typeof exports?module.exports=b(require("jquery"),require("simplemodule")):(a.simple=a.simple||{},a.simple.hotkeys=b(jQuery,SimpleModule))}(this,function(a,b){var c,d,e=function(a,b){function c(){this.constructor=a}for(var d in b)f.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},f={}.hasOwnProperty;return c=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return e(c,b),c.count=0,c.keyNameMap={8:"Backspace",9:"Tab",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Esc",32:"Spacebar",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"Left",38:"Up",39:"Right",40:"Down",45:"Insert",46:"Del",91:"Meta",93:"Meta",48:"0",49:"1",50:"2",51:"3",52:"4",53:"5",54:"6",55:"7",56:"8",57:"9",65:"A",66:"B",67:"C",68:"D",69:"E",70:"F",71:"G",72:"H",73:"I",74:"J",75:"K",76:"L",77:"M",78:"N",79:"O",80:"P",81:"Q",82:"R",83:"S",84:"T",85:"U",86:"V",87:"W",88:"X",89:"Y",90:"Z",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9",106:"Multiply",107:"Add",109:"Subtract",110:"Decimal",111:"Divide",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",124:"F13",125:"F14",126:"F15",127:"F16",128:"F17",129:"F18",130:"F19",131:"F20",132:"F21",133:"F22",134:"F23",135:"F24",59:";",61:"=",186:";",187:"=",188:",",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},c.aliases={escape:"esc","delete":"del","return":"enter",ctrl:"control",space:"spacebar",ins:"insert",cmd:"meta",command:"meta",wins:"meta",windows:"meta"},c.normalize=function(a){var b,c,d,e,f,g;for(f=a.toLowerCase().replace(/\s+/gi,"").split("+"),b=c=0,g=f.length;g>c;b=++c)d=f[b],f[b]=this.aliases[d]||d;return e=f.pop(),f.sort().push(e),f.join("_")},c.prototype.opts={el:document},c.prototype._init=function(){return this.id=++this.constructor.count,this._map={},this._delegate="string"==typeof this.opts.el?document:this.opts.el,a(this._delegate).on("keydown.simple-hotkeys-"+this.id,this.opts.el,function(a){return function(b){var c;return null!=(c=a._getHander(b))?c.call(a,b):void 0}}(this))},c.prototype._getHander=function(a){var b,c;if(b=this.constructor.keyNameMap[a.which])return c="",a.altKey&&(c+="alt_"),a.ctrlKey&&(c+="control_"),a.metaKey&&(c+="meta_"),a.shiftKey&&(c+="shift_"),c+=b.toLowerCase(),this._map[c]},c.prototype.respondTo=function(a){return"string"==typeof a?null!=this._map[this.constructor.normalize(a)]:null!=this._getHander(a)},c.prototype.add=function(a,b){return this._map[this.constructor.normalize(a)]=b,this},c.prototype.remove=function(a){return delete this._map[this.constructor.normalize(a)],this},c.prototype.destroy=function(){return a(this._delegate).off(".simple-hotkeys-"+this.id),this._map={},this},c}(b),d=function(a){return new c(a)}});
/*! jQuery v2.1.4 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */

!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m="2.1.4",n=function(a,b){return new n.fn.init(a,b)},o=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,p=/^-ms-/,q=/-([\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:"jQuery"+(m+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return"object"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,"isPrototypeOf")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf("use strict")?(b=l.createElement("script"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,"ms-").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(o,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function s(a){var b="length"in a&&a.length,c=n.type(a);return"function"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",N=M.replace("w","w#"),O="\\["+L+"*("+M+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+N+"))|)"+L+"*\\]",P=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+O+")*)|.*)\\)|)",Q=new RegExp(L+"+","g"),R=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),S=new RegExp("^"+L+"*,"+L+"*"),T=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),U=new RegExp("="+L+"*([^\\]'\"]*?)"+L+"*\\]","g"),V=new RegExp(P),W=new RegExp("^"+N+"$"),X={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+O),PSEUDO:new RegExp("^"+P),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,aa=/[+~]/,ba=/'|\\/g,ca=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),da=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ea=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fa){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,"string"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(ba,"\\$&"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--)o[l]=s+ra(o[l]);w=aa.test(a)&&pa(b.parentNode)||b,x=o.join(",")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function oa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pa(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener("unload",ea,!1):e.attachEvent&&e.attachEvent("onunload",ea)),p=!f(g),c.attributes=ja(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ja(function(a){return a.appendChild(g.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\f]' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+L+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+L+"*(?:value|"+K+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ja(function(a){var b=g.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+L+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",P)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?la(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ca,da),a[3]=(a[3]||a[4]||a[5]||"").replace(ca,da),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ca,da).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+L+")"+a+"("+L+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(Q," ")+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(ca,da),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return W.test(a||"")||ga.error("unsupported lang: "+a),a=a.replace(ca,da).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:oa(function(){return[0]}),last:oa(function(a,b){return[b-1]}),eq:oa(function(a,b,c){return[0>c?c+b:c]}),even:oa(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:oa(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:oa(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:oa(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function qa(){}qa.prototype=d.filters=d.pseudos,d.setFilters=new qa,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function ra(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function sa(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function ta(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ua(a,b,c){for(var d=0,e=b.length;e>d;d++)ga(a,b[d],c);return c}function va(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wa(a,b,c,d,e,f){return d&&!d[u]&&(d=wa(d)),e&&!e[u]&&(e=wa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ua(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:va(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=va(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=va(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=sa(function(a){return a===b},h,!0),l=sa(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sa(ta(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wa(i>1&&ta(m),i>1&&ra(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&xa(a.slice(i,e)),f>e&&xa(a=a.slice(e)),f>e&&ra(a))}m.push(c)}return ta(m)}function ya(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=va(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&ga.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,ya(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ca,da),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ca,da),aa.test(j[0].type)&&pa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&ra(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,aa.test(a)&&pa(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ja(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||ka("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ka("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute("disabled")})||ka(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);n.find=t,n.expr=t.selectors,n.expr[":"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^.[^:#\[\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if("string"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+" "+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,"string"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?"undefined"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||"string"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?"string"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,"parentNode")},parentsUntil:function(a,b,c){return n.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return n.dir(a,"nextSibling")},prevAll:function(a){return n.dir(a,"previousSibling")},nextUntil:function(a,b,c){return n.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return n.dir(a,"previousSibling",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[["resolve","done",n.Callbacks("once memory"),"resolved"],["reject","fail",n.Callbacks("once memory"),"rejected"],["notify","progress",n.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler("ready"),n(l).off("ready"))))}});function I(){l.removeEventListener("DOMContentLoaded",I,!1),a.removeEventListener("load",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),"complete"===l.readyState?setTimeout(n.ready):(l.addEventListener("DOMContentLoaded",I,!1),a.addEventListener("load",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if("string"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&"string"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d="data-"+b.replace(O,"-$1").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){
return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,"hasDataAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf("-")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks("once memory").add(function(){L.remove(a,[b+"queue",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=L.get(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,R=["Top","Right","Bottom","Left"],S=function(a,b){return a=b||a,"none"===n.css(a,"display")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement("div")),c=l.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U="undefined";k.focusinBubbles="onfocusin"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(E)||[""],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(".")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,"type")?b.type:b,r=j.call(b,"namespace")?b.namespace.split("."):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(".")>=0&&(r=q.split("."),q=r.shift(),r.sort()),k=q.indexOf(":")<0&&"on"+q,b=b[n.expando]?b:new n.Event(q,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+r.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,"events")||{})[b.type]&&L.get(g,"handle"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,"events")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||"click"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&n.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var aa=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,ba=/<([\w:]+)/,ca=/<|&#?\w+;/,da=/<(?:script|style|link)/i,ea=/checked\s*(?:[^=]|=\s*.checked.)/i,fa=/^$|\/(?:java|ecma)script/i,ga=/^true\/(.*)/,ha=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,ia={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ia.optgroup=ia.option,ia.tbody=ia.tfoot=ia.colgroup=ia.caption=ia.thead,ia.th=ia.td;function ja(a,b){return n.nodeName(a,"table")&&n.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function ka(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function la(a){var b=ga.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function ma(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],"globalEval",!b||L.get(b[c],"globalEval"))}function na(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function oa(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||"*"):a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pa(a,b){var c=b.nodeName.toLowerCase();"input"===c&&T.test(a.type)?b.checked=a.checked:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=oa(h),f=oa(a),d=0,e=f.length;e>d;d++)pa(f[d],g[d]);if(b)if(c)for(f=f||oa(a),g=g||oa(h),d=0,e=f.length;e>d;d++)na(f[d],g[d]);else na(a,h);return g=oa(h,"script"),g.length>0&&ma(g,!i&&oa(a,"script")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if("object"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(ca.test(e)){f=f||k.appendChild(b.createElement("div")),g=(ba.exec(e)||["",""])[1].toLowerCase(),h=ia[g]||ia._default,f.innerHTML=h[1]+e.replace(aa,"<$1></$2>")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=""}else l.push(b.createTextNode(e));k.textContent="",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=oa(k.appendChild(e),"script"),i&&ma(f),c)){j=0;while(e=f[j++])fa.test(e.type||"")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(oa(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&ma(oa(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(oa(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"==typeof a&&!da.test(a)&&!ia[(ba.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(aa,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(oa(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(oa(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&"string"==typeof p&&!k.checkClone&&ea.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(oa(c,"script"),ka),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,oa(h,"script"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,la),j=0;g>j;j++)h=f[j],fa.test(h.type||"")&&!L.access(h,"globalEval")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(ha,"")))}return this}}),n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qa,ra={};function sa(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],"display");return e.detach(),f}function ta(a){var b=l,c=ra[a];return c||(c=sa(a,b),"none"!==c&&c||(qa=(qa||n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=qa[0].contentDocument,b.write(),b.close(),c=sa(a,b),qa.detach()),ra[a]=c),c}var ua=/^margin/,va=new RegExp("^("+Q+")(?!px)[a-z%]+$","i"),wa=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xa(a,b,c){var d,e,f,g,h=a.style;return c=c||wa(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(""!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),va.test(g)&&ua.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+"":g}function ya(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement("div"),f=l.createElement("div");if(f.style){f.style.backgroundClip="content-box",f.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===f.style.backgroundClip,e.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",e.appendChild(f);function g(){f.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",f.innerHTML="",d.appendChild(e);var g=a.getComputedStyle(f,null);b="1%"!==g.top,c="4px"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement("div"));return c.style.cssText=f.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",c.style.marginRight=c.style.width="0",f.style.width="1px",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var za=/^(none|table(?!-c[ea]).+)/,Aa=new RegExp("^("+Q+")(.*)$","i"),Ba=new RegExp("^([+-])=("+Q+")","i"),Ca={position:"absolute",visibility:"hidden",display:"block"},Da={letterSpacing:"0",fontWeight:"400"},Ea=["Webkit","O","Moz","ms"];function Fa(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Ea.length;while(e--)if(b=Ea[e]+c,b in a)return b;return d}function Ga(a,b,c){var d=Aa.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Ha(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=n.css(a,c+R[f],!0,e)),d?("content"===c&&(g-=n.css(a,"padding"+R[f],!0,e)),"margin"!==c&&(g-=n.css(a,"border"+R[f]+"Width",!0,e))):(g+=n.css(a,"padding"+R[f],!0,e),"padding"!==c&&(g+=n.css(a,"border"+R[f]+"Width",!0,e)));return g}function Ia(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=wa(a),g="border-box"===n.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=xa(a,b,f),(0>e||null==e)&&(e=a.style[b]),va.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Ha(a,b,c||(g?"border":"content"),d,f)+"px"}function Ja(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&S(d)&&(f[g]=L.access(d,"olddisplay",ta(d.nodeName)))):(e=S(d),"none"===c&&e||L.set(d,"olddisplay",e?c:n.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xa(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fa(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,"string"===f&&(e=Ba.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||n.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),g&&"set"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fa(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&"get"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xa(a,b,d)),"normal"===e&&b in Da&&(e=Da[b]),""===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each(["height","width"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?za.test(n.css(a,"display"))&&0===a.offsetWidth?n.swap(a,Ca,function(){return Ia(a,b,d)}):Ia(a,b,d):void 0},set:function(a,c,d){var e=d&&wa(a);return Ga(a,c,d?Ha(a,b,d,"border-box"===n.css(a,"boxSizing",!1,e),e):0)}}}),n.cssHooks.marginRight=ya(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:"inline-block"},xa,[a,"marginRight"]):void 0}),n.each({margin:"",padding:"",border:"Width"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ua.test(a)||(n.cssHooks[a+b].set=Ga)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wa(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Ja(this,!0)},hide:function(){return Ja(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Ka(a,b,c,d,e){return new Ka.prototype.init(a,b,c,d,e)}n.Tween=Ka,Ka.prototype={constructor:Ka,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?"":"px")},cur:function(){var a=Ka.propHooks[this.prop];return a&&a.get?a.get(this):Ka.propHooks._default.get(this)},run:function(a){var b,c=Ka.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ka.propHooks._default.set(this),this}},Ka.prototype.init.prototype=Ka.prototype,Ka.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Ka.propHooks.scrollTop=Ka.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Ka.prototype.init,n.fx.step={};var La,Ma,Na=/^(?:toggle|show|hide)$/,Oa=new RegExp("^(?:([+-])=|)("+Q+")([a-z%]*)$","i"),Pa=/queueHooks$/,Qa=[Va],Ra={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Oa.exec(b),f=e&&e[3]||(n.cssNumber[a]?"":"px"),g=(n.cssNumber[a]||"px"!==f&&+d)&&Oa.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sa(){return setTimeout(function(){La=void 0}),La=n.now()}function Ta(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e["margin"+c]=e["padding"+c]=a;return b&&(e.opacity=e.width=a),e}function Ua(a,b,c){for(var d,e=(Ra[b]||[]).concat(Ra["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Va(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,"fxshow");c.queue||(h=n._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,"display"),k="none"===j?L.get(a,"olddisplay")||ta(a.nodeName):j,"inline"===k&&"none"===n.css(a,"float")&&(o.display="inline-block")),c.overflow&&(o.overflow="hidden",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Na.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(p?"hide":"show")){if("show"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))"inline"===("none"===j?ta(a.nodeName):j)&&(o.display=j);else{q?"hidden"in q&&(p=q.hidden):q=L.access(a,"fxshow",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,"fxshow");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ua(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function Wa(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xa(a,b,c){var d,e,f=0,g=Qa.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=La||Sa(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:La||Sa(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wa(k,j.opts.specialEasing);g>f;f++)if(d=Qa[f].call(j,a,k,j.opts))return d;return n.map(k,Ua,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xa,{tweener:function(a,b){n.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Ra[c]=Ra[c]||[],Ra[c].unshift(b)},prefilter:function(a,b){b?Qa.unshift(a):Qa.push(a)}}),n.speed=function(a,b,c){var d=a&&"object"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xa(this,n.extend({},a),f);(e||L.get(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pa.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=L.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each(["toggle","show","hide"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(Ta(b,!0),a,d,e)}}),n.each({slideDown:Ta("show"),slideUp:Ta("hide"),slideToggle:Ta("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(La=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),La=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Ma||(Ma=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Ma),Ma=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement("input"),b=l.createElement("select"),c=b.appendChild(l.createElement("option"));a.type="checkbox",k.checkOn=""!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement("input"),a.value="t",a.type="radio",k.radioValue="t"===a.value}();var Ya,Za,$a=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Za:Ya)),
void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void n.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"===b&&n.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),Za={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\w+/g),function(a,b){var c=$a[b]||n.find.attr;$a[b]=function(a,b,d){var e,f;return d||(f=$a[b],$a[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$a[b]=f),e}});var _a=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute("tabindex")||_a.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){n.propFix[this.toLowerCase()]=this});var ab=/[\t\r\n\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h="string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ab," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||"string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ab," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?n.trim(d):"",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||"boolean"===c)&&(this.className&&L.set(this,"__className__",this.className),this.className=this.className||a===!1?"":L.get(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(ab," ").indexOf(b)>=0)return!0;return!1}});var bb=/\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e="":"number"==typeof e?e+="":n.isArray(e)&&(e=n.map(e,function(a){return null==a?"":a+""})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(bb,""):null==c?"":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,"value");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&n.nodeName(c.parentNode,"optgroup"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each(["radio","checkbox"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})}),n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var cb=n.now(),db=/\?/;n.parseJSON=function(a){return JSON.parse(a+"")},n.parseXML=function(a){var b,c;if(!a||"string"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,"text/xml")}catch(d){b=void 0}return(!b||b.getElementsByTagName("parsererror").length)&&n.error("Invalid XML: "+a),b};var eb=/#.*$/,fb=/([?&])_=[^&]*/,gb=/^(.*?):[ \t]*([^\r\n]*)$/gm,hb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ib=/^(?:GET|HEAD)$/,jb=/^\/\//,kb=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,lb={},mb={},nb="*/".concat("*"),ob=a.location.href,pb=kb.exec(ob.toLowerCase())||[];function qb(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rb(a,b,c,d){var e={},f=a===mb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function sb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function ub(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ob,type:"GET",isLocal:hb.test(pb[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":nb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":n.parseJSON,"text xml":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sb(sb(a,n.ajaxSettings),b):sb(n.ajaxSettings,a)},ajaxPrefilter:qb(lb),ajaxTransport:qb(mb),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gb.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||ob)+"").replace(eb,"").replace(jb,pb[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(h=kb.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pb[1]&&h[2]===pb[2]&&(h[3]||("http:"===h[1]?"80":"443"))===(pb[3]||("http:"===pb[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rb(lb,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!ib.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(db.test(d)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=fb.test(d)?d.replace(fb,"$1_="+cb++):d+(db.test(d)?"&":"?")+"_="+cb++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader("If-Modified-Since",n.lastModified[d]),n.etag[d]&&v.setRequestHeader("If-None-Match",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+nb+"; q=0.01":""):k.accepts["*"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rb(mb,k,b,v)){v.readyState=1,i&&m.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tb(k,v,f)),u=ub(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(n.lastModified[d]=w),w=v.getResponseHeader("etag"),w&&(n.etag[d]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger("ajaxComplete",[v,k]),--n.active||n.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,"json")},getScript:function(a,b){return n.get(a,void 0,b,"script")}}),n.each(["get","post"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,"body")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vb=/%20/g,wb=/\[\]$/,xb=/\r?\n/g,yb=/^(?:submit|button|image|reset|file)$/i,zb=/^(?:input|select|textarea|keygen)/i;function Ab(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wb.test(a)?d(a,e):Ab(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==n.type(b))d(a,b);else for(e in b)Ab(a+"["+e+"]",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ab(c,a[c],b,e);return d.join("&").replace(vb,"+")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,"elements");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(":disabled")&&zb.test(this.nodeName)&&!yb.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xb,"\r\n")}}):{name:b.name,value:c.replace(xb,"\r\n")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bb=0,Cb={},Db={0:200,1223:204},Eb=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent("onunload",function(){for(var a in Cb)Cb[a]()}),k.cors=!!Eb&&"withCredentials"in Eb,k.ajax=Eb=!!Eb,n.ajaxTransport(function(a){var b;return k.cors||Eb&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bb;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cb[g],b=f.onload=f.onerror=null,"abort"===a?f.abort():"error"===a?d(f.status,f.statusText):d(Db[f.status]||f.status,f.statusText,"string"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b("error"),b=Cb[g]=b("abort");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET")}),n.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n("<script>").prop({async:!0,charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&e("error"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Fb=[],Gb=/(=)\?(?=&|$)|\?\?/;n.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Fb.pop()||n.expando+"_"+cb++;return this[a]=!0,a}}),n.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gb.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&Gb.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gb,"$1"+e):b.jsonp!==!1&&(b.url+=(db.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||n.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fb.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),n.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hb=n.fn.load;n.fn.load=function(a,b,c){if("string"!=typeof a&&Hb)return Hb.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&n.ajax({url:a,type:e,dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?n("<div>").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ib=a.document.documentElement;function Jb(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,"position"),l=n(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=n.css(a,"top"),i=n.css(a,"left"),j=("absolute"===k||"fixed"===k)&&(f+i).indexOf("auto")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jb(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===n.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],"html")||(d=a.offset()),d.top+=n.css(a[0],"borderTopWidth",!0),d.left+=n.css(a[0],"borderLeftWidth",!0)),{top:b.top-d.top-n.css(c,"marginTop",!0),left:b.left-d.left-n.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ib;while(a&&!n.nodeName(a,"html")&&"static"===n.css(a,"position"))a=a.offsetParent;return a||Ib})}}),n.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(b,c){var d="pageYOffset"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jb(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each(["top","left"],function(a,b){n.cssHooks[b]=ya(k.pixelPosition,function(a,c){return c?(c=xa(a,b),va.test(c)?n(a).position()[b]+"px":c):void 0})}),n.each({Height:"height",Width:"width"},function(a,b){n.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return n});var Kb=a.jQuery,Lb=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lb),b&&a.jQuery===n&&(a.jQuery=Kb),n},typeof b===U&&(a.jQuery=a.$=n),n});
//# sourceMappingURL=jquery.min.map
;
(function() {


}).call(this);
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define('simple-module', ["jquery"], function ($) {
      return (root.returnExportsGlobal = factory($));
    });
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like enviroments that support module.exports,
    // like Node.
    module.exports = factory(require("jquery"));
  } else {
    root['SimpleModule'] = factory(jQuery);
  }
}(this, function ($) {

var Module,
  __slice = [].slice;

Module = (function() {
  Module.extend = function(obj) {
    var key, val, _ref;
    if (!((obj != null) && typeof obj === 'object')) {
      return;
    }
    for (key in obj) {
      val = obj[key];
      if (key !== 'included' && key !== 'extended') {
        this[key] = val;
      }
    }
    return (_ref = obj.extended) != null ? _ref.call(this) : void 0;
  };

  Module.include = function(obj) {
    var key, val, _ref;
    if (!((obj != null) && typeof obj === 'object')) {
      return;
    }
    for (key in obj) {
      val = obj[key];
      if (key !== 'included' && key !== 'extended') {
        this.prototype[key] = val;
      }
    }
    return (_ref = obj.included) != null ? _ref.call(this) : void 0;
  };

  Module.connect = function(cls) {
    if (typeof cls !== 'function') {
      return;
    }
    if (!cls.pluginName) {
      throw new Error('Module.connect: cannot connect plugin without pluginName');
      return;
    }
    cls.prototype._connected = true;
    if (!this._connectedClasses) {
      this._connectedClasses = [];
    }
    this._connectedClasses.push(cls);
    if (cls.pluginName) {
      return this[cls.pluginName] = cls;
    }
  };

  Module.prototype.opts = {};

  function Module(opts) {
    var cls, instance, instances, name, _base, _i, _len;
    this.opts = $.extend({}, this.opts, opts);
    (_base = this.constructor)._connectedClasses || (_base._connectedClasses = []);
    instances = (function() {
      var _i, _len, _ref, _results;
      _ref = this.constructor._connectedClasses;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        cls = _ref[_i];
        name = cls.pluginName.charAt(0).toLowerCase() + cls.pluginName.slice(1);
        if (cls.prototype._connected) {
          cls.prototype._module = this;
        }
        _results.push(this[name] = new cls());
      }
      return _results;
    }).call(this);
    if (this._connected) {
      this.opts = $.extend({}, this.opts, this._module.opts);
    } else {
      this._init();
      for (_i = 0, _len = instances.length; _i < _len; _i++) {
        instance = instances[_i];
        if (typeof instance._init === "function") {
          instance._init();
        }
      }
    }
    this.trigger('initialized');
  }

  Module.prototype._init = function() {};

  Module.prototype.on = function() {
    var args, _ref;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    (_ref = $(this)).on.apply(_ref, args);
    return this;
  };

  Module.prototype.one = function() {
    var args, _ref;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    (_ref = $(this)).one.apply(_ref, args);
    return this;
  };

  Module.prototype.off = function() {
    var args, _ref;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    (_ref = $(this)).off.apply(_ref, args);
    return this;
  };

  Module.prototype.trigger = function() {
    var args, _ref;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    (_ref = $(this)).trigger.apply(_ref, args);
    return this;
  };

  Module.prototype.triggerHandler = function() {
    var args, _ref;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return (_ref = $(this)).triggerHandler.apply(_ref, args);
  };

  Module.prototype._t = function() {
    var args, _ref;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return (_ref = this.constructor)._t.apply(_ref, args);
  };

  Module._t = function() {
    var args, key, result, _ref;
    key = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    result = ((_ref = this.i18n[this.locale]) != null ? _ref[key] : void 0) || '';
    if (!(args.length > 0)) {
      return result;
    }
    result = result.replace(/([^%]|^)%(?:(\d+)\$)?s/g, function(p0, p, position) {
      if (position) {
        return p + args[parseInt(position) - 1];
      } else {
        return p + args.shift();
      }
    });
    return result.replace(/%%s/g, '%s');
  };

  Module.i18n = {
    'zh-CN': {}
  };

  Module.locale = 'zh-CN';

  return Module;

})();


return Module;


}));
!function(a,b){"function"==typeof define&&define.amd?define("simple-module",["jquery"],function(c){return a.returnExportsGlobal=b(c)}):"object"==typeof exports?module.exports=b(require("jquery")):a.SimpleModule=b(jQuery)}(this,function(a){var b,c=[].slice;return b=function(){function b(b){var c,d,e,f,g,h,i;if(this.opts=a.extend({},this.opts,b),(g=this.constructor)._connectedClasses||(g._connectedClasses=[]),e=function(){var a,b,d,e;for(d=this.constructor._connectedClasses,e=[],a=0,b=d.length;b>a;a++)c=d[a],f=c.pluginName.charAt(0).toLowerCase()+c.pluginName.slice(1),c.prototype._connected&&(c.prototype._module=this),e.push(this[f]=new c);return e}.call(this),this._connected)this.opts=a.extend({},this.opts,this._module.opts);else for(this._init(),h=0,i=e.length;i>h;h++)d=e[h],"function"==typeof d._init&&d._init();this.trigger("initialized")}return b.extend=function(a){var b,c,d;if(null!=a&&"object"==typeof a){for(b in a)c=a[b],"included"!==b&&"extended"!==b&&(this[b]=c);return null!=(d=a.extended)?d.call(this):void 0}},b.include=function(a){var b,c,d;if(null!=a&&"object"==typeof a){for(b in a)c=a[b],"included"!==b&&"extended"!==b&&(this.prototype[b]=c);return null!=(d=a.included)?d.call(this):void 0}},b.connect=function(a){if("function"==typeof a){if(!a.pluginName)throw new Error("Module.connect: cannot connect plugin without pluginName");return a.prototype._connected=!0,this._connectedClasses||(this._connectedClasses=[]),this._connectedClasses.push(a),a.pluginName?this[a.pluginName]=a:void 0}},b.prototype.opts={},b.prototype._init=function(){},b.prototype.on=function(){var b,d;return b=1<=arguments.length?c.call(arguments,0):[],(d=a(this)).on.apply(d,b),this},b.prototype.one=function(){var b,d;return b=1<=arguments.length?c.call(arguments,0):[],(d=a(this)).one.apply(d,b),this},b.prototype.off=function(){var b,d;return b=1<=arguments.length?c.call(arguments,0):[],(d=a(this)).off.apply(d,b),this},b.prototype.trigger=function(){var b,d;return b=1<=arguments.length?c.call(arguments,0):[],(d=a(this)).trigger.apply(d,b),this},b.prototype.triggerHandler=function(){var b,d;return b=1<=arguments.length?c.call(arguments,0):[],(d=a(this)).triggerHandler.apply(d,b)},b.prototype._t=function(){var a,b;return a=1<=arguments.length?c.call(arguments,0):[],(b=this.constructor)._t.apply(b,a)},b._t=function(){var a,b,d,e;return b=arguments[0],a=2<=arguments.length?c.call(arguments,1):[],d=(null!=(e=this.i18n[this.locale])?e[b]:void 0)||"",a.length>0?(d=d.replace(/([^%]|^)%(?:(\d+)\$)?s/g,function(b,c,d){return d?c+a[parseInt(d)-1]:c+a.shift()}),d.replace(/%%s/g,"%s")):d},b.i18n={"zh-CN":{}},b.locale="zh-CN",b}()});
(function() {


}).call(this);
/**
 * Module: rem - v1.3.2
 * Description: A polyfill to parse CSS links and rewrite pixel equivalents into head for non supporting browsers
 * Date Built: 2014-07-02
 * Copyright (c) 2014  | Chuck Carpenter <chuck.carpenter@me.com>,Lucas Serven <lserven@gmail.com>;
**/

!function(a){"use strict";var b=function(){var a=document.createElement("div");return a.style.cssText="font-size: 1rem;",/rem/.test(a.style.fontSize)},c=function(){for(var a=document.getElementsByTagName("link"),b=[],c=0;c<a.length;c++)"stylesheet"===a[c].rel.toLowerCase()&&null===a[c].getAttribute("data-norem")&&b.push(a[c].href);return b},d=function(){for(var a=0;a<m.length;a++)j(m[a],e)},e=function(a,b){if(q.push(a.responseText),r.push(b),r.length===m.length){for(var c=0;c<r.length;c++)f(q[c],r[c]);(m=n.slice(0)).length>0?(r=[],q=[],n=[],d()):g()}},f=function(a,b){for(var c,d=k(a).replace(/\/\*[\s\S]*?\*\//g,""),e=/[\w\d\s\-\/\\\[\]:,.'"*()<>+~%#^$_=|@]+\{[\w\d\s\-\/\\%#:!;,.'"*()]+\d*\.?\d+rem[\w\d\s\-\/\\%#:!;,.'"*()]*\}/g,f=d.match(e),g=/\d*\.?\d+rem/g,h=d.match(g),i=/(.*\/)/,j=i.exec(b)[0],l=/@import (?:url\()?['"]?([^'\)"]*)['"]?\)?[^;]*/gm;null!==(c=l.exec(a));)n.push(j+c[1]);null!==f&&0!==f.length&&(o=o.concat(f),p=p.concat(h))},g=function(){for(var a=/[\w\d\s\-\/\\%#:,.'"*()]+\d*\.?\d+rem[\w\d\s\-\/\\%#:!,.'"*()]*[;}]/g,b=0;b<o.length;b++){l+=o[b].substr(0,o[b].indexOf("{")+1);for(var c=o[b].match(a),d=0;d<c.length;d++)l+=c[d],d===c.length-1&&"}"!==l[l.length-1]&&(l+="\n}")}h()},h=function(){for(var a=0;a<p.length;a++)s[a]=Math.round(parseFloat(p[a].substr(0,p[a].length-3)*t))+"px";i()},i=function(){for(var a=0;a<s.length;a++)s[a]&&(l=l.replace(p[a],s[a]));var b=document.createElement("style");b.setAttribute("type","text/css"),b.id="remReplace",document.getElementsByTagName("head")[0].appendChild(b),b.styleSheet?b.styleSheet.cssText=l:b.appendChild(document.createTextNode(l))},j=function(b,c){try{var d=a.ActiveXObject?new ActiveXObject("Microsoft.XMLHTTP")||new ActiveXObject("Msxml2.XMLHTTP"):new XMLHttpRequest;d.open("GET",b,!0),d.onreadystatechange=function(){4===d.readyState&&c(d,b)},d.send(null)}catch(e){if(a.XDomainRequest){var f=new XDomainRequest;f.open("get",b),f.onload=function(){c(f,b)},f.onerror=function(){return!1},f.send()}}},k=function(b){return a.matchMedia||a.msMatchMedia||(b=b.replace(/@media[\s\S]*?\}\s*\}/g,"")),b};if(!b()){var l="",m=c(),n=[],o=[],p=[],q=[],r=[],s=[],t="";t=function(){var a,b=document,c=b.documentElement,d=b.body||b.createElement("body"),e=!b.body,f=b.createElement("div"),g=d.style.fontSize;return e&&c.appendChild(d),f.style.cssText="width:1em; position:absolute; visibility:hidden; padding: 0;",d.style.fontSize="1em",d.appendChild(f),a=f.offsetWidth,e?c.removeChild(d):(d.removeChild(f),d.style.fontSize=g),a}(),d()}}(window);
/*! Respond.js v1.4.2: min/max-width media query polyfill
 * Copyright 2014 Scott Jehl
 * Licensed under MIT
 * http://j.mp/respondjs */


!function(a){"use strict";a.matchMedia=a.matchMedia||function(a){var b,c=a.documentElement,d=c.firstElementChild||c.firstChild,e=a.createElement("body"),f=a.createElement("div");return f.id="mq-test-1",f.style.cssText="position:absolute;top:-100em",e.style.background="none",e.appendChild(f),function(a){return f.innerHTML='&shy;<style media="'+a+'"> #mq-test-1 { width: 42px; }</style>',c.insertBefore(e,d),b=42===f.offsetWidth,c.removeChild(e),{matches:b,media:a}}}(a.document)}(this),function(a){"use strict";function b(){v(!0)}var c={};a.respond=c,c.update=function(){};var d=[],e=function(){var b=!1;try{b=new a.XMLHttpRequest}catch(c){b=new a.ActiveXObject("Microsoft.XMLHTTP")}return function(){return b}}(),f=function(a,b){var c=e();c&&(c.open("GET",a,!0),c.onreadystatechange=function(){4!==c.readyState||200!==c.status&&304!==c.status||b(c.responseText)},4!==c.readyState&&c.send(null))},g=function(a){return a.replace(c.regex.minmaxwh,"").match(c.regex.other)};if(c.ajax=f,c.queue=d,c.unsupportedmq=g,c.regex={media:/@media[^\{]+\{([^\{\}]*\{[^\}\{]*\})+/gi,keyframes:/@(?:\-(?:o|moz|webkit)\-)?keyframes[^\{]+\{(?:[^\{\}]*\{[^\}\{]*\})+[^\}]*\}/gi,comments:/\/\*[^*]*\*+([^/][^*]*\*+)*\//gi,urls:/(url\()['"]?([^\/\)'"][^:\)'"]+)['"]?(\))/g,findStyles:/@media *([^\{]+)\{([\S\s]+?)$/,only:/(only\s+)?([a-zA-Z]+)\s?/,minw:/\(\s*min\-width\s*:\s*(\s*[0-9\.]+)(px|em)\s*\)/,maxw:/\(\s*max\-width\s*:\s*(\s*[0-9\.]+)(px|em)\s*\)/,minmaxwh:/\(\s*m(in|ax)\-(height|width)\s*:\s*(\s*[0-9\.]+)(px|em)\s*\)/gi,other:/\([^\)]*\)/g},c.mediaQueriesSupported=a.matchMedia&&null!==a.matchMedia("only all")&&a.matchMedia("only all").matches,!c.mediaQueriesSupported){var h,i,j,k=a.document,l=k.documentElement,m=[],n=[],o=[],p={},q=30,r=k.getElementsByTagName("head")[0]||l,s=k.getElementsByTagName("base")[0],t=r.getElementsByTagName("link"),u=function(){var a,b=k.createElement("div"),c=k.body,d=l.style.fontSize,e=c&&c.style.fontSize,f=!1;return b.style.cssText="position:absolute;font-size:1em;width:1em",c||(c=f=k.createElement("body"),c.style.background="none"),l.style.fontSize="100%",c.style.fontSize="100%",c.appendChild(b),f&&l.insertBefore(c,l.firstChild),a=b.offsetWidth,f?l.removeChild(c):c.removeChild(b),l.style.fontSize=d,e&&(c.style.fontSize=e),a=j=parseFloat(a)},v=function(b){var c="clientWidth",d=l[c],e="CSS1Compat"===k.compatMode&&d||k.body[c]||d,f={},g=t[t.length-1],p=(new Date).getTime();if(b&&h&&q>p-h)return a.clearTimeout(i),i=a.setTimeout(v,q),void 0;h=p;for(var s in m)if(m.hasOwnProperty(s)){var w=m[s],x=w.minw,y=w.maxw,z=null===x,A=null===y,B="em";x&&(x=parseFloat(x)*(x.indexOf(B)>-1?j||u():1)),y&&(y=parseFloat(y)*(y.indexOf(B)>-1?j||u():1)),w.hasquery&&(z&&A||!(z||e>=x)||!(A||y>=e))||(f[w.media]||(f[w.media]=[]),f[w.media].push(n[w.rules]))}for(var C in o)o.hasOwnProperty(C)&&o[C]&&o[C].parentNode===r&&r.removeChild(o[C]);o.length=0;for(var D in f)if(f.hasOwnProperty(D)){var E=k.createElement("style"),F=f[D].join("\n");E.type="text/css",E.media=D,r.insertBefore(E,g.nextSibling),E.styleSheet?E.styleSheet.cssText=F:E.appendChild(k.createTextNode(F)),o.push(E)}},w=function(a,b,d){var e=a.replace(c.regex.comments,"").replace(c.regex.keyframes,"").match(c.regex.media),f=e&&e.length||0;b=b.substring(0,b.lastIndexOf("/"));var h=function(a){return a.replace(c.regex.urls,"$1"+b+"$2$3")},i=!f&&d;b.length&&(b+="/"),i&&(f=1);for(var j=0;f>j;j++){var k,l,o,p;i?(k=d,n.push(h(a))):(k=e[j].match(c.regex.findStyles)&&RegExp.$1,n.push(RegExp.$2&&h(RegExp.$2))),o=k.split(","),p=o.length;for(var q=0;p>q;q++)l=o[q],g(l)||m.push({media:l.split("(")[0].match(c.regex.only)&&RegExp.$2||"all",rules:n.length-1,hasquery:l.indexOf("(")>-1,minw:l.match(c.regex.minw)&&parseFloat(RegExp.$1)+(RegExp.$2||""),maxw:l.match(c.regex.maxw)&&parseFloat(RegExp.$1)+(RegExp.$2||"")})}v()},x=function(){if(d.length){var b=d.shift();f(b.href,function(c){w(c,b.href,b.media),p[b.href]=!0,a.setTimeout(function(){x()},0)})}},y=function(){for(var b=0;b<t.length;b++){var c=t[b],e=c.href,f=c.media,g=c.rel&&"stylesheet"===c.rel.toLowerCase();e&&g&&!p[e]&&(c.styleSheet&&c.styleSheet.rawCssText?(w(c.styleSheet.rawCssText,e,f),p[e]=!0):(!/^([a-zA-Z:]*\/\/)/.test(e)&&!s||e.replace(RegExp.$1,"").split("/")[0]===a.location.host)&&("//"===e.substring(0,2)&&(e=a.location.protocol+e),d.push({href:e,media:f})))}x()};y(),c.update=y,c.getEmValue=u,a.addEventListener?a.addEventListener("resize",b,!1):a.attachEvent&&a.attachEvent("onresize",b)}}(this);
(function() {


}).call(this);
/*!
* Simditor v2.1.11
* http://simditor.tower.im/
* 2015-20-05
*/

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define('simditor', ["jquery","simple-module","simple-hotkeys","simple-uploader"], function ($, SimpleModule, simpleHotkeys, simpleUploader) {
      return (root['Simditor'] = factory($, SimpleModule, simpleHotkeys, simpleUploader));
    });
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require("jquery"),require("simple-module"),require("simple-hotkeys"),require("simple-uploader"));
  } else {
    root['Simditor'] = factory(jQuery,SimpleModule,simple.hotkeys,simple.uploader);
  }
}(this, function ($, SimpleModule, simpleHotkeys, simpleUploader) {

var AlignmentButton, BlockquoteButton, BoldButton, Button, CodeButton, CodePopover, ColorButton, Formatter, HrButton, ImageButton, ImagePopover, IndentButton, Indentation, InputManager, ItalicButton, Keystroke, LinkButton, LinkPopover, ListButton, OrderListButton, OutdentButton, Popover, Selection, Simditor, StrikethroughButton, TableButton, TitleButton, Toolbar, UnderlineButton, UndoManager, UnorderListButton, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
  slice = [].slice;

Selection = (function(superClass) {
  extend(Selection, superClass);

  function Selection() {
    return Selection.__super__.constructor.apply(this, arguments);
  }

  Selection.pluginName = 'Selection';

  Selection.prototype._init = function() {
    this.editor = this._module;
    return this.sel = document.getSelection();
  };

  Selection.prototype.clear = function() {
    var e;
    try {
      return this.sel.removeAllRanges();
    } catch (_error) {
      e = _error;
    }
  };

  Selection.prototype.getRange = function() {
    if (!this.editor.inputManager.focused || !this.sel.rangeCount) {
      return null;
    }
    return this.sel.getRangeAt(0);
  };

  Selection.prototype.selectRange = function(range) {
    this.clear();
    this.sel.addRange(range);
    if (!this.editor.inputManager.focused && (this.editor.util.browser.firefox || this.editor.util.browser.msie)) {
      this.editor.body.focus();
    }
    return range;
  };

  Selection.prototype.rangeAtEndOf = function(node, range) {
    var endNode, endNodeLength, result;
    if (range == null) {
      range = this.getRange();
    }
    if (!((range != null) && range.collapsed)) {
      return;
    }
    node = $(node)[0];
    endNode = range.endContainer;
    endNodeLength = this.editor.util.getNodeLength(endNode);
    if (!(range.endOffset === endNodeLength - 1 && $(endNode).contents().last().is('br')) && range.endOffset !== endNodeLength) {
      return false;
    }
    if (node === endNode) {
      return true;
    } else if (!$.contains(node, endNode)) {
      return false;
    }
    result = true;
    $(endNode).parentsUntil(node).addBack().each((function(_this) {
      return function(i, n) {
        var $lastChild, nodes;
        nodes = $(n).parent().contents().filter(function() {
          return !(this !== n && this.nodeType === 3 && !this.nodeValue);
        });
        $lastChild = nodes.last();
        if (!($lastChild.get(0) === n || ($lastChild.is('br') && $lastChild.prev().get(0) === n))) {
          result = false;
          return false;
        }
      };
    })(this));
    return result;
  };

  Selection.prototype.rangeAtStartOf = function(node, range) {
    var result, startNode;
    if (range == null) {
      range = this.getRange();
    }
    if (!((range != null) && range.collapsed)) {
      return;
    }
    node = $(node)[0];
    startNode = range.startContainer;
    if (range.startOffset !== 0) {
      return false;
    }
    if (node === startNode) {
      return true;
    } else if (!$.contains(node, startNode)) {
      return false;
    }
    result = true;
    $(startNode).parentsUntil(node).addBack().each((function(_this) {
      return function(i, n) {
        var nodes;
        nodes = $(n).parent().contents().filter(function() {
          return !(this !== n && this.nodeType === 3 && !this.nodeValue);
        });
        if (nodes.first().get(0) !== n) {
          return result = false;
        }
      };
    })(this));
    return result;
  };

  Selection.prototype.insertNode = function(node, range) {
    if (range == null) {
      range = this.getRange();
    }
    if (range == null) {
      return;
    }
    node = $(node)[0];
    range.insertNode(node);
    return this.setRangeAfter(node, range);
  };

  Selection.prototype.setRangeAfter = function(node, range) {
    if (range == null) {
      range = this.getRange();
    }
    if (range == null) {
      return;
    }
    node = $(node)[0];
    range.setEndAfter(node);
    range.collapse(false);
    return this.selectRange(range);
  };

  Selection.prototype.setRangeBefore = function(node, range) {
    if (range == null) {
      range = this.getRange();
    }
    if (range == null) {
      return;
    }
    node = $(node)[0];
    range.setEndBefore(node);
    range.collapse(false);
    return this.selectRange(range);
  };

  Selection.prototype.setRangeAtStartOf = function(node, range) {
    if (range == null) {
      range = this.getRange();
    }
    node = $(node).get(0);
    range.setEnd(node, 0);
    range.collapse(false);
    return this.selectRange(range);
  };

  Selection.prototype.setRangeAtEndOf = function(node, range) {
    var $lastNode, $node, contents, lastChild, lastText, nodeLength;
    if (range == null) {
      range = this.getRange();
    }
    $node = $(node);
    node = $node.get(0);
    if ($node.is('pre')) {
      contents = $node.contents();
      if (contents.length > 0) {
        lastChild = contents.last();
        lastText = lastChild.text();
        if (lastText.charAt(lastText.length - 1) === '\n') {
          range.setEnd(lastChild[0], this.editor.util.getNodeLength(lastChild[0]) - 1);
        } else {
          range.setEnd(lastChild[0], this.editor.util.getNodeLength(lastChild[0]));
        }
      } else {
        range.setEnd(node, 0);
      }
    } else {
      nodeLength = this.editor.util.getNodeLength(node);
      if (node.nodeType !== 3 && nodeLength > 0) {
        $lastNode = $(node).contents().last();
        if ($lastNode.is('br')) {
          nodeLength -= 1;
        } else if ($lastNode[0].nodeType !== 3 && this.editor.util.isEmptyNode($lastNode)) {
          $lastNode.append(this.editor.util.phBr);
          node = $lastNode[0];
          nodeLength = 0;
        }
      }
      range.setEnd(node, nodeLength);
    }
    range.collapse(false);
    return this.selectRange(range);
  };

  Selection.prototype.deleteRangeContents = function(range) {
    var endRange, startRange;
    if (range == null) {
      range = this.getRange();
    }
    startRange = range.cloneRange();
    endRange = range.cloneRange();
    startRange.collapse(true);
    endRange.collapse(false);
    if (!range.collapsed && this.rangeAtStartOf(this.editor.body, startRange) && this.rangeAtEndOf(this.editor.body, endRange)) {
      this.editor.body.empty();
      range.setStart(this.editor.body[0], 0);
      range.collapse(true);
      this.selectRange(range);
    } else {
      range.deleteContents();
    }
    return range;
  };

  Selection.prototype.breakBlockEl = function(el, range) {
    var $el;
    if (range == null) {
      range = this.getRange();
    }
    $el = $(el);
    if (!range.collapsed) {
      return $el;
    }
    range.setStartBefore($el.get(0));
    if (range.collapsed) {
      return $el;
    }
    return $el.before(range.extractContents());
  };

  Selection.prototype.save = function(range) {
    var endCaret, endRange, startCaret;
    if (range == null) {
      range = this.getRange();
    }
    if (this._selectionSaved) {
      return;
    }
    endRange = range.cloneRange();
    endRange.collapse(false);
    startCaret = $('<span/>').addClass('simditor-caret-start');
    endCaret = $('<span/>').addClass('simditor-caret-end');
    endRange.insertNode(endCaret[0]);
    range.insertNode(startCaret[0]);
    this.clear();
    return this._selectionSaved = true;
  };

  Selection.prototype.restore = function() {
    var endCaret, endContainer, endOffset, range, startCaret, startContainer, startOffset;
    if (!this._selectionSaved) {
      return false;
    }
    startCaret = this.editor.body.find('.simditor-caret-start');
    endCaret = this.editor.body.find('.simditor-caret-end');
    if (startCaret.length && endCaret.length) {
      startContainer = startCaret.parent();
      startOffset = startContainer.contents().index(startCaret);
      endContainer = endCaret.parent();
      endOffset = endContainer.contents().index(endCaret);
      if (startContainer[0] === endContainer[0]) {
        endOffset -= 1;
      }
      range = document.createRange();
      range.setStart(startContainer.get(0), startOffset);
      range.setEnd(endContainer.get(0), endOffset);
      startCaret.remove();
      endCaret.remove();
      this.selectRange(range);
    } else {
      startCaret.remove();
      endCaret.remove();
    }
    this._selectionSaved = false;
    return range;
  };

  return Selection;

})(SimpleModule);

Formatter = (function(superClass) {
  extend(Formatter, superClass);

  function Formatter() {
    return Formatter.__super__.constructor.apply(this, arguments);
  }

  Formatter.pluginName = 'Formatter';

  Formatter.prototype.opts = {
    allowedTags: null,
    allowedAttributes: null
  };

  Formatter.prototype._init = function() {
    this.editor = this._module;
    this._allowedTags = this.opts.allowedTags || ['br', 'a', 'img', 'b', 'strong', 'i', 'u', 'font', 'p', 'ul', 'ol', 'li', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'hr'];
    this._allowedAttributes = this.opts.allowedAttributes || {
      img: ['src', 'alt', 'width', 'height', 'data-image-src', 'data-image-size', 'data-image-name', 'data-non-image'],
      a: ['href', 'target'],
      font: ['color'],
      pre: ['data-lang', 'class'],
      p: ['data-indent', 'data-align'],
      h1: ['data-indent'],
      h2: ['data-indent'],
      h3: ['data-indent'],
      h4: ['data-indent']
    };
    return this.editor.body.on('click', 'a', (function(_this) {
      return function(e) {
        return false;
      };
    })(this));
  };

  Formatter.prototype.decorate = function($el) {
    if ($el == null) {
      $el = this.editor.body;
    }
    return this.editor.trigger('decorate', [$el]);
  };

  Formatter.prototype.undecorate = function($el) {
    if ($el == null) {
      $el = this.editor.body.clone();
    }
    this.editor.trigger('undecorate', [$el]);
    return $.trim($el.html());
  };

  Formatter.prototype.autolink = function($el) {
    var $node, findLinkNode, j, lastIndex, len, linkNodes, match, re, replaceEls, text, uri;
    if ($el == null) {
      $el = this.editor.body;
    }
    linkNodes = [];
    findLinkNode = function($parentNode) {
      return $parentNode.contents().each(function(i, node) {
        var $node, text;
        $node = $(node);
        if ($node.is('a') || $node.closest('a, pre', $el).length) {
          return;
        }
        if ($node.contents().length) {
          return findLinkNode($node);
        } else if ((text = $node.text()) && /https?:\/\/|www\./ig.test(text)) {
          return linkNodes.push($node);
        }
      });
    };
    findLinkNode($el);
    re = /(https?:\/\/|www\.)[\w\-\.\?&=\/#%:,@\!\+]+/ig;
    for (j = 0, len = linkNodes.length; j < len; j++) {
      $node = linkNodes[j];
      text = $node.text();
      replaceEls = [];
      match = null;
      lastIndex = 0;
      while ((match = re.exec(text)) !== null) {
        replaceEls.push(document.createTextNode(text.substring(lastIndex, match.index)));
        lastIndex = re.lastIndex;
        uri = /^(http(s)?:\/\/|\/)/.test(match[0]) ? match[0] : 'http://' + match[0];
        replaceEls.push($('<a href="' + uri + '" rel="nofollow"></a>').text(match[0])[0]);
      }
      replaceEls.push(document.createTextNode(text.substring(lastIndex)));
      $node.replaceWith($(replaceEls));
    }
    return $el;
  };

  Formatter.prototype.format = function($el) {
    var $node, blockNode, j, k, len, len1, n, node, ref, ref1;
    if ($el == null) {
      $el = this.editor.body;
    }
    if ($el.is(':empty')) {
      $el.append('<p>' + this.editor.util.phBr + '</p>');
      return $el;
    }
    ref = $el.contents();
    for (j = 0, len = ref.length; j < len; j++) {
      n = ref[j];
      this.cleanNode(n, true);
    }
    ref1 = $el.contents();
    for (k = 0, len1 = ref1.length; k < len1; k++) {
      node = ref1[k];
      $node = $(node);
      if ($node.is('br')) {
        if (typeof blockNode !== "undefined" && blockNode !== null) {
          blockNode = null;
        }
        $node.remove();
      } else if (this.editor.util.isBlockNode(node)) {
        if ($node.is('li')) {
          if (blockNode && blockNode.is('ul, ol')) {
            blockNode.append(node);
          } else {
            blockNode = $('<ul/>').insertBefore(node);
            blockNode.append(node);
          }
        } else {
          blockNode = null;
        }
      } else {
        if (!blockNode || blockNode.is('ul, ol')) {
          blockNode = $('<p/>').insertBefore(node);
        }
        blockNode.append(node);
      }
    }
    return $el;
  };

  Formatter.prototype.cleanNode = function(node, recursive) {
    var $childImg, $node, $p, $td, allowedAttributes, attr, contents, isDecoration, j, k, len, len1, n, ref, ref1, text, textNode;
    $node = $(node);
    if (!($node.length > 0)) {
      return;
    }
    if ($node[0].nodeType === 3) {
      text = $node.text().replace(/(\r\n|\n|\r)/gm, '');
      if (text) {
        textNode = document.createTextNode(text);
        $node.replaceWith(textNode);
      } else {
        $node.remove();
      }
      return;
    }
    contents = $node.contents();
    isDecoration = $node.is('[class^="simditor-"]');
    if ($node.is(this._allowedTags.join(',')) || isDecoration) {
      if ($node.is('a') && ($childImg = $node.find('img')).length > 0) {
        $node.replaceWith($childImg);
        $node = $childImg;
        contents = null;
      }
      if ($node.is('img') && $node.hasClass('uploading')) {
        $node.remove();
      }
      if (!isDecoration) {
        allowedAttributes = this._allowedAttributes[$node[0].tagName.toLowerCase()];
        ref = $.makeArray($node[0].attributes);
        for (j = 0, len = ref.length; j < len; j++) {
          attr = ref[j];
          if (!((allowedAttributes != null) && (ref1 = attr.name, indexOf.call(allowedAttributes, ref1) >= 0))) {
            $node.removeAttr(attr.name);
          }
        }
      }
    } else if ($node[0].nodeType === 1 && !$node.is(':empty')) {
      if ($node.is('div, article, dl, header, footer, tr')) {
        $node.append('<br/>');
        contents.first().unwrap();
      } else if ($node.is('table')) {
        $p = $('<p/>');
        $node.find('tr').each((function(_this) {
          return function(i, tr) {
            return $p.append($(tr).text() + '<br/>');
          };
        })(this));
        $node.replaceWith($p);
        contents = null;
      } else if ($node.is('thead, tfoot')) {
        $node.remove();
        contents = null;
      } else if ($node.is('th')) {
        $td = $('<td/>').append($node.contents());
        $node.replaceWith($td);
      } else {
        contents.first().unwrap();
      }
    } else {
      $node.remove();
      contents = null;
    }
    if (recursive && (contents != null) && !$node.is('pre')) {
      for (k = 0, len1 = contents.length; k < len1; k++) {
        n = contents[k];
        this.cleanNode(n, true);
      }
    }
    return null;
  };

  Formatter.prototype.clearHtml = function(html, lineBreak) {
    var container, contents, result;
    if (lineBreak == null) {
      lineBreak = true;
    }
    container = $('<div/>').append(html);
    contents = container.contents();
    result = '';
    contents.each((function(_this) {
      return function(i, node) {
        var $node, children;
        if (node.nodeType === 3) {
          return result += node.nodeValue;
        } else if (node.nodeType === 1) {
          $node = $(node);
          children = $node.contents();
          if (children.length > 0) {
            result += _this.clearHtml(children);
          }
          if (lineBreak && i < contents.length - 1 && $node.is('br, p, div, li, tr, pre, address, artticle, aside, dl, figcaption, footer, h1, h2, h3, h4, header')) {
            return result += '\n';
          }
        }
      };
    })(this));
    return result;
  };

  Formatter.prototype.beautify = function($contents) {
    var uselessP;
    uselessP = function($el) {
      return !!($el.is('p') && !$el.text() && $el.children(':not(br)').length < 1);
    };
    return $contents.each((function(_this) {
      return function(i, el) {
        var $el;
        $el = $(el);
        if ($el.is(':not(img, br, col, td, hr, [class^="simditor-"]):empty')) {
          $el.remove();
        }
        if (uselessP($el)) {
          $el.remove();
        }
        return $el.find(':not(img, br, col, td, hr, [class^="simditor-"]):empty').remove();
      };
    })(this));
  };

  return Formatter;

})(SimpleModule);

InputManager = (function(superClass) {
  extend(InputManager, superClass);

  function InputManager() {
    return InputManager.__super__.constructor.apply(this, arguments);
  }

  InputManager.pluginName = 'InputManager';

  InputManager.prototype.opts = {
    pasteImage: false
  };

  InputManager.prototype._modifierKeys = [16, 17, 18, 91, 93, 224];

  InputManager.prototype._arrowKeys = [37, 38, 39, 40];

  InputManager.prototype._init = function() {
    var submitKey;
    this.editor = this._module;
    this.throttledTrigger = this.editor.util.throttle((function(_this) {
      return function() {
        var args;
        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
        return setTimeout(function() {
          var ref;
          return (ref = _this.editor).trigger.apply(ref, args);
        }, 10);
      };
    })(this), 300);
    if (this.opts.pasteImage && typeof this.opts.pasteImage !== 'string') {
      this.opts.pasteImage = 'inline';
    }
    this._keystrokeHandlers = {};
    this.hotkeys = simpleHotkeys({
      el: this.editor.body
    });
    this._pasteArea = $('<div/>').css({
      width: '1px',
      height: '1px',
      overflow: 'hidden',
      position: 'fixed',
      right: '0',
      bottom: '100px'
    }).attr({
      tabIndex: '-1',
      contentEditable: true
    }).addClass('simditor-paste-area').appendTo(this.editor.el);
    $(document).on('selectionchange.simditor' + this.editor.id, (function(_this) {
      return function(e) {
        if (!_this.focused) {
          return;
        }
        if (_this._selectionTimer) {
          clearTimeout(_this._selectionTimer);
          _this._selectionTimer = null;
        }
        return _this._selectionTimer = setTimeout(function() {
          return _this.editor.trigger('selectionchanged');
        }, 20);
      };
    })(this));
    this.editor.on('valuechanged', (function(_this) {
      return function() {
        if (!_this.editor.util.closestBlockEl() && _this.focused) {
          _this.editor.selection.save();
          _this.editor.formatter.format();
          _this.editor.selection.restore();
        }
        _this.editor.body.find('hr, pre, .simditor-table').each(function(i, el) {
          var $el, formatted;
          $el = $(el);
          if ($el.parent().is('blockquote') || $el.parent()[0] === _this.editor.body[0]) {
            formatted = false;
            if ($el.next().length === 0) {
              $('<p/>').append(_this.editor.util.phBr).insertAfter($el);
              formatted = true;
            }
            if ($el.prev().length === 0) {
              $('<p/>').append(_this.editor.util.phBr).insertBefore($el);
              formatted = true;
            }
            if (formatted) {
              return setTimeout(function() {
                return _this.editor.trigger('valuechanged');
              }, 10);
            }
          }
        });
        _this.editor.body.find('pre:empty').append(_this.editor.util.phBr);
        if (!_this.editor.util.support.onselectionchange && _this.focused) {
          return _this.editor.trigger('selectionchanged');
        }
      };
    })(this));
    this.editor.on('selectionchanged', (function(_this) {
      return function(e) {
        return _this.editor.undoManager.update();
      };
    })(this));
    this.editor.body.on('keydown', $.proxy(this._onKeyDown, this)).on('keypress', $.proxy(this._onKeyPress, this)).on('keyup', $.proxy(this._onKeyUp, this)).on('mouseup', $.proxy(this._onMouseUp, this)).on('focus', $.proxy(this._onFocus, this)).on('blur', $.proxy(this._onBlur, this)).on('paste', $.proxy(this._onPaste, this)).on('drop', $.proxy(this._onDrop, this)).on('input', $.proxy(this._onInput, this));
    if (this.editor.util.browser.firefox) {
      this.addShortcut('cmd+left', (function(_this) {
        return function(e) {
          e.preventDefault();
          _this.editor.selection.sel.modify('move', 'backward', 'lineboundary');
          return false;
        };
      })(this));
      this.addShortcut('cmd+right', (function(_this) {
        return function(e) {
          e.preventDefault();
          _this.editor.selection.sel.modify('move', 'forward', 'lineboundary');
          return false;
        };
      })(this));
      this.addShortcut('cmd+a', (function(_this) {
        return function(e) {
          var $children, firstBlock, lastBlock, range;
          $children = _this.editor.body.children();
          if (!($children.length > 0)) {
            return;
          }
          firstBlock = $children.first().get(0);
          lastBlock = $children.last().get(0);
          range = document.createRange();
          range.setStart(firstBlock, 0);
          range.setEnd(lastBlock, _this.editor.util.getNodeLength(lastBlock));
          _this.editor.selection.selectRange(range);
          return false;
        };
      })(this));
    }
    submitKey = this.editor.util.os.mac ? 'cmd+enter' : 'ctrl+enter';
    this.addShortcut(submitKey, (function(_this) {
      return function(e) {
        _this.editor.el.closest('form').find('button:submit').click();
        return false;
      };
    })(this));
    if (this.editor.textarea.attr('autofocus')) {
      return setTimeout((function(_this) {
        return function() {
          return _this.editor.focus();
        };
      })(this), 0);
    }
  };

  InputManager.prototype._onFocus = function(e) {
    this.editor.el.addClass('focus').removeClass('error');
    this.focused = true;
    this.lastCaretPosition = null;
    return setTimeout((function(_this) {
      return function() {
        _this.editor.triggerHandler('focus');
        return _this.editor.trigger('selectionchanged');
      };
    })(this), 0);
  };

  InputManager.prototype._onBlur = function(e) {
    var ref;
    this.editor.el.removeClass('focus');
    this.editor.sync();
    this.focused = false;
    this.lastCaretPosition = (ref = this.editor.undoManager.currentState()) != null ? ref.caret : void 0;
    return this.editor.triggerHandler('blur');
  };

  InputManager.prototype._onMouseUp = function(e) {
    if (!this.editor.util.support.onselectionchange) {
      return setTimeout((function(_this) {
        return function() {
          return _this.editor.trigger('selectionchanged');
        };
      })(this), 0);
    }
  };

  InputManager.prototype._onKeyDown = function(e) {
    var base, ref, ref1, result;
    if (this.editor.triggerHandler(e) === false) {
      return false;
    }
    if (this.hotkeys.respondTo(e)) {
      return;
    }
    if (e.which in this._keystrokeHandlers) {
      result = typeof (base = this._keystrokeHandlers[e.which])['*'] === "function" ? base['*'](e) : void 0;
      if (result) {
        this.editor.trigger('valuechanged');
        return false;
      }
      this.editor.util.traverseUp((function(_this) {
        return function(node) {
          var handler, ref;
          if (node.nodeType !== document.ELEMENT_NODE) {
            return;
          }
          handler = (ref = _this._keystrokeHandlers[e.which]) != null ? ref[node.tagName.toLowerCase()] : void 0;
          result = typeof handler === "function" ? handler(e, $(node)) : void 0;
          if (result === true || result === false) {
            return false;
          }
        };
      })(this));
      if (result) {
        this.editor.trigger('valuechanged');
        return false;
      }
    }
    if ((ref = e.which, indexOf.call(this._modifierKeys, ref) >= 0) || (ref1 = e.which, indexOf.call(this._arrowKeys, ref1) >= 0)) {
      return;
    }
    if (this.editor.util.metaKey(e) && e.which === 86) {
      return;
    }
    if (!this.editor.util.support.oninput) {
      this.throttledTrigger('valuechanged', ['typing']);
    }
    return null;
  };

  InputManager.prototype._onKeyPress = function(e) {
    if (this.editor.triggerHandler(e) === false) {
      return false;
    }
  };

  InputManager.prototype._onKeyUp = function(e) {
    var p, ref;
    if (this.editor.triggerHandler(e) === false) {
      return false;
    }
    if (!this.editor.util.support.onselectionchange && (ref = e.which, indexOf.call(this._arrowKeys, ref) >= 0)) {
      this.editor.trigger('selectionchanged');
      return;
    }
    if ((e.which === 8 || e.which === 46) && this.editor.util.isEmptyNode(this.editor.body)) {
      this.editor.body.empty();
      p = $('<p/>').append(this.editor.util.phBr).appendTo(this.editor.body);
      this.editor.selection.setRangeAtStartOf(p);
    }
  };

  InputManager.prototype._onPaste = function(e) {
    var $blockEl, cleanPaste, imageFile, pasteContent, pasteItem, processPasteContent, range, ref, uploadOpt;
    if (this.editor.triggerHandler(e) === false) {
      return false;
    }
    range = this.editor.selection.deleteRangeContents();
    if (!range.collapsed) {
      range.collapse(true);
    }
    $blockEl = this.editor.util.closestBlockEl();
    cleanPaste = $blockEl.is('pre, table');
    if (e.originalEvent.clipboardData && e.originalEvent.clipboardData.items && e.originalEvent.clipboardData.items.length > 0) {
      pasteItem = e.originalEvent.clipboardData.items[0];
      if (/^image\//.test(pasteItem.type) && !cleanPaste) {
        imageFile = pasteItem.getAsFile();
        if (!((imageFile != null) && this.opts.pasteImage)) {
          return;
        }
        if (!imageFile.name) {
          imageFile.name = "Clipboard Image.png";
        }
        uploadOpt = {};
        uploadOpt[this.opts.pasteImage] = true;
        if ((ref = this.editor.uploader) != null) {
          ref.upload(imageFile, uploadOpt);
        }
        return false;
      }
    }
    processPasteContent = (function(_this) {
      return function(pasteContent) {
        var $img, blob, children, insertPosition, j, k, l, lastLine, len, len1, len2, len3, len4, line, lines, m, node, o, ref1, ref2, ref3;
        if (_this.editor.triggerHandler('pasting', [pasteContent]) === false) {
          return;
        }
        if (!pasteContent) {
          return;
        } else if (cleanPaste) {
          if ($blockEl.is('table')) {
            lines = pasteContent.split('\n');
            lastLine = lines.pop();
            for (j = 0, len = lines.length; j < len; j++) {
              line = lines[j];
              _this.editor.selection.insertNode(document.createTextNode(line));
              _this.editor.selection.insertNode($('<br/>'));
            }
            _this.editor.selection.insertNode(document.createTextNode(lastLine));
          } else {
            pasteContent = $('<div/>').text(pasteContent);
            ref1 = pasteContent.contents();
            for (k = 0, len1 = ref1.length; k < len1; k++) {
              node = ref1[k];
              _this.editor.selection.insertNode($(node)[0], range);
            }
          }
        } else if ($blockEl.is(_this.editor.body)) {
          for (l = 0, len2 = pasteContent.length; l < len2; l++) {
            node = pasteContent[l];
            _this.editor.selection.insertNode(node, range);
          }
        } else if (pasteContent.length < 1) {
          return;
        } else if (pasteContent.length === 1) {
          if (pasteContent.is('p')) {
            children = pasteContent.contents();
            if (children.length === 1 && children.is('img')) {
              $img = children;
              if (/^data:image/.test($img.attr('src'))) {
                if (!_this.opts.pasteImage) {
                  return;
                }
                blob = _this.editor.util.dataURLtoBlob($img.attr("src"));
                blob.name = "Clipboard Image.png";
                uploadOpt = {};
                uploadOpt[_this.opts.pasteImage] = true;
                if ((ref2 = _this.editor.uploader) != null) {
                  ref2.upload(blob, uploadOpt);
                }
                return;
              } else if ($img.is('img[src^="webkit-fake-url://"]')) {
                return;
              }
            }
            for (m = 0, len3 = children.length; m < len3; m++) {
              node = children[m];
              _this.editor.selection.insertNode(node, range);
            }
          } else if ($blockEl.is('p') && _this.editor.util.isEmptyNode($blockEl)) {
            $blockEl.replaceWith(pasteContent);
            _this.editor.selection.setRangeAtEndOf(pasteContent, range);
          } else if (pasteContent.is('ul, ol')) {
            if (pasteContent.find('li').length === 1) {
              pasteContent = $('<div/>').text(pasteContent.text());
              ref3 = pasteContent.contents();
              for (o = 0, len4 = ref3.length; o < len4; o++) {
                node = ref3[o];
                _this.editor.selection.insertNode($(node)[0], range);
              }
            } else if ($blockEl.is('li')) {
              $blockEl.parent().after(pasteContent);
              _this.editor.selection.setRangeAtEndOf(pasteContent, range);
            } else {
              $blockEl.after(pasteContent);
              _this.editor.selection.setRangeAtEndOf(pasteContent, range);
            }
          } else {
            $blockEl.after(pasteContent);
            _this.editor.selection.setRangeAtEndOf(pasteContent, range);
          }
        } else {
          if ($blockEl.is('li')) {
            $blockEl = $blockEl.parent();
          }
          if (_this.editor.selection.rangeAtStartOf($blockEl, range)) {
            insertPosition = 'before';
          } else if (_this.editor.selection.rangeAtEndOf($blockEl, range)) {
            insertPosition = 'after';
          } else {
            _this.editor.selection.breakBlockEl($blockEl, range);
            insertPosition = 'before';
          }
          $blockEl[insertPosition](pasteContent);
          _this.editor.selection.setRangeAtEndOf(pasteContent.last(), range);
        }
        return _this.editor.trigger('valuechanged');
      };
    })(this);
    if (cleanPaste) {
      e.preventDefault();
      if (this.editor.util.browser.msie) {
        pasteContent = window.clipboardData.getData('Text');
      } else {
        pasteContent = e.originalEvent.clipboardData.getData('text/plain');
      }
      return processPasteContent(pasteContent);
    } else {
      this.editor.selection.save(range);
      this._pasteArea.focus();
      if (this.editor.util.browser.msie && this.editor.util.browser.version === 10) {
        e.preventDefault();
        this._pasteArea.html(window.clipboardData.getData('Text'));
      }
      return setTimeout((function(_this) {
        return function() {
          if (_this._pasteArea.is(':empty')) {
            pasteContent = null;
          } else {
            pasteContent = $('<div/>').append(_this._pasteArea.contents());
            pasteContent.find('table colgroup').remove();
            _this.editor.formatter.format(pasteContent);
            _this.editor.formatter.decorate(pasteContent);
            _this.editor.formatter.beautify(pasteContent.children());
            pasteContent = pasteContent.contents();
          }
          _this._pasteArea.empty();
          range = _this.editor.selection.restore();
          return processPasteContent(pasteContent);
        };
      })(this), 10);
    }
  };

  InputManager.prototype._onDrop = function(e) {
    if (this.editor.triggerHandler(e) === false) {
      return false;
    }
    return setTimeout((function(_this) {
      return function() {
        return _this.editor.trigger('valuechanged');
      };
    })(this), 0);
  };

  InputManager.prototype._onInput = function(e) {
    return this.throttledTrigger('valuechanged', ['oninput']);
  };

  InputManager.prototype.addKeystrokeHandler = function(key, node, handler) {
    if (!this._keystrokeHandlers[key]) {
      this._keystrokeHandlers[key] = {};
    }
    return this._keystrokeHandlers[key][node] = handler;
  };

  InputManager.prototype.addShortcut = function(keys, handler) {
    return this.hotkeys.add(keys, $.proxy(handler, this));
  };

  return InputManager;

})(SimpleModule);

Keystroke = (function(superClass) {
  extend(Keystroke, superClass);

  function Keystroke() {
    return Keystroke.__super__.constructor.apply(this, arguments);
  }

  Keystroke.pluginName = 'Keystroke';

  Keystroke.prototype._init = function() {
    var titleEnterHandler;
    this.editor = this._module;
    if (this.editor.util.browser.safari) {
      this.editor.inputManager.addKeystrokeHandler('13', '*', (function(_this) {
        return function(e) {
          var $blockEl, $br;
          if (!e.shiftKey) {
            return;
          }
          $blockEl = _this.editor.util.closestBlockEl();
          if ($blockEl.is('pre')) {
            return;
          }
          $br = $('<br/>');
          if (_this.editor.selection.rangeAtEndOf($blockEl)) {
            _this.editor.selection.insertNode($br);
            _this.editor.selection.insertNode($('<br/>'));
            _this.editor.selection.setRangeBefore($br);
          } else {
            _this.editor.selection.insertNode($br);
          }
          return true;
        };
      })(this));
    }
    if (this.editor.util.browser.webkit || this.editor.util.browser.msie) {
      titleEnterHandler = (function(_this) {
        return function(e, $node) {
          var $p;
          if (!_this.editor.selection.rangeAtEndOf($node)) {
            return;
          }
          $p = $('<p/>').append(_this.editor.util.phBr).insertAfter($node);
          _this.editor.selection.setRangeAtStartOf($p);
          return true;
        };
      })(this);
      this.editor.inputManager.addKeystrokeHandler('13', 'h1', titleEnterHandler);
      this.editor.inputManager.addKeystrokeHandler('13', 'h2', titleEnterHandler);
      this.editor.inputManager.addKeystrokeHandler('13', 'h3', titleEnterHandler);
      this.editor.inputManager.addKeystrokeHandler('13', 'h4', titleEnterHandler);
      this.editor.inputManager.addKeystrokeHandler('13', 'h5', titleEnterHandler);
      this.editor.inputManager.addKeystrokeHandler('13', 'h6', titleEnterHandler);
    }
    this.editor.inputManager.addKeystrokeHandler('8', '*', (function(_this) {
      return function(e) {
        var $blockEl, $prevBlockEl, $rootBlock;
        $rootBlock = _this.editor.util.furthestBlockEl();
        $prevBlockEl = $rootBlock.prev();
        if ($prevBlockEl.is('hr') && _this.editor.selection.rangeAtStartOf($rootBlock)) {
          _this.editor.selection.save();
          $prevBlockEl.remove();
          _this.editor.selection.restore();
          return true;
        }
        $blockEl = _this.editor.util.closestBlockEl();
        if (_this.editor.util.browser.webkit && _this.editor.selection.rangeAtStartOf($blockEl)) {
          _this.editor.selection.save();
          _this.editor.formatter.cleanNode($blockEl, true);
          _this.editor.selection.restore();
          return null;
        }
      };
    })(this));
    this.editor.inputManager.addKeystrokeHandler('13', 'li', (function(_this) {
      return function(e, $node) {
        var $cloneNode, listEl, newBlockEl, newListEl;
        $cloneNode = $node.clone();
        $cloneNode.find('ul, ol').remove();
        if (!(_this.editor.util.isEmptyNode($cloneNode) && $node.is(_this.editor.util.closestBlockEl()))) {
          return;
        }
        listEl = $node.parent();
        if ($node.next('li').length > 0) {
          if (!_this.editor.util.isEmptyNode($node)) {
            return;
          }
          if (listEl.parent('li').length > 0) {
            newBlockEl = $('<li/>').append(_this.editor.util.phBr).insertAfter(listEl.parent('li'));
            newListEl = $('<' + listEl[0].tagName + '/>').append($node.nextAll('li'));
            newBlockEl.append(newListEl);
          } else {
            newBlockEl = $('<p/>').append(_this.editor.util.phBr).insertAfter(listEl);
            newListEl = $('<' + listEl[0].tagName + '/>').append($node.nextAll('li'));
            newBlockEl.after(newListEl);
          }
        } else {
          if (listEl.parent('li').length > 0) {
            newBlockEl = $('<li/>').insertAfter(listEl.parent('li'));
            if ($node.contents().length > 0) {
              newBlockEl.append($node.contents());
            } else {
              newBlockEl.append(_this.editor.util.phBr);
            }
          } else {
            newBlockEl = $('<p/>').append(_this.editor.util.phBr).insertAfter(listEl);
            if ($node.children('ul, ol').length > 0) {
              newBlockEl.after($node.children('ul, ol'));
            }
          }
        }
        if ($node.prev('li').length) {
          $node.remove();
        } else {
          listEl.remove();
        }
        _this.editor.selection.setRangeAtStartOf(newBlockEl);
        return true;
      };
    })(this));
    this.editor.inputManager.addKeystrokeHandler('13', 'pre', (function(_this) {
      return function(e, $node) {
        var $p, breakNode, range;
        e.preventDefault();
        if (e.shiftKey) {
          $p = $('<p/>').append(_this.editor.util.phBr).insertAfter($node);
          _this.editor.selection.setRangeAtStartOf($p);
          return true;
        }
        range = _this.editor.selection.getRange();
        breakNode = null;
        range.deleteContents();
        if (!_this.editor.util.browser.msie && _this.editor.selection.rangeAtEndOf($node)) {
          breakNode = document.createTextNode('\n\n');
          range.insertNode(breakNode);
          range.setEnd(breakNode, 1);
        } else {
          breakNode = document.createTextNode('\n');
          range.insertNode(breakNode);
          range.setStartAfter(breakNode);
        }
        range.collapse(false);
        _this.editor.selection.selectRange(range);
        return true;
      };
    })(this));
    this.editor.inputManager.addKeystrokeHandler('13', 'blockquote', (function(_this) {
      return function(e, $node) {
        var $closestBlock, range;
        $closestBlock = _this.editor.util.closestBlockEl();
        if (!($closestBlock.is('p') && !$closestBlock.next().length && _this.editor.util.isEmptyNode($closestBlock))) {
          return;
        }
        $node.after($closestBlock);
        range = document.createRange();
        _this.editor.selection.setRangeAtStartOf($closestBlock, range);
        return true;
      };
    })(this));
    this.editor.inputManager.addKeystrokeHandler('8', 'li', (function(_this) {
      return function(e, $node) {
        var $br, $childList, $newLi, $prevChildList, $prevNode, $textNode, range, text;
        $childList = $node.children('ul, ol');
        $prevNode = $node.prev('li');
        if (!($childList.length > 0 && $prevNode.length > 0)) {
          return false;
        }
        text = '';
        $textNode = null;
        $node.contents().each(function(i, n) {
          if (n.nodeType === 1 && /UL|OL/.test(n.nodeName)) {
            return false;
          }
          if (n.nodeType === 1 && /BR/.test(n.nodeName)) {
            return;
          }
          if (n.nodeType === 3 && n.nodeValue) {
            text += n.nodeValue;
          } else if (n.nodeType === 1) {
            text += $(n).text();
          }
          return $textNode = $(n);
        });
        if ($textNode && text.length === 1 && _this.editor.util.browser.firefox && !$textNode.next('br').length) {
          $br = $(_this.editor.util.phBr).insertAfter($textNode);
          $textNode.remove();
          _this.editor.selection.setRangeBefore($br);
          return true;
        } else if (text.length > 0) {
          return false;
        }
        range = document.createRange();
        $prevChildList = $prevNode.children('ul, ol');
        if ($prevChildList.length > 0) {
          $newLi = $('<li/>').append(_this.editor.util.phBr).appendTo($prevChildList);
          $prevChildList.append($childList.children('li'));
          $node.remove();
          _this.editor.selection.setRangeAtEndOf($newLi, range);
        } else {
          _this.editor.selection.setRangeAtEndOf($prevNode, range);
          $prevNode.append($childList);
          $node.remove();
          _this.editor.selection.selectRange(range);
        }
        return true;
      };
    })(this));
    this.editor.inputManager.addKeystrokeHandler('8', 'pre', (function(_this) {
      return function(e, $node) {
        var $newNode, codeStr, range;
        if (!_this.editor.selection.rangeAtStartOf($node)) {
          return;
        }
        codeStr = $node.html().replace('\n', '<br/>');
        $newNode = $('<p/>').append(codeStr || _this.editor.util.phBr).insertAfter($node);
        $node.remove();
        range = document.createRange();
        _this.editor.selection.setRangeAtStartOf($newNode, range);
        return true;
      };
    })(this));
    return this.editor.inputManager.addKeystrokeHandler('8', 'blockquote', (function(_this) {
      return function(e, $node) {
        var $firstChild, range;
        if (!_this.editor.selection.rangeAtStartOf($node)) {
          return;
        }
        $firstChild = $node.children().first().unwrap();
        range = document.createRange();
        _this.editor.selection.setRangeAtStartOf($firstChild, range);
        return true;
      };
    })(this));
  };

  return Keystroke;

})(SimpleModule);

UndoManager = (function(superClass) {
  extend(UndoManager, superClass);

  function UndoManager() {
    return UndoManager.__super__.constructor.apply(this, arguments);
  }

  UndoManager.pluginName = 'UndoManager';

  UndoManager.prototype._index = -1;

  UndoManager.prototype._capacity = 50;

  UndoManager.prototype._timer = null;

  UndoManager.prototype._init = function() {
    var redoShortcut, undoShortcut;
    this.editor = this._module;
    this._stack = [];
    if (this.editor.util.os.mac) {
      undoShortcut = 'cmd+z';
      redoShortcut = 'shift+cmd+z';
    } else if (this.editor.util.os.win) {
      undoShortcut = 'ctrl+z';
      redoShortcut = 'ctrl+y';
    } else {
      undoShortcut = 'ctrl+z';
      redoShortcut = 'shift+ctrl+z';
    }
    this.editor.inputManager.addShortcut(undoShortcut, (function(_this) {
      return function(e) {
        e.preventDefault();
        _this.undo();
        return false;
      };
    })(this));
    this.editor.inputManager.addShortcut(redoShortcut, (function(_this) {
      return function(e) {
        e.preventDefault();
        _this.redo();
        return false;
      };
    })(this));
    return this.editor.on('valuechanged', (function(_this) {
      return function(e, src) {
        if (src === 'undo' || src === 'redo') {
          return;
        }
        if (_this._timer) {
          clearTimeout(_this._timer);
          _this._timer = null;
        }
        return _this._timer = setTimeout(function() {
          _this._pushUndoState();
          return _this._timer = null;
        }, 200);
      };
    })(this));
  };

  UndoManager.prototype._pushUndoState = function() {
    var currentState, html;
    if (this.editor.triggerHandler('pushundostate') === false) {
      return;
    }
    currentState = this.currentState();
    html = this.editor.body.html();
    if (currentState && currentState.html === html) {
      return;
    }
    this._index += 1;
    this._stack.length = this._index;
    this._stack.push({
      html: html,
      caret: this.caretPosition()
    });
    if (this._stack.length > this._capacity) {
      this._stack.shift();
      return this._index -= 1;
    }
  };

  UndoManager.prototype.currentState = function() {
    if (this._stack.length && this._index > -1) {
      return this._stack[this._index];
    } else {
      return null;
    }
  };

  UndoManager.prototype.undo = function() {
    var state;
    if (this._index < 1 || this._stack.length < 2) {
      return;
    }
    this.editor.hidePopover();
    this._index -= 1;
    state = this._stack[this._index];
    this.editor.body.html(state.html);
    this.caretPosition(state.caret);
    this.editor.body.find('.selected').removeClass('selected');
    this.editor.sync();
    return this.editor.trigger('valuechanged', ['undo']);
  };

  UndoManager.prototype.redo = function() {
    var state;
    if (this._index < 0 || this._stack.length < this._index + 2) {
      return;
    }
    this.editor.hidePopover();
    this._index += 1;
    state = this._stack[this._index];
    this.editor.body.html(state.html);
    this.caretPosition(state.caret);
    this.editor.body.find('.selected').removeClass('selected');
    this.editor.sync();
    return this.editor.trigger('valuechanged', ['redo']);
  };

  UndoManager.prototype.update = function() {
    var currentState, html;
    if (this._timer) {
      return;
    }
    currentState = this.currentState();
    if (!currentState) {
      return;
    }
    html = this.editor.body.html();
    currentState.html = html;
    return currentState.caret = this.caretPosition();
  };

  UndoManager.prototype._getNodeOffset = function(node, index) {
    var $parent, merging, offset;
    if (index) {
      $parent = $(node);
    } else {
      $parent = $(node).parent();
    }
    offset = 0;
    merging = false;
    $parent.contents().each((function(_this) {
      return function(i, child) {
        if (index === i || node === child) {
          return false;
        }
        if (child.nodeType === 3) {
          if (!merging) {
            offset += 1;
            merging = true;
          }
        } else {
          offset += 1;
          merging = false;
        }
        return null;
      };
    })(this));
    return offset;
  };

  UndoManager.prototype._getNodePosition = function(node, offset) {
    var position, prevNode;
    if (node.nodeType === 3) {
      prevNode = node.previousSibling;
      while (prevNode && prevNode.nodeType === 3) {
        node = prevNode;
        offset += this.editor.util.getNodeLength(prevNode);
        prevNode = prevNode.previousSibling;
      }
    } else {
      offset = this._getNodeOffset(node, offset);
    }
    position = [];
    position.unshift(offset);
    this.editor.util.traverseUp((function(_this) {
      return function(n) {
        return position.unshift(_this._getNodeOffset(n));
      };
    })(this), node);
    return position;
  };

  UndoManager.prototype._getNodeByPosition = function(position) {
    var child, childNodes, i, j, len, node, offset, ref;
    node = this.editor.body[0];
    ref = position.slice(0, position.length - 1);
    for (i = j = 0, len = ref.length; j < len; i = ++j) {
      offset = ref[i];
      childNodes = node.childNodes;
      if (offset > childNodes.length - 1) {
        if (i === position.length - 2 && $(node).is('pre')) {
          child = document.createTextNode('');
          node.appendChild(child);
          childNodes = node.childNodes;
        } else {
          node = null;
          break;
        }
      }
      node = childNodes[offset];
    }
    return node;
  };

  UndoManager.prototype.caretPosition = function(caret) {
    var endContainer, endOffset, range, startContainer, startOffset;
    if (!caret) {
      range = this.editor.selection.getRange();
      if (!(this.editor.inputManager.focused && (range != null))) {
        return {};
      }
      caret = {
        start: [],
        end: null,
        collapsed: true
      };
      caret.start = this._getNodePosition(range.startContainer, range.startOffset);
      if (!range.collapsed) {
        caret.end = this._getNodePosition(range.endContainer, range.endOffset);
        caret.collapsed = false;
      }
      return caret;
    } else {
      if (!this.editor.inputManager.focused) {
        this.editor.body.focus();
      }
      if (!caret.start) {
        this.editor.body.blur();
        return;
      }
      startContainer = this._getNodeByPosition(caret.start);
      startOffset = caret.start[caret.start.length - 1];
      if (caret.collapsed) {
        endContainer = startContainer;
        endOffset = startOffset;
      } else {
        endContainer = this._getNodeByPosition(caret.end);
        endOffset = caret.start[caret.start.length - 1];
      }
      if (!startContainer || !endContainer) {
        throw new Error('simditor: invalid caret state');
        return;
      }
      range = document.createRange();
      range.setStart(startContainer, startOffset);
      range.setEnd(endContainer, endOffset);
      return this.editor.selection.selectRange(range);
    }
  };

  return UndoManager;

})(SimpleModule);

Util = (function(superClass) {
  extend(Util, superClass);

  function Util() {
    return Util.__super__.constructor.apply(this, arguments);
  }

  Util.pluginName = 'Util';

  Util.prototype._init = function() {
    this.editor = this._module;
    if (this.browser.msie && this.browser.version < 11) {
      return this.phBr = '';
    }
  };

  Util.prototype.phBr = '<br/>';

  Util.prototype.os = (function() {
    var os;
    os = {};
    if (/Mac/.test(navigator.appVersion)) {
      os.mac = true;
    } else if (/Linux/.test(navigator.appVersion)) {
      os.linux = true;
    } else if (/Win/.test(navigator.appVersion)) {
      os.win = true;
    } else if (/X11/.test(navigator.appVersion)) {
      os.unix = true;
    }
    if (/Mobi/.test(navigator.appVersion)) {
      os.mobile = true;
    }
    return os;
  })();

  Util.prototype.browser = (function() {
    var chrome, firefox, ie, ref, ref1, ref2, ref3, safari, ua;
    ua = navigator.userAgent;
    ie = /(msie|trident)/i.test(ua);
    chrome = /chrome|crios/i.test(ua);
    safari = /safari/i.test(ua) && !chrome;
    firefox = /firefox/i.test(ua);
    if (ie) {
      return {
        msie: true,
        version: ((ref = ua.match(/(msie |rv:)(\d+(\.\d+)?)/i)) != null ? ref[2] : void 0) * 1
      };
    } else if (chrome) {
      return {
        webkit: true,
        chrome: true,
        version: ((ref1 = ua.match(/(?:chrome|crios)\/(\d+(\.\d+)?)/i)) != null ? ref1[1] : void 0) * 1
      };
    } else if (safari) {
      return {
        webkit: true,
        safari: true,
        version: ((ref2 = ua.match(/version\/(\d+(\.\d+)?)/i)) != null ? ref2[1] : void 0) * 1
      };
    } else if (firefox) {
      return {
        mozilla: true,
        firefox: true,
        version: ((ref3 = ua.match(/firefox\/(\d+(\.\d+)?)/i)) != null ? ref3[1] : void 0) * 1
      };
    } else {
      return {};
    }
  })();

  Util.prototype.support = (function() {
    return {
      onselectionchange: (function() {
        var e, onselectionchange;
        onselectionchange = document.onselectionchange;
        if (onselectionchange !== void 0) {
          try {
            document.onselectionchange = 0;
            return document.onselectionchange === null;
          } catch (_error) {
            e = _error;
          } finally {
            document.onselectionchange = onselectionchange;
          }
        }
        return false;
      })(),
      oninput: (function() {
        return !/(msie|trident)/i.test(navigator.userAgent);
      })()
    };
  })();

  Util.prototype.reflow = function(el) {
    if (el == null) {
      el = document;
    }
    return $(el)[0].offsetHeight;
  };

  Util.prototype.metaKey = function(e) {
    var isMac;
    isMac = /Mac/.test(navigator.userAgent);
    if (isMac) {
      return e.metaKey;
    } else {
      return e.ctrlKey;
    }
  };

  Util.prototype.isEmptyNode = function(node) {
    var $node;
    $node = $(node);
    return $node.is(':empty') || (!$node.text() && !$node.find(':not(br, span, div)').length);
  };

  Util.prototype.blockNodes = ["div", "p", "ul", "ol", "li", "blockquote", "hr", "pre", "h1", "h2", "h3", "h4", "table"];

  Util.prototype.isBlockNode = function(node) {
    node = $(node)[0];
    if (!node || node.nodeType === 3) {
      return false;
    }
    return new RegExp("^(" + (this.blockNodes.join('|')) + ")$").test(node.nodeName.toLowerCase());
  };

  Util.prototype.closestBlockEl = function(node) {
    var $node, blockEl, range;
    if (node == null) {
      range = this.editor.selection.getRange();
      node = range != null ? range.commonAncestorContainer : void 0;
    }
    $node = $(node);
    if (!$node.length) {
      return null;
    }
    blockEl = $node.parentsUntil(this.editor.body).addBack();
    blockEl = blockEl.filter((function(_this) {
      return function(i) {
        return _this.isBlockNode(blockEl.eq(i));
      };
    })(this));
    if (blockEl.length) {
      return blockEl.last();
    } else {
      return null;
    }
  };

  Util.prototype.furthestNode = function(node, filter) {
    var $node, blockEl, range;
    if (node == null) {
      range = this.editor.selection.getRange();
      node = range != null ? range.commonAncestorContainer : void 0;
    }
    $node = $(node);
    if (!$node.length) {
      return null;
    }
    blockEl = $node.parentsUntil(this.editor.body).addBack();
    blockEl = blockEl.filter((function(_this) {
      return function(i) {
        var $n;
        $n = blockEl.eq(i);
        if ($.isFunction(filter)) {
          return filter($n);
        } else {
          return $n.is(filter);
        }
      };
    })(this));
    if (blockEl.length) {
      return blockEl.first();
    } else {
      return null;
    }
  };

  Util.prototype.furthestBlockEl = function(node) {
    return this.furthestNode(node, $.proxy(this.isBlockNode, this));
  };

  Util.prototype.getNodeLength = function(node) {
    switch (node.nodeType) {
      case 7:
      case 10:
        return 0;
      case 3:
      case 8:
        return node.length;
      default:
        return node.childNodes.length;
    }
  };

  Util.prototype.traverseUp = function(callback, node) {
    var j, len, n, nodes, range, result, results1;
    if (node == null) {
      range = this.editor.selection.getRange();
      node = range != null ? range.commonAncestorContainer : void 0;
    }
    if ((node == null) || !$.contains(this.editor.body[0], node)) {
      return false;
    }
    nodes = $(node).parentsUntil(this.editor.body).get();
    nodes.unshift(node);
    results1 = [];
    for (j = 0, len = nodes.length; j < len; j++) {
      n = nodes[j];
      result = callback(n);
      if (result === false) {
        break;
      } else {
        results1.push(void 0);
      }
    }
    return results1;
  };

  Util.prototype.dataURLtoBlob = function(dataURL) {
    var BlobBuilder, arrayBuffer, bb, byteString, hasArrayBufferViewSupport, hasBlobConstructor, i, intArray, j, mimeString, ref;
    hasBlobConstructor = window.Blob && (function() {
      var e;
      try {
        return Boolean(new Blob());
      } catch (_error) {
        e = _error;
        return false;
      }
    })();
    hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && (function() {
      var e;
      try {
        return new Blob([new Uint8Array(100)]).size === 100;
      } catch (_error) {
        e = _error;
        return false;
      }
    })();
    BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;
    if (!((hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array)) {
      return false;
    }
    if (dataURL.split(',')[0].indexOf('base64') >= 0) {
      byteString = atob(dataURL.split(',')[1]);
    } else {
      byteString = decodeURIComponent(dataURL.split(',')[1]);
    }
    arrayBuffer = new ArrayBuffer(byteString.length);
    intArray = new Uint8Array(arrayBuffer);
    for (i = j = 0, ref = byteString.length; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
      intArray[i] = byteString.charCodeAt(i);
    }
    mimeString = dataURL.split(',')[0].split(':')[1].split(';')[0];
    if (hasBlobConstructor) {
      return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {
        type: mimeString
      });
    }
    bb = new BlobBuilder();
    bb.append(arrayBuffer);
    return bb.getBlob(mimeString);
  };

  Util.prototype.throttle = function(func, wait) {
    var delayedCallTimeout, previousCallTime, stopDelayedCall;
    delayedCallTimeout = null;
    previousCallTime = 0;
    stopDelayedCall = function() {
      if (delayedCallTimeout) {
        clearTimeout(delayedCallTimeout);
        return delayedCallTimeout = null;
      }
    };
    return function() {
      var args, now, remaining, result;
      now = Date.now();
      previousCallTime || (previousCallTime = now);
      remaining = wait - (now - previousCallTime);
      result = null;
      if ((0 < remaining && remaining < wait)) {
        previousCallTime = now;
        stopDelayedCall();
        args = arguments;
        delayedCallTimeout = setTimeout(function() {
          previousCallTime = 0;
          delayedCallTimeout = null;
          return result = func.apply(null, args);
        }, wait);
      } else {
        stopDelayedCall();
        if (previousCallTime !== now) {
          previousCallTime = 0;
        }
        result = func.apply(null, arguments);
      }
      return result;
    };
  };

  Util.prototype.formatHTML = function(html) {
    var cursor, indentString, lastMatch, level, match, re, repeatString, result, str;
    re = /<(\/?)(.+?)(\/?)>/g;
    result = '';
    level = 0;
    lastMatch = null;
    indentString = '  ';
    repeatString = function(str, n) {
      return new Array(n + 1).join(str);
    };
    while ((match = re.exec(html)) !== null) {
      match.isBlockNode = $.inArray(match[2], this.blockNodes) > -1;
      match.isStartTag = match[1] !== '/' && match[3] !== '/';
      match.isEndTag = match[1] === '/' || match[3] === '/';
      cursor = lastMatch ? lastMatch.index + lastMatch[0].length : 0;
      if ((str = html.substring(cursor, match.index)).length > 0 && $.trim(str)) {
        result += str;
      }
      if (match.isBlockNode && match.isEndTag && !match.isStartTag) {
        level -= 1;
      }
      if (match.isBlockNode && match.isStartTag) {
        if (!(lastMatch && lastMatch.isBlockNode && lastMatch.isEndTag)) {
          result += '\n';
        }
        result += repeatString(indentString, level);
      }
      result += match[0];
      if (match.isBlockNode && match.isEndTag) {
        result += '\n';
      }
      if (match.isBlockNode && match.isStartTag) {
        level += 1;
      }
      lastMatch = match;
    }
    return $.trim(result);
  };

  return Util;

})(SimpleModule);

Toolbar = (function(superClass) {
  extend(Toolbar, superClass);

  function Toolbar() {
    return Toolbar.__super__.constructor.apply(this, arguments);
  }

  Toolbar.pluginName = 'Toolbar';

  Toolbar.prototype.opts = {
    toolbar: true,
    toolbarFloat: true,
    toolbarHidden: false,
    toolbarFloatOffset: 0
  };

  Toolbar.prototype._tpl = {
    wrapper: '<div class="simditor-toolbar"><ul></ul></div>',
    separator: '<li><span class="separator"></span></li>'
  };

  Toolbar.prototype._init = function() {
    var toolbarHeight;
    this.editor = this._module;
    if (!this.opts.toolbar) {
      return;
    }
    if (!$.isArray(this.opts.toolbar)) {
      this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];
    }
    this._render();
    this.list.on('click', (function(_this) {
      return function(e) {
        return false;
      };
    })(this));
    this.wrapper.on('mousedown', (function(_this) {
      return function(e) {
        return _this.list.find('.menu-on').removeClass('.menu-on');
      };
    })(this));
    $(document).on('mousedown.simditor' + this.editor.id, (function(_this) {
      return function(e) {
        return _this.list.find('.menu-on').removeClass('.menu-on');
      };
    })(this));
    if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {
      this.wrapper.css('top', this.opts.toolbarFloatOffset);
      toolbarHeight = 0;
      $(window).on('resize.simditor-' + this.editor.id, (function(_this) {
        return function(e) {
          _this.wrapper.css('position', 'static');
          _this.wrapper.width('auto');
          _this.editor.util.reflow(_this.wrapper);
          _this.wrapper.width(_this.wrapper.outerWidth());
          _this.wrapper.css('left', _this.wrapper.offset().left);
          _this.wrapper.css('position', '');
          toolbarHeight = _this.wrapper.outerHeight();
          return _this.editor.placeholderEl.css('top', toolbarHeight);
        };
      })(this)).resize();
      $(window).on('scroll.simditor-' + this.editor.id, (function(_this) {
        return function(e) {
          var bottomEdge, scrollTop, topEdge;
          topEdge = _this.editor.wrapper.offset().top;
          bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;
          scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;
          if (scrollTop <= topEdge || scrollTop >= bottomEdge) {
            _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');
            if (_this.editor.util.os.mobile) {
              return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);
            }
          } else {
            _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);
            if (_this.editor.util.os.mobile) {
              return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);
            }
          }
        };
      })(this));
    }
    this.editor.on('selectionchanged', (function(_this) {
      return function() {
        return _this.toolbarStatus();
      };
    })(this));
    this.editor.on('destroy', (function(_this) {
      return function() {
        return _this.buttons.length = 0;
      };
    })(this));
    return $(document).on('mousedown.simditor-' + this.editor.id, (function(_this) {
      return function(e) {
        return _this.list.find('li.menu-on').removeClass('menu-on');
      };
    })(this));
  };

  Toolbar.prototype._render = function() {
    var j, len, name, ref;
    this.buttons = [];
    this.wrapper = $(this._tpl.wrapper).prependTo(this.editor.wrapper);
    this.list = this.wrapper.find('ul');
    ref = this.opts.toolbar;
    for (j = 0, len = ref.length; j < len; j++) {
      name = ref[j];
      if (name === '|') {
        $(this._tpl.separator).appendTo(this.list);
        continue;
      }
      if (!this.constructor.buttons[name]) {
        throw new Error('simditor: invalid toolbar button "' + name + '"');
        continue;
      }
      this.buttons.push(new this.constructor.buttons[name]({
        editor: this.editor
      }));
    }
    if (this.opts.toolbarHidden) {
      return this.wrapper.hide();
    }
  };

  Toolbar.prototype.toolbarStatus = function(name) {
    var buttons;
    if (!this.editor.inputManager.focused) {
      return;
    }
    buttons = this.buttons.slice(0);
    return this.editor.util.traverseUp((function(_this) {
      return function(node) {
        var button, i, j, k, len, len1, removeButtons;
        removeButtons = [];
        for (i = j = 0, len = buttons.length; j < len; i = ++j) {
          button = buttons[i];
          if ((name != null) && button.name !== name) {
            continue;
          }
          if (!button.status || button.status($(node)) === true) {
            removeButtons.push(button);
          }
        }
        for (k = 0, len1 = removeButtons.length; k < len1; k++) {
          button = removeButtons[k];
          i = $.inArray(button, buttons);
          buttons.splice(i, 1);
        }
        if (buttons.length === 0) {
          return false;
        }
      };
    })(this));
  };

  Toolbar.prototype.findButton = function(name) {
    var button;
    button = this.list.find('.toolbar-item-' + name).data('button');
    return button != null ? button : null;
  };

  Toolbar.addButton = function(btn) {
    return this.buttons[btn.prototype.name] = btn;
  };

  Toolbar.buttons = {};

  return Toolbar;

})(SimpleModule);

Indentation = (function(superClass) {
  extend(Indentation, superClass);

  function Indentation() {
    return Indentation.__super__.constructor.apply(this, arguments);
  }

  Indentation.pluginName = 'Indentation';

  Indentation.prototype.opts = {
    tabIndent: true
  };

  Indentation.prototype._init = function() {
    this.editor = this._module;
    return this.editor.inputManager.addKeystrokeHandler('9', '*', (function(_this) {
      return function(e) {
        var codeButton;
        codeButton = _this.editor.toolbar.findButton('code');
        if (!(_this.opts.tabIndent || (codeButton && codeButton.active))) {
          return;
        }
        return _this.indent(e.shiftKey);
      };
    })(this));
  };

  Indentation.prototype.indent = function(isBackward) {
    var $blockEls, $endBlock, $startBlock, range, result;
    range = this.editor.selection.getRange();
    if (!range) {
      return;
    }
    $startBlock = this.editor.util.closestBlockEl(range.startContainer);
    $endBlock = this.editor.util.closestBlockEl(range.endContainer);
    if (!($startBlock.is('li') && $endBlock.is('li') && $startBlock.parent().is($endBlock.parent()))) {
      $startBlock = this.editor.util.furthestBlockEl($startBlock);
      $endBlock = this.editor.util.furthestBlockEl($endBlock);
    }
    if ($startBlock.is($endBlock)) {
      $blockEls = $startBlock;
    } else {
      $blockEls = $startBlock.nextUntil($endBlock).add($startBlock).add($endBlock);
    }
    result = false;
    $blockEls.each((function(_this) {
      return function(i, blockEl) {
        return result = isBackward ? _this.outdentBlock(blockEl) : _this.indentBlock(blockEl);
      };
    })(this));
    return result;
  };

  Indentation.prototype.indentBlock = function(blockEl) {
    var $blockEl, $childList, $nextTd, $parentLi, $pre, $td, indentLevel, range, tagName;
    $blockEl = $(blockEl);
    if (!$blockEl.length) {
      return;
    }
    if ($blockEl.is('pre')) {
      range = this.editor.selection.getRange();
      $pre = $(range.commonAncestorContainer);
      if (!($pre.is($blockEl) || $pre.closest('pre').is($blockEl))) {
        return;
      }
      this.indentText(range);
    } else if ($blockEl.is('li')) {
      $parentLi = $blockEl.prev('li');
      if ($parentLi.length < 1) {
        return;
      }
      this.editor.selection.save();
      tagName = $blockEl.parent()[0].tagName;
      $childList = $parentLi.children('ul, ol');
      if ($childList.length > 0) {
        $childList.append($blockEl);
      } else {
        $('<' + tagName + '/>').append($blockEl).appendTo($parentLi);
      }
      this.editor.selection.restore();
    } else if ($blockEl.is('p, h1, h2, h3, h4')) {
      indentLevel = $blockEl.attr('data-indent') || 0;
      indentLevel = Math.min(indentLevel * 1 + 1, 10);
      $blockEl.attr('data-indent', indentLevel);
    } else if ($blockEl.is('table') || $blockEl.is('.simditor-table')) {
      range = this.editor.selection.getRange();
      $td = $(range.commonAncestorContainer).closest('td');
      $nextTd = $td.next('td');
      if (!($nextTd.length > 0)) {
        $nextTd = $td.parent('tr').next('tr').find('td:first');
      }
      if (!($td.length > 0 && $nextTd.length > 0)) {
        return false;
      }
      this.editor.selection.setRangeAtEndOf($nextTd);
    }
    return true;
  };

  Indentation.prototype.indentText = function(range) {
    var text, textNode;
    text = range.toString().replace(/^(?=.+)/mg, '\u00A0\u00A0');
    textNode = document.createTextNode(text || '\u00A0\u00A0');
    range.deleteContents();
    range.insertNode(textNode);
    if (text) {
      range.selectNode(textNode);
      return this.editor.selection.selectRange(range);
    } else {
      return this.editor.selection.setRangeAfter(textNode);
    }
  };

  Indentation.prototype.outdentBlock = function(blockEl) {
    var $blockEl, $parent, $parentLi, $pre, $prevTd, $td, button, indentLevel, range, ref;
    $blockEl = $(blockEl);
    if (!($blockEl && $blockEl.length > 0)) {
      return;
    }
    if ($blockEl.is('pre')) {
      range = this.editor.selection.getRange();
      $pre = $(range.commonAncestorContainer);
      if (!($pre.is($blockEl) || $pre.closest('pre').is($blockEl))) {
        return;
      }
      this.outdentText(range);
    } else if ($blockEl.is('li')) {
      $parent = $blockEl.parent();
      $parentLi = $parent.parent('li');
      if ($parentLi.length < 1) {
        button = this.editor.toolbar.findButton($parent[0].tagName.toLowerCase());
        if (button != null) {
          button.command();
        }
        return;
      }
      this.editor.selection.save();
      if ($blockEl.next('li').length > 0) {
        $('<' + $parent[0].tagName + '/>').append($blockEl.nextAll('li')).appendTo($blockEl);
      }
      $blockEl.insertAfter($parentLi);
      if ($parent.children('li').length < 1) {
        $parent.remove();
      }
      this.editor.selection.restore();
    } else if ($blockEl.is('p, h1, h2, h3, h4')) {
      indentLevel = (ref = $blockEl.attr('data-indent')) != null ? ref : 0;
      indentLevel = indentLevel * 1 - 1;
      if (indentLevel < 0) {
        indentLevel = 0;
      }
      $blockEl.attr('data-indent', indentLevel);
    } else if ($blockEl.is('table') || $blockEl.is('.simditor-table')) {
      range = this.editor.selection.getRange();
      $td = $(range.commonAncestorContainer).closest('td');
      $prevTd = $td.prev('td');
      if (!($prevTd.length > 0)) {
        $prevTd = $td.parent('tr').prev('tr').find('td:last');
      }
      if (!($td.length > 0 && $prevTd.length > 0)) {
        return;
      }
      this.editor.selection.setRangeAtEndOf($prevTd);
    }
    return true;
  };

  Indentation.prototype.outdentText = function(range) {};

  return Indentation;

})(SimpleModule);

Simditor = (function(superClass) {
  extend(Simditor, superClass);

  function Simditor() {
    return Simditor.__super__.constructor.apply(this, arguments);
  }

  Simditor.connect(Util);

  Simditor.connect(InputManager);

  Simditor.connect(UndoManager);

  Simditor.connect(Keystroke);

  Simditor.connect(Formatter);

  Simditor.connect(Selection);

  Simditor.connect(Toolbar);

  Simditor.connect(Indentation);

  Simditor.count = 0;

  Simditor.prototype.opts = {
    textarea: null,
    placeholder: '',
    defaultImage: 'images/image.png',
    params: {},
    upload: false
  };

  Simditor.prototype._init = function() {
    var e, editor, form, uploadOpts;
    this.textarea = $(this.opts.textarea);
    this.opts.placeholder = this.opts.placeholder || this.textarea.attr('placeholder');
    if (!this.textarea.length) {
      throw new Error('simditor: param textarea is required.');
      return;
    }
    editor = this.textarea.data('simditor');
    if (editor != null) {
      editor.destroy();
    }
    this.id = ++Simditor.count;
    this._render();
    if (this.opts.upload && simpleUploader) {
      uploadOpts = typeof this.opts.upload === 'object' ? this.opts.upload : {};
      this.uploader = simpleUploader(uploadOpts);
    }
    form = this.textarea.closest('form');
    if (form.length) {
      form.on('submit.simditor-' + this.id, (function(_this) {
        return function() {
          return _this.sync();
        };
      })(this));
      form.on('reset.simditor-' + this.id, (function(_this) {
        return function() {
          return _this.setValue('');
        };
      })(this));
    }
    this.on('initialized', (function(_this) {
      return function() {
        if (_this.opts.placeholder) {
          _this.on('valuechanged', function() {
            return _this._placeholder();
          });
        }
        return _this.setValue(_this.textarea.val().trim() || '');
      };
    })(this));
    if (this.util.browser.mozilla) {
      this.util.reflow();
      try {
        document.execCommand("enableObjectResizing", false, false);
        return document.execCommand("enableInlineTableEditing", false, false);
      } catch (_error) {
        e = _error;
      }
    }
  };

  Simditor.prototype._tpl = "<div class=\"simditor\">\n  <div class=\"simditor-wrapper\">\n    <div class=\"simditor-placeholder\"></div>\n    <div class=\"simditor-body\" contenteditable=\"true\">\n    </div>\n  </div>\n</div>";

  Simditor.prototype._render = function() {
    var key, ref, results1, val;
    this.el = $(this._tpl).insertBefore(this.textarea);
    this.wrapper = this.el.find('.simditor-wrapper');
    this.body = this.wrapper.find('.simditor-body');
    this.placeholderEl = this.wrapper.find('.simditor-placeholder').append(this.opts.placeholder);
    this.el.data('simditor', this);
    this.wrapper.append(this.textarea);
    this.textarea.data('simditor', this).blur();
    this.body.attr('tabindex', this.textarea.attr('tabindex'));
    if (this.util.os.mac) {
      this.el.addClass('simditor-mac');
    } else if (this.util.os.linux) {
      this.el.addClass('simditor-linux');
    }
    if (this.util.os.mobile) {
      this.el.addClass('simditor-mobile');
    }
    if (this.opts.params) {
      ref = this.opts.params;
      results1 = [];
      for (key in ref) {
        val = ref[key];
        results1.push($('<input/>', {
          type: 'hidden',
          name: key,
          value: val
        }).insertAfter(this.textarea));
      }
      return results1;
    }
  };

  Simditor.prototype._placeholder = function() {
    var children, ref;
    children = this.body.children();
    if (children.length === 0 || (children.length === 1 && this.util.isEmptyNode(children) && ((ref = children.data('indent')) != null ? ref : 0) < 1)) {
      return this.placeholderEl.show();
    } else {
      return this.placeholderEl.hide();
    }
  };

  Simditor.prototype.setValue = function(val) {
    this.hidePopover();
    this.textarea.val(val);
    this.body.html(val);
    this.formatter.format();
    this.formatter.decorate();
    this.util.reflow(this.body);
    this.inputManager.lastCaretPosition = null;
    return this.trigger('valuechanged');
  };

  Simditor.prototype.getValue = function() {
    return this.sync();
  };

  Simditor.prototype.sync = function() {
    var children, cloneBody, emptyP, firstP, lastP, val;
    cloneBody = this.body.clone();
    this.formatter.undecorate(cloneBody);
    this.formatter.format(cloneBody);
    this.formatter.autolink(cloneBody);
    children = cloneBody.children();
    lastP = children.last('p');
    firstP = children.first('p');
    while (lastP.is('p') && this.util.isEmptyNode(lastP)) {
      emptyP = lastP;
      lastP = lastP.prev('p');
      emptyP.remove();
    }
    while (firstP.is('p') && this.util.isEmptyNode(firstP)) {
      emptyP = firstP;
      firstP = lastP.next('p');
      emptyP.remove();
    }
    cloneBody.find('img.uploading').remove();
    val = $.trim(cloneBody.html());
    this.textarea.val(val);
    return val;
  };

  Simditor.prototype.focus = function() {
    var $blockEl, range;
    if (!(this.body.is(':visible') && this.body.is('[contenteditable]'))) {
      this.el.find('textarea:visible').focus();
      return;
    }
    if (this.inputManager.lastCaretPosition) {
      return this.undoManager.caretPosition(this.inputManager.lastCaretPosition);
    } else {
      $blockEl = this.body.find('p').last();
      if (!($blockEl.length > 0)) {
        $blockEl = $('<p/>').append(this.util.phBr).appendTo(this.body);
      }
      range = document.createRange();
      this.selection.setRangeAtEndOf($blockEl, range);
      return this.body.focus();
    }
  };

  Simditor.prototype.blur = function() {
    if (this.body.is(':visible') && this.body.is('[contenteditable]')) {
      return this.body.blur();
    } else {
      return this.body.find('textarea:visible').blur();
    }
  };

  Simditor.prototype.hidePopover = function() {
    return this.el.find('.simditor-popover').each((function(_this) {
      return function(i, popover) {
        popover = $(popover).data('popover');
        if (popover.active) {
          return popover.hide();
        }
      };
    })(this));
  };

  Simditor.prototype.destroy = function() {
    this.triggerHandler('destroy');
    this.textarea.closest('form').off('.simditor .simditor-' + this.id);
    this.selection.clear();
    this.inputManager.focused = false;
    this.textarea.insertBefore(this.el).hide().val('').removeData('simditor');
    this.el.remove();
    $(document).off('.simditor-' + this.id);
    $(window).off('.simditor-' + this.id);
    return this.off();
  };

  return Simditor;

})(SimpleModule);

Simditor.i18n = {
  'zh-CN': {
    'blockquote': '引用',
    'bold': '加粗文字',
    'code': '插入代码',
    'color': '文字颜色',
    'hr': '分隔线',
    'image': '插入图片',
    'externalImage': '外链图片',
    'uploadImage': '上传图片',
    'uploadFailed': '上传失败了',
    'uploadError': '上传出错了',
    'imageUrl': '图片地址',
    'imageSize': '图片尺寸',
    'imageAlt': '图片描述',
    'restoreImageSize': '还原图片尺寸',
    'uploading': '正在上传',
    'indent': '向右缩进',
    'outdent': '向左缩进',
    'italic': '斜体文字',
    'link': '插入链接',
    'text': '文本',
    'linkText': '链接文字',
    'linkUrl': '地址',
    'removeLink': '移除链接',
    'ol': '有序列表',
    'ul': '无序列表',
    'strikethrough': '删除线文字',
    'table': '表格',
    'deleteRow': '删除行',
    'insertRowAbove': '在上面插入行',
    'insertRowBelow': '在下面插入行',
    'deleteColumn': '删除列',
    'insertColumnLeft': '在左边插入列',
    'insertColumnRight': '在右边插入列',
    'deleteTable': '删除表格',
    'title': '标题',
    'normalText': '普通文本',
    'underline': '下划线文字',
    'alignment': '排版',
    'alignCenter': '居中',
    'alignLeft': '居左',
    'alignRight': '居右'
  }
};

Button = (function(superClass) {
  extend(Button, superClass);

  Button.prototype._tpl = {
    item: '<li><a tabindex="-1" unselectable="on" class="toolbar-item" href="javascript:;"><span></span></a></li>',
    menuWrapper: '<div class="toolbar-menu"></div>',
    menuItem: '<li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;"><span></span></a></li>',
    separator: '<li><span class="separator"></span></li>'
  };

  Button.prototype.name = '';

  Button.prototype.icon = '';

  Button.prototype.title = '';

  Button.prototype.text = '';

  Button.prototype.htmlTag = '';

  Button.prototype.disableTag = '';

  Button.prototype.menu = false;

  Button.prototype.active = false;

  Button.prototype.disabled = false;

  Button.prototype.needFocus = true;

  Button.prototype.shortcut = null;

  function Button(opts) {
    this.editor = opts.editor;
    this.title = this._t(this.name);
    Button.__super__.constructor.call(this, opts);
  }

  Button.prototype._init = function() {
    var j, len, ref, results1, tag;
    this.render();
    this.el.on('mousedown', (function(_this) {
      return function(e) {
        var exceed, param;
        e.preventDefault();
        if (_this.el.hasClass('disabled') || (_this.needFocus && !_this.editor.inputManager.focused)) {
          return false;
        }
        if (_this.menu) {
          _this.wrapper.toggleClass('menu-on').siblings('li').removeClass('menu-on');
          if (_this.wrapper.is('.menu-on')) {
            exceed = _this.menuWrapper.offset().left + _this.menuWrapper.outerWidth() + 5 - _this.editor.wrapper.offset().left - _this.editor.wrapper.outerWidth();
            if (exceed > 0) {
              _this.menuWrapper.css({
                'left': 'auto',
                'right': 0
              });
            }
            _this.trigger('menuexpand');
          }
          return false;
        }
        param = _this.el.data('param');
        _this.command(param);
        return false;
      };
    })(this));
    this.wrapper.on('click', 'a.menu-item', (function(_this) {
      return function(e) {
        var btn, param;
        e.preventDefault();
        btn = $(e.currentTarget);
        _this.wrapper.removeClass('menu-on');
        if (btn.hasClass('disabled') || (_this.needFocus && !_this.editor.inputManager.focused)) {
          return false;
        }
        _this.editor.toolbar.wrapper.removeClass('menu-on');
        param = btn.data('param');
        _this.command(param);
        return false;
      };
    })(this));
    this.wrapper.on('mousedown', 'a.menu-item', (function(_this) {
      return function(e) {
        return false;
      };
    })(this));
    this.editor.on('blur', (function(_this) {
      return function() {
        if (!(_this.editor.body.is(':visible') && _this.editor.body.is('[contenteditable]'))) {
          return;
        }
        _this.setActive(false);
        return _this.setDisabled(false);
      };
    })(this));
    if (this.shortcut != null) {
      this.editor.inputManager.addShortcut(this.shortcut, (function(_this) {
        return function(e) {
          _this.el.mousedown();
          return false;
        };
      })(this));
    }
    ref = this.htmlTag.split(',');
    results1 = [];
    for (j = 0, len = ref.length; j < len; j++) {
      tag = ref[j];
      tag = $.trim(tag);
      if (tag && $.inArray(tag, this.editor.formatter._allowedTags) < 0) {
        results1.push(this.editor.formatter._allowedTags.push(tag));
      } else {
        results1.push(void 0);
      }
    }
    return results1;
  };

  Button.prototype.iconClassOf = function(icon) {
    if (icon) {
      return "simditor-icon simditor-icon-" + icon;
    } else {
      return '';
    }
  };

  Button.prototype.setIcon = function(icon) {
    return this.el.find('span').removeClass().addClass(this.iconClassOf(icon)).text(this.text);
  };

  Button.prototype.render = function() {
    this.wrapper = $(this._tpl.item).appendTo(this.editor.toolbar.list);
    this.el = this.wrapper.find('a.toolbar-item');
    this.el.attr('title', this.title).addClass("toolbar-item-" + this.name).data('button', this);
    this.setIcon(this.icon);
    if (!this.menu) {
      return;
    }
    this.menuWrapper = $(this._tpl.menuWrapper).appendTo(this.wrapper);
    this.menuWrapper.addClass("toolbar-menu-" + this.name);
    return this.renderMenu();
  };

  Button.prototype.renderMenu = function() {
    var $menuBtnEl, $menuItemEl, j, len, menuItem, ref, ref1, results1;
    if (!$.isArray(this.menu)) {
      return;
    }
    this.menuEl = $('<ul/>').appendTo(this.menuWrapper);
    ref = this.menu;
    results1 = [];
    for (j = 0, len = ref.length; j < len; j++) {
      menuItem = ref[j];
      if (menuItem === '|') {
        $(this._tpl.separator).appendTo(this.menuEl);
        continue;
      }
      $menuItemEl = $(this._tpl.menuItem).appendTo(this.menuEl);
      $menuBtnEl = $menuItemEl.find('a.menu-item').attr({
        'title': (ref1 = menuItem.title) != null ? ref1 : menuItem.text,
        'data-param': menuItem.param
      }).addClass('menu-item-' + menuItem.name);
      if (menuItem.icon) {
        results1.push($menuBtnEl.find('span').addClass(this.iconClassOf(menuItem.icon)));
      } else {
        results1.push($menuBtnEl.find('span').text(menuItem.text));
      }
    }
    return results1;
  };

  Button.prototype.setActive = function(active) {
    if (active === this.active) {
      return;
    }
    this.active = active;
    this.el.toggleClass('active', this.active);
    return this.editor.toolbar.trigger('buttonstatus', [this]);
  };

  Button.prototype.setDisabled = function(disabled) {
    if (disabled === this.disabled) {
      return;
    }
    this.disabled = disabled;
    this.el.toggleClass('disabled', this.disabled);
    return this.editor.toolbar.trigger('buttonstatus', [this]);
  };

  Button.prototype.status = function($node) {
    if ($node != null) {
      this.setDisabled($node.is(this.disableTag));
    }
    if (this.disabled) {
      return true;
    }
    if ($node != null) {
      this.setActive($node.is(this.htmlTag));
    }
    return this.active;
  };

  Button.prototype.command = function(param) {};

  Button.prototype._t = function() {
    var args, ref, result;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    result = Button.__super__._t.apply(this, args);
    if (!result) {
      result = (ref = this.editor)._t.apply(ref, args);
    }
    return result;
  };

  return Button;

})(SimpleModule);

Simditor.Button = Button;

Popover = (function(superClass) {
  extend(Popover, superClass);

  Popover.prototype.offset = {
    top: 4,
    left: 0
  };

  Popover.prototype.target = null;

  Popover.prototype.active = false;

  function Popover(opts) {
    this.button = opts.button;
    this.editor = opts.button.editor;
    Popover.__super__.constructor.call(this, opts);
  }

  Popover.prototype._init = function() {
    this.el = $('<div class="simditor-popover"></div>').appendTo(this.editor.el).data('popover', this);
    this.render();
    this.el.on('mouseenter', (function(_this) {
      return function(e) {
        return _this.el.addClass('hover');
      };
    })(this));
    return this.el.on('mouseleave', (function(_this) {
      return function(e) {
        return _this.el.removeClass('hover');
      };
    })(this));
  };

  Popover.prototype.render = function() {};

  Popover.prototype.show = function($target, position) {
    if (position == null) {
      position = 'bottom';
    }
    if ($target == null) {
      return;
    }
    this.el.siblings('.simditor-popover').each((function(_this) {
      return function(i, popover) {
        popover = $(popover).data('popover');
        if (popover.active) {
          return popover.hide();
        }
      };
    })(this));
    this.target = $target.addClass('selected');
    if (this.active) {
      this.refresh(position);
      return this.trigger('popovershow');
    } else {
      this.active = true;
      this.el.css({
        left: -9999
      }).show();
      return setTimeout((function(_this) {
        return function() {
          _this.refresh(position);
          return _this.trigger('popovershow');
        };
      })(this), 0);
    }
  };

  Popover.prototype.hide = function() {
    if (!this.active) {
      return;
    }
    if (this.target) {
      this.target.removeClass('selected');
    }
    this.target = null;
    this.active = false;
    this.el.hide();
    return this.trigger('popoverhide');
  };

  Popover.prototype.refresh = function(position) {
    var editorOffset, left, targetH, targetOffset, top;
    if (position == null) {
      position = 'bottom';
    }
    if (!this.active) {
      return;
    }
    editorOffset = this.editor.el.offset();
    targetOffset = this.target.offset();
    targetH = this.target.outerHeight();
    if (position === 'bottom') {
      top = targetOffset.top - editorOffset.top + targetH;
    } else if (position === 'top') {
      top = targetOffset.top - editorOffset.top - this.el.height();
    }
    left = Math.min(targetOffset.left - editorOffset.left, this.editor.wrapper.width() - this.el.outerWidth() - 10);
    return this.el.css({
      top: top + this.offset.top,
      left: left + this.offset.left
    });
  };

  Popover.prototype.destroy = function() {
    this.target = null;
    this.active = false;
    this.editor.off('.linkpopover');
    return this.el.remove();
  };

  Popover.prototype._t = function() {
    var args, ref, result;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    result = Popover.__super__._t.apply(this, args);
    if (!result) {
      result = (ref = this.button)._t.apply(ref, args);
    }
    return result;
  };

  return Popover;

})(SimpleModule);

Simditor.Popover = Popover;

TitleButton = (function(superClass) {
  extend(TitleButton, superClass);

  function TitleButton() {
    return TitleButton.__super__.constructor.apply(this, arguments);
  }

  TitleButton.prototype.name = 'title';

  TitleButton.prototype.htmlTag = 'h1, h2, h3, h4';

  TitleButton.prototype.disableTag = 'pre, table';

  TitleButton.prototype._init = function() {
    this.menu = [
      {
        name: 'normal',
        text: this._t('normalText'),
        param: 'p'
      }, '|', {
        name: 'h1',
        text: this._t('title') + ' 1',
        param: 'h1'
      }, {
        name: 'h2',
        text: this._t('title') + ' 2',
        param: 'h2'
      }, {
        name: 'h3',
        text: this._t('title') + ' 3',
        param: 'h3'
      }, {
        name: 'h4',
        text: this._t('title') + ' 4',
        param: 'h4'
      }, {
        name: 'h5',
        text: this._t('title') + ' 5',
        param: 'h5'
      }
    ];
    return TitleButton.__super__._init.call(this);
  };

  TitleButton.prototype.setActive = function(active, param) {
    TitleButton.__super__.setActive.call(this, active);
    this.el.removeClass('active-p active-h1 active-h2 active-h3');
    if (active) {
      return this.el.addClass('active active-' + param);
    }
  };

  TitleButton.prototype.status = function($node) {
    var param, ref;
    if ($node != null) {
      this.setDisabled($node.is(this.disableTag));
    }
    if (this.disabled) {
      return true;
    }
    if ($node != null) {
      param = (ref = $node[0].tagName) != null ? ref.toLowerCase() : void 0;
      this.setActive($node.is(this.htmlTag), param);
    }
    return this.active;
  };

  TitleButton.prototype.command = function(param) {
    var $contents, $endBlock, $startBlock, endNode, j, len, node, range, ref, results, startNode;
    range = this.editor.selection.getRange();
    startNode = range.startContainer;
    endNode = range.endContainer;
    $startBlock = this.editor.util.closestBlockEl(startNode);
    $endBlock = this.editor.util.closestBlockEl(endNode);
    this.editor.selection.save();
    range.setStartBefore($startBlock[0]);
    range.setEndAfter($endBlock[0]);
    $contents = $(range.extractContents());
    results = [];
    $contents.children().each((function(_this) {
      return function(i, el) {
        var c, converted, j, len, results1;
        converted = _this._convertEl(el, param);
        results1 = [];
        for (j = 0, len = converted.length; j < len; j++) {
          c = converted[j];
          results1.push(results.push(c));
        }
        return results1;
      };
    })(this));
    ref = results.reverse();
    for (j = 0, len = ref.length; j < len; j++) {
      node = ref[j];
      range.insertNode(node[0]);
    }
    this.editor.selection.restore();
    return this.editor.trigger('valuechanged');
  };

  TitleButton.prototype._convertEl = function(el, param) {
    var $block, $el, results;
    $el = $(el);
    results = [];
    if ($el.is(param)) {
      results.push($el);
    } else {
      $block = $('<' + param + '/>').append($el.contents());
      results.push($block);
    }
    return results;
  };

  return TitleButton;

})(Button);

Simditor.Toolbar.addButton(TitleButton);

BoldButton = (function(superClass) {
  extend(BoldButton, superClass);

  function BoldButton() {
    return BoldButton.__super__.constructor.apply(this, arguments);
  }

  BoldButton.prototype.name = 'bold';

  BoldButton.prototype.icon = 'bold';

  BoldButton.prototype.htmlTag = 'b, strong';

  BoldButton.prototype.disableTag = 'pre';

  BoldButton.prototype.shortcut = 'cmd+b';

  BoldButton.prototype._init = function() {
    if (this.editor.util.os.mac) {
      this.title = this.title + ' ( Cmd + b )';
    } else {
      this.title = this.title + ' ( Ctrl + b )';
      this.shortcut = 'ctrl+b';
    }
    return BoldButton.__super__._init.call(this);
  };

  BoldButton.prototype.status = function($node) {
    var active;
    if ($node != null) {
      this.setDisabled($node.is(this.disableTag));
    }
    if (this.disabled) {
      return true;
    }
    active = document.queryCommandState('bold') === true;
    this.setActive(active);
    return active;
  };

  BoldButton.prototype.command = function() {
    document.execCommand('bold');
    if (!this.editor.util.support.oninput) {
      this.editor.trigger('valuechanged');
    }
    return $(document).trigger('selectionchange');
  };

  return BoldButton;

})(Button);

Simditor.Toolbar.addButton(BoldButton);

ItalicButton = (function(superClass) {
  extend(ItalicButton, superClass);

  function ItalicButton() {
    return ItalicButton.__super__.constructor.apply(this, arguments);
  }

  ItalicButton.prototype.name = 'italic';

  ItalicButton.prototype.icon = 'italic';

  ItalicButton.prototype.htmlTag = 'i';

  ItalicButton.prototype.disableTag = 'pre';

  ItalicButton.prototype.shortcut = 'cmd+i';

  ItalicButton.prototype._init = function() {
    if (this.editor.util.os.mac) {
      this.title = this.title + ' ( Cmd + i )';
    } else {
      this.title = this.title + ' ( Ctrl + i )';
      this.shortcut = 'ctrl+i';
    }
    return ItalicButton.__super__._init.call(this);
  };

  ItalicButton.prototype.status = function($node) {
    var active;
    if ($node != null) {
      this.setDisabled($node.is(this.disableTag));
    }
    if (this.disabled) {
      return this.disabled;
    }
    active = document.queryCommandState('italic') === true;
    this.setActive(active);
    return active;
  };

  ItalicButton.prototype.command = function() {
    document.execCommand('italic');
    if (!this.editor.util.support.oninput) {
      this.editor.trigger('valuechanged');
    }
    return $(document).trigger('selectionchange');
  };

  return ItalicButton;

})(Button);

Simditor.Toolbar.addButton(ItalicButton);

UnderlineButton = (function(superClass) {
  extend(UnderlineButton, superClass);

  function UnderlineButton() {
    return UnderlineButton.__super__.constructor.apply(this, arguments);
  }

  UnderlineButton.prototype.name = 'underline';

  UnderlineButton.prototype.icon = 'underline';

  UnderlineButton.prototype.htmlTag = 'u';

  UnderlineButton.prototype.disableTag = 'pre';

  UnderlineButton.prototype.shortcut = 'cmd+u';

  UnderlineButton.prototype.render = function() {
    if (this.editor.util.os.mac) {
      this.title = this.title + ' ( Cmd + u )';
    } else {
      this.title = this.title + ' ( Ctrl + u )';
      this.shortcut = 'ctrl+u';
    }
    return UnderlineButton.__super__.render.call(this);
  };

  UnderlineButton.prototype.status = function($node) {
    var active;
    if ($node != null) {
      this.setDisabled($node.is(this.disableTag));
    }
    if (this.disabled) {
      return this.disabled;
    }
    active = document.queryCommandState('underline') === true;
    this.setActive(active);
    return active;
  };

  UnderlineButton.prototype.command = function() {
    document.execCommand('underline');
    if (!this.editor.util.support.oninput) {
      this.editor.trigger('valuechanged');
    }
    return $(document).trigger('selectionchange');
  };

  return UnderlineButton;

})(Button);

Simditor.Toolbar.addButton(UnderlineButton);

ColorButton = (function(superClass) {
  extend(ColorButton, superClass);

  function ColorButton() {
    return ColorButton.__super__.constructor.apply(this, arguments);
  }

  ColorButton.prototype.name = 'color';

  ColorButton.prototype.icon = 'tint';

  ColorButton.prototype.disableTag = 'pre';

  ColorButton.prototype.menu = true;

  ColorButton.prototype.render = function() {
    var args;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    return ColorButton.__super__.render.apply(this, args);
  };

  ColorButton.prototype.renderMenu = function() {
    $('<ul class="color-list">\n  <li><a href="javascript:;" class="font-color font-color-1" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-2" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-3" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-4" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-5" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-6" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-7" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-default" data-color=""></a></li>\n</ul>').appendTo(this.menuWrapper);
    this.menuWrapper.on('mousedown', '.color-list', function(e) {
      return false;
    });
    return this.menuWrapper.on('click', '.font-color', (function(_this) {
      return function(e) {
        var $link, $p, hex, rgb;
        _this.wrapper.removeClass('menu-on');
        $link = $(e.currentTarget);
        if ($link.hasClass('font-color-default')) {
          $p = _this.editor.body.find('p, li');
          if (!($p.length > 0)) {
            return;
          }
          rgb = window.getComputedStyle($p[0], null).getPropertyValue('color');
          hex = _this._convertRgbToHex(rgb);
        } else {
          rgb = window.getComputedStyle($link[0], null).getPropertyValue('background-color');
          hex = _this._convertRgbToHex(rgb);
        }
        if (!hex) {
          return;
        }
        document.execCommand('foreColor', false, hex);
        if (!_this.editor.util.support.oninput) {
          return _this.editor.trigger('valuechanged');
        }
      };
    })(this));
  };

  ColorButton.prototype._convertRgbToHex = function(rgb) {
    var match, re, rgbToHex;
    re = /rgb\((\d+),\s?(\d+),\s?(\d+)\)/g;
    match = re.exec(rgb);
    if (!match) {
      return '';
    }
    rgbToHex = function(r, g, b) {
      var componentToHex;
      componentToHex = function(c) {
        var hex;
        hex = c.toString(16);
        if (hex.length === 1) {
          return '0' + hex;
        } else {
          return hex;
        }
      };
      return "#" + componentToHex(r) + componentToHex(g) + componentToHex(b);
    };
    return rgbToHex(match[1] * 1, match[2] * 1, match[3] * 1);
  };

  return ColorButton;

})(Button);

Simditor.Toolbar.addButton(ColorButton);

ListButton = (function(superClass) {
  extend(ListButton, superClass);

  function ListButton() {
    return ListButton.__super__.constructor.apply(this, arguments);
  }

  ListButton.prototype.type = '';

  ListButton.prototype.disableTag = 'pre, table';

  ListButton.prototype.status = function($node) {
    var anotherType;
    if ($node != null) {
      this.setDisabled($node.is(this.disableTag));
    }
    if (this.disabled) {
      return true;
    }
    if ($node == null) {
      return this.active;
    }
    anotherType = this.type === 'ul' ? 'ol' : 'ul';
    if ($node.is(anotherType)) {
      this.setActive(false);
      return true;
    } else {
      this.setActive($node.is(this.htmlTag));
      return this.active;
    }
  };

  ListButton.prototype.command = function(param) {
    var $contents, $endBlock, $furthestEnd, $furthestStart, $parent, $startBlock, endLevel, endNode, getListLevel, j, len, node, range, ref, results, startLevel, startNode;
    range = this.editor.selection.getRange();
    startNode = range.startContainer;
    endNode = range.endContainer;
    $startBlock = this.editor.util.closestBlockEl(startNode);
    $endBlock = this.editor.util.closestBlockEl(endNode);
    this.editor.selection.save();
    range.setStartBefore($startBlock[0]);
    range.setEndAfter($endBlock[0]);
    if ($startBlock.is('li') && $endBlock.is('li')) {
      $furthestStart = this.editor.util.furthestNode($startBlock, 'ul, ol');
      $furthestEnd = this.editor.util.furthestNode($endBlock, 'ul, ol');
      if ($furthestStart.is($furthestEnd)) {
        getListLevel = function($li) {
          var lvl;
          lvl = 1;
          while (!$li.parent().is($furthestStart)) {
            lvl += 1;
            $li = $li.parent();
          }
          return lvl;
        };
        startLevel = getListLevel($startBlock);
        endLevel = getListLevel($endBlock);
        if (startLevel > endLevel) {
          $parent = $endBlock.parent();
        } else {
          $parent = $startBlock.parent();
        }
        range.setStartBefore($parent[0]);
        range.setEndAfter($parent[0]);
      } else {
        range.setStartBefore($furthestStart[0]);
        range.setEndAfter($furthestEnd[0]);
      }
    }
    $contents = $(range.extractContents());
    results = [];
    $contents.children().each((function(_this) {
      return function(i, el) {
        var c, converted, j, len, results1;
        converted = _this._convertEl(el);
        results1 = [];
        for (j = 0, len = converted.length; j < len; j++) {
          c = converted[j];
          if (results.length && results[results.length - 1].is(_this.type) && c.is(_this.type)) {
            results1.push(results[results.length - 1].append(c.children()));
          } else {
            results1.push(results.push(c));
          }
        }
        return results1;
      };
    })(this));
    ref = results.reverse();
    for (j = 0, len = ref.length; j < len; j++) {
      node = ref[j];
      range.insertNode(node[0]);
    }
    this.editor.selection.restore();
    return this.editor.trigger('valuechanged');
  };

  ListButton.prototype._convertEl = function(el) {
    var $el, anotherType, block, child, children, j, len, ref, results;
    $el = $(el);
    results = [];
    anotherType = this.type === 'ul' ? 'ol' : 'ul';
    if ($el.is(this.type)) {
      $el.children('li').each((function(_this) {
        return function(i, li) {
          var $childList, $li, block;
          $li = $(li);
          $childList = $li.children('ul, ol').remove();
          block = $('<p/>').append($(li).html() || _this.editor.util.phBr);
          results.push(block);
          if ($childList.length > 0) {
            return results.push($childList);
          }
        };
      })(this));
    } else if ($el.is(anotherType)) {
      block = $('<' + this.type + '/>').append($el.html());
      results.push(block);
    } else if ($el.is('blockquote')) {
      ref = $el.children().get();
      for (j = 0, len = ref.length; j < len; j++) {
        child = ref[j];
        children = this._convertEl(child);
      }
      $.merge(results, children);
    } else if ($el.is('table')) {

    } else {
      block = $('<' + this.type + '><li></li></' + this.type + '>');
      block.find('li').append($el.html() || this.editor.util.phBr);
      results.push(block);
    }
    return results;
  };

  return ListButton;

})(Button);

OrderListButton = (function(superClass) {
  extend(OrderListButton, superClass);

  function OrderListButton() {
    return OrderListButton.__super__.constructor.apply(this, arguments);
  }

  OrderListButton.prototype.type = 'ol';

  OrderListButton.prototype.name = 'ol';

  OrderListButton.prototype.icon = 'list-ol';

  OrderListButton.prototype.htmlTag = 'ol';

  OrderListButton.prototype.shortcut = 'cmd+/';

  OrderListButton.prototype._init = function() {
    if (this.editor.util.os.mac) {
      this.title = this.title + ' ( Cmd + / )';
    } else {
      this.title = this.title + ' ( ctrl + / )';
      this.shortcut = 'ctrl+/';
    }
    return OrderListButton.__super__._init.call(this);
  };

  return OrderListButton;

})(ListButton);

UnorderListButton = (function(superClass) {
  extend(UnorderListButton, superClass);

  function UnorderListButton() {
    return UnorderListButton.__super__.constructor.apply(this, arguments);
  }

  UnorderListButton.prototype.type = 'ul';

  UnorderListButton.prototype.name = 'ul';

  UnorderListButton.prototype.icon = 'list-ul';

  UnorderListButton.prototype.htmlTag = 'ul';

  UnorderListButton.prototype.shortcut = 'cmd+.';

  UnorderListButton.prototype._init = function() {
    if (this.editor.util.os.mac) {
      this.title = this.title + ' ( Cmd + . )';
    } else {
      this.title = this.title + ' ( Ctrl + . )';
      this.shortcut = 'ctrl+.';
    }
    return UnorderListButton.__super__._init.call(this);
  };

  return UnorderListButton;

})(ListButton);

Simditor.Toolbar.addButton(OrderListButton);

Simditor.Toolbar.addButton(UnorderListButton);

BlockquoteButton = (function(superClass) {
  extend(BlockquoteButton, superClass);

  function BlockquoteButton() {
    return BlockquoteButton.__super__.constructor.apply(this, arguments);
  }

  BlockquoteButton.prototype.name = 'blockquote';

  BlockquoteButton.prototype.icon = 'quote-left';

  BlockquoteButton.prototype.htmlTag = 'blockquote';

  BlockquoteButton.prototype.disableTag = 'pre, table';

  BlockquoteButton.prototype.command = function() {
    var $contents, $endBlock, $startBlock, endNode, j, len, node, range, ref, results, startNode;
    range = this.editor.selection.getRange();
    startNode = range.startContainer;
    endNode = range.endContainer;
    $startBlock = this.editor.util.furthestBlockEl(startNode);
    $endBlock = this.editor.util.furthestBlockEl(endNode);
    this.editor.selection.save();
    range.setStartBefore($startBlock[0]);
    range.setEndAfter($endBlock[0]);
    $contents = $(range.extractContents());
    results = [];
    $contents.children().each((function(_this) {
      return function(i, el) {
        var c, converted, j, len, results1;
        converted = _this._convertEl(el);
        results1 = [];
        for (j = 0, len = converted.length; j < len; j++) {
          c = converted[j];
          if (results.length && results[results.length - 1].is(_this.htmlTag) && c.is(_this.htmlTag)) {
            results1.push(results[results.length - 1].append(c.children()));
          } else {
            results1.push(results.push(c));
          }
        }
        return results1;
      };
    })(this));
    ref = results.reverse();
    for (j = 0, len = ref.length; j < len; j++) {
      node = ref[j];
      range.insertNode(node[0]);
    }
    this.editor.selection.restore();
    return this.editor.trigger('valuechanged');
  };

  BlockquoteButton.prototype._convertEl = function(el) {
    var $el, block, results;
    $el = $(el);
    results = [];
    if ($el.is(this.htmlTag)) {
      $el.children().each((function(_this) {
        return function(i, node) {
          return results.push($(node));
        };
      })(this));
    } else {
      block = $('<' + this.htmlTag + '/>').append($el);
      results.push(block);
    }
    return results;
  };

  return BlockquoteButton;

})(Button);

Simditor.Toolbar.addButton(BlockquoteButton);

CodeButton = (function(superClass) {
  extend(CodeButton, superClass);

  function CodeButton() {
    return CodeButton.__super__.constructor.apply(this, arguments);
  }

  CodeButton.prototype.name = 'code';

  CodeButton.prototype.icon = 'code';

  CodeButton.prototype.htmlTag = 'pre';

  CodeButton.prototype.disableTag = 'li, table';

  CodeButton.prototype._init = function() {
    CodeButton.__super__._init.call(this);
    this.editor.on('decorate', (function(_this) {
      return function(e, $el) {
        return $el.find('pre').each(function(i, pre) {
          return _this.decorate($(pre));
        });
      };
    })(this));
    return this.editor.on('undecorate', (function(_this) {
      return function(e, $el) {
        return $el.find('pre').each(function(i, pre) {
          return _this.undecorate($(pre));
        });
      };
    })(this));
  };

  CodeButton.prototype.render = function() {
    var args;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    CodeButton.__super__.render.apply(this, args);
    return this.popover = new CodePopover({
      button: this
    });
  };

  CodeButton.prototype.status = function($node) {
    var result;
    result = CodeButton.__super__.status.call(this, $node);
    if (this.active) {
      this.popover.show($node);
    } else if (this.editor.util.isBlockNode($node)) {
      this.popover.hide();
    }
    return result;
  };

  CodeButton.prototype.decorate = function($pre) {
    var lang;
    lang = $pre.attr('data-lang');
    $pre.removeClass();
    if (lang && lang !== -1) {
      return $pre.addClass('lang-' + lang);
    }
  };

  CodeButton.prototype.undecorate = function($pre) {
    var lang;
    lang = $pre.attr('data-lang');
    $pre.removeClass();
    if (lang && lang !== -1) {
      return $pre.addClass('lang-' + lang);
    }
  };

  CodeButton.prototype.command = function() {
    var $contents, $endBlock, $startBlock, endNode, j, len, node, range, ref, results, startNode;
    range = this.editor.selection.getRange();
    startNode = range.startContainer;
    endNode = range.endContainer;
    $startBlock = this.editor.util.closestBlockEl(startNode);
    $endBlock = this.editor.util.closestBlockEl(endNode);
    range.setStartBefore($startBlock[0]);
    range.setEndAfter($endBlock[0]);
    $contents = $(range.extractContents());
    results = [];
    $contents.children().each((function(_this) {
      return function(i, el) {
        var c, converted, j, len, results1;
        converted = _this._convertEl(el);
        results1 = [];
        for (j = 0, len = converted.length; j < len; j++) {
          c = converted[j];
          if (results.length && results[results.length - 1].is(_this.htmlTag) && c.is(_this.htmlTag)) {
            results1.push(results[results.length - 1].append(c.contents()));
          } else {
            results1.push(results.push(c));
          }
        }
        return results1;
      };
    })(this));
    ref = results.reverse();
    for (j = 0, len = ref.length; j < len; j++) {
      node = ref[j];
      range.insertNode(node[0]);
    }
    this.editor.selection.setRangeAtEndOf(results[0]);
    return this.editor.trigger('valuechanged');
  };

  CodeButton.prototype._convertEl = function(el) {
    var $el, block, codeStr, results;
    $el = $(el);
    results = [];
    if ($el.is(this.htmlTag)) {
      block = $('<p/>').append($el.html().replace('\n', '<br/>'));
      results.push(block);
    } else {
      if (!$el.text() && $el.children().length === 1 && $el.children().is('br')) {
        codeStr = '\n';
      } else {
        codeStr = this.editor.formatter.clearHtml($el);
      }
      block = $('<' + this.htmlTag + '/>').text(codeStr);
      results.push(block);
    }
    return results;
  };

  return CodeButton;

})(Button);

CodePopover = (function(superClass) {
  extend(CodePopover, superClass);

  function CodePopover() {
    return CodePopover.__super__.constructor.apply(this, arguments);
  }

  CodePopover.prototype._tpl = "<div class=\"code-settings\">\n  <div class=\"settings-field\">\n    <select class=\"select-lang\">\n      <option value=\"-1\">选择程序语言</option>\n      <option value=\"bash\">Bash</option>\n      <option value=\"c++\">C++</option>\n      <option value=\"cs\">C#</option>\n      <option value=\"css\">CSS</option>\n      <option value=\"erlang\">Erlang</option>\n      <option value=\"less\">Less</option>\n      <option value=\"scss\">Sass</option>\n      <option value=\"diff\">Diff</option>\n      <option value=\"coffeeScript\">CoffeeScript</option>\n      <option value=\"html\">Html,XML</option>\n      <option value=\"json\">JSON</option>\n      <option value=\"java\">Java</option>\n      <option value=\"js\">JavaScript</option>\n      <option value=\"markdown\">Markdown</option>\n      <option value=\"oc\">Objective C</option>\n      <option value=\"php\">PHP</option>\n      <option value=\"perl\">Perl</option>\n      <option value=\"python\">Python</option>\n      <option value=\"ruby\">Ruby</option>\n      <option value=\"sql\">SQL</option>\n    </select>\n  </div>\n</div>";

  CodePopover.prototype.render = function() {
    this.el.addClass('code-popover').append(this._tpl);
    this.selectEl = this.el.find('.select-lang');
    this.selectEl.on('change', (function(_this) {
      return function(e) {
        var selected;
        _this.lang = _this.selectEl.val();
        selected = _this.target.hasClass('selected');
        _this.target.removeClass().removeAttr('data-lang');
        if (_this.lang !== -1) {
          _this.target.addClass('lang-' + _this.lang);
          _this.target.attr('data-lang', _this.lang);
        }
        if (selected) {
          return _this.target.addClass('selected');
        }
      };
    })(this));
    return this.editor.on('valuechanged', (function(_this) {
      return function(e) {
        if (_this.active) {
          return _this.refresh();
        }
      };
    })(this));
  };

  CodePopover.prototype.show = function() {
    var args;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    CodePopover.__super__.show.apply(this, args);
    this.lang = this.target.attr('data-lang');
    if (this.lang != null) {
      return this.selectEl.val(this.lang);
    } else {
      return this.selectEl.val(-1);
    }
  };

  return CodePopover;

})(Popover);

Simditor.Toolbar.addButton(CodeButton);

LinkButton = (function(superClass) {
  extend(LinkButton, superClass);

  function LinkButton() {
    return LinkButton.__super__.constructor.apply(this, arguments);
  }

  LinkButton.prototype.name = 'link';

  LinkButton.prototype.icon = 'link';

  LinkButton.prototype.htmlTag = 'a';

  LinkButton.prototype.disableTag = 'pre';

  LinkButton.prototype.render = function() {
    var args;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    LinkButton.__super__.render.apply(this, args);
    return this.popover = new LinkPopover({
      button: this
    });
  };

  LinkButton.prototype.status = function($node) {
    var showPopover;
    if ($node != null) {
      this.setDisabled($node.is(this.disableTag));
    }
    if (this.disabled) {
      return true;
    }
    if ($node == null) {
      return this.active;
    }
    showPopover = true;
    if (!$node.is(this.htmlTag) || $node.is('[class^="simditor-"]')) {
      this.setActive(false);
      showPopover = false;
    } else if (this.editor.selection.rangeAtEndOf($node)) {
      this.setActive(true);
      showPopover = false;
    } else {
      this.setActive(true);
    }
    if (showPopover) {
      this.popover.show($node);
    } else if (this.editor.util.isBlockNode($node)) {
      this.popover.hide();
    }
    return this.active;
  };

  LinkButton.prototype.command = function() {
    var $contents, $endBlock, $link, $newBlock, $startBlock, endNode, linkText, range, startNode, txtNode;
    range = this.editor.selection.getRange();
    if (this.active) {
      $link = $(range.commonAncestorContainer).closest('a');
      txtNode = document.createTextNode($link.text());
      $link.replaceWith(txtNode);
      range.selectNode(txtNode);
    } else {
      startNode = range.startContainer;
      endNode = range.endContainer;
      $startBlock = this.editor.util.closestBlockEl(startNode);
      $endBlock = this.editor.util.closestBlockEl(endNode);
      $contents = $(range.extractContents());
      linkText = this.editor.formatter.clearHtml($contents.contents(), false);
      $link = $('<a/>', {
        href: 'http://www.example.com',
        target: '_blank',
        text: linkText || this._t('linkText')
      });
      if ($startBlock[0] === $endBlock[0]) {
        range.insertNode($link[0]);
      } else {
        $newBlock = $('<p/>').append($link);
        range.insertNode($newBlock[0]);
      }
      range.selectNodeContents($link[0]);
      this.popover.one('popovershow', (function(_this) {
        return function() {
          if (linkText) {
            _this.popover.urlEl.focus();
            return _this.popover.urlEl[0].select();
          } else {
            _this.popover.textEl.focus();
            return _this.popover.textEl[0].select();
          }
        };
      })(this));
    }
    this.editor.selection.selectRange(range);
    return this.editor.trigger('valuechanged');
  };

  return LinkButton;

})(Button);

LinkPopover = (function(superClass) {
  extend(LinkPopover, superClass);

  function LinkPopover() {
    return LinkPopover.__super__.constructor.apply(this, arguments);
  }

  LinkPopover.prototype.render = function() {
    var tpl;
    tpl = "<div class=\"link-settings\">\n  <div class=\"settings-field\">\n    <label>" + (this._t('text')) + "</label>\n    <input class=\"link-text\" type=\"text\"/>\n    <a class=\"btn-unlink\" href=\"javascript:;\" title=\"" + (this._t('removeLink')) + "\" tabindex=\"-1\"><span class=\"simditor-icon simditor-icon-unlink\"></span></a>\n  </div>\n  <div class=\"settings-field\">\n    <label>" + (this._t('linkUrl')) + "</label>\n    <input class=\"link-url\" type=\"text\"/>\n  </div>\n</div>";
    this.el.addClass('link-popover').append(tpl);
    this.textEl = this.el.find('.link-text');
    this.urlEl = this.el.find('.link-url');
    this.unlinkEl = this.el.find('.btn-unlink');
    this.textEl.on('keyup', (function(_this) {
      return function(e) {
        if (e.which === 13) {
          return;
        }
        return _this.target.text(_this.textEl.val());
      };
    })(this));
    this.urlEl.on('keyup', (function(_this) {
      return function(e) {
        var val;
        if (e.which === 13) {
          return;
        }
        val = _this.urlEl.val();
        if (!(/https?:\/\/|^\//ig.test(val) || !val)) {
          val = 'http://' + val;
        }
        return _this.target.attr('href', val);
      };
    })(this));
    $([this.urlEl[0], this.textEl[0]]).on('keydown', (function(_this) {
      return function(e) {
        if (e.which === 13 || e.which === 27 || (!e.shiftKey && e.which === 9 && $(e.target).hasClass('link-url'))) {
          e.preventDefault();
          return setTimeout(function() {
            var range;
            range = document.createRange();
            _this.editor.selection.setRangeAfter(_this.target, range);
            _this.hide();
            return _this.editor.trigger('valuechanged');
          }, 0);
        }
      };
    })(this));
    return this.unlinkEl.on('click', (function(_this) {
      return function(e) {
        var range, txtNode;
        txtNode = document.createTextNode(_this.target.text());
        _this.target.replaceWith(txtNode);
        _this.hide();
        range = document.createRange();
        _this.editor.selection.setRangeAfter(txtNode, range);
        return _this.editor.trigger('valuechanged');
      };
    })(this));
  };

  LinkPopover.prototype.show = function() {
    var args;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    LinkPopover.__super__.show.apply(this, args);
    this.textEl.val(this.target.text());
    return this.urlEl.val(this.target.attr('href'));
  };

  return LinkPopover;

})(Popover);

Simditor.Toolbar.addButton(LinkButton);

ImageButton = (function(superClass) {
  extend(ImageButton, superClass);

  function ImageButton() {
    return ImageButton.__super__.constructor.apply(this, arguments);
  }

  ImageButton.prototype.name = 'image';

  ImageButton.prototype.icon = 'picture-o';

  ImageButton.prototype.htmlTag = 'img';

  ImageButton.prototype.disableTag = 'pre, table';

  ImageButton.prototype.defaultImage = '';

  ImageButton.prototype.needFocus = false;

  ImageButton.prototype._init = function() {
    var item, j, len, ref;
    if (this.editor.opts.imageButton) {
      if (Array.isArray(this.editor.opts.imageButton)) {
        this.menu = [];
        ref = this.editor.opts.imageButton;
        for (j = 0, len = ref.length; j < len; j++) {
          item = ref[j];
          this.menu.push({
            name: item + '-image',
            text: this._t(item + 'Image')
          });
        }
      } else {
        this.menu = false;
      }
    } else {
      if (this.editor.uploader != null) {
        this.menu = [
          {
            name: 'upload-image',
            text: this._t('uploadImage')
          }, {
            name: 'external-image',
            text: this._t('externalImage')
          }
        ];
      } else {
        this.menu = false;
      }
    }
    this.defaultImage = this.editor.opts.defaultImage;
    this.editor.body.on('click', 'img:not([data-non-image])', (function(_this) {
      return function(e) {
        var $img, range;
        $img = $(e.currentTarget);
        range = document.createRange();
        range.selectNode($img[0]);
        _this.editor.selection.selectRange(range);
        if (!_this.editor.util.support.onselectionchange) {
          _this.editor.trigger('selectionchanged');
        }
        return false;
      };
    })(this));
    this.editor.body.on('mouseup', 'img:not([data-non-image])', (function(_this) {
      return function(e) {
        return false;
      };
    })(this));
    this.editor.on('selectionchanged.image', (function(_this) {
      return function() {
        var $contents, $img, range;
        range = _this.editor.selection.getRange();
        if (range == null) {
          return;
        }
        $contents = $(range.cloneContents()).contents();
        if ($contents.length === 1 && $contents.is('img:not([data-non-image])')) {
          $img = $(range.startContainer).contents().eq(range.startOffset);
          return _this.popover.show($img);
        } else {
          return _this.popover.hide();
        }
      };
    })(this));
    this.editor.on('valuechanged.image', (function(_this) {
      return function() {
        var $masks;
        $masks = _this.editor.wrapper.find('.simditor-image-loading');
        if (!($masks.length > 0)) {
          return;
        }
        return $masks.each(function(i, mask) {
          var $img, $mask, file;
          $mask = $(mask);
          $img = $mask.data('img');
          if (!($img && $img.parent().length > 0)) {
            $mask.remove();
            if ($img) {
              file = $img.data('file');
              if (file) {
                _this.editor.uploader.cancel(file);
                if (_this.editor.body.find('img.uploading').length < 1) {
                  return _this.editor.uploader.trigger('uploadready', [file]);
                }
              }
            }
          }
        });
      };
    })(this));
    return ImageButton.__super__._init.call(this);
  };

  ImageButton.prototype.render = function() {
    var args;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    ImageButton.__super__.render.apply(this, args);
    this.popover = new ImagePopover({
      button: this
    });
    if (this.editor.opts.imageButton === 'upload') {
      return this._initUploader(this.el);
    }
  };

  ImageButton.prototype.renderMenu = function() {
    ImageButton.__super__.renderMenu.call(this);
    return this._initUploader();
  };

  ImageButton.prototype._initUploader = function($uploadItem) {
    var $input, createInput;
    if ($uploadItem == null) {
      $uploadItem = this.menuEl.find('.menu-item-upload-image');
    }
    if (this.editor.uploader == null) {
      this.el.find('.btn-upload').remove();
      return;
    }
    $input = null;
    createInput = (function(_this) {
      return function() {
        if ($input) {
          $input.remove();
        }
        return $input = $('<input type="file" title="' + _this._t('uploadImage') + '" accept="image/*">').appendTo($uploadItem);
      };
    })(this);
    createInput();
    $uploadItem.on('click mousedown', 'input[type=file]', (function(_this) {
      return function(e) {
        return e.stopPropagation();
      };
    })(this));
    $uploadItem.on('change', 'input[type=file]', (function(_this) {
      return function(e) {
        if (_this.editor.inputManager.focused) {
          _this.editor.uploader.upload($input, {
            inline: true
          });
          createInput();
        } else {
          _this.editor.one('focus', function(e) {
            _this.editor.uploader.upload($input, {
              inline: true
            });
            return createInput();
          });
          _this.editor.focus();
        }
        return _this.wrapper.removeClass('menu-on');
      };
    })(this));
    this.editor.uploader.on('beforeupload', (function(_this) {
      return function(e, file) {
        var $img;
        if (!file.inline) {
          return;
        }
        if (file.img) {
          $img = $(file.img);
        } else {
          $img = _this.createImage(file.name);
          file.img = $img;
        }
        $img.addClass('uploading');
        $img.data('file', file);
        return _this.editor.uploader.readImageFile(file.obj, function(img) {
          var src;
          if (!$img.hasClass('uploading')) {
            return;
          }
          src = img ? img.src : _this.defaultImage;
          return _this.loadImage($img, src, function() {
            if (_this.popover.active) {
              _this.popover.refresh();
              return _this.popover.srcEl.val(_this._t('uploading')).prop('disabled', true);
            }
          });
        });
      };
    })(this));
    this.editor.uploader.on('uploadprogress', $.proxy(this.editor.util.throttle(function(e, file, loaded, total) {
      var $img, $mask, percent;
      if (!file.inline) {
        return;
      }
      $mask = file.img.data('mask');
      if (!$mask) {
        return;
      }
      $img = $mask.data('img');
      if (!($img.hasClass('uploading') && $img.parent().length > 0)) {
        $mask.remove();
        return;
      }
      percent = loaded / total;
      percent = (percent * 100).toFixed(0);
      if (percent > 99) {
        percent = 99;
      }
      return $mask.find('.progress').height((100 - percent) + "%");
    }, 500), this));
    this.editor.uploader.on('uploadsuccess', (function(_this) {
      return function(e, file, result) {
        var $img, $mask, msg;
        if (!file.inline) {
          return;
        }
        $img = file.img;
        if (!($img.hasClass('uploading') && $img.parent().length > 0)) {
          return;
        }
        $img.removeData('file');
        $img.removeClass('uploading').removeClass('loading');
        $mask = $img.data('mask');
        if ($mask) {
          $mask.remove();
        }
        $img.removeData('mask');
        if (typeof result !== 'object') {
          try {
            result = $.parseJSON(result);
          } catch (_error) {
            e = _error;
            result = {
              success: false
            };
          }
        }
        if (result.success === false) {
          msg = result.msg || _this._t('uploadFailed');
          alert(msg);
          $img.attr('src', _this.defaultImage);
        } else {
          $img.attr('src', result.file_path);
        }
        if (_this.popover.active) {
          _this.popover.srcEl.prop('disabled', false);
          _this.popover.srcEl.val(result.file_path);
        }
        _this.editor.trigger('valuechanged');
        if (_this.editor.body.find('img.uploading').length < 1) {
          return _this.editor.uploader.trigger('uploadready', [file, result]);
        }
      };
    })(this));
    return this.editor.uploader.on('uploaderror', (function(_this) {
      return function(e, file, xhr) {
        var $img, $mask, msg, result;
        if (!file.inline) {
          return;
        }
        if (xhr.statusText === 'abort') {
          return;
        }
        if (xhr.responseText) {
          try {
            result = $.parseJSON(xhr.responseText);
            msg = result.msg;
          } catch (_error) {
            e = _error;
            msg = _this._t('uploadError');
          }
          alert(msg);
        }
        $img = file.img;
        if (!($img.hasClass('uploading') && $img.parent().length > 0)) {
          return;
        }
        $img.removeData('file');
        $img.removeClass('uploading').removeClass('loading');
        $mask = $img.data('mask');
        if ($mask) {
          $mask.remove();
        }
        $img.removeData('mask');
        $img.attr('src', _this.defaultImage);
        if (_this.popover.active) {
          _this.popover.srcEl.prop('disabled', false);
          _this.popover.srcEl.val(_this.defaultImage);
        }
        _this.editor.trigger('valuechanged');
        if (_this.editor.body.find('img.uploading').length < 1) {
          return _this.editor.uploader.trigger('uploadready', [file, result]);
        }
      };
    })(this));
  };

  ImageButton.prototype.status = function($node) {
    if ($node != null) {
      this.setDisabled($node.is(this.disableTag));
    }
    if (this.disabled) {
      return true;
    }
  };

  ImageButton.prototype.loadImage = function($img, src, callback) {
    var $mask, img, positionMask;
    positionMask = (function(_this) {
      return function() {
        var imgOffset, wrapperOffset;
        imgOffset = $img.offset();
        wrapperOffset = _this.editor.wrapper.offset();
        return $mask.css({
          top: imgOffset.top - wrapperOffset.top,
          left: imgOffset.left - wrapperOffset.left,
          width: $img.width(),
          height: $img.height()
        }).show();
      };
    })(this);
    $img.addClass('loading');
    $mask = $img.data('mask');
    if (!$mask) {
      $mask = $('<div class="simditor-image-loading"><div class="progress"></div></div>').hide().appendTo(this.editor.wrapper);
      positionMask();
      $img.data('mask', $mask);
      $mask.data('img', $img);
    }
    img = new Image();
    img.onload = (function(_this) {
      return function() {
        var height, width;
        if (!$img.hasClass('loading') && !$img.hasClass('uploading')) {
          return;
        }
        width = img.width;
        height = img.height;
        $img.attr({
          src: src,
          'data-image-size': width + ',' + height
        }).removeClass('loading');
        if ($img.hasClass('uploading')) {
          _this.editor.util.reflow(_this.editor.body);
          positionMask();
        } else {
          $mask.remove();
          $img.removeData('mask');
        }
        return callback(img);
      };
    })(this);
    img.onerror = (function(_this) {
      return function() {
        callback(false);
        $mask.remove();
        return $img.removeData('mask').removeClass('loading');
      };
    })(this);
    return img.src = src;
  };

  ImageButton.prototype.createImage = function(name) {
    var $block, $img, $nextBlock, range;
    if (name == null) {
      name = 'Image';
    }
    if (!this.editor.inputManager.focused) {
      this.editor.focus();
    }
    range = this.editor.selection.getRange();
    range.deleteContents();
    $block = this.editor.util.closestBlockEl();
    if ($block.is('p') && !this.editor.util.isEmptyNode($block)) {
      $block = $('<p/>').append(this.editor.util.phBr).insertAfter($block);
      this.editor.selection.setRangeAtStartOf($block, range);
    }
    $img = $('<img/>').attr('alt', name);
    range.insertNode($img[0]);
    $nextBlock = $block.next('p');
    if (!($nextBlock.length > 0)) {
      $nextBlock = $('<p/>').append(this.editor.util.phBr).insertAfter($block);
    }
    this.editor.selection.setRangeAtStartOf($nextBlock);
    return $img;
  };

  ImageButton.prototype.command = function(src) {
    var $img;
    $img = this.createImage();
    return this.loadImage($img, src || this.defaultImage, (function(_this) {
      return function() {
        _this.editor.trigger('valuechanged');
        _this.editor.util.reflow($img);
        $img.click();
        return _this.popover.one('popovershow', function() {
          _this.popover.srcEl.focus();
          return _this.popover.srcEl[0].select();
        });
      };
    })(this));
  };

  return ImageButton;

})(Button);

ImagePopover = (function(superClass) {
  extend(ImagePopover, superClass);

  function ImagePopover() {
    return ImagePopover.__super__.constructor.apply(this, arguments);
  }

  ImagePopover.prototype.offset = {
    top: 6,
    left: -4
  };

  ImagePopover.prototype.render = function() {
    var tpl;
    tpl = "<div class=\"link-settings\">\n  <div class=\"settings-field\">\n    <label>" + (this._t('imageUrl')) + "</label>\n    <input class=\"image-src\" type=\"text\" tabindex=\"1\" />\n    <a class=\"btn-upload\" href=\"javascript:;\" title=\"" + (this._t('uploadImage')) + "\" tabindex=\"-1\">\n      <span class=\"simditor-icon simditor-icon-upload\"></span>\n    </a>\n  </div>\n  <div class='settings-field'>\n    <label>" + (this._t('imageAlt')) + "</label>\n    <input class=\"image-alt\" id=\"image-alt\" type=\"text\" tabindex=\"1\" />\n  </div>\n  <div class=\"settings-field\">\n    <label>" + (this._t('imageSize')) + "</label>\n    <input class=\"image-size\" id=\"image-width\" type=\"text\" tabindex=\"2\" />\n    <span class=\"times\">×</span>\n    <input class=\"image-size\" id=\"image-height\" type=\"text\" tabindex=\"3\" />\n    <a class=\"btn-restore\" href=\"javascript:;\" title=\"" + (this._t('restoreImageSize')) + "\" tabindex=\"-1\">\n      <span class=\"simditor-icon simditor-icon-undo\"></span>\n    </a>\n  </div>\n</div>";
    this.el.addClass('image-popover').append(tpl);
    this.srcEl = this.el.find('.image-src');
    this.widthEl = this.el.find('#image-width');
    this.heightEl = this.el.find('#image-height');
    this.altEl = this.el.find('#image-alt');
    this.srcEl.on('keydown', (function(_this) {
      return function(e) {
        if (!(e.which === 13 && !_this.target.hasClass('uploading'))) {
          return;
        }
        e.preventDefault();
        _this.button.editor.body.focus();
        _this.button.editor.selection.setRangeAfter(_this.target);
        return _this.hide();
      };
    })(this));
    this.srcEl.on('blur', (function(_this) {
      return function(e) {
        return _this._loadImage(_this.srcEl.val());
      };
    })(this));
    this.el.find('.image-size').on('blur', (function(_this) {
      return function(e) {
        _this._resizeImg($(e.currentTarget));
        return _this.el.data('popover').refresh();
      };
    })(this));
    this.el.find('.image-size').on('keyup', (function(_this) {
      return function(e) {
        var inputEl;
        inputEl = $(e.currentTarget);
        if (!(e.which === 13 || e.which === 27 || e.which === 9)) {
          return _this._resizeImg(inputEl, true);
        }
      };
    })(this));
    this.el.find('.image-size').on('keydown', (function(_this) {
      return function(e) {
        var inputEl;
        inputEl = $(e.currentTarget);
        if (e.which === 13 || e.which === 27) {
          e.preventDefault();
          if (e.which === 13) {
            _this._resizeImg(inputEl);
          } else {
            _this._restoreImg();
          }
          _this.button.editor.body.focus();
          _this.button.editor.selection.setRangeAfter(_this.target);
          return _this.hide();
        } else if (e.which === 9) {
          return _this.el.data('popover').refresh();
        }
      };
    })(this));
    this.altEl.on('keydown', (function(_this) {
      return function(e) {
        if (e.which === 13) {
          e.preventDefault();
          _this.button.editor.body.focus();
          _this.button.editor.selection.setRangeAfter(_this.target);
          return _this.hide();
        }
      };
    })(this));
    this.altEl.on('keyup', (function(_this) {
      return function(e) {
        if (e.which === 13 || e.which === 27 || e.which === 9) {
          return;
        }
        _this.alt = _this.altEl.val();
        return _this.target.attr('alt', _this.alt);
      };
    })(this));
    this.el.find('.btn-restore').on('click', (function(_this) {
      return function(e) {
        _this._restoreImg();
        return _this.el.data('popover').refresh();
      };
    })(this));
    this.editor.on('valuechanged', (function(_this) {
      return function(e) {
        if (_this.active) {
          return _this.refresh();
        }
      };
    })(this));
    return this._initUploader();
  };

  ImagePopover.prototype._initUploader = function() {
    var $uploadBtn, createInput;
    $uploadBtn = this.el.find('.btn-upload');
    if (this.editor.uploader == null) {
      $uploadBtn.remove();
      return;
    }
    createInput = (function(_this) {
      return function() {
        if (_this.input) {
          _this.input.remove();
        }
        return _this.input = $('<input type="file" title="' + _this._t('uploadImage') + '" accept="image/*">').appendTo($uploadBtn);
      };
    })(this);
    createInput();
    this.el.on('click mousedown', 'input[type=file]', (function(_this) {
      return function(e) {
        return e.stopPropagation();
      };
    })(this));
    return this.el.on('change', 'input[type=file]', (function(_this) {
      return function(e) {
        _this.editor.uploader.upload(_this.input, {
          inline: true,
          img: _this.target
        });
        return createInput();
      };
    })(this));
  };

  ImagePopover.prototype._resizeImg = function(inputEl, onlySetVal) {
    var height, value, width;
    if (onlySetVal == null) {
      onlySetVal = false;
    }
    value = inputEl.val() * 1;
    if (!($.isNumeric(value) || value < 0)) {
      return;
    }
    if (inputEl.is(this.widthEl)) {
      height = this.height * value / this.width;
      this.heightEl.val(height);
    } else {
      width = this.width * value / this.height;
      this.widthEl.val(width);
    }
    if (!onlySetVal) {
      this.target.attr({
        width: width || value,
        height: height || value
      });
    }
    return this.editor.trigger('valuechanged');
  };

  ImagePopover.prototype._restoreImg = function() {
    var ref, size;
    size = ((ref = this.target.data('image-size')) != null ? ref.split(",") : void 0) || [this.width, this.height];
    this.target.attr({
      width: size[0] * 1,
      height: size[1] * 1
    });
    this.widthEl.val(size[0]);
    this.heightEl.val(size[1]);
    return this.editor.trigger('valuechanged');
  };

  ImagePopover.prototype._loadImage = function(src, callback) {
    if (/^data:image/.test(src) && !this.editor.uploader) {
      if (callback) {
        callback(false);
      }
      return;
    }
    return this.button.loadImage(this.target, src, (function(_this) {
      return function(img) {
        var blob;
        if (!img) {
          return;
        }
        if (_this.active) {
          _this.width = img.width;
          _this.height = img.height;
          _this.widthEl.val(_this.width);
          _this.heightEl.val(_this.height);
          _this.target.removeAttr('width').removeAttr('height');
        }
        if (/^data:image/.test(src)) {
          blob = _this.editor.util.dataURLtoBlob(src);
          blob.name = "Base64 Image.png";
          _this.editor.uploader.upload(blob, {
            inline: true,
            img: _this.target
          });
        } else {
          _this.editor.trigger('valuechanged');
        }
        if (callback) {
          return callback(img);
        }
      };
    })(this));
  };

  ImagePopover.prototype.show = function() {
    var $img, args;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    ImagePopover.__super__.show.apply(this, args);
    $img = this.target;
    this.width = $img.width();
    this.height = $img.height();
    this.alt = $img.attr('alt');
    if ($img.hasClass('uploading')) {
      return this.srcEl.val(this._t('uploading')).prop('disabled', true);
    } else {
      this.srcEl.val($img.attr('src')).prop('disabled', false);
      this.widthEl.val(this.width);
      this.heightEl.val(this.height);
      return this.altEl.val(this.alt);
    }
  };

  return ImagePopover;

})(Popover);

Simditor.Toolbar.addButton(ImageButton);

IndentButton = (function(superClass) {
  extend(IndentButton, superClass);

  function IndentButton() {
    return IndentButton.__super__.constructor.apply(this, arguments);
  }

  IndentButton.prototype.name = 'indent';

  IndentButton.prototype.icon = 'indent';

  IndentButton.prototype._init = function() {
    this.title = this._t(this.name) + ' (Tab)';
    return IndentButton.__super__._init.call(this);
  };

  IndentButton.prototype.status = function($node) {
    return true;
  };

  IndentButton.prototype.command = function() {
    return this.editor.indentation.indent();
  };

  return IndentButton;

})(Button);

Simditor.Toolbar.addButton(IndentButton);

OutdentButton = (function(superClass) {
  extend(OutdentButton, superClass);

  function OutdentButton() {
    return OutdentButton.__super__.constructor.apply(this, arguments);
  }

  OutdentButton.prototype.name = 'outdent';

  OutdentButton.prototype.icon = 'outdent';

  OutdentButton.prototype._init = function() {
    this.title = this._t(this.name) + ' (Shift + Tab)';
    return OutdentButton.__super__._init.call(this);
  };

  OutdentButton.prototype.status = function($node) {
    return true;
  };

  OutdentButton.prototype.command = function() {
    return this.editor.indentation.indent(true);
  };

  return OutdentButton;

})(Button);

Simditor.Toolbar.addButton(OutdentButton);

HrButton = (function(superClass) {
  extend(HrButton, superClass);

  function HrButton() {
    return HrButton.__super__.constructor.apply(this, arguments);
  }

  HrButton.prototype.name = 'hr';

  HrButton.prototype.icon = 'minus';

  HrButton.prototype.htmlTag = 'hr';

  HrButton.prototype.status = function($node) {
    return true;
  };

  HrButton.prototype.command = function() {
    var $hr, $newBlock, $nextBlock, $rootBlock;
    $rootBlock = this.editor.util.furthestBlockEl();
    $nextBlock = $rootBlock.next();
    if ($nextBlock.length > 0) {
      this.editor.selection.save();
    } else {
      $newBlock = $('<p/>').append(this.editor.util.phBr);
    }
    $hr = $('<hr/>').insertAfter($rootBlock);
    if ($newBlock) {
      $newBlock.insertAfter($hr);
      this.editor.selection.setRangeAtStartOf($newBlock);
    } else {
      this.editor.selection.restore();
    }
    return this.editor.trigger('valuechanged');
  };

  return HrButton;

})(Button);

Simditor.Toolbar.addButton(HrButton);

TableButton = (function(superClass) {
  extend(TableButton, superClass);

  function TableButton() {
    return TableButton.__super__.constructor.apply(this, arguments);
  }

  TableButton.prototype.name = 'table';

  TableButton.prototype.icon = 'table';

  TableButton.prototype.htmlTag = 'table';

  TableButton.prototype.disableTag = 'pre, li, blockquote';

  TableButton.prototype.menu = true;

  TableButton.prototype._init = function() {
    TableButton.__super__._init.call(this);
    $.merge(this.editor.formatter._allowedTags, ['tbody', 'tr', 'td', 'colgroup', 'col']);
    $.extend(this.editor.formatter._allowedAttributes, {
      td: ['rowspan', 'colspan'],
      col: ['width']
    });
    this._initShortcuts();
    this.editor.on('decorate', (function(_this) {
      return function(e, $el) {
        return $el.find('table').each(function(i, table) {
          return _this.decorate($(table));
        });
      };
    })(this));
    this.editor.on('undecorate', (function(_this) {
      return function(e, $el) {
        return $el.find('table').each(function(i, table) {
          return _this.undecorate($(table));
        });
      };
    })(this));
    this.editor.on('selectionchanged.table', (function(_this) {
      return function(e) {
        var $container, range;
        _this.editor.body.find('.simditor-table td').removeClass('active');
        range = _this.editor.selection.getRange();
        if (range == null) {
          return;
        }
        $container = $(range.commonAncestorContainer);
        if (range.collapsed && $container.is('.simditor-table')) {
          if (_this.editor.selection.rangeAtStartOf($container)) {
            $container = $container.find('td:first');
          } else {
            $container = $container.find('td:last');
          }
          _this.editor.selection.setRangeAtEndOf($container);
        }
        return $container.closest('td', _this.editor.body).addClass('active');
      };
    })(this));
    this.editor.on('blur.table', (function(_this) {
      return function(e) {
        return _this.editor.body.find('.simditor-table td').removeClass('active');
      };
    })(this));
    this.editor.inputManager.addKeystrokeHandler('38', 'td', (function(_this) {
      return function(e, $node) {
        var $prevTr, $tr, index;
        $tr = $node.parent('tr');
        $prevTr = $tr.prev('tr');
        if (!($prevTr.length > 0)) {
          return true;
        }
        index = $tr.find('td').index($node);
        _this.editor.selection.setRangeAtEndOf($prevTr.find('td').eq(index));
        return true;
      };
    })(this));
    return this.editor.inputManager.addKeystrokeHandler('40', 'td', (function(_this) {
      return function(e, $node) {
        var $nextTr, $tr, index;
        $tr = $node.parent('tr');
        $nextTr = $tr.next('tr');
        if (!($nextTr.length > 0)) {
          return true;
        }
        index = $tr.find('td').index($node);
        _this.editor.selection.setRangeAtEndOf($nextTr.find('td').eq(index));
        return true;
      };
    })(this));
  };

  TableButton.prototype.initResize = function($table) {
    var $colgroup, $resizeHandle, $wrapper;
    $wrapper = $table.parent('.simditor-table');
    $colgroup = $table.find('colgroup');
    if ($colgroup.length < 1) {
      $colgroup = $('<colgroup/>').prependTo($table);
      $table.find('tr:first td').each((function(_this) {
        return function(i, td) {
          var $col;
          return $col = $('<col/>').appendTo($colgroup);
        };
      })(this));
      this.refreshTableWidth($table);
    }
    $resizeHandle = $('<div class="simditor-resize-handle" contenteditable="false"></div>').appendTo($wrapper);
    $wrapper.on('mousemove', 'td', (function(_this) {
      return function(e) {
        var $col, $td, index, ref, ref1, x;
        if ($wrapper.hasClass('resizing')) {
          return;
        }
        $td = $(e.currentTarget);
        x = e.pageX - $(e.currentTarget).offset().left;
        if (x < 5 && $td.prev().length > 0) {
          $td = $td.prev();
        }
        if ($td.next('td').length < 1) {
          $resizeHandle.hide();
          return;
        }
        if ((ref = $resizeHandle.data('td')) != null ? ref.is($td) : void 0) {
          $resizeHandle.show();
          return;
        }
        index = $td.parent().find('td').index($td);
        $col = $colgroup.find('col').eq(index);
        if ((ref1 = $resizeHandle.data('col')) != null ? ref1.is($col) : void 0) {
          $resizeHandle.show();
          return;
        }
        return $resizeHandle.css('left', $td.position().left + $td.outerWidth() - 5).data('td', $td).data('col', $col).show();
      };
    })(this));
    $wrapper.on('mouseleave', (function(_this) {
      return function(e) {
        return $resizeHandle.hide();
      };
    })(this));
    return $wrapper.on('mousedown', '.simditor-resize-handle', (function(_this) {
      return function(e) {
        var $handle, $leftCol, $leftTd, $rightCol, $rightTd, minWidth, startHandleLeft, startLeftWidth, startRightWidth, startX, tableWidth;
        $handle = $(e.currentTarget);
        $leftTd = $handle.data('td');
        $leftCol = $handle.data('col');
        $rightTd = $leftTd.next('td');
        $rightCol = $leftCol.next('col');
        startX = e.pageX;
        startLeftWidth = $leftTd.outerWidth() * 1;
        startRightWidth = $rightTd.outerWidth() * 1;
        startHandleLeft = parseFloat($handle.css('left'));
        tableWidth = $leftTd.closest('table').width();
        minWidth = 50;
        $(document).on('mousemove.simditor-resize-table', function(e) {
          var deltaX, leftWidth, rightWidth;
          deltaX = e.pageX - startX;
          leftWidth = startLeftWidth + deltaX;
          rightWidth = startRightWidth - deltaX;
          if (leftWidth < minWidth) {
            leftWidth = minWidth;
            deltaX = minWidth - startLeftWidth;
            rightWidth = startRightWidth - deltaX;
          } else if (rightWidth < minWidth) {
            rightWidth = minWidth;
            deltaX = startRightWidth - minWidth;
            leftWidth = startLeftWidth + deltaX;
          }
          $leftCol.attr('width', (leftWidth / tableWidth * 100) + '%');
          $rightCol.attr('width', (rightWidth / tableWidth * 100) + '%');
          return $handle.css('left', startHandleLeft + deltaX);
        });
        $(document).one('mouseup.simditor-resize-table', function(e) {
          $(document).off('.simditor-resize-table');
          return $wrapper.removeClass('resizing');
        });
        $wrapper.addClass('resizing');
        return false;
      };
    })(this));
  };

  TableButton.prototype._initShortcuts = function() {
    this.editor.inputManager.addShortcut('ctrl+alt+up', (function(_this) {
      return function(e) {
        _this.editMenu.find('.menu-item[data-param=insertRowAbove]').click();
        return false;
      };
    })(this));
    this.editor.inputManager.addShortcut('ctrl+alt+down', (function(_this) {
      return function(e) {
        _this.editMenu.find('.menu-item[data-param=insertRowBelow]').click();
        return false;
      };
    })(this));
    this.editor.inputManager.addShortcut('ctrl+alt+left', (function(_this) {
      return function(e) {
        _this.editMenu.find('.menu-item[data-param=insertColLeft]').click();
        return false;
      };
    })(this));
    return this.editor.inputManager.addShortcut('ctrl+alt+right', (function(_this) {
      return function(e) {
        _this.editMenu.find('.menu-item[data-param=insertColRight]').click();
        return false;
      };
    })(this));
  };

  TableButton.prototype.decorate = function($table) {
    if ($table.parent('.simditor-table').length > 0) {
      this.undecorate($table);
    }
    $table.wrap('<div class="simditor-table"></div>');
    this.initResize($table);
    return $table.parent();
  };

  TableButton.prototype.undecorate = function($table) {
    if (!($table.parent('.simditor-table').length > 0)) {
      return;
    }
    return $table.parent().replaceWith($table);
  };

  TableButton.prototype.renderMenu = function() {
    $("<div class=\"menu-create-table\">\n</div>\n<div class=\"menu-edit-table\">\n  <ul>\n    <li><a tabindex=\"-1\" unselectable=\"on\" class=\"menu-item\" href=\"javascript:;\" data-param=\"deleteRow\"><span>" + (this._t('deleteRow')) + "</span></a></li>\n    <li><a tabindex=\"-1\" unselectable=\"on\" class=\"menu-item\" href=\"javascript:;\" data-param=\"insertRowAbove\"><span>" + (this._t('insertRowAbove')) + " ( Ctrl + Alt + ↑ )</span></a></li>\n    <li><a tabindex=\"-1\" unselectable=\"on\" class=\"menu-item\" href=\"javascript:;\" data-param=\"insertRowBelow\"><span>" + (this._t('insertRowBelow')) + " ( Ctrl + Alt + ↓ )</span></a></li>\n    <li><span class=\"separator\"></span></li>\n    <li><a tabindex=\"-1\" unselectable=\"on\" class=\"menu-item\" href=\"javascript:;\" data-param=\"deleteCol\"><span>" + (this._t('deleteColumn')) + "</span></a></li>\n    <li><a tabindex=\"-1\" unselectable=\"on\" class=\"menu-item\" href=\"javascript:;\" data-param=\"insertColLeft\"><span>" + (this._t('insertColumnLeft')) + " ( Ctrl + Alt + ← )</span></a></li>\n    <li><a tabindex=\"-1\" unselectable=\"on\" class=\"menu-item\" href=\"javascript:;\" data-param=\"insertColRight\"><span>" + (this._t('insertColumnRight')) + " ( Ctrl + Alt + → )</span></a></li>\n    <li><span class=\"separator\"></span></li>\n    <li><a tabindex=\"-1\" unselectable=\"on\" class=\"menu-item\" href=\"javascript:;\" data-param=\"deleteTable\"><span>" + (this._t('deleteTable')) + "</span></a></li>\n  </ul>\n</div>").appendTo(this.menuWrapper);
    this.createMenu = this.menuWrapper.find('.menu-create-table');
    this.editMenu = this.menuWrapper.find('.menu-edit-table');
    this.createTable(6, 6).appendTo(this.createMenu);
    this.createMenu.on('mouseenter', 'td', (function(_this) {
      return function(e) {
        var $td, $tr, num;
        _this.createMenu.find('td').removeClass('selected');
        $td = $(e.currentTarget);
        $tr = $td.parent();
        num = $tr.find('td').index($td) + 1;
        return $tr.prevAll('tr').addBack().find('td:lt(' + num + ')').addClass('selected');
      };
    })(this));
    this.createMenu.on('mouseleave', (function(_this) {
      return function(e) {
        return $(e.currentTarget).find('td').removeClass('selected');
      };
    })(this));
    return this.createMenu.on('mousedown', 'td', (function(_this) {
      return function(e) {
        var $closestBlock, $table, $td, $tr, colNum, rowNum;
        _this.wrapper.removeClass('menu-on');
        if (!_this.editor.inputManager.focused) {
          return;
        }
        $td = $(e.currentTarget);
        $tr = $td.parent();
        colNum = $tr.find('td').index($td) + 1;
        rowNum = $tr.prevAll('tr').length + 1;
        $table = _this.createTable(rowNum, colNum, true);
        $closestBlock = _this.editor.util.closestBlockEl();
        if (_this.editor.util.isEmptyNode($closestBlock)) {
          $closestBlock.replaceWith($table);
        } else {
          $closestBlock.after($table);
        }
        _this.decorate($table);
        _this.editor.selection.setRangeAtStartOf($table.find('td:first'));
        _this.editor.trigger('valuechanged');
        return false;
      };
    })(this));
  };

  TableButton.prototype.createTable = function(row, col, phBr) {
    var $table, $tbody, $td, $tr, c, j, k, r, ref, ref1;
    $table = $('<table/>');
    $tbody = $('<tbody/>').appendTo($table);
    for (r = j = 0, ref = row; 0 <= ref ? j < ref : j > ref; r = 0 <= ref ? ++j : --j) {
      $tr = $('<tr/>').appendTo($tbody);
      for (c = k = 0, ref1 = col; 0 <= ref1 ? k < ref1 : k > ref1; c = 0 <= ref1 ? ++k : --k) {
        $td = $('<td/>').appendTo($tr);
        if (phBr) {
          $td.append(this.editor.util.phBr);
        }
      }
    }
    return $table;
  };

  TableButton.prototype.refreshTableWidth = function($table) {
    var cols, tableWidth;
    tableWidth = $table.width();
    cols = $table.find('col');
    return $table.find('tr:first td').each((function(_this) {
      return function(i, td) {
        var $col;
        $col = cols.eq(i);
        return $col.attr('width', ($(td).outerWidth() / tableWidth * 100) + '%');
      };
    })(this));
  };

  TableButton.prototype.setActive = function(active) {
    TableButton.__super__.setActive.call(this, active);
    if (active) {
      this.createMenu.hide();
      return this.editMenu.show();
    } else {
      this.createMenu.show();
      return this.editMenu.hide();
    }
  };

  TableButton.prototype.deleteRow = function($td) {
    var $newTr, $tr, index;
    $tr = $td.parent('tr');
    if ($tr.siblings('tr').length < 1) {
      return this.deleteTable($td);
    } else {
      $newTr = $tr.next('tr');
      if (!($newTr.length > 0)) {
        $newTr = $tr.prev('tr');
      }
      index = $tr.find('td').index($td);
      $tr.remove();
      return this.editor.selection.setRangeAtEndOf($newTr.find('td').eq(index));
    }
  };

  TableButton.prototype.insertRow = function($td, direction) {
    var $newTr, $table, $tr, colNum, i, index, j, ref;
    if (direction == null) {
      direction = 'after';
    }
    $tr = $td.parent('tr');
    $table = $tr.closest('table');
    colNum = 0;
    $table.find('tr').each((function(_this) {
      return function(i, tr) {
        return colNum = Math.max(colNum, $(tr).find('td').length);
      };
    })(this));
    $newTr = $('<tr/>');
    for (i = j = 1, ref = colNum; 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {
      $('<td/>').append(this.editor.util.phBr).appendTo($newTr);
    }
    $tr[direction]($newTr);
    index = $tr.find('td').index($td);
    return this.editor.selection.setRangeAtStartOf($newTr.find('td').eq(index));
  };

  TableButton.prototype.deleteCol = function($td) {
    var $newTd, $table, $tr, index;
    $tr = $td.parent('tr');
    if ($tr.siblings('tr').length < 1 && $td.siblings('td').length < 1) {
      return this.deleteTable($td);
    } else {
      index = $tr.find('td').index($td);
      $newTd = $td.next('td');
      if (!($newTd.length > 0)) {
        $newTd = $tr.prev('td');
      }
      $table = $tr.closest('table');
      $table.find('col').eq(index).remove();
      $table.find('tr').each((function(_this) {
        return function(i, tr) {
          return $(tr).find('td').eq(index).remove();
        };
      })(this));
      this.refreshTableWidth($table);
      return this.editor.selection.setRangeAtEndOf($newTd);
    }
  };

  TableButton.prototype.insertCol = function($td, direction) {
    var $col, $newCol, $newTd, $table, $tr, index, tableWidth, width;
    if (direction == null) {
      direction = 'after';
    }
    $tr = $td.parent('tr');
    index = $tr.find('td').index($td);
    $table = $td.closest('table');
    $col = $table.find('col').eq(index);
    $table.find('tr').each((function(_this) {
      return function(i, tr) {
        var $newTd;
        $newTd = $('<td/>').append(_this.editor.util.phBr);
        return $(tr).find('td').eq(index)[direction]($newTd);
      };
    })(this));
    $newCol = $('<col/>');
    $col[direction]($newCol);
    tableWidth = $table.width();
    width = Math.max(parseFloat($col.attr('width')) / 2, 50 / tableWidth * 100);
    $col.attr('width', width + '%');
    $newCol.attr('width', width + '%');
    this.refreshTableWidth($table);
    $newTd = direction === 'after' ? $td.next('td') : $td.prev('td');
    return this.editor.selection.setRangeAtStartOf($newTd);
  };

  TableButton.prototype.deleteTable = function($td) {
    var $block, $table;
    $table = $td.closest('.simditor-table');
    $block = $table.next('p');
    $table.remove();
    if ($block.length > 0) {
      return this.editor.selection.setRangeAtStartOf($block);
    }
  };

  TableButton.prototype.command = function(param) {
    var $td, range;
    range = this.editor.selection.getRange();
    $td = $(range.commonAncestorContainer).closest('td');
    if (!($td.length > 0)) {
      return;
    }
    if (param === 'deleteRow') {
      this.deleteRow($td);
    } else if (param === 'insertRowAbove') {
      this.insertRow($td, 'before');
    } else if (param === 'insertRowBelow') {
      this.insertRow($td);
    } else if (param === 'deleteCol') {
      this.deleteCol($td);
    } else if (param === 'insertColLeft') {
      this.insertCol($td, 'before');
    } else if (param === 'insertColRight') {
      this.insertCol($td);
    } else if (param === 'deleteTable') {
      this.deleteTable($td);
    } else {
      return;
    }
    return this.editor.trigger('valuechanged');
  };

  return TableButton;

})(Button);

Simditor.Toolbar.addButton(TableButton);

StrikethroughButton = (function(superClass) {
  extend(StrikethroughButton, superClass);

  function StrikethroughButton() {
    return StrikethroughButton.__super__.constructor.apply(this, arguments);
  }

  StrikethroughButton.prototype.name = 'strikethrough';

  StrikethroughButton.prototype.icon = 'strikethrough';

  StrikethroughButton.prototype.htmlTag = 'strike';

  StrikethroughButton.prototype.disableTag = 'pre';

  StrikethroughButton.prototype.status = function($node) {
    var active;
    if ($node != null) {
      this.setDisabled($node.is(this.disableTag));
    }
    if (this.disabled) {
      return true;
    }
    active = document.queryCommandState('strikethrough') === true;
    this.setActive(active);
    return active;
  };

  StrikethroughButton.prototype.command = function() {
    document.execCommand('strikethrough');
    if (!this.editor.util.support.oninput) {
      this.editor.trigger('valuechanged');
    }
    return $(document).trigger('selectionchange');
  };

  return StrikethroughButton;

})(Button);

Simditor.Toolbar.addButton(StrikethroughButton);

AlignmentButton = (function(superClass) {
  extend(AlignmentButton, superClass);

  function AlignmentButton() {
    return AlignmentButton.__super__.constructor.apply(this, arguments);
  }

  AlignmentButton.prototype.name = "alignment";

  AlignmentButton.prototype.icon = 'align-left';

  AlignmentButton.prototype.htmlTag = 'p, h1, h2, h3, h4';

  AlignmentButton.prototype._init = function() {
    this.menu = [
      {
        name: 'left',
        text: this._t('alignLeft'),
        icon: 'align-left',
        param: 'left'
      }, {
        name: 'center',
        text: this._t('alignCenter'),
        icon: 'align-center',
        param: 'center'
      }, {
        name: 'right',
        text: this._t('alignRight'),
        icon: 'align-right',
        param: 'right'
      }
    ];
    return AlignmentButton.__super__._init.call(this);
  };

  AlignmentButton.prototype.setActive = function(active, align) {
    if (align == null) {
      align = 'left';
    }
    if (align === 'left') {
      AlignmentButton.__super__.setActive.call(this, false);
    } else {
      AlignmentButton.__super__.setActive.call(this, active);
    }
    this.el.removeClass('align-left align-center align-right');
    if (active) {
      this.el.addClass('align-' + align);
    }
    this.setIcon('align-' + align);
    return this.menuEl.find('.menu-item').show().end().find('.menu-item-' + align).hide();
  };

  AlignmentButton.prototype.status = function($node) {
    if ($node == null) {
      return true;
    }
    if (!this.editor.util.isBlockNode($node)) {
      return;
    }
    this.setDisabled(!$node.is(this.htmlTag));
    if (this.disabled) {
      this.setActive(false);
      return true;
    }
    this.setActive(true, $node.data("align"));
    return this.active;
  };

  AlignmentButton.prototype.command = function(align) {
    var $blockEls, $endBlock, $startBlock, block, endNode, j, len, range, ref, startNode;
    if (['left', 'center', 'right'].indexOf(align) < 0) {
      throw "invalid " + align;
    }
    range = this.editor.selection.getRange();
    startNode = range.startContainer;
    endNode = range.endContainer;
    $startBlock = this.editor.util.closestBlockEl(startNode);
    $endBlock = this.editor.util.closestBlockEl(endNode);
    this.editor.selection.save();
    $blockEls = $startBlock.is($endBlock) ? $startBlock : $startBlock.nextUntil($endBlock).addBack().add($endBlock);
    ref = $blockEls.filter(this.htmlTag);
    for (j = 0, len = ref.length; j < len; j++) {
      block = ref[j];
      $(block).attr('data-align', align).data('align', align);
    }
    this.editor.selection.restore();
    return this.editor.trigger('valuechanged');
  };

  return AlignmentButton;

})(Button);

Simditor.Toolbar.addButton(AlignmentButton);

return Simditor;

}));
/*!
* Simditor v2.1.11
* http://simditor.tower.im/
* 2015-20-05
*/

!function(a,b){"function"==typeof define&&define.amd?define("simditor",["jquery","simple-module","simple-hotkeys","simple-uploader"],function(c,d,e,f){return a.Simditor=b(c,d,e,f)}):"object"==typeof exports?module.exports=b(require("jquery"),require("simple-module"),require("simple-hotkeys"),require("simple-uploader")):a.Simditor=b(jQuery,SimpleModule,simple.hotkeys,simple.uploader)}(this,function(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K=function(a,b){function c(){this.constructor=a}for(var d in b)L.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},L={}.hasOwnProperty,M=[].indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(b in this&&this[b]===a)return b;return-1},N=[].slice;return A=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.pluginName="Selection",c.prototype._init=function(){return this.editor=this._module,this.sel=document.getSelection()},c.prototype.clear=function(){var a;try{return this.sel.removeAllRanges()}catch(b){a=b}},c.prototype.getRange=function(){return this.editor.inputManager.focused&&this.sel.rangeCount?this.sel.getRangeAt(0):null},c.prototype.selectRange=function(a){return this.clear(),this.sel.addRange(a),this.editor.inputManager.focused||!this.editor.util.browser.firefox&&!this.editor.util.browser.msie||this.editor.body.focus(),a},c.prototype.rangeAtEndOf=function(b,c){var d,e,f;return null==c&&(c=this.getRange()),null!=c&&c.collapsed?(b=a(b)[0],d=c.endContainer,e=this.editor.util.getNodeLength(d),c.endOffset===e-1&&a(d).contents().last().is("br")||c.endOffset===e?b===d?!0:a.contains(b,d)?(f=!0,a(d).parentsUntil(b).addBack().each(function(b){return function(b,c){var d,e;return e=a(c).parent().contents().filter(function(){return!(this!==c&&3===this.nodeType&&!this.nodeValue)}),d=e.last(),d.get(0)===c||d.is("br")&&d.prev().get(0)===c?void 0:(f=!1,!1)}}(this)),f):!1:!1):void 0},c.prototype.rangeAtStartOf=function(b,c){var d,e;return null==c&&(c=this.getRange()),null!=c&&c.collapsed?(b=a(b)[0],e=c.startContainer,0!==c.startOffset?!1:b===e?!0:a.contains(b,e)?(d=!0,a(e).parentsUntil(b).addBack().each(function(b){return function(b,c){var e;return e=a(c).parent().contents().filter(function(){return!(this!==c&&3===this.nodeType&&!this.nodeValue)}),e.first().get(0)!==c?d=!1:void 0}}(this)),d):!1):void 0},c.prototype.insertNode=function(b,c){return null==c&&(c=this.getRange()),null!=c?(b=a(b)[0],c.insertNode(b),this.setRangeAfter(b,c)):void 0},c.prototype.setRangeAfter=function(b,c){return null==c&&(c=this.getRange()),null!=c?(b=a(b)[0],c.setEndAfter(b),c.collapse(!1),this.selectRange(c)):void 0},c.prototype.setRangeBefore=function(b,c){return null==c&&(c=this.getRange()),null!=c?(b=a(b)[0],c.setEndBefore(b),c.collapse(!1),this.selectRange(c)):void 0},c.prototype.setRangeAtStartOf=function(b,c){return null==c&&(c=this.getRange()),b=a(b).get(0),c.setEnd(b,0),c.collapse(!1),this.selectRange(c)},c.prototype.setRangeAtEndOf=function(b,c){var d,e,f,g,h,i;return null==c&&(c=this.getRange()),e=a(b),b=e.get(0),e.is("pre")?(f=e.contents(),f.length>0?(g=f.last(),h=g.text(),"\n"===h.charAt(h.length-1)?c.setEnd(g[0],this.editor.util.getNodeLength(g[0])-1):c.setEnd(g[0],this.editor.util.getNodeLength(g[0]))):c.setEnd(b,0)):(i=this.editor.util.getNodeLength(b),3!==b.nodeType&&i>0&&(d=a(b).contents().last(),d.is("br")?i-=1:3!==d[0].nodeType&&this.editor.util.isEmptyNode(d)&&(d.append(this.editor.util.phBr),b=d[0],i=0)),c.setEnd(b,i)),c.collapse(!1),this.selectRange(c)},c.prototype.deleteRangeContents=function(a){var b,c;return null==a&&(a=this.getRange()),c=a.cloneRange(),b=a.cloneRange(),c.collapse(!0),b.collapse(!1),!a.collapsed&&this.rangeAtStartOf(this.editor.body,c)&&this.rangeAtEndOf(this.editor.body,b)?(this.editor.body.empty(),a.setStart(this.editor.body[0],0),a.collapse(!0),this.selectRange(a)):a.deleteContents(),a},c.prototype.breakBlockEl=function(b,c){var d;return null==c&&(c=this.getRange()),d=a(b),c.collapsed?(c.setStartBefore(d.get(0)),c.collapsed?d:d.before(c.extractContents())):d},c.prototype.save=function(b){var c,d,e;return null==b&&(b=this.getRange()),this._selectionSaved?void 0:(d=b.cloneRange(),d.collapse(!1),e=a("<span/>").addClass("simditor-caret-start"),c=a("<span/>").addClass("simditor-caret-end"),d.insertNode(c[0]),b.insertNode(e[0]),this.clear(),this._selectionSaved=!0)},c.prototype.restore=function(){var a,b,c,d,e,f,g;return this._selectionSaved?(e=this.editor.body.find(".simditor-caret-start"),a=this.editor.body.find(".simditor-caret-end"),e.length&&a.length?(f=e.parent(),g=f.contents().index(e),b=a.parent(),c=b.contents().index(a),f[0]===b[0]&&(c-=1),d=document.createRange(),d.setStart(f.get(0),g),d.setEnd(b.get(0),c),e.remove(),a.remove(),this.selectRange(d)):(e.remove(),a.remove()),this._selectionSaved=!1,d):!1},c}(b),l=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.pluginName="Formatter",c.prototype.opts={allowedTags:null,allowedAttributes:null},c.prototype._init=function(){return this.editor=this._module,this._allowedTags=this.opts.allowedTags||["br","a","img","b","strong","i","u","font","p","ul","ol","li","blockquote","pre","h1","h2","h3","h4","hr"],this._allowedAttributes=this.opts.allowedAttributes||{img:["src","alt","width","height","data-image-src","data-image-size","data-image-name","data-non-image"],a:["href","target"],font:["color"],pre:["data-lang","class"],p:["data-indent","data-align"],h1:["data-indent"],h2:["data-indent"],h3:["data-indent"],h4:["data-indent"]},this.editor.body.on("click","a",function(a){return function(a){return!1}}(this))},c.prototype.decorate=function(a){return null==a&&(a=this.editor.body),this.editor.trigger("decorate",[a])},c.prototype.undecorate=function(b){return null==b&&(b=this.editor.body.clone()),this.editor.trigger("undecorate",[b]),a.trim(b.html())},c.prototype.autolink=function(b){var c,d,e,f,g,h,i,j,k,l,m;for(null==b&&(b=this.editor.body),h=[],d=function(c){return c.contents().each(function(c,e){var f,g;return f=a(e),f.is("a")||f.closest("a, pre",b).length?void 0:f.contents().length?d(f):(g=f.text())&&/https?:\/\/|www\./gi.test(g)?h.push(f):void 0})},d(b),j=/(https?:\/\/|www\.)[\w\-\.\?&=\/#%:,@\!\+]+/gi,e=0,g=h.length;g>e;e++){for(c=h[e],l=c.text(),k=[],i=null,f=0;null!==(i=j.exec(l));)k.push(document.createTextNode(l.substring(f,i.index))),f=j.lastIndex,m=/^(http(s)?:\/\/|\/)/.test(i[0])?i[0]:"http://"+i[0],k.push(a('<a href="'+m+'" rel="nofollow"></a>').text(i[0])[0]);k.push(document.createTextNode(l.substring(f))),c.replaceWith(a(k))}return b},c.prototype.format=function(b){var c,d,e,f,g,h,i,j,k,l;if(null==b&&(b=this.editor.body),b.is(":empty"))return b.append("<p>"+this.editor.util.phBr+"</p>"),b;for(k=b.contents(),e=0,g=k.length;g>e;e++)i=k[e],this.cleanNode(i,!0);for(l=b.contents(),f=0,h=l.length;h>f;f++)j=l[f],c=a(j),c.is("br")?("undefined"!=typeof d&&null!==d&&(d=null),c.remove()):this.editor.util.isBlockNode(j)?c.is("li")?d&&d.is("ul, ol")?d.append(j):(d=a("<ul/>").insertBefore(j),d.append(j)):d=null:((!d||d.is("ul, ol"))&&(d=a("<p/>").insertBefore(j)),d.append(j));return b},c.prototype.cleanNode=function(b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t;if(e=a(b),e.length>0){if(3===e[0].nodeType)return s=e.text().replace(/(\r\n|\n|\r)/gm,""),void(s?(t=document.createTextNode(s),e.replaceWith(t)):e.remove());if(j=e.contents(),k=e.is('[class^="simditor-"]'),e.is(this._allowedTags.join(","))||k){if(e.is("a")&&(d=e.find("img")).length>0&&(e.replaceWith(d),e=d,j=null),e.is("img")&&e.hasClass("uploading")&&e.remove(),!k)for(h=this._allowedAttributes[e[0].tagName.toLowerCase()],q=a.makeArray(e[0].attributes),l=0,n=q.length;n>l;l++)i=q[l],null!=h&&(r=i.name,M.call(h,r)>=0)||e.removeAttr(i.name)}else 1!==e[0].nodeType||e.is(":empty")?(e.remove(),j=null):e.is("div, article, dl, header, footer, tr")?(e.append("<br/>"),j.first().unwrap()):e.is("table")?(f=a("<p/>"),e.find("tr").each(function(b){return function(b,c){return f.append(a(c).text()+"<br/>")}}(this)),e.replaceWith(f),j=null):e.is("thead, tfoot")?(e.remove(),j=null):e.is("th")?(g=a("<td/>").append(e.contents()),e.replaceWith(g)):j.first().unwrap();if(c&&null!=j&&!e.is("pre"))for(m=0,o=j.length;o>m;m++)p=j[m],this.cleanNode(p,!0);return null}},c.prototype.clearHtml=function(b,c){var d,e,f;return null==c&&(c=!0),d=a("<div/>").append(b),e=d.contents(),f="",e.each(function(b){return function(d,g){var h,i;return 3===g.nodeType?f+=g.nodeValue:1===g.nodeType&&(h=a(g),i=h.contents(),i.length>0&&(f+=b.clearHtml(i)),c&&d<e.length-1&&h.is("br, p, div, li, tr, pre, address, artticle, aside, dl, figcaption, footer, h1, h2, h3, h4, header"))?f+="\n":void 0}}(this)),f},c.prototype.beautify=function(b){var c;return c=function(a){return!!(a.is("p")&&!a.text()&&a.children(":not(br)").length<1)},b.each(function(b){return function(b,d){var e;return e=a(d),e.is(':not(img, br, col, td, hr, [class^="simditor-"]):empty')&&e.remove(),c(e)&&e.remove(),e.find(':not(img, br, col, td, hr, [class^="simditor-"]):empty').remove()}}(this))},c}(b),r=function(b){function d(){return d.__super__.constructor.apply(this,arguments)}return K(d,b),d.pluginName="InputManager",d.prototype.opts={pasteImage:!1},d.prototype._modifierKeys=[16,17,18,91,93,224],d.prototype._arrowKeys=[37,38,39,40],d.prototype._init=function(){var b;return this.editor=this._module,this.throttledTrigger=this.editor.util.throttle(function(a){return function(){var b;return b=1<=arguments.length?N.call(arguments,0):[],setTimeout(function(){var c;return(c=a.editor).trigger.apply(c,b)},10)}}(this),300),this.opts.pasteImage&&"string"!=typeof this.opts.pasteImage&&(this.opts.pasteImage="inline"),this._keystrokeHandlers={},this.hotkeys=c({el:this.editor.body}),this._pasteArea=a("<div/>").css({width:"1px",height:"1px",overflow:"hidden",position:"fixed",right:"0",bottom:"100px"}).attr({tabIndex:"-1",contentEditable:!0}).addClass("simditor-paste-area").appendTo(this.editor.el),a(document).on("selectionchange.simditor"+this.editor.id,function(a){return function(b){return a.focused?(a._selectionTimer&&(clearTimeout(a._selectionTimer),a._selectionTimer=null),a._selectionTimer=setTimeout(function(){return a.editor.trigger("selectionchanged")},20)):void 0}}(this)),this.editor.on("valuechanged",function(b){return function(){return!b.editor.util.closestBlockEl()&&b.focused&&(b.editor.selection.save(),b.editor.formatter.format(),b.editor.selection.restore()),b.editor.body.find("hr, pre, .simditor-table").each(function(c,d){var e,f;return e=a(d),(e.parent().is("blockquote")||e.parent()[0]===b.editor.body[0])&&(f=!1,0===e.next().length&&(a("<p/>").append(b.editor.util.phBr).insertAfter(e),f=!0),0===e.prev().length&&(a("<p/>").append(b.editor.util.phBr).insertBefore(e),f=!0),f)?setTimeout(function(){return b.editor.trigger("valuechanged")},10):void 0}),b.editor.body.find("pre:empty").append(b.editor.util.phBr),!b.editor.util.support.onselectionchange&&b.focused?b.editor.trigger("selectionchanged"):void 0}}(this)),this.editor.on("selectionchanged",function(a){return function(b){return a.editor.undoManager.update()}}(this)),this.editor.body.on("keydown",a.proxy(this._onKeyDown,this)).on("keypress",a.proxy(this._onKeyPress,this)).on("keyup",a.proxy(this._onKeyUp,this)).on("mouseup",a.proxy(this._onMouseUp,this)).on("focus",a.proxy(this._onFocus,this)).on("blur",a.proxy(this._onBlur,this)).on("paste",a.proxy(this._onPaste,this)).on("drop",a.proxy(this._onDrop,this)).on("input",a.proxy(this._onInput,this)),this.editor.util.browser.firefox&&(this.addShortcut("cmd+left",function(a){return function(b){return b.preventDefault(),a.editor.selection.sel.modify("move","backward","lineboundary"),!1}}(this)),this.addShortcut("cmd+right",function(a){return function(b){return b.preventDefault(),a.editor.selection.sel.modify("move","forward","lineboundary"),!1}}(this)),this.addShortcut("cmd+a",function(a){return function(b){var c,d,e,f;return c=a.editor.body.children(),c.length>0?(d=c.first().get(0),e=c.last().get(0),f=document.createRange(),f.setStart(d,0),f.setEnd(e,a.editor.util.getNodeLength(e)),a.editor.selection.selectRange(f),!1):void 0}}(this))),b=this.editor.util.os.mac?"cmd+enter":"ctrl+enter",this.addShortcut(b,function(a){return function(b){return a.editor.el.closest("form").find("button:submit").click(),!1}}(this)),this.editor.textarea.attr("autofocus")?setTimeout(function(a){return function(){return a.editor.focus()}}(this),0):void 0},d.prototype._onFocus=function(a){return this.editor.el.addClass("focus").removeClass("error"),this.focused=!0,this.lastCaretPosition=null,setTimeout(function(a){return function(){return a.editor.triggerHandler("focus"),a.editor.trigger("selectionchanged")}}(this),0)},d.prototype._onBlur=function(a){var b;return this.editor.el.removeClass("focus"),this.editor.sync(),this.focused=!1,this.lastCaretPosition=null!=(b=this.editor.undoManager.currentState())?b.caret:void 0,this.editor.triggerHandler("blur")},d.prototype._onMouseUp=function(a){return this.editor.util.support.onselectionchange?void 0:setTimeout(function(a){return function(){return a.editor.trigger("selectionchanged")}}(this),0)},d.prototype._onKeyDown=function(b){var c,d,e,f;if(this.editor.triggerHandler(b)===!1)return!1;if(!this.hotkeys.respondTo(b)){if(b.which in this._keystrokeHandlers){if(f="function"==typeof(c=this._keystrokeHandlers[b.which])["*"]?c["*"](b):void 0)return this.editor.trigger("valuechanged"),!1;if(this.editor.util.traverseUp(function(c){return function(d){var e,g;if(d.nodeType===document.ELEMENT_NODE)return e=null!=(g=c._keystrokeHandlers[b.which])?g[d.tagName.toLowerCase()]:void 0,f="function"==typeof e?e(b,a(d)):void 0,f===!0||f===!1?!1:void 0}}(this)),f)return this.editor.trigger("valuechanged"),!1}if(d=b.which,!(M.call(this._modifierKeys,d)>=0||(e=b.which,M.call(this._arrowKeys,e)>=0)||this.editor.util.metaKey(b)&&86===b.which))return this.editor.util.support.oninput||this.throttledTrigger("valuechanged",["typing"]),null}},d.prototype._onKeyPress=function(a){return this.editor.triggerHandler(a)===!1?!1:void 0},d.prototype._onKeyUp=function(b){var c,d;return this.editor.triggerHandler(b)===!1?!1:!this.editor.util.support.onselectionchange&&(d=b.which,M.call(this._arrowKeys,d)>=0)?void this.editor.trigger("selectionchanged"):void(8!==b.which&&46!==b.which||!this.editor.util.isEmptyNode(this.editor.body)||(this.editor.body.empty(),c=a("<p/>").append(this.editor.util.phBr).appendTo(this.editor.body),this.editor.selection.setRangeAtStartOf(c)))},d.prototype._onPaste=function(b){var c,d,e,f,g,h,i,j,k;if(this.editor.triggerHandler(b)===!1)return!1;if(i=this.editor.selection.deleteRangeContents(),i.collapsed||i.collapse(!0),c=this.editor.util.closestBlockEl(),d=c.is("pre, table"),b.originalEvent.clipboardData&&b.originalEvent.clipboardData.items&&b.originalEvent.clipboardData.items.length>0&&(g=b.originalEvent.clipboardData.items[0],/^image\//.test(g.type)&&!d)){if(e=g.getAsFile(),null==e||!this.opts.pasteImage)return;return e.name||(e.name="Clipboard Image.png"),k={},k[this.opts.pasteImage]=!0,null!=(j=this.editor.uploader)&&j.upload(e,k),!1}return h=function(b){return function(e){var f,g,h,j,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B;if(b.editor.triggerHandler("pasting",[e])!==!1&&e){if(d)if(c.is("table")){for(v=e.split("\n"),o=v.pop(),l=0,p=v.length;p>l;l++)u=v[l],b.editor.selection.insertNode(document.createTextNode(u)),b.editor.selection.insertNode(a("<br/>"));b.editor.selection.insertNode(document.createTextNode(o))}else for(e=a("<div/>").text(e),z=e.contents(),m=0,q=z.length;q>m;m++)x=z[m],b.editor.selection.insertNode(a(x)[0],i);else if(c.is(b.editor.body))for(n=0,r=e.length;r>n;n++)x=e[n],b.editor.selection.insertNode(x,i);else{if(e.length<1)return;if(1===e.length)if(e.is("p")){if(h=e.contents(),1===h.length&&h.is("img")){if(f=h,/^data:image/.test(f.attr("src"))){if(!b.opts.pasteImage)return;return g=b.editor.util.dataURLtoBlob(f.attr("src")),g.name="Clipboard Image.png",k={},k[b.opts.pasteImage]=!0,void(null!=(A=b.editor.uploader)&&A.upload(g,k))}if(f.is('img[src^="webkit-fake-url://"]'))return}for(w=0,s=h.length;s>w;w++)x=h[w],b.editor.selection.insertNode(x,i)}else if(c.is("p")&&b.editor.util.isEmptyNode(c))c.replaceWith(e),b.editor.selection.setRangeAtEndOf(e,i);else if(e.is("ul, ol"))if(1===e.find("li").length)for(e=a("<div/>").text(e.text()),B=e.contents(),y=0,t=B.length;t>y;y++)x=B[y],b.editor.selection.insertNode(a(x)[0],i);else c.is("li")?(c.parent().after(e),b.editor.selection.setRangeAtEndOf(e,i)):(c.after(e),b.editor.selection.setRangeAtEndOf(e,i));else c.after(e),b.editor.selection.setRangeAtEndOf(e,i);else c.is("li")&&(c=c.parent()),b.editor.selection.rangeAtStartOf(c,i)?j="before":b.editor.selection.rangeAtEndOf(c,i)?j="after":(b.editor.selection.breakBlockEl(c,i),j="before"),c[j](e),b.editor.selection.setRangeAtEndOf(e.last(),i)}return b.editor.trigger("valuechanged")}}}(this),d?(b.preventDefault(),f=this.editor.util.browser.msie?window.clipboardData.getData("Text"):b.originalEvent.clipboardData.getData("text/plain"),h(f)):(this.editor.selection.save(i),this._pasteArea.focus(),this.editor.util.browser.msie&&10===this.editor.util.browser.version&&(b.preventDefault(),this._pasteArea.html(window.clipboardData.getData("Text"))),setTimeout(function(b){return function(){return b._pasteArea.is(":empty")?f=null:(f=a("<div/>").append(b._pasteArea.contents()),f.find("table colgroup").remove(),b.editor.formatter.format(f),b.editor.formatter.decorate(f),b.editor.formatter.beautify(f.children()),f=f.contents()),b._pasteArea.empty(),i=b.editor.selection.restore(),h(f)}}(this),10))},d.prototype._onDrop=function(a){return this.editor.triggerHandler(a)===!1?!1:setTimeout(function(a){return function(){return a.editor.trigger("valuechanged")}}(this),0)},d.prototype._onInput=function(a){return this.throttledTrigger("valuechanged",["oninput"])},d.prototype.addKeystrokeHandler=function(a,b,c){return this._keystrokeHandlers[a]||(this._keystrokeHandlers[a]={}),this._keystrokeHandlers[a][b]=c},d.prototype.addShortcut=function(b,c){return this.hotkeys.add(b,a.proxy(c,this))},d}(b),t=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.pluginName="Keystroke",c.prototype._init=function(){var b;return this.editor=this._module,this.editor.util.browser.safari&&this.editor.inputManager.addKeystrokeHandler("13","*",function(b){return function(c){var d,e;if(c.shiftKey&&(d=b.editor.util.closestBlockEl(),!d.is("pre")))return e=a("<br/>"),b.editor.selection.rangeAtEndOf(d)?(b.editor.selection.insertNode(e),b.editor.selection.insertNode(a("<br/>")),b.editor.selection.setRangeBefore(e)):b.editor.selection.insertNode(e),!0}}(this)),(this.editor.util.browser.webkit||this.editor.util.browser.msie)&&(b=function(b){return function(c,d){var e;if(b.editor.selection.rangeAtEndOf(d))return e=a("<p/>").append(b.editor.util.phBr).insertAfter(d),b.editor.selection.setRangeAtStartOf(e),!0}}(this),this.editor.inputManager.addKeystrokeHandler("13","h1",b),this.editor.inputManager.addKeystrokeHandler("13","h2",b),this.editor.inputManager.addKeystrokeHandler("13","h3",b),this.editor.inputManager.addKeystrokeHandler("13","h4",b),this.editor.inputManager.addKeystrokeHandler("13","h5",b),this.editor.inputManager.addKeystrokeHandler("13","h6",b)),this.editor.inputManager.addKeystrokeHandler("8","*",function(a){return function(b){var c,d,e;return e=a.editor.util.furthestBlockEl(),d=e.prev(),d.is("hr")&&a.editor.selection.rangeAtStartOf(e)?(a.editor.selection.save(),d.remove(),a.editor.selection.restore(),!0):(c=a.editor.util.closestBlockEl(),a.editor.util.browser.webkit&&a.editor.selection.rangeAtStartOf(c)?(a.editor.selection.save(),a.editor.formatter.cleanNode(c,!0),a.editor.selection.restore(),null):void 0)}}(this)),this.editor.inputManager.addKeystrokeHandler("13","li",function(b){return function(c,d){var e,f,g,h;if(e=d.clone(),e.find("ul, ol").remove(),b.editor.util.isEmptyNode(e)&&d.is(b.editor.util.closestBlockEl())){if(f=d.parent(),d.next("li").length>0){if(!b.editor.util.isEmptyNode(d))return;f.parent("li").length>0?(g=a("<li/>").append(b.editor.util.phBr).insertAfter(f.parent("li")),h=a("<"+f[0].tagName+"/>").append(d.nextAll("li")),g.append(h)):(g=a("<p/>").append(b.editor.util.phBr).insertAfter(f),h=a("<"+f[0].tagName+"/>").append(d.nextAll("li")),g.after(h))}else f.parent("li").length>0?(g=a("<li/>").insertAfter(f.parent("li")),g.append(d.contents().length>0?d.contents():b.editor.util.phBr)):(g=a("<p/>").append(b.editor.util.phBr).insertAfter(f),d.children("ul, ol").length>0&&g.after(d.children("ul, ol")));return d.prev("li").length?d.remove():f.remove(),b.editor.selection.setRangeAtStartOf(g),!0}}}(this)),this.editor.inputManager.addKeystrokeHandler("13","pre",function(b){return function(c,d){var e,f,g;return c.preventDefault(),c.shiftKey?(e=a("<p/>").append(b.editor.util.phBr).insertAfter(d),b.editor.selection.setRangeAtStartOf(e),!0):(g=b.editor.selection.getRange(),f=null,g.deleteContents(),!b.editor.util.browser.msie&&b.editor.selection.rangeAtEndOf(d)?(f=document.createTextNode("\n\n"),g.insertNode(f),g.setEnd(f,1)):(f=document.createTextNode("\n"),g.insertNode(f),g.setStartAfter(f)),g.collapse(!1),b.editor.selection.selectRange(g),!0)}}(this)),this.editor.inputManager.addKeystrokeHandler("13","blockquote",function(a){return function(b,c){var d,e;return d=a.editor.util.closestBlockEl(),d.is("p")&&!d.next().length&&a.editor.util.isEmptyNode(d)?(c.after(d),e=document.createRange(),a.editor.selection.setRangeAtStartOf(d,e),!0):void 0}}(this)),this.editor.inputManager.addKeystrokeHandler("8","li",function(b){return function(c,d){var e,f,g,h,i,j,k,l;return f=d.children("ul, ol"),i=d.prev("li"),f.length>0&&i.length>0?(l="",j=null,d.contents().each(function(b,c){if(1===c.nodeType&&/UL|OL/.test(c.nodeName))return!1;if(1!==c.nodeType||!/BR/.test(c.nodeName))return 3===c.nodeType&&c.nodeValue?l+=c.nodeValue:1===c.nodeType&&(l+=a(c).text()),j=a(c)}),j&&1===l.length&&b.editor.util.browser.firefox&&!j.next("br").length?(e=a(b.editor.util.phBr).insertAfter(j),j.remove(),b.editor.selection.setRangeBefore(e),!0):l.length>0?!1:(k=document.createRange(),h=i.children("ul, ol"),h.length>0?(g=a("<li/>").append(b.editor.util.phBr).appendTo(h),h.append(f.children("li")),d.remove(),b.editor.selection.setRangeAtEndOf(g,k)):(b.editor.selection.setRangeAtEndOf(i,k),i.append(f),d.remove(),b.editor.selection.selectRange(k)),!0)):!1}}(this)),this.editor.inputManager.addKeystrokeHandler("8","pre",function(b){return function(c,d){var e,f,g;if(b.editor.selection.rangeAtStartOf(d))return f=d.html().replace("\n","<br/>"),e=a("<p/>").append(f||b.editor.util.phBr).insertAfter(d),d.remove(),g=document.createRange(),b.editor.selection.setRangeAtStartOf(e,g),!0}}(this)),this.editor.inputManager.addKeystrokeHandler("8","blockquote",function(a){return function(b,c){var d,e;if(a.editor.selection.rangeAtStartOf(c))return d=c.children().first().unwrap(),e=document.createRange(),a.editor.selection.setRangeAtStartOf(d,e),!0}}(this))},c}(b),H=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.pluginName="UndoManager",c.prototype._index=-1,c.prototype._capacity=50,c.prototype._timer=null,c.prototype._init=function(){var a,b;return this.editor=this._module,this._stack=[],this.editor.util.os.mac?(b="cmd+z",a="shift+cmd+z"):this.editor.util.os.win?(b="ctrl+z",a="ctrl+y"):(b="ctrl+z",a="shift+ctrl+z"),this.editor.inputManager.addShortcut(b,function(a){return function(b){return b.preventDefault(),a.undo(),!1}}(this)),this.editor.inputManager.addShortcut(a,function(a){return function(b){return b.preventDefault(),a.redo(),!1}}(this)),this.editor.on("valuechanged",function(a){return function(b,c){return"undo"!==c&&"redo"!==c?(a._timer&&(clearTimeout(a._timer),a._timer=null),a._timer=setTimeout(function(){return a._pushUndoState(),a._timer=null},200)):void 0}}(this))},c.prototype._pushUndoState=function(){var a,b;if(this.editor.triggerHandler("pushundostate")!==!1&&(a=this.currentState(),b=this.editor.body.html(),!a||a.html!==b))return this._index+=1,this._stack.length=this._index,this._stack.push({html:b,caret:this.caretPosition()}),this._stack.length>this._capacity?(this._stack.shift(),this._index-=1):void 0},c.prototype.currentState=function(){return this._stack.length&&this._index>-1?this._stack[this._index]:null},c.prototype.undo=function(){var a;if(!(this._index<1||this._stack.length<2))return this.editor.hidePopover(),this._index-=1,a=this._stack[this._index],this.editor.body.html(a.html),this.caretPosition(a.caret),this.editor.body.find(".selected").removeClass("selected"),this.editor.sync(),this.editor.trigger("valuechanged",["undo"])},c.prototype.redo=function(){var a;if(!(this._index<0||this._stack.length<this._index+2))return this.editor.hidePopover(),this._index+=1,a=this._stack[this._index],this.editor.body.html(a.html),this.caretPosition(a.caret),this.editor.body.find(".selected").removeClass("selected"),this.editor.sync(),this.editor.trigger("valuechanged",["redo"])},c.prototype.update=function(){var a,b;if(!this._timer&&(a=this.currentState()))return b=this.editor.body.html(),a.html=b,a.caret=this.caretPosition()},c.prototype._getNodeOffset=function(b,c){var d,e,f;return d=c?a(b):a(b).parent(),f=0,e=!1,d.contents().each(function(a){return function(a,d){return c===a||b===d?!1:(3===d.nodeType?e||(f+=1,e=!0):(f+=1,e=!1),null)}}(this)),f},c.prototype._getNodePosition=function(a,b){var c,d;if(3===a.nodeType)for(d=a.previousSibling;d&&3===d.nodeType;)a=d,b+=this.editor.util.getNodeLength(d),d=d.previousSibling;else b=this._getNodeOffset(a,b);return c=[],c.unshift(b),this.editor.util.traverseUp(function(a){return function(b){return c.unshift(a._getNodeOffset(b))}}(this),a),c},c.prototype._getNodeByPosition=function(b){var c,d,e,f,g,h,i,j;for(h=this.editor.body[0],j=b.slice(0,b.length-1),e=f=0,g=j.length;g>f;e=++f){if(i=j[e],d=h.childNodes,i>d.length-1){if(e!==b.length-2||!a(h).is("pre")){h=null;break}c=document.createTextNode(""),h.appendChild(c),d=h.childNodes}h=d[i]}return h},c.prototype.caretPosition=function(a){var b,c,d,e,f;if(a){if(this.editor.inputManager.focused||this.editor.body.focus(),!a.start)return void this.editor.body.blur();if(e=this._getNodeByPosition(a.start),f=a.start[a.start.length-1],a.collapsed?(b=e,c=f):(b=this._getNodeByPosition(a.end),c=a.start[a.start.length-1]),!e||!b)throw new Error("simditor: invalid caret state");return d=document.createRange(),d.setStart(e,f),d.setEnd(b,c),this.editor.selection.selectRange(d)}return d=this.editor.selection.getRange(),this.editor.inputManager.focused&&null!=d?(a={start:[],end:null,collapsed:!0},a.start=this._getNodePosition(d.startContainer,d.startOffset),d.collapsed||(a.end=this._getNodePosition(d.endContainer,d.endOffset),a.collapsed=!1),a):{}},c}(b),J=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.pluginName="Util",c.prototype._init=function(){return this.editor=this._module,this.browser.msie&&this.browser.version<11?this.phBr="":void 0},c.prototype.phBr="<br/>",c.prototype.os=function(){var a;return a={},/Mac/.test(navigator.appVersion)?a.mac=!0:/Linux/.test(navigator.appVersion)?a.linux=!0:/Win/.test(navigator.appVersion)?a.win=!0:/X11/.test(navigator.appVersion)&&(a.unix=!0),/Mobi/.test(navigator.appVersion)&&(a.mobile=!0),a}(),c.prototype.browser=function(){var a,b,c,d,e,f,g,h,i;return i=navigator.userAgent,c=/(msie|trident)/i.test(i),a=/chrome|crios/i.test(i),h=/safari/i.test(i)&&!a,b=/firefox/i.test(i),c?{msie:!0,version:1*(null!=(d=i.match(/(msie |rv:)(\d+(\.\d+)?)/i))?d[2]:void 0)}:a?{webkit:!0,chrome:!0,version:1*(null!=(e=i.match(/(?:chrome|crios)\/(\d+(\.\d+)?)/i))?e[1]:void 0)}:h?{webkit:!0,safari:!0,version:1*(null!=(f=i.match(/version\/(\d+(\.\d+)?)/i))?f[1]:void 0)}:b?{mozilla:!0,firefox:!0,version:1*(null!=(g=i.match(/firefox\/(\d+(\.\d+)?)/i))?g[1]:void 0)}:{}}(),c.prototype.support=function(){return{onselectionchange:function(){var a,b;if(b=document.onselectionchange,void 0!==b)try{return document.onselectionchange=0,null===document.onselectionchange}catch(c){a=c}finally{document.onselectionchange=b}return!1}(),oninput:function(){return!/(msie|trident)/i.test(navigator.userAgent)}()}}(),c.prototype.reflow=function(b){return null==b&&(b=document),a(b)[0].offsetHeight},c.prototype.metaKey=function(a){var b;return b=/Mac/.test(navigator.userAgent),b?a.metaKey:a.ctrlKey},c.prototype.isEmptyNode=function(b){var c;return c=a(b),c.is(":empty")||!c.text()&&!c.find(":not(br, span, div)").length},c.prototype.blockNodes=["div","p","ul","ol","li","blockquote","hr","pre","h1","h2","h3","h4","table"],c.prototype.isBlockNode=function(b){return b=a(b)[0],b&&3!==b.nodeType?new RegExp("^("+this.blockNodes.join("|")+")$").test(b.nodeName.toLowerCase()):!1},c.prototype.closestBlockEl=function(b){var c,d,e;return null==b&&(e=this.editor.selection.getRange(),b=null!=e?e.commonAncestorContainer:void 0),c=a(b),c.length?(d=c.parentsUntil(this.editor.body).addBack(),d=d.filter(function(a){return function(b){return a.isBlockNode(d.eq(b))}}(this)),d.length?d.last():null):null},c.prototype.furthestNode=function(b,c){var d,e,f;return null==b&&(f=this.editor.selection.getRange(),b=null!=f?f.commonAncestorContainer:void 0),d=a(b),d.length?(e=d.parentsUntil(this.editor.body).addBack(),e=e.filter(function(b){return function(b){var d;return d=e.eq(b),a.isFunction(c)?c(d):d.is(c)}}(this)),e.length?e.first():null):null},c.prototype.furthestBlockEl=function(b){return this.furthestNode(b,a.proxy(this.isBlockNode,this))},c.prototype.getNodeLength=function(a){switch(a.nodeType){case 7:case 10:return 0;case 3:case 8:return a.length;default:return a.childNodes.length}},c.prototype.traverseUp=function(b,c){var d,e,f,g,h,i,j;if(null==c&&(h=this.editor.selection.getRange(),c=null!=h?h.commonAncestorContainer:void 0),null==c||!a.contains(this.editor.body[0],c))return!1;for(g=a(c).parentsUntil(this.editor.body).get(),g.unshift(c),j=[],d=0,e=g.length;e>d&&(f=g[d],i=b(f),i!==!1);d++)j.push(void 0);return j},c.prototype.dataURLtoBlob=function(a){var b,c,d,e,f,g,h,i,j,k,l;if(g=window.Blob&&function(){var a;try{return Boolean(new Blob)}catch(b){return a=b,!1}}(),f=g&&window.Uint8Array&&function(){var a;try{return 100===new Blob([new Uint8Array(100)]).size}catch(b){return a=b,!1}}(),b=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,!((g||b)&&window.atob&&window.ArrayBuffer&&window.Uint8Array))return!1;for(e=a.split(",")[0].indexOf("base64")>=0?atob(a.split(",")[1]):decodeURIComponent(a.split(",")[1]),c=new ArrayBuffer(e.length),i=new Uint8Array(c),h=j=0,l=e.length;l>=0?l>=j:j>=l;h=l>=0?++j:--j)i[h]=e.charCodeAt(h);return k=a.split(",")[0].split(":")[1].split(";")[0],g?new Blob([f?i:c],{type:k}):(d=new b,d.append(c),d.getBlob(k))},c.prototype.throttle=function(a,b){var c,d,e;return c=null,d=0,e=function(){return c?(clearTimeout(c),c=null):void 0},function(){var f,g,h,i;return g=Date.now(),d||(d=g),h=b-(g-d),i=null,h>0&&b>h?(d=g,e(),f=arguments,c=setTimeout(function(){return d=0,c=null,i=a.apply(null,f)},b)):(e(),d!==g&&(d=0),i=a.apply(null,arguments)),i}},c.prototype.formatHTML=function(b){var c,d,e,f,g,h,i,j,k;for(h=/<(\/?)(.+?)(\/?)>/g,j="",f=0,e=null,d="  ",i=function(a,b){return new Array(b+1).join(a)};null!==(g=h.exec(b));)g.isBlockNode=a.inArray(g[2],this.blockNodes)>-1,g.isStartTag="/"!==g[1]&&"/"!==g[3],g.isEndTag="/"===g[1]||"/"===g[3],c=e?e.index+e[0].length:0,(k=b.substring(c,g.index)).length>0&&a.trim(k)&&(j+=k),g.isBlockNode&&g.isEndTag&&!g.isStartTag&&(f-=1),g.isBlockNode&&g.isStartTag&&(e&&e.isBlockNode&&e.isEndTag||(j+="\n"),j+=i(d,f)),j+=g[0],g.isBlockNode&&g.isEndTag&&(j+="\n"),g.isBlockNode&&g.isStartTag&&(f+=1),e=g;return a.trim(j)},c}(b),F=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.pluginName="Toolbar",c.prototype.opts={toolbar:!0,toolbarFloat:!0,toolbarHidden:!1,
toolbarFloatOffset:0},c.prototype._tpl={wrapper:'<div class="simditor-toolbar"><ul></ul></div>',separator:'<li><span class="separator"></span></li>'},c.prototype._init=function(){var b;return this.editor=this._module,this.opts.toolbar?(a.isArray(this.opts.toolbar)||(this.opts.toolbar=["bold","italic","underline","strikethrough","|","ol","ul","blockquote","code","|","link","image","|","indent","outdent"]),this._render(),this.list.on("click",function(a){return function(a){return!1}}(this)),this.wrapper.on("mousedown",function(a){return function(b){return a.list.find(".menu-on").removeClass(".menu-on")}}(this)),a(document).on("mousedown.simditor"+this.editor.id,function(a){return function(b){return a.list.find(".menu-on").removeClass(".menu-on")}}(this)),!this.opts.toolbarHidden&&this.opts.toolbarFloat&&(this.wrapper.css("top",this.opts.toolbarFloatOffset),b=0,a(window).on("resize.simditor-"+this.editor.id,function(a){return function(c){return a.wrapper.css("position","static"),a.wrapper.width("auto"),a.editor.util.reflow(a.wrapper),a.wrapper.width(a.wrapper.outerWidth()),a.wrapper.css("left",a.wrapper.offset().left),a.wrapper.css("position",""),b=a.wrapper.outerHeight(),a.editor.placeholderEl.css("top",b)}}(this)).resize(),a(window).on("scroll.simditor-"+this.editor.id,function(c){return function(d){var e,f,g;if(g=c.editor.wrapper.offset().top,e=g+c.editor.wrapper.outerHeight()-80,f=a(document).scrollTop()+c.opts.toolbarFloatOffset,g>=f||f>=e){if(c.editor.wrapper.removeClass("toolbar-floating").css("padding-top",""),c.editor.util.os.mobile)return c.wrapper.css("top",c.opts.toolbarFloatOffset)}else if(c.editor.wrapper.addClass("toolbar-floating").css("padding-top",b),c.editor.util.os.mobile)return c.wrapper.css("top",f-g+c.opts.toolbarFloatOffset)}}(this))),this.editor.on("selectionchanged",function(a){return function(){return a.toolbarStatus()}}(this)),this.editor.on("destroy",function(a){return function(){return a.buttons.length=0}}(this)),a(document).on("mousedown.simditor-"+this.editor.id,function(a){return function(b){return a.list.find("li.menu-on").removeClass("menu-on")}}(this))):void 0},c.prototype._render=function(){var b,c,d,e;for(this.buttons=[],this.wrapper=a(this._tpl.wrapper).prependTo(this.editor.wrapper),this.list=this.wrapper.find("ul"),e=this.opts.toolbar,b=0,c=e.length;c>b;b++)if(d=e[b],"|"!==d){if(!this.constructor.buttons[d])throw new Error('simditor: invalid toolbar button "'+d+'"');this.buttons.push(new this.constructor.buttons[d]({editor:this.editor}))}else a(this._tpl.separator).appendTo(this.list);return this.opts.toolbarHidden?this.wrapper.hide():void 0},c.prototype.toolbarStatus=function(b){var c;if(this.editor.inputManager.focused)return c=this.buttons.slice(0),this.editor.util.traverseUp(function(d){return function(d){var e,f,g,h,i,j,k;for(k=[],f=g=0,i=c.length;i>g;f=++g)e=c[f],(null==b||e.name===b)&&(e.status&&e.status(a(d))!==!0||k.push(e));for(h=0,j=k.length;j>h;h++)e=k[h],f=a.inArray(e,c),c.splice(f,1);return 0===c.length?!1:void 0}}(this))},c.prototype.findButton=function(a){var b;return b=this.list.find(".toolbar-item-"+a).data("button"),null!=b?b:null},c.addButton=function(a){return this.buttons[a.prototype.name]=a},c.buttons={},c}(b),q=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.pluginName="Indentation",c.prototype.opts={tabIndent:!0},c.prototype._init=function(){return this.editor=this._module,this.editor.inputManager.addKeystrokeHandler("9","*",function(a){return function(b){var c;return c=a.editor.toolbar.findButton("code"),a.opts.tabIndent||c&&c.active?a.indent(b.shiftKey):void 0}}(this))},c.prototype.indent=function(a){var b,c,d,e,f;return(e=this.editor.selection.getRange())?(d=this.editor.util.closestBlockEl(e.startContainer),c=this.editor.util.closestBlockEl(e.endContainer),d.is("li")&&c.is("li")&&d.parent().is(c.parent())||(d=this.editor.util.furthestBlockEl(d),c=this.editor.util.furthestBlockEl(c)),b=d.is(c)?d:d.nextUntil(c).add(d).add(c),f=!1,b.each(function(b){return function(c,d){return f=a?b.outdentBlock(d):b.indentBlock(d)}}(this)),f):void 0},c.prototype.indentBlock=function(b){var c,d,e,f,g,h,i,j,k;if(c=a(b),c.length){if(c.is("pre")){if(j=this.editor.selection.getRange(),g=a(j.commonAncestorContainer),!g.is(c)&&!g.closest("pre").is(c))return;this.indentText(j)}else if(c.is("li")){if(f=c.prev("li"),f.length<1)return;this.editor.selection.save(),k=c.parent()[0].tagName,d=f.children("ul, ol"),d.length>0?d.append(c):a("<"+k+"/>").append(c).appendTo(f),this.editor.selection.restore()}else if(c.is("p, h1, h2, h3, h4"))i=c.attr("data-indent")||0,i=Math.min(1*i+1,10),c.attr("data-indent",i);else if(c.is("table")||c.is(".simditor-table")){if(j=this.editor.selection.getRange(),h=a(j.commonAncestorContainer).closest("td"),e=h.next("td"),e.length>0||(e=h.parent("tr").next("tr").find("td:first")),!(h.length>0&&e.length>0))return!1;this.editor.selection.setRangeAtEndOf(e)}return!0}},c.prototype.indentText=function(a){var b,c;return b=a.toString().replace(/^(?=.+)/gm,"  "),c=document.createTextNode(b||"  "),a.deleteContents(),a.insertNode(c),b?(a.selectNode(c),this.editor.selection.selectRange(a)):this.editor.selection.setRangeAfter(c)},c.prototype.outdentBlock=function(b){var c,d,e,f,g,h,i,j,k,l;if(c=a(b),c&&c.length>0){if(c.is("pre")){if(k=this.editor.selection.getRange(),f=a(k.commonAncestorContainer),!f.is(c)&&!f.closest("pre").is(c))return;this.outdentText(k)}else if(c.is("li")){if(d=c.parent(),e=d.parent("li"),e.length<1)return i=this.editor.toolbar.findButton(d[0].tagName.toLowerCase()),void(null!=i&&i.command());this.editor.selection.save(),c.next("li").length>0&&a("<"+d[0].tagName+"/>").append(c.nextAll("li")).appendTo(c),c.insertAfter(e),d.children("li").length<1&&d.remove(),this.editor.selection.restore()}else if(c.is("p, h1, h2, h3, h4"))j=null!=(l=c.attr("data-indent"))?l:0,j=1*j-1,0>j&&(j=0),c.attr("data-indent",j);else if(c.is("table")||c.is(".simditor-table")){if(k=this.editor.selection.getRange(),h=a(k.commonAncestorContainer).closest("td"),g=h.prev("td"),g.length>0||(g=h.parent("tr").prev("tr").find("td:last")),!(h.length>0&&g.length>0))return;this.editor.selection.setRangeAtEndOf(g)}return!0}},c.prototype.outdentText=function(a){},c}(b),B=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.connect(J),c.connect(r),c.connect(H),c.connect(t),c.connect(l),c.connect(A),c.connect(F),c.connect(q),c.count=0,c.prototype.opts={textarea:null,placeholder:"",defaultImage:"images/image.png",params:{},upload:!1},c.prototype._init=function(){var b,e,f,g;if(this.textarea=a(this.opts.textarea),this.opts.placeholder=this.opts.placeholder||this.textarea.attr("placeholder"),!this.textarea.length)throw new Error("simditor: param textarea is required.");if(e=this.textarea.data("simditor"),null!=e&&e.destroy(),this.id=++c.count,this._render(),this.opts.upload&&d&&(g="object"==typeof this.opts.upload?this.opts.upload:{},this.uploader=d(g)),f=this.textarea.closest("form"),f.length&&(f.on("submit.simditor-"+this.id,function(a){return function(){return a.sync()}}(this)),f.on("reset.simditor-"+this.id,function(a){return function(){return a.setValue("")}}(this))),this.on("initialized",function(a){return function(){return a.opts.placeholder&&a.on("valuechanged",function(){return a._placeholder()}),a.setValue(a.textarea.val().trim()||"")}}(this)),this.util.browser.mozilla){this.util.reflow();try{return document.execCommand("enableObjectResizing",!1,!1),document.execCommand("enableInlineTableEditing",!1,!1)}catch(h){b=h}}},c.prototype._tpl='<div class="simditor">\n  <div class="simditor-wrapper">\n    <div class="simditor-placeholder"></div>\n    <div class="simditor-body" contenteditable="true">\n    </div>\n  </div>\n</div>',c.prototype._render=function(){var b,c,d,e;if(this.el=a(this._tpl).insertBefore(this.textarea),this.wrapper=this.el.find(".simditor-wrapper"),this.body=this.wrapper.find(".simditor-body"),this.placeholderEl=this.wrapper.find(".simditor-placeholder").append(this.opts.placeholder),this.el.data("simditor",this),this.wrapper.append(this.textarea),this.textarea.data("simditor",this).blur(),this.body.attr("tabindex",this.textarea.attr("tabindex")),this.util.os.mac?this.el.addClass("simditor-mac"):this.util.os.linux&&this.el.addClass("simditor-linux"),this.util.os.mobile&&this.el.addClass("simditor-mobile"),this.opts.params){c=this.opts.params,d=[];for(b in c)e=c[b],d.push(a("<input/>",{type:"hidden",name:b,value:e}).insertAfter(this.textarea));return d}},c.prototype._placeholder=function(){var a,b;return a=this.body.children(),0===a.length||1===a.length&&this.util.isEmptyNode(a)&&(null!=(b=a.data("indent"))?b:0)<1?this.placeholderEl.show():this.placeholderEl.hide()},c.prototype.setValue=function(a){return this.hidePopover(),this.textarea.val(a),this.body.html(a),this.formatter.format(),this.formatter.decorate(),this.util.reflow(this.body),this.inputManager.lastCaretPosition=null,this.trigger("valuechanged")},c.prototype.getValue=function(){return this.sync()},c.prototype.sync=function(){var b,c,d,e,f,g;for(c=this.body.clone(),this.formatter.undecorate(c),this.formatter.format(c),this.formatter.autolink(c),b=c.children(),f=b.last("p"),e=b.first("p");f.is("p")&&this.util.isEmptyNode(f);)d=f,f=f.prev("p"),d.remove();for(;e.is("p")&&this.util.isEmptyNode(e);)d=e,e=f.next("p"),d.remove();return c.find("img.uploading").remove(),g=a.trim(c.html()),this.textarea.val(g),g},c.prototype.focus=function(){var b,c;return this.body.is(":visible")&&this.body.is("[contenteditable]")?this.inputManager.lastCaretPosition?this.undoManager.caretPosition(this.inputManager.lastCaretPosition):(b=this.body.find("p").last(),b.length>0||(b=a("<p/>").append(this.util.phBr).appendTo(this.body)),c=document.createRange(),this.selection.setRangeAtEndOf(b,c),this.body.focus()):void this.el.find("textarea:visible").focus()},c.prototype.blur=function(){return this.body.is(":visible")&&this.body.is("[contenteditable]")?this.body.blur():this.body.find("textarea:visible").blur()},c.prototype.hidePopover=function(){return this.el.find(".simditor-popover").each(function(b){return function(b,c){return c=a(c).data("popover"),c.active?c.hide():void 0}}(this))},c.prototype.destroy=function(){return this.triggerHandler("destroy"),this.textarea.closest("form").off(".simditor .simditor-"+this.id),this.selection.clear(),this.inputManager.focused=!1,this.textarea.insertBefore(this.el).hide().val("").removeData("simditor"),this.el.remove(),a(document).off(".simditor-"+this.id),a(window).off(".simditor-"+this.id),this.off()},c}(b),B.i18n={"zh-CN":{blockquote:"引用",bold:"加粗文字",code:"插入代码",color:"文字颜色",hr:"分隔线",image:"插入图片",externalImage:"外链图片",uploadImage:"上传图片",uploadFailed:"上传失败了",uploadError:"上传出错了",imageUrl:"图片地址",imageSize:"图片尺寸",imageAlt:"图片描述",restoreImageSize:"还原图片尺寸",uploading:"正在上传",indent:"向右缩进",outdent:"向左缩进",italic:"斜体文字",link:"插入链接",text:"文本",linkText:"链接文字",linkUrl:"地址",removeLink:"移除链接",ol:"有序列表",ul:"无序列表",strikethrough:"删除线文字",table:"表格",deleteRow:"删除行",insertRowAbove:"在上面插入行",insertRowBelow:"在下面插入行",deleteColumn:"删除列",insertColumnLeft:"在左边插入列",insertColumnRight:"在右边插入列",deleteTable:"删除表格",title:"标题",normalText:"普通文本",underline:"下划线文字",alignment:"排版",alignCenter:"居中",alignLeft:"居左",alignRight:"居右"}},h=function(b){function c(a){this.editor=a.editor,this.title=this._t(this.name),c.__super__.constructor.call(this,a)}return K(c,b),c.prototype._tpl={item:'<li><a tabindex="-1" unselectable="on" class="toolbar-item" href="javascript:;"><span></span></a></li>',menuWrapper:'<div class="toolbar-menu"></div>',menuItem:'<li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;"><span></span></a></li>',separator:'<li><span class="separator"></span></li>'},c.prototype.name="",c.prototype.icon="",c.prototype.title="",c.prototype.text="",c.prototype.htmlTag="",c.prototype.disableTag="",c.prototype.menu=!1,c.prototype.active=!1,c.prototype.disabled=!1,c.prototype.needFocus=!0,c.prototype.shortcut=null,c.prototype._init=function(){var b,c,d,e,f;for(this.render(),this.el.on("mousedown",function(a){return function(b){var c,d;return b.preventDefault(),a.el.hasClass("disabled")||a.needFocus&&!a.editor.inputManager.focused?!1:a.menu?(a.wrapper.toggleClass("menu-on").siblings("li").removeClass("menu-on"),a.wrapper.is(".menu-on")&&(c=a.menuWrapper.offset().left+a.menuWrapper.outerWidth()+5-a.editor.wrapper.offset().left-a.editor.wrapper.outerWidth(),c>0&&a.menuWrapper.css({left:"auto",right:0}),a.trigger("menuexpand")),!1):(d=a.el.data("param"),a.command(d),!1)}}(this)),this.wrapper.on("click","a.menu-item",function(b){return function(c){var d,e;return c.preventDefault(),d=a(c.currentTarget),b.wrapper.removeClass("menu-on"),d.hasClass("disabled")||b.needFocus&&!b.editor.inputManager.focused?!1:(b.editor.toolbar.wrapper.removeClass("menu-on"),e=d.data("param"),b.command(e),!1)}}(this)),this.wrapper.on("mousedown","a.menu-item",function(a){return function(a){return!1}}(this)),this.editor.on("blur",function(a){return function(){return a.editor.body.is(":visible")&&a.editor.body.is("[contenteditable]")?(a.setActive(!1),a.setDisabled(!1)):void 0}}(this)),null!=this.shortcut&&this.editor.inputManager.addShortcut(this.shortcut,function(a){return function(b){return a.el.mousedown(),!1}}(this)),d=this.htmlTag.split(","),e=[],b=0,c=d.length;c>b;b++)f=d[b],f=a.trim(f),e.push(f&&a.inArray(f,this.editor.formatter._allowedTags)<0?this.editor.formatter._allowedTags.push(f):void 0);return e},c.prototype.iconClassOf=function(a){return a?"simditor-icon simditor-icon-"+a:""},c.prototype.setIcon=function(a){return this.el.find("span").removeClass().addClass(this.iconClassOf(a)).text(this.text)},c.prototype.render=function(){return this.wrapper=a(this._tpl.item).appendTo(this.editor.toolbar.list),this.el=this.wrapper.find("a.toolbar-item"),this.el.attr("title",this.title).addClass("toolbar-item-"+this.name).data("button",this),this.setIcon(this.icon),this.menu?(this.menuWrapper=a(this._tpl.menuWrapper).appendTo(this.wrapper),this.menuWrapper.addClass("toolbar-menu-"+this.name),this.renderMenu()):void 0},c.prototype.renderMenu=function(){var b,c,d,e,f,g,h,i;if(a.isArray(this.menu)){for(this.menuEl=a("<ul/>").appendTo(this.menuWrapper),g=this.menu,i=[],d=0,e=g.length;e>d;d++)f=g[d],"|"!==f?(c=a(this._tpl.menuItem).appendTo(this.menuEl),b=c.find("a.menu-item").attr({title:null!=(h=f.title)?h:f.text,"data-param":f.param}).addClass("menu-item-"+f.name),i.push(f.icon?b.find("span").addClass(this.iconClassOf(f.icon)):b.find("span").text(f.text))):a(this._tpl.separator).appendTo(this.menuEl);return i}},c.prototype.setActive=function(a){return a!==this.active?(this.active=a,this.el.toggleClass("active",this.active),this.editor.toolbar.trigger("buttonstatus",[this])):void 0},c.prototype.setDisabled=function(a){return a!==this.disabled?(this.disabled=a,this.el.toggleClass("disabled",this.disabled),this.editor.toolbar.trigger("buttonstatus",[this])):void 0},c.prototype.status=function(a){return null!=a&&this.setDisabled(a.is(this.disableTag)),this.disabled?!0:(null!=a&&this.setActive(a.is(this.htmlTag)),this.active)},c.prototype.command=function(a){},c.prototype._t=function(){var a,b,d;return a=1<=arguments.length?N.call(arguments,0):[],d=c.__super__._t.apply(this,a),d||(d=(b=this.editor)._t.apply(b,a)),d},c}(b),B.Button=h,z=function(b){function c(a){this.button=a.button,this.editor=a.button.editor,c.__super__.constructor.call(this,a)}return K(c,b),c.prototype.offset={top:4,left:0},c.prototype.target=null,c.prototype.active=!1,c.prototype._init=function(){return this.el=a('<div class="simditor-popover"></div>').appendTo(this.editor.el).data("popover",this),this.render(),this.el.on("mouseenter",function(a){return function(b){return a.el.addClass("hover")}}(this)),this.el.on("mouseleave",function(a){return function(b){return a.el.removeClass("hover")}}(this))},c.prototype.render=function(){},c.prototype.show=function(b,c){return null==c&&(c="bottom"),null!=b?(this.el.siblings(".simditor-popover").each(function(b){return function(b,c){return c=a(c).data("popover"),c.active?c.hide():void 0}}(this)),this.target=b.addClass("selected"),this.active?(this.refresh(c),this.trigger("popovershow")):(this.active=!0,this.el.css({left:-9999}).show(),setTimeout(function(a){return function(){return a.refresh(c),a.trigger("popovershow")}}(this),0))):void 0},c.prototype.hide=function(){return this.active?(this.target&&this.target.removeClass("selected"),this.target=null,this.active=!1,this.el.hide(),this.trigger("popoverhide")):void 0},c.prototype.refresh=function(a){var b,c,d,e,f;return null==a&&(a="bottom"),this.active?(b=this.editor.el.offset(),e=this.target.offset(),d=this.target.outerHeight(),"bottom"===a?f=e.top-b.top+d:"top"===a&&(f=e.top-b.top-this.el.height()),c=Math.min(e.left-b.left,this.editor.wrapper.width()-this.el.outerWidth()-10),this.el.css({top:f+this.offset.top,left:c+this.offset.left})):void 0},c.prototype.destroy=function(){return this.target=null,this.active=!1,this.editor.off(".linkpopover"),this.el.remove()},c.prototype._t=function(){var a,b,d;return a=1<=arguments.length?N.call(arguments,0):[],d=c.__super__._t.apply(this,a),d||(d=(b=this.button)._t.apply(b,a)),d},c}(b),B.Popover=z,E=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.name="title",c.prototype.htmlTag="h1, h2, h3, h4",c.prototype.disableTag="pre, table",c.prototype._init=function(){return this.menu=[{name:"normal",text:this._t("normalText"),param:"p"},"|",{name:"h1",text:this._t("title")+" 1",param:"h1"},{name:"h2",text:this._t("title")+" 2",param:"h2"},{name:"h3",text:this._t("title")+" 3",param:"h3"},{name:"h4",text:this._t("title")+" 4",param:"h4"},{name:"h5",text:this._t("title")+" 5",param:"h5"}],c.__super__._init.call(this)},c.prototype.setActive=function(a,b){return c.__super__.setActive.call(this,a),this.el.removeClass("active-p active-h1 active-h2 active-h3"),a?this.el.addClass("active active-"+b):void 0},c.prototype.status=function(a){var b,c;return null!=a&&this.setDisabled(a.is(this.disableTag)),this.disabled?!0:(null!=a&&(b=null!=(c=a[0].tagName)?c.toLowerCase():void 0,this.setActive(a.is(this.htmlTag),b)),this.active)},c.prototype.command=function(b){var c,d,e,f,g,h,i,j,k,l,m;for(j=this.editor.selection.getRange(),m=j.startContainer,f=j.endContainer,e=this.editor.util.closestBlockEl(m),d=this.editor.util.closestBlockEl(f),this.editor.selection.save(),j.setStartBefore(e[0]),j.setEndAfter(d[0]),c=a(j.extractContents()),l=[],c.children().each(function(a){return function(c,d){var e,f,g,h,i;for(f=a._convertEl(d,b),i=[],g=0,h=f.length;h>g;g++)e=f[g],i.push(l.push(e));return i}}(this)),k=l.reverse(),g=0,h=k.length;h>g;g++)i=k[g],j.insertNode(i[0]);return this.editor.selection.restore(),this.editor.trigger("valuechanged")},c.prototype._convertEl=function(b,c){var d,e,f;return e=a(b),f=[],e.is(c)?f.push(e):(d=a("<"+c+"/>").append(e.contents()),f.push(d)),f},c}(h),B.Toolbar.addButton(E),g=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.name="bold",c.prototype.icon="bold",c.prototype.htmlTag="b, strong",c.prototype.disableTag="pre",c.prototype.shortcut="cmd+b",c.prototype._init=function(){return this.editor.util.os.mac?this.title=this.title+" ( Cmd + b )":(this.title=this.title+" ( Ctrl + b )",this.shortcut="ctrl+b"),c.__super__._init.call(this)},c.prototype.status=function(a){var b;return null!=a&&this.setDisabled(a.is(this.disableTag)),this.disabled?!0:(b=document.queryCommandState("bold")===!0,this.setActive(b),b)},c.prototype.command=function(){return document.execCommand("bold"),this.editor.util.support.oninput||this.editor.trigger("valuechanged"),a(document).trigger("selectionchange")},c}(h),B.Toolbar.addButton(g),s=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.name="italic",c.prototype.icon="italic",c.prototype.htmlTag="i",c.prototype.disableTag="pre",c.prototype.shortcut="cmd+i",c.prototype._init=function(){return this.editor.util.os.mac?this.title=this.title+" ( Cmd + i )":(this.title=this.title+" ( Ctrl + i )",this.shortcut="ctrl+i"),c.__super__._init.call(this)},c.prototype.status=function(a){var b;return null!=a&&this.setDisabled(a.is(this.disableTag)),this.disabled?this.disabled:(b=document.queryCommandState("italic")===!0,this.setActive(b),b)},c.prototype.command=function(){return document.execCommand("italic"),this.editor.util.support.oninput||this.editor.trigger("valuechanged"),a(document).trigger("selectionchange")},c}(h),B.Toolbar.addButton(s),G=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.name="underline",c.prototype.icon="underline",c.prototype.htmlTag="u",c.prototype.disableTag="pre",c.prototype.shortcut="cmd+u",c.prototype.render=function(){return this.editor.util.os.mac?this.title=this.title+" ( Cmd + u )":(this.title=this.title+" ( Ctrl + u )",this.shortcut="ctrl+u"),c.__super__.render.call(this)},c.prototype.status=function(a){var b;return null!=a&&this.setDisabled(a.is(this.disableTag)),this.disabled?this.disabled:(b=document.queryCommandState("underline")===!0,this.setActive(b),b)},c.prototype.command=function(){return document.execCommand("underline"),this.editor.util.support.oninput||this.editor.trigger("valuechanged"),a(document).trigger("selectionchange")},c}(h),B.Toolbar.addButton(G),k=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.name="color",c.prototype.icon="tint",c.prototype.disableTag="pre",c.prototype.menu=!0,c.prototype.render=function(){var a;return a=1<=arguments.length?N.call(arguments,0):[],c.__super__.render.apply(this,a)},c.prototype.renderMenu=function(){return a('<ul class="color-list">\n  <li><a href="javascript:;" class="font-color font-color-1" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-2" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-3" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-4" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-5" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-6" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-7" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-default" data-color=""></a></li>\n</ul>').appendTo(this.menuWrapper),this.menuWrapper.on("mousedown",".color-list",function(a){return!1}),this.menuWrapper.on("click",".font-color",function(b){return function(c){var d,e,f,g;if(b.wrapper.removeClass("menu-on"),d=a(c.currentTarget),d.hasClass("font-color-default")){if(e=b.editor.body.find("p, li"),!(e.length>0))return;g=window.getComputedStyle(e[0],null).getPropertyValue("color"),f=b._convertRgbToHex(g)}else g=window.getComputedStyle(d[0],null).getPropertyValue("background-color"),f=b._convertRgbToHex(g);return f?(document.execCommand("foreColor",!1,f),b.editor.util.support.oninput?void 0:b.editor.trigger("valuechanged")):void 0}}(this))},c.prototype._convertRgbToHex=function(a){var b,c,d;return c=/rgb\((\d+),\s?(\d+),\s?(\d+)\)/g,(b=c.exec(a))?(d=function(a,b,c){var d;return d=function(a){var b;return b=a.toString(16),1===b.length?"0"+b:b},"#"+d(a)+d(b)+d(c)})(1*b[1],1*b[2],1*b[3]):""},c}(h),B.Toolbar.addButton(k),w=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.type="",c.prototype.disableTag="pre, table",c.prototype.status=function(a){var b;return null!=a&&this.setDisabled(a.is(this.disableTag)),this.disabled?!0:null==a?this.active:(b="ul"===this.type?"ol":"ul",a.is(b)?(this.setActive(!1),!0):(this.setActive(a.is(this.htmlTag)),this.active))},c.prototype.command=function(b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s;for(o=this.editor.selection.getRange(),s=o.startContainer,j=o.endContainer,h=this.editor.util.closestBlockEl(s),d=this.editor.util.closestBlockEl(j),this.editor.selection.save(),o.setStartBefore(h[0]),o.setEndAfter(d[0]),h.is("li")&&d.is("li")&&(f=this.editor.util.furthestNode(h,"ul, ol"),e=this.editor.util.furthestNode(d,"ul, ol"),f.is(e)?(k=function(a){var b;for(b=1;!a.parent().is(f);)b+=1,a=a.parent();return b},r=k(h),i=k(d),g=r>i?d.parent():h.parent(),o.setStartBefore(g[0]),o.setEndAfter(g[0])):(o.setStartBefore(f[0]),o.setEndAfter(e[0]))),c=a(o.extractContents()),q=[],c.children().each(function(a){return function(b,c){var d,e,f,g,h;for(e=a._convertEl(c),h=[],f=0,g=e.length;g>f;f++)d=e[f],h.push(q.length&&q[q.length-1].is(a.type)&&d.is(a.type)?q[q.length-1].append(d.children()):q.push(d));return h}}(this)),p=q.reverse(),l=0,m=p.length;m>l;l++)n=p[l],o.insertNode(n[0]);return this.editor.selection.restore(),this.editor.trigger("valuechanged")},c.prototype._convertEl=function(b){var c,d,e,f,g,h,i,j,k;if(c=a(b),k=[],d="ul"===this.type?"ol":"ul",c.is(this.type))c.children("li").each(function(b){return function(c,d){var e,f,g;return f=a(d),e=f.children("ul, ol").remove(),g=a("<p/>").append(a(d).html()||b.editor.util.phBr),k.push(g),e.length>0?k.push(e):void 0}}(this));else if(c.is(d))e=a("<"+this.type+"/>").append(c.html()),k.push(e);else if(c.is("blockquote")){for(j=c.children().get(),h=0,i=j.length;i>h;h++)f=j[h],g=this._convertEl(f);a.merge(k,g)}else c.is("table")||(e=a("<"+this.type+"><li></li></"+this.type+">"),e.find("li").append(c.html()||this.editor.util.phBr),k.push(e));return k},c}(h),x=function(a){function b(){return b.__super__.constructor.apply(this,arguments)}return K(b,a),b.prototype.type="ol",b.prototype.name="ol",b.prototype.icon="list-ol",b.prototype.htmlTag="ol",b.prototype.shortcut="cmd+/",b.prototype._init=function(){return this.editor.util.os.mac?this.title=this.title+" ( Cmd + / )":(this.title=this.title+" ( ctrl + / )",this.shortcut="ctrl+/"),b.__super__._init.call(this)},b}(w),I=function(a){function b(){return b.__super__.constructor.apply(this,arguments)}return K(b,a),b.prototype.type="ul",b.prototype.name="ul",b.prototype.icon="list-ul",b.prototype.htmlTag="ul",b.prototype.shortcut="cmd+.",b.prototype._init=function(){return this.editor.util.os.mac?this.title=this.title+" ( Cmd + . )":(this.title=this.title+" ( Ctrl + . )",this.shortcut="ctrl+."),b.__super__._init.call(this)},b}(w),B.Toolbar.addButton(x),B.Toolbar.addButton(I),f=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.name="blockquote",c.prototype.icon="quote-left",c.prototype.htmlTag="blockquote",c.prototype.disableTag="pre, table",c.prototype.command=function(){var b,c,d,e,f,g,h,i,j,k,l;for(i=this.editor.selection.getRange(),l=i.startContainer,e=i.endContainer,d=this.editor.util.furthestBlockEl(l),c=this.editor.util.furthestBlockEl(e),this.editor.selection.save(),i.setStartBefore(d[0]),i.setEndAfter(c[0]),b=a(i.extractContents()),k=[],b.children().each(function(a){return function(b,c){var d,e,f,g,h;for(e=a._convertEl(c),h=[],f=0,g=e.length;g>f;f++)d=e[f],h.push(k.length&&k[k.length-1].is(a.htmlTag)&&d.is(a.htmlTag)?k[k.length-1].append(d.children()):k.push(d));return h}}(this)),j=k.reverse(),f=0,g=j.length;g>f;f++)h=j[f],i.insertNode(h[0]);return this.editor.selection.restore(),this.editor.trigger("valuechanged")},c.prototype._convertEl=function(b){var c,d,e;return c=a(b),e=[],c.is(this.htmlTag)?c.children().each(function(b){return function(b,c){return e.push(a(c))}}(this)):(d=a("<"+this.htmlTag+"/>").append(c),e.push(d)),e},c}(h),B.Toolbar.addButton(f),i=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.name="code",c.prototype.icon="code",c.prototype.htmlTag="pre",c.prototype.disableTag="li, table",c.prototype._init=function(){return c.__super__._init.call(this),this.editor.on("decorate",function(b){return function(c,d){return d.find("pre").each(function(c,d){return b.decorate(a(d))})}}(this)),this.editor.on("undecorate",function(b){return function(c,d){return d.find("pre").each(function(c,d){return b.undecorate(a(d))})}}(this))},c.prototype.render=function(){var a;return a=1<=arguments.length?N.call(arguments,0):[],c.__super__.render.apply(this,a),this.popover=new j({button:this})},c.prototype.status=function(a){var b;return b=c.__super__.status.call(this,a),this.active?this.popover.show(a):this.editor.util.isBlockNode(a)&&this.popover.hide(),b},c.prototype.decorate=function(a){var b;return b=a.attr("data-lang"),a.removeClass(),b&&-1!==b?a.addClass("lang-"+b):void 0},c.prototype.undecorate=function(a){var b;return b=a.attr("data-lang"),a.removeClass(),b&&-1!==b?a.addClass("lang-"+b):void 0},c.prototype.command=function(){var b,c,d,e,f,g,h,i,j,k,l;for(i=this.editor.selection.getRange(),l=i.startContainer,e=i.endContainer,d=this.editor.util.closestBlockEl(l),c=this.editor.util.closestBlockEl(e),i.setStartBefore(d[0]),i.setEndAfter(c[0]),b=a(i.extractContents()),k=[],b.children().each(function(a){return function(b,c){var d,e,f,g,h;for(e=a._convertEl(c),h=[],f=0,g=e.length;g>f;f++)d=e[f],h.push(k.length&&k[k.length-1].is(a.htmlTag)&&d.is(a.htmlTag)?k[k.length-1].append(d.contents()):k.push(d));return h}}(this)),j=k.reverse(),f=0,g=j.length;g>f;f++)h=j[f],i.insertNode(h[0]);return this.editor.selection.setRangeAtEndOf(k[0]),this.editor.trigger("valuechanged")},c.prototype._convertEl=function(b){var c,d,e,f;return c=a(b),f=[],c.is(this.htmlTag)?(d=a("<p/>").append(c.html().replace("\n","<br/>")),f.push(d)):(e=!c.text()&&1===c.children().length&&c.children().is("br")?"\n":this.editor.formatter.clearHtml(c),d=a("<"+this.htmlTag+"/>").text(e),f.push(d)),f},c}(h),j=function(a){function b(){return b.__super__.constructor.apply(this,arguments)}return K(b,a),b.prototype._tpl='<div class="code-settings">\n  <div class="settings-field">\n    <select class="select-lang">\n      <option value="-1">选择程序语言</option>\n      <option value="bash">Bash</option>\n      <option value="c++">C++</option>\n      <option value="cs">C#</option>\n      <option value="css">CSS</option>\n      <option value="erlang">Erlang</option>\n      <option value="less">Less</option>\n      <option value="scss">Sass</option>\n      <option value="diff">Diff</option>\n      <option value="coffeeScript">CoffeeScript</option>\n      <option value="html">Html,XML</option>\n      <option value="json">JSON</option>\n      <option value="java">Java</option>\n      <option value="js">JavaScript</option>\n      <option value="markdown">Markdown</option>\n      <option value="oc">Objective C</option>\n      <option value="php">PHP</option>\n      <option value="perl">Perl</option>\n      <option value="python">Python</option>\n      <option value="ruby">Ruby</option>\n      <option value="sql">SQL</option>\n    </select>\n  </div>\n</div>',b.prototype.render=function(){return this.el.addClass("code-popover").append(this._tpl),this.selectEl=this.el.find(".select-lang"),this.selectEl.on("change",function(a){return function(b){var c;return a.lang=a.selectEl.val(),c=a.target.hasClass("selected"),a.target.removeClass().removeAttr("data-lang"),-1!==a.lang&&(a.target.addClass("lang-"+a.lang),a.target.attr("data-lang",a.lang)),c?a.target.addClass("selected"):void 0}}(this)),this.editor.on("valuechanged",function(a){return function(b){return a.active?a.refresh():void 0}}(this))},b.prototype.show=function(){var a;return a=1<=arguments.length?N.call(arguments,0):[],b.__super__.show.apply(this,a),this.lang=this.target.attr("data-lang"),this.selectEl.val(null!=this.lang?this.lang:-1)},b}(z),B.Toolbar.addButton(i),u=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.name="link",c.prototype.icon="link",c.prototype.htmlTag="a",c.prototype.disableTag="pre",c.prototype.render=function(){var a;return a=1<=arguments.length?N.call(arguments,0):[],c.__super__.render.apply(this,a),this.popover=new v({button:this})},c.prototype.status=function(a){
var b;return null!=a&&this.setDisabled(a.is(this.disableTag)),this.disabled?!0:null==a?this.active:(b=!0,!a.is(this.htmlTag)||a.is('[class^="simditor-"]')?(this.setActive(!1),b=!1):this.editor.selection.rangeAtEndOf(a)?(this.setActive(!0),b=!1):this.setActive(!0),b?this.popover.show(a):this.editor.util.isBlockNode(a)&&this.popover.hide(),this.active)},c.prototype.command=function(){var b,c,d,e,f,g,h,i,j,k;return i=this.editor.selection.getRange(),this.active?(d=a(i.commonAncestorContainer).closest("a"),k=document.createTextNode(d.text()),d.replaceWith(k),i.selectNode(k)):(j=i.startContainer,g=i.endContainer,f=this.editor.util.closestBlockEl(j),c=this.editor.util.closestBlockEl(g),b=a(i.extractContents()),h=this.editor.formatter.clearHtml(b.contents(),!1),d=a("<a/>",{href:"http://www.example.com",target:"_blank",text:h||this._t("linkText")}),f[0]===c[0]?i.insertNode(d[0]):(e=a("<p/>").append(d),i.insertNode(e[0])),i.selectNodeContents(d[0]),this.popover.one("popovershow",function(a){return function(){return h?(a.popover.urlEl.focus(),a.popover.urlEl[0].select()):(a.popover.textEl.focus(),a.popover.textEl[0].select())}}(this))),this.editor.selection.selectRange(i),this.editor.trigger("valuechanged")},c}(h),v=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.render=function(){var b;return b='<div class="link-settings">\n  <div class="settings-field">\n    <label>'+this._t("text")+'</label>\n    <input class="link-text" type="text"/>\n    <a class="btn-unlink" href="javascript:;" title="'+this._t("removeLink")+'" tabindex="-1"><span class="simditor-icon simditor-icon-unlink"></span></a>\n  </div>\n  <div class="settings-field">\n    <label>'+this._t("linkUrl")+'</label>\n    <input class="link-url" type="text"/>\n  </div>\n</div>',this.el.addClass("link-popover").append(b),this.textEl=this.el.find(".link-text"),this.urlEl=this.el.find(".link-url"),this.unlinkEl=this.el.find(".btn-unlink"),this.textEl.on("keyup",function(a){return function(b){return 13!==b.which?a.target.text(a.textEl.val()):void 0}}(this)),this.urlEl.on("keyup",function(a){return function(b){var c;if(13!==b.which)return c=a.urlEl.val(),!/https?:\/\/|^\//gi.test(c)&&c&&(c="http://"+c),a.target.attr("href",c)}}(this)),a([this.urlEl[0],this.textEl[0]]).on("keydown",function(b){return function(c){return 13===c.which||27===c.which||!c.shiftKey&&9===c.which&&a(c.target).hasClass("link-url")?(c.preventDefault(),setTimeout(function(){var a;return a=document.createRange(),b.editor.selection.setRangeAfter(b.target,a),b.hide(),b.editor.trigger("valuechanged")},0)):void 0}}(this)),this.unlinkEl.on("click",function(a){return function(b){var c,d;return d=document.createTextNode(a.target.text()),a.target.replaceWith(d),a.hide(),c=document.createRange(),a.editor.selection.setRangeAfter(d,c),a.editor.trigger("valuechanged")}}(this))},c.prototype.show=function(){var a;return a=1<=arguments.length?N.call(arguments,0):[],c.__super__.show.apply(this,a),this.textEl.val(this.target.text()),this.urlEl.val(this.target.attr("href"))},c}(z),B.Toolbar.addButton(u),n=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.name="image",c.prototype.icon="picture-o",c.prototype.htmlTag="img",c.prototype.disableTag="pre, table",c.prototype.defaultImage="",c.prototype.needFocus=!1,c.prototype._init=function(){var b,d,e,f;if(this.editor.opts.imageButton)if(Array.isArray(this.editor.opts.imageButton))for(this.menu=[],f=this.editor.opts.imageButton,d=0,e=f.length;e>d;d++)b=f[d],this.menu.push({name:b+"-image",text:this._t(b+"Image")});else this.menu=!1;else null!=this.editor.uploader?this.menu=[{name:"upload-image",text:this._t("uploadImage")},{name:"external-image",text:this._t("externalImage")}]:this.menu=!1;return this.defaultImage=this.editor.opts.defaultImage,this.editor.body.on("click","img:not([data-non-image])",function(b){return function(c){var d,e;return d=a(c.currentTarget),e=document.createRange(),e.selectNode(d[0]),b.editor.selection.selectRange(e),b.editor.util.support.onselectionchange||b.editor.trigger("selectionchanged"),!1}}(this)),this.editor.body.on("mouseup","img:not([data-non-image])",function(a){return function(a){return!1}}(this)),this.editor.on("selectionchanged.image",function(b){return function(){var c,d,e;return e=b.editor.selection.getRange(),null!=e?(c=a(e.cloneContents()).contents(),1===c.length&&c.is("img:not([data-non-image])")?(d=a(e.startContainer).contents().eq(e.startOffset),b.popover.show(d)):b.popover.hide()):void 0}}(this)),this.editor.on("valuechanged.image",function(b){return function(){var c;return c=b.editor.wrapper.find(".simditor-image-loading"),c.length>0?c.each(function(c,d){var e,f,g;return f=a(d),e=f.data("img"),!(e&&e.parent().length>0)&&(f.remove(),e&&(g=e.data("file"),g&&(b.editor.uploader.cancel(g),b.editor.body.find("img.uploading").length<1)))?b.editor.uploader.trigger("uploadready",[g]):void 0}):void 0}}(this)),c.__super__._init.call(this)},c.prototype.render=function(){var a;return a=1<=arguments.length?N.call(arguments,0):[],c.__super__.render.apply(this,a),this.popover=new o({button:this}),"upload"===this.editor.opts.imageButton?this._initUploader(this.el):void 0},c.prototype.renderMenu=function(){return c.__super__.renderMenu.call(this),this._initUploader()},c.prototype._initUploader=function(b){var c,d;return null==b&&(b=this.menuEl.find(".menu-item-upload-image")),null==this.editor.uploader?void this.el.find(".btn-upload").remove():(c=null,d=function(d){return function(){return c&&c.remove(),c=a('<input type="file" title="'+d._t("uploadImage")+'" accept="image/*">').appendTo(b)}}(this),d(),b.on("click mousedown","input[type=file]",function(a){return function(a){return a.stopPropagation()}}(this)),b.on("change","input[type=file]",function(a){return function(b){return a.editor.inputManager.focused?(a.editor.uploader.upload(c,{inline:!0}),d()):(a.editor.one("focus",function(b){return a.editor.uploader.upload(c,{inline:!0}),d()}),a.editor.focus()),a.wrapper.removeClass("menu-on")}}(this)),this.editor.uploader.on("beforeupload",function(b){return function(c,d){var e;if(d.inline)return d.img?e=a(d.img):(e=b.createImage(d.name),d.img=e),e.addClass("uploading"),e.data("file",d),b.editor.uploader.readImageFile(d.obj,function(a){var c;if(e.hasClass("uploading"))return c=a?a.src:b.defaultImage,b.loadImage(e,c,function(){return b.popover.active?(b.popover.refresh(),b.popover.srcEl.val(b._t("uploading")).prop("disabled",!0)):void 0})})}}(this)),this.editor.uploader.on("uploadprogress",a.proxy(this.editor.util.throttle(function(a,b,c,d){var e,f,g;if(b.inline&&(f=b.img.data("mask")))return e=f.data("img"),e.hasClass("uploading")&&e.parent().length>0?(g=c/d,g=(100*g).toFixed(0),g>99&&(g=99),f.find(".progress").height(100-g+"%")):void f.remove()},500),this)),this.editor.uploader.on("uploadsuccess",function(b){return function(c,d,e){var f,g,h;if(d.inline&&(f=d.img,f.hasClass("uploading")&&f.parent().length>0)){if(f.removeData("file"),f.removeClass("uploading").removeClass("loading"),g=f.data("mask"),g&&g.remove(),f.removeData("mask"),"object"!=typeof e)try{e=a.parseJSON(e)}catch(i){c=i,e={success:!1}}return e.success===!1?(h=e.msg||b._t("uploadFailed"),alert(h),f.attr("src",b.defaultImage)):f.attr("src",e.file_path),b.popover.active&&(b.popover.srcEl.prop("disabled",!1),b.popover.srcEl.val(e.file_path)),b.editor.trigger("valuechanged"),b.editor.body.find("img.uploading").length<1?b.editor.uploader.trigger("uploadready",[d,e]):void 0}}}(this)),this.editor.uploader.on("uploaderror",function(b){return function(c,d,e){var f,g,h,i;if(d.inline&&"abort"!==e.statusText){if(e.responseText){try{i=a.parseJSON(e.responseText),h=i.msg}catch(j){c=j,h=b._t("uploadError")}alert(h)}if(f=d.img,f.hasClass("uploading")&&f.parent().length>0)return f.removeData("file"),f.removeClass("uploading").removeClass("loading"),g=f.data("mask"),g&&g.remove(),f.removeData("mask"),f.attr("src",b.defaultImage),b.popover.active&&(b.popover.srcEl.prop("disabled",!1),b.popover.srcEl.val(b.defaultImage)),b.editor.trigger("valuechanged"),b.editor.body.find("img.uploading").length<1?b.editor.uploader.trigger("uploadready",[d,i]):void 0}}}(this)))},c.prototype.status=function(a){return null!=a&&this.setDisabled(a.is(this.disableTag)),this.disabled?!0:void 0},c.prototype.loadImage=function(b,c,d){var e,f,g;return g=function(a){return function(){var c,d;return c=b.offset(),d=a.editor.wrapper.offset(),e.css({top:c.top-d.top,left:c.left-d.left,width:b.width(),height:b.height()}).show()}}(this),b.addClass("loading"),e=b.data("mask"),e||(e=a('<div class="simditor-image-loading"><div class="progress"></div></div>').hide().appendTo(this.editor.wrapper),g(),b.data("mask",e),e.data("img",b)),f=new Image,f.onload=function(a){return function(){var h,i;if(b.hasClass("loading")||b.hasClass("uploading"))return i=f.width,h=f.height,b.attr({src:c,"data-image-size":i+","+h}).removeClass("loading"),b.hasClass("uploading")?(a.editor.util.reflow(a.editor.body),g()):(e.remove(),b.removeData("mask")),d(f)}}(this),f.onerror=function(a){return function(){return d(!1),e.remove(),b.removeData("mask").removeClass("loading")}}(this),f.src=c},c.prototype.createImage=function(b){var c,d,e,f;return null==b&&(b="Image"),this.editor.inputManager.focused||this.editor.focus(),f=this.editor.selection.getRange(),f.deleteContents(),c=this.editor.util.closestBlockEl(),c.is("p")&&!this.editor.util.isEmptyNode(c)&&(c=a("<p/>").append(this.editor.util.phBr).insertAfter(c),this.editor.selection.setRangeAtStartOf(c,f)),d=a("<img/>").attr("alt",b),f.insertNode(d[0]),e=c.next("p"),e.length>0||(e=a("<p/>").append(this.editor.util.phBr).insertAfter(c)),this.editor.selection.setRangeAtStartOf(e),d},c.prototype.command=function(a){var b;return b=this.createImage(),this.loadImage(b,a||this.defaultImage,function(a){return function(){return a.editor.trigger("valuechanged"),a.editor.util.reflow(b),b.click(),a.popover.one("popovershow",function(){return a.popover.srcEl.focus(),a.popover.srcEl[0].select()})}}(this))},c}(h),o=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.offset={top:6,left:-4},c.prototype.render=function(){var b;return b='<div class="link-settings">\n  <div class="settings-field">\n    <label>'+this._t("imageUrl")+'</label>\n    <input class="image-src" type="text" tabindex="1" />\n    <a class="btn-upload" href="javascript:;" title="'+this._t("uploadImage")+'" tabindex="-1">\n      <span class="simditor-icon simditor-icon-upload"></span>\n    </a>\n  </div>\n  <div class=\'settings-field\'>\n    <label>'+this._t("imageAlt")+'</label>\n    <input class="image-alt" id="image-alt" type="text" tabindex="1" />\n  </div>\n  <div class="settings-field">\n    <label>'+this._t("imageSize")+'</label>\n    <input class="image-size" id="image-width" type="text" tabindex="2" />\n    <span class="times">×</span>\n    <input class="image-size" id="image-height" type="text" tabindex="3" />\n    <a class="btn-restore" href="javascript:;" title="'+this._t("restoreImageSize")+'" tabindex="-1">\n      <span class="simditor-icon simditor-icon-undo"></span>\n    </a>\n  </div>\n</div>',this.el.addClass("image-popover").append(b),this.srcEl=this.el.find(".image-src"),this.widthEl=this.el.find("#image-width"),this.heightEl=this.el.find("#image-height"),this.altEl=this.el.find("#image-alt"),this.srcEl.on("keydown",function(a){return function(b){return 13!==b.which||a.target.hasClass("uploading")?void 0:(b.preventDefault(),a.button.editor.body.focus(),a.button.editor.selection.setRangeAfter(a.target),a.hide())}}(this)),this.srcEl.on("blur",function(a){return function(b){return a._loadImage(a.srcEl.val())}}(this)),this.el.find(".image-size").on("blur",function(b){return function(c){return b._resizeImg(a(c.currentTarget)),b.el.data("popover").refresh()}}(this)),this.el.find(".image-size").on("keyup",function(b){return function(c){var d;return d=a(c.currentTarget),13!==c.which&&27!==c.which&&9!==c.which?b._resizeImg(d,!0):void 0}}(this)),this.el.find(".image-size").on("keydown",function(b){return function(c){var d;return d=a(c.currentTarget),13===c.which||27===c.which?(c.preventDefault(),13===c.which?b._resizeImg(d):b._restoreImg(),b.button.editor.body.focus(),b.button.editor.selection.setRangeAfter(b.target),b.hide()):9===c.which?b.el.data("popover").refresh():void 0}}(this)),this.altEl.on("keydown",function(a){return function(b){return 13===b.which?(b.preventDefault(),a.button.editor.body.focus(),a.button.editor.selection.setRangeAfter(a.target),a.hide()):void 0}}(this)),this.altEl.on("keyup",function(a){return function(b){return 13!==b.which&&27!==b.which&&9!==b.which?(a.alt=a.altEl.val(),a.target.attr("alt",a.alt)):void 0}}(this)),this.el.find(".btn-restore").on("click",function(a){return function(b){return a._restoreImg(),a.el.data("popover").refresh()}}(this)),this.editor.on("valuechanged",function(a){return function(b){return a.active?a.refresh():void 0}}(this)),this._initUploader()},c.prototype._initUploader=function(){var b,c;return b=this.el.find(".btn-upload"),null==this.editor.uploader?void b.remove():(c=function(c){return function(){return c.input&&c.input.remove(),c.input=a('<input type="file" title="'+c._t("uploadImage")+'" accept="image/*">').appendTo(b)}}(this),c(),this.el.on("click mousedown","input[type=file]",function(a){return function(a){return a.stopPropagation()}}(this)),this.el.on("change","input[type=file]",function(a){return function(b){return a.editor.uploader.upload(a.input,{inline:!0,img:a.target}),c()}}(this)))},c.prototype._resizeImg=function(b,c){var d,e,f;return null==c&&(c=!1),e=1*b.val(),a.isNumeric(e)||0>e?(b.is(this.widthEl)?(d=this.height*e/this.width,this.heightEl.val(d)):(f=this.width*e/this.height,this.widthEl.val(f)),c||this.target.attr({width:f||e,height:d||e}),this.editor.trigger("valuechanged")):void 0},c.prototype._restoreImg=function(){var a,b;return b=(null!=(a=this.target.data("image-size"))?a.split(","):void 0)||[this.width,this.height],this.target.attr({width:1*b[0],height:1*b[1]}),this.widthEl.val(b[0]),this.heightEl.val(b[1]),this.editor.trigger("valuechanged")},c.prototype._loadImage=function(a,b){return/^data:image/.test(a)&&!this.editor.uploader?void(b&&b(!1)):this.button.loadImage(this.target,a,function(c){return function(d){var e;if(d)return c.active&&(c.width=d.width,c.height=d.height,c.widthEl.val(c.width),c.heightEl.val(c.height),c.target.removeAttr("width").removeAttr("height")),/^data:image/.test(a)?(e=c.editor.util.dataURLtoBlob(a),e.name="Base64 Image.png",c.editor.uploader.upload(e,{inline:!0,img:c.target})):c.editor.trigger("valuechanged"),b?b(d):void 0}}(this))},c.prototype.show=function(){var a,b;return b=1<=arguments.length?N.call(arguments,0):[],c.__super__.show.apply(this,b),a=this.target,this.width=a.width(),this.height=a.height(),this.alt=a.attr("alt"),a.hasClass("uploading")?this.srcEl.val(this._t("uploading")).prop("disabled",!0):(this.srcEl.val(a.attr("src")).prop("disabled",!1),this.widthEl.val(this.width),this.heightEl.val(this.height),this.altEl.val(this.alt))},c}(z),B.Toolbar.addButton(n),p=function(a){function b(){return b.__super__.constructor.apply(this,arguments)}return K(b,a),b.prototype.name="indent",b.prototype.icon="indent",b.prototype._init=function(){return this.title=this._t(this.name)+" (Tab)",b.__super__._init.call(this)},b.prototype.status=function(a){return!0},b.prototype.command=function(){return this.editor.indentation.indent()},b}(h),B.Toolbar.addButton(p),y=function(a){function b(){return b.__super__.constructor.apply(this,arguments)}return K(b,a),b.prototype.name="outdent",b.prototype.icon="outdent",b.prototype._init=function(){return this.title=this._t(this.name)+" (Shift + Tab)",b.__super__._init.call(this)},b.prototype.status=function(a){return!0},b.prototype.command=function(){return this.editor.indentation.indent(!0)},b}(h),B.Toolbar.addButton(y),m=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.name="hr",c.prototype.icon="minus",c.prototype.htmlTag="hr",c.prototype.status=function(a){return!0},c.prototype.command=function(){var b,c,d,e;return e=this.editor.util.furthestBlockEl(),d=e.next(),d.length>0?this.editor.selection.save():c=a("<p/>").append(this.editor.util.phBr),b=a("<hr/>").insertAfter(e),c?(c.insertAfter(b),this.editor.selection.setRangeAtStartOf(c)):this.editor.selection.restore(),this.editor.trigger("valuechanged")},c}(h),B.Toolbar.addButton(m),D=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.name="table",c.prototype.icon="table",c.prototype.htmlTag="table",c.prototype.disableTag="pre, li, blockquote",c.prototype.menu=!0,c.prototype._init=function(){return c.__super__._init.call(this),a.merge(this.editor.formatter._allowedTags,["tbody","tr","td","colgroup","col"]),a.extend(this.editor.formatter._allowedAttributes,{td:["rowspan","colspan"],col:["width"]}),this._initShortcuts(),this.editor.on("decorate",function(b){return function(c,d){return d.find("table").each(function(c,d){return b.decorate(a(d))})}}(this)),this.editor.on("undecorate",function(b){return function(c,d){return d.find("table").each(function(c,d){return b.undecorate(a(d))})}}(this)),this.editor.on("selectionchanged.table",function(b){return function(c){var d,e;return b.editor.body.find(".simditor-table td").removeClass("active"),e=b.editor.selection.getRange(),null!=e?(d=a(e.commonAncestorContainer),e.collapsed&&d.is(".simditor-table")&&(d=d.find(b.editor.selection.rangeAtStartOf(d)?"td:first":"td:last"),b.editor.selection.setRangeAtEndOf(d)),d.closest("td",b.editor.body).addClass("active")):void 0}}(this)),this.editor.on("blur.table",function(a){return function(b){return a.editor.body.find(".simditor-table td").removeClass("active")}}(this)),this.editor.inputManager.addKeystrokeHandler("38","td",function(a){return function(b,c){var d,e,f;return e=c.parent("tr"),d=e.prev("tr"),d.length>0?(f=e.find("td").index(c),a.editor.selection.setRangeAtEndOf(d.find("td").eq(f)),!0):!0}}(this)),this.editor.inputManager.addKeystrokeHandler("40","td",function(a){return function(b,c){var d,e,f;return e=c.parent("tr"),d=e.next("tr"),d.length>0?(f=e.find("td").index(c),a.editor.selection.setRangeAtEndOf(d.find("td").eq(f)),!0):!0}}(this))},c.prototype.initResize=function(b){var c,d,e;return e=b.parent(".simditor-table"),c=b.find("colgroup"),c.length<1&&(c=a("<colgroup/>").prependTo(b),b.find("tr:first td").each(function(b){return function(b,d){var e;return e=a("<col/>").appendTo(c)}}(this)),this.refreshTableWidth(b)),d=a('<div class="simditor-resize-handle" contenteditable="false"></div>').appendTo(e),e.on("mousemove","td",function(b){return function(b){var f,g,h,i,j,k;if(!e.hasClass("resizing"))return g=a(b.currentTarget),k=b.pageX-a(b.currentTarget).offset().left,5>k&&g.prev().length>0&&(g=g.prev()),g.next("td").length<1?void d.hide():(null!=(i=d.data("td"))?i.is(g):void 0)?void d.show():(h=g.parent().find("td").index(g),f=c.find("col").eq(h),(null!=(j=d.data("col"))?j.is(f):void 0)?void d.show():d.css("left",g.position().left+g.outerWidth()-5).data("td",g).data("col",f).show())}}(this)),e.on("mouseleave",function(a){return function(a){return d.hide()}}(this)),e.on("mousedown",".simditor-resize-handle",function(b){return function(b){var c,d,f,g,h,i,j,k,l,m,n;return c=a(b.currentTarget),f=c.data("td"),d=c.data("col"),h=f.next("td"),g=d.next("col"),m=b.pageX,k=1*f.outerWidth(),l=1*h.outerWidth(),j=parseFloat(c.css("left")),n=f.closest("table").width(),i=50,a(document).on("mousemove.simditor-resize-table",function(a){var b,e,f;return b=a.pageX-m,e=k+b,f=l-b,i>e?(e=i,b=i-k,f=l-b):i>f&&(f=i,b=l-i,e=k+b),d.attr("width",e/n*100+"%"),g.attr("width",f/n*100+"%"),c.css("left",j+b)}),a(document).one("mouseup.simditor-resize-table",function(b){return a(document).off(".simditor-resize-table"),e.removeClass("resizing")}),e.addClass("resizing"),!1}}(this))},c.prototype._initShortcuts=function(){return this.editor.inputManager.addShortcut("ctrl+alt+up",function(a){return function(b){return a.editMenu.find(".menu-item[data-param=insertRowAbove]").click(),!1}}(this)),this.editor.inputManager.addShortcut("ctrl+alt+down",function(a){return function(b){return a.editMenu.find(".menu-item[data-param=insertRowBelow]").click(),!1}}(this)),this.editor.inputManager.addShortcut("ctrl+alt+left",function(a){return function(b){return a.editMenu.find(".menu-item[data-param=insertColLeft]").click(),!1}}(this)),this.editor.inputManager.addShortcut("ctrl+alt+right",function(a){return function(b){return a.editMenu.find(".menu-item[data-param=insertColRight]").click(),!1}}(this))},c.prototype.decorate=function(a){return a.parent(".simditor-table").length>0&&this.undecorate(a),a.wrap('<div class="simditor-table"></div>'),this.initResize(a),a.parent()},c.prototype.undecorate=function(a){return a.parent(".simditor-table").length>0?a.parent().replaceWith(a):void 0},c.prototype.renderMenu=function(){return a('<div class="menu-create-table">\n</div>\n<div class="menu-edit-table">\n  <ul>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="deleteRow"><span>'+this._t("deleteRow")+'</span></a></li>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="insertRowAbove"><span>'+this._t("insertRowAbove")+' ( Ctrl + Alt + ↑ )</span></a></li>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="insertRowBelow"><span>'+this._t("insertRowBelow")+' ( Ctrl + Alt + ↓ )</span></a></li>\n    <li><span class="separator"></span></li>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="deleteCol"><span>'+this._t("deleteColumn")+'</span></a></li>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="insertColLeft"><span>'+this._t("insertColumnLeft")+' ( Ctrl + Alt + ← )</span></a></li>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="insertColRight"><span>'+this._t("insertColumnRight")+' ( Ctrl + Alt + → )</span></a></li>\n    <li><span class="separator"></span></li>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="deleteTable"><span>'+this._t("deleteTable")+"</span></a></li>\n  </ul>\n</div>").appendTo(this.menuWrapper),this.createMenu=this.menuWrapper.find(".menu-create-table"),this.editMenu=this.menuWrapper.find(".menu-edit-table"),this.createTable(6,6).appendTo(this.createMenu),this.createMenu.on("mouseenter","td",function(b){return function(c){var d,e,f;return b.createMenu.find("td").removeClass("selected"),d=a(c.currentTarget),e=d.parent(),f=e.find("td").index(d)+1,e.prevAll("tr").addBack().find("td:lt("+f+")").addClass("selected")}}(this)),this.createMenu.on("mouseleave",function(b){return function(b){return a(b.currentTarget).find("td").removeClass("selected")}}(this)),this.createMenu.on("mousedown","td",function(b){return function(c){var d,e,f,g,h,i;return b.wrapper.removeClass("menu-on"),b.editor.inputManager.focused?(f=a(c.currentTarget),g=f.parent(),h=g.find("td").index(f)+1,i=g.prevAll("tr").length+1,e=b.createTable(i,h,!0),d=b.editor.util.closestBlockEl(),b.editor.util.isEmptyNode(d)?d.replaceWith(e):d.after(e),b.decorate(e),b.editor.selection.setRangeAtStartOf(e.find("td:first")),b.editor.trigger("valuechanged"),!1):void 0}}(this))},c.prototype.createTable=function(b,c,d){var e,f,g,h,i,j,k,l,m,n;for(e=a("<table/>"),f=a("<tbody/>").appendTo(e),l=j=0,m=b;m>=0?m>j:j>m;l=m>=0?++j:--j)for(h=a("<tr/>").appendTo(f),i=k=0,n=c;n>=0?n>k:k>n;i=n>=0?++k:--k)g=a("<td/>").appendTo(h),d&&g.append(this.editor.util.phBr);return e},c.prototype.refreshTableWidth=function(b){var c,d;return d=b.width(),c=b.find("col"),b.find("tr:first td").each(function(b){return function(b,e){var f;return f=c.eq(b),f.attr("width",a(e).outerWidth()/d*100+"%")}}(this))},c.prototype.setActive=function(a){return c.__super__.setActive.call(this,a),a?(this.createMenu.hide(),this.editMenu.show()):(this.createMenu.show(),this.editMenu.hide())},c.prototype.deleteRow=function(a){var b,c,d;return c=a.parent("tr"),c.siblings("tr").length<1?this.deleteTable(a):(b=c.next("tr"),b.length>0||(b=c.prev("tr")),d=c.find("td").index(a),c.remove(),this.editor.selection.setRangeAtEndOf(b.find("td").eq(d)))},c.prototype.insertRow=function(b,c){var d,e,f,g,h,i,j,k;for(null==c&&(c="after"),f=b.parent("tr"),e=f.closest("table"),g=0,e.find("tr").each(function(b){return function(b,c){return g=Math.max(g,a(c).find("td").length)}}(this)),d=a("<tr/>"),h=j=1,k=g;k>=1?k>=j:j>=k;h=k>=1?++j:--j)a("<td/>").append(this.editor.util.phBr).appendTo(d);return f[c](d),i=f.find("td").index(b),this.editor.selection.setRangeAtStartOf(d.find("td").eq(i))},c.prototype.deleteCol=function(b){var c,d,e,f;return e=b.parent("tr"),e.siblings("tr").length<1&&b.siblings("td").length<1?this.deleteTable(b):(f=e.find("td").index(b),c=b.next("td"),c.length>0||(c=e.prev("td")),d=e.closest("table"),d.find("col").eq(f).remove(),d.find("tr").each(function(b){return function(b,c){return a(c).find("td").eq(f).remove()}}(this)),this.refreshTableWidth(d),this.editor.selection.setRangeAtEndOf(c))},c.prototype.insertCol=function(b,c){var d,e,f,g,h,i,j,k;return null==c&&(c="after"),h=b.parent("tr"),i=h.find("td").index(b),g=b.closest("table"),d=g.find("col").eq(i),g.find("tr").each(function(b){return function(d,e){var f;return f=a("<td/>").append(b.editor.util.phBr),a(e).find("td").eq(i)[c](f)}}(this)),e=a("<col/>"),d[c](e),j=g.width(),k=Math.max(parseFloat(d.attr("width"))/2,50/j*100),d.attr("width",k+"%"),e.attr("width",k+"%"),this.refreshTableWidth(g),f="after"===c?b.next("td"):b.prev("td"),this.editor.selection.setRangeAtStartOf(f)},c.prototype.deleteTable=function(a){var b,c;return c=a.closest(".simditor-table"),b=c.next("p"),c.remove(),b.length>0?this.editor.selection.setRangeAtStartOf(b):void 0},c.prototype.command=function(b){var c,d;if(d=this.editor.selection.getRange(),c=a(d.commonAncestorContainer).closest("td"),c.length>0){if("deleteRow"===b)this.deleteRow(c);else if("insertRowAbove"===b)this.insertRow(c,"before");else if("insertRowBelow"===b)this.insertRow(c);else if("deleteCol"===b)this.deleteCol(c);else if("insertColLeft"===b)this.insertCol(c,"before");else if("insertColRight"===b)this.insertCol(c);else{if("deleteTable"!==b)return;this.deleteTable(c)}return this.editor.trigger("valuechanged")}},c}(h),B.Toolbar.addButton(D),C=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.name="strikethrough",c.prototype.icon="strikethrough",c.prototype.htmlTag="strike",c.prototype.disableTag="pre",c.prototype.status=function(a){var b;return null!=a&&this.setDisabled(a.is(this.disableTag)),this.disabled?!0:(b=document.queryCommandState("strikethrough")===!0,this.setActive(b),b)},c.prototype.command=function(){return document.execCommand("strikethrough"),this.editor.util.support.oninput||this.editor.trigger("valuechanged"),a(document).trigger("selectionchange")},c}(h),B.Toolbar.addButton(C),e=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return K(c,b),c.prototype.name="alignment",c.prototype.icon="align-left",c.prototype.htmlTag="p, h1, h2, h3, h4",c.prototype._init=function(){return this.menu=[{name:"left",text:this._t("alignLeft"),icon:"align-left",param:"left"},{name:"center",text:this._t("alignCenter"),icon:"align-center",param:"center"},{name:"right",text:this._t("alignRight"),icon:"align-right",param:"right"}],c.__super__._init.call(this)},c.prototype.setActive=function(a,b){return null==b&&(b="left"),"left"===b?c.__super__.setActive.call(this,!1):c.__super__.setActive.call(this,a),this.el.removeClass("align-left align-center align-right"),a&&this.el.addClass("align-"+b),this.setIcon("align-"+b),this.menuEl.find(".menu-item").show().end().find(".menu-item-"+b).hide()},c.prototype.status=function(a){if(null==a)return!0;if(this.editor.util.isBlockNode(a))return this.setDisabled(!a.is(this.htmlTag)),this.disabled?(this.setActive(!1),!0):(this.setActive(!0,a.data("align")),this.active)},c.prototype.command=function(b){var c,d,e,f,g,h,i,j,k,l;if(["left","center","right"].indexOf(b)<0)throw"invalid "+b;for(j=this.editor.selection.getRange(),l=j.startContainer,g=j.endContainer,e=this.editor.util.closestBlockEl(l),d=this.editor.util.closestBlockEl(g),this.editor.selection.save(),c=e.is(d)?e:e.nextUntil(d).addBack().add(d),k=c.filter(this.htmlTag),h=0,i=k.length;i>h;h++)f=k[h],a(f).attr("data-align",b).data("align",b);return this.editor.selection.restore(),this.editor.trigger("valuechanged")},c}(h),B.Toolbar.addButton(e),B});
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define('simple-uploader', ["jquery","simple-module"], function ($, SimpleModule) {
      return (root['uploader'] = factory($, SimpleModule));
    });
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require("jquery"),require("simplemodule"));
  } else {
    root.simple = root.simple || {};
    root.simple['uploader'] = factory(jQuery,SimpleModule);
  }
}(this, function ($, SimpleModule) {

var Uploader, uploader,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Uploader = (function(superClass) {
  extend(Uploader, superClass);

  function Uploader() {
    return Uploader.__super__.constructor.apply(this, arguments);
  }

  Uploader.count = 0;

  Uploader.prototype.opts = {
    url: '',
    params: null,
    fileKey: 'upload_file',
    connectionCount: 3
  };

  Uploader.prototype._init = function() {
    this.files = [];
    this.queue = [];
    this.id = ++Uploader.count;
    this.on('uploadcomplete', (function(_this) {
      return function(e, file) {
        _this.files.splice($.inArray(file, _this.files), 1);
        if (_this.queue.length > 0 && _this.files.length < _this.opts.connectionCount) {
          return _this.upload(_this.queue.shift());
        } else {
          return _this.uploading = false;
        }
      };
    })(this));
    return $(window).on('beforeunload.uploader-' + this.id, (function(_this) {
      return function(e) {
        if (!_this.uploading) {
          return;
        }
        e.originalEvent.returnValue = _this._t('leaveConfirm');
        return _this._t('leaveConfirm');
      };
    })(this));
  };

  Uploader.prototype.generateId = (function() {
    var id;
    id = 0;
    return function() {
      return id += 1;
    };
  })();

  Uploader.prototype.upload = function(file, opts) {
    var f, i, key, len;
    if (opts == null) {
      opts = {};
    }
    if (file == null) {
      return;
    }
    if ($.isArray(file) || file instanceof FileList) {
      for (i = 0, len = file.length; i < len; i++) {
        f = file[i];
        this.upload(f, opts);
      }
    } else if ($(file).is('input:file')) {
      key = $(file).attr('name');
      if (key) {
        opts.fileKey = key;
      }
      this.upload($.makeArray($(file)[0].files), opts);
    } else if (!file.id || !file.obj) {
      file = this.getFile(file);
    }
    if (!(file && file.obj)) {
      return;
    }
    $.extend(file, opts);
    if (this.files.length >= this.opts.connectionCount) {
      this.queue.push(file);
      return;
    }
    if (this.triggerHandler('beforeupload', [file]) === false) {
      return;
    }
    this.files.push(file);
    this._xhrUpload(file);
    return this.uploading = true;
  };

  Uploader.prototype.getFile = function(fileObj) {
    var name, ref, ref1;
    if (fileObj instanceof window.File || fileObj instanceof window.Blob) {
      name = (ref = fileObj.fileName) != null ? ref : fileObj.name;
    } else {
      return null;
    }
    return {
      id: this.generateId(),
      url: this.opts.url,
      params: this.opts.params,
      fileKey: this.opts.fileKey,
      name: name,
      size: (ref1 = fileObj.fileSize) != null ? ref1 : fileObj.size,
      ext: name ? name.split('.').pop().toLowerCase() : '',
      obj: fileObj
    };
  };

  Uploader.prototype._xhrUpload = function(file) {
    var formData, k, ref, v;
    formData = new FormData();
    formData.append(file.fileKey, file.obj);
    formData.append("original_filename", file.name);
    if (file.params) {
      ref = file.params;
      for (k in ref) {
        v = ref[k];
        formData.append(k, v);
      }
    }
    return file.xhr = $.ajax({
      url: file.url,
      data: formData,
      processData: false,
      contentType: false,
      type: 'POST',
      headers: {
        'X-File-Name': encodeURIComponent(file.name)
      },
      xhr: function() {
        var req;
        req = $.ajaxSettings.xhr();
        if (req) {
          req.upload.onprogress = (function(_this) {
            return function(e) {
              return _this.progress(e);
            };
          })(this);
        }
        return req;
      },
      progress: (function(_this) {
        return function(e) {
          if (!e.lengthComputable) {
            return;
          }
          return _this.trigger('uploadprogress', [file, e.loaded, e.total]);
        };
      })(this),
      error: (function(_this) {
        return function(xhr, status, err) {
          return _this.trigger('uploaderror', [file, xhr, status]);
        };
      })(this),
      success: (function(_this) {
        return function(result) {
          _this.trigger('uploadprogress', [file, file.size, file.size]);
          _this.trigger('uploadsuccess', [file, result]);
          return $(document).trigger('uploadsuccess', [file, result, _this]);
        };
      })(this),
      complete: (function(_this) {
        return function(xhr, status) {
          return _this.trigger('uploadcomplete', [file, xhr.responseText]);
        };
      })(this)
    });
  };

  Uploader.prototype.cancel = function(file) {
    var f, i, len, ref;
    if (!file.id) {
      ref = this.files;
      for (i = 0, len = ref.length; i < len; i++) {
        f = ref[i];
        if (f.id === file * 1) {
          file = f;
          break;
        }
      }
    }
    this.trigger('uploadcancel', [file]);
    if (file.xhr) {
      file.xhr.abort();
    }
    return file.xhr = null;
  };

  Uploader.prototype.readImageFile = function(fileObj, callback) {
    var fileReader, img;
    if (!$.isFunction(callback)) {
      return;
    }
    img = new Image();
    img.onload = function() {
      return callback(img);
    };
    img.onerror = function() {
      return callback();
    };
    if (window.FileReader && FileReader.prototype.readAsDataURL && /^image/.test(fileObj.type)) {
      fileReader = new FileReader();
      fileReader.onload = function(e) {
        return img.src = e.target.result;
      };
      return fileReader.readAsDataURL(fileObj);
    } else {
      return callback();
    }
  };

  Uploader.prototype.destroy = function() {
    var file, i, len, ref;
    this.queue.length = 0;
    ref = this.files;
    for (i = 0, len = ref.length; i < len; i++) {
      file = ref[i];
      this.cancel(file);
    }
    $(window).off('.uploader-' + this.id);
    return $(document).off('.uploader-' + this.id);
  };

  Uploader.i18n = {
    'zh-CN': {
      leaveConfirm: '正在上传文件，如果离开上传会自动取消'
    }
  };

  Uploader.locale = 'zh-CN';

  return Uploader;

})(SimpleModule);

uploader = function(opts) {
  return new Uploader(opts);
};

return uploader;

}));
!function(a,b){"function"==typeof define&&define.amd?define("simple-uploader",["jquery","simple-module"],function(c,d){return a.uploader=b(c,d)}):"object"==typeof exports?module.exports=b(require("jquery"),require("simplemodule")):(a.simple=a.simple||{},a.simple.uploader=b(jQuery,SimpleModule))}(this,function(a,b){var c,d,e=function(a,b){function c(){this.constructor=a}for(var d in b)f.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},f={}.hasOwnProperty;return c=function(b){function c(){return c.__super__.constructor.apply(this,arguments)}return e(c,b),c.count=0,c.prototype.opts={url:"",params:null,fileKey:"upload_file",connectionCount:3},c.prototype._init=function(){return this.files=[],this.queue=[],this.id=++c.count,this.on("uploadcomplete",function(b){return function(c,d){return b.files.splice(a.inArray(d,b.files),1),b.queue.length>0&&b.files.length<b.opts.connectionCount?b.upload(b.queue.shift()):b.uploading=!1}}(this)),a(window).on("beforeunload.uploader-"+this.id,function(a){return function(b){return a.uploading?(b.originalEvent.returnValue=a._t("leaveConfirm"),a._t("leaveConfirm")):void 0}}(this))},c.prototype.generateId=function(){var a;return a=0,function(){return a+=1}}(),c.prototype.upload=function(b,c){var d,e,f,g;if(null==c&&(c={}),null!=b){if(a.isArray(b)||b instanceof FileList)for(e=0,g=b.length;g>e;e++)d=b[e],this.upload(d,c);else a(b).is("input:file")?(f=a(b).attr("name"),f&&(c.fileKey=f),this.upload(a.makeArray(a(b)[0].files),c)):b.id&&b.obj||(b=this.getFile(b));if(b&&b.obj){if(a.extend(b,c),this.files.length>=this.opts.connectionCount)return void this.queue.push(b);if(this.triggerHandler("beforeupload",[b])!==!1)return this.files.push(b),this._xhrUpload(b),this.uploading=!0}}},c.prototype.getFile=function(a){var b,c,d;return a instanceof window.File||a instanceof window.Blob?(b=null!=(c=a.fileName)?c:a.name,{id:this.generateId(),url:this.opts.url,params:this.opts.params,fileKey:this.opts.fileKey,name:b,size:null!=(d=a.fileSize)?d:a.size,ext:b?b.split(".").pop().toLowerCase():"",obj:a}):null},c.prototype._xhrUpload=function(b){var c,d,e,f;if(c=new FormData,c.append(b.fileKey,b.obj),c.append("original_filename",b.name),b.params){e=b.params;for(d in e)f=e[d],c.append(d,f)}return b.xhr=a.ajax({url:b.url,data:c,processData:!1,contentType:!1,type:"POST",headers:{"X-File-Name":encodeURIComponent(b.name)},xhr:function(){var b;return b=a.ajaxSettings.xhr(),b&&(b.upload.onprogress=function(a){return function(b){return a.progress(b)}}(this)),b},progress:function(a){return function(c){return c.lengthComputable?a.trigger("uploadprogress",[b,c.loaded,c.total]):void 0}}(this),error:function(a){return function(c,d,e){return a.trigger("uploaderror",[b,c,d])}}(this),success:function(c){return function(d){return c.trigger("uploadprogress",[b,b.size,b.size]),c.trigger("uploadsuccess",[b,d]),a(document).trigger("uploadsuccess",[b,d,c])}}(this),complete:function(a){return function(c,d){return a.trigger("uploadcomplete",[b,c.responseText])}}(this)})},c.prototype.cancel=function(a){var b,c,d,e;if(!a.id)for(e=this.files,c=0,d=e.length;d>c;c++)if(b=e[c],b.id===1*a){a=b;break}return this.trigger("uploadcancel",[a]),a.xhr&&a.xhr.abort(),a.xhr=null},c.prototype.readImageFile=function(b,c){var d,e;if(a.isFunction(c))return e=new Image,e.onload=function(){return c(e)},e.onerror=function(){return c()},window.FileReader&&FileReader.prototype.readAsDataURL&&/^image/.test(b.type)?(d=new FileReader,d.onload=function(a){return e.src=a.target.result},d.readAsDataURL(b)):c()},c.prototype.destroy=function(){var b,c,d,e;for(this.queue.length=0,e=this.files,c=0,d=e.length;d>c;c++)b=e[c],this.cancel(b);return a(window).off(".uploader-"+this.id),a(document).off(".uploader-"+this.id)},c.i18n={"zh-CN":{leaveConfirm:"正在上传文件，如果离开上传会自动取消"}},c.locale="zh-CN",c}(b),d=function(a){return new c(a)}});
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//




